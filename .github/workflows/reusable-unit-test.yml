on:
  workflow_call:
    inputs:
      package-path:
        required: true
        type: string
      package-install-cmd:
        required: false
        type: string
        default: install-ci
      package-install-cache-path:
        required: false
        type: string
        default: "**/requirements/ci.txt"
      test-cmd:
        required: false
        type: string
        default: test-ci-unit
      test-parameters:
        required: false
        type: string
        default: ""
      run-codestyle:
        required: false
        type: boolean
        default: false
      python:
        required: true
        type: string

jobs:
  unit-test:
    name: ${{ inputs.package-path }}
    timeout-minutes: 18 # if this timeout gets too small, then split the tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        docker_buildx: [v0.8.2]
        docker_compose: [1.29.1]
        include:
          - docker_compose: 1.29.1
            docker_compose_sha: 8097769d32e34314125847333593c8edb0dfc4a5b350e4839bef8c2fe8d09de7
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: ${{ matrix.docker_buildx }}
          driver: docker-container
      - name: setup docker-compose
        run: sudo ./ci/github/helpers/setup_docker_compose.bash ${{ matrix.docker_compose }} ${{ matrix.docker_compose_sha }}
      - name: setup python environment
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python }}
          cache: "pip"
          cache-dependency-path: |
            ${{ inputs.package-install-cache-path }}
      - name: show system version
        run: ./ci/helpers/show_system_versions.bash
      - name: install package
        run: |
          ./ci/helpers/ensure_python_pip.bash
          make devenv
          source .venv/bin/activate
          make --directory=${{ inputs.package-path }} ${{ inputs.package-install-cmd }}
          pip list --verbose
      - name: codestyle
        if: ${{ inputs.run-codestyle }}
        run: |
          source .venv/bin/activate
          make --directory=${{ inputs.package-path }} codestyle-ci
      - name: tests
        run: |
          source .venv/bin/activate
          make --directory=${{ inputs.package-path }} ${{ inputs.test-cmd }} ${{ inputs.test-parameters }}
      - uses: codecov/codecov-action@v3.1.1
        with:
          flags: unittests
