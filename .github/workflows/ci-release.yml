name: Github-CI-Release

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

env:
  # secrets can be set in settings/secrets on github
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  deploy:
    name: deploy release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: [3.8]
        os: [ubuntu-20.04]
        docker_buildx: [v0.7.1]
        docker_compose: [1.29.1]
        include:
          # ensure the docker_compose_sha corresponds to the the version!!
          - docker_compose: 1.29.1
            docker_compose_sha: 8097769d32e34314125847333593c8edb0dfc4a5b350e4839bef8c2fe8d09de7
      fail-fast: false
    env:
      TO_TAG_PREFIX: release-github
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: set target variable
        run: |
          target=$(git name-rev --refs="refs/remotes/origin/*" --name-only ${GITHUB_SHA})
          echo "TARGET=${target}" >> $GITHUB_ENV
      - name: setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: ${{ matrix.docker_buildx }}

      - name: setup docker-compose
        run: sudo ./ci/github/helpers/setup_docker_compose.bash ${{ matrix.docker_compose }} ${{ matrix.docker_compose_sha }}
      - name: set owner variable
        run: echo "OWNER=${GITHUB_REPOSITORY%/*}" >> $GITHUB_ENV
      - name: set git tag
        run: echo "GIT_TAG=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - if: contains(env.TARGET, 'remotes/origin/master')
        env:
          FROM_TAG_PREFIX: staging-github
        name: deploy
        run: ./ci/deploy/dockerhub-tag-version.bash
      - if: contains(env.TARGET, 'remotes/origin/hotfix_v')
        env:
          FROM_TAG_PREFIX: hotfix-github
        name: deploy from hotfix image
        run: ./ci/deploy/dockerhub-tag-version.bash
