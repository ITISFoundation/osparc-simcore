name: Reusable System Tests

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
        description: "Python version to use"
      node-version:
        required: true
        type: string
        description: "Node version to use"
      os:
        required: true
        type: string
        description: "Runner OS to use"
      uv-version:
        required: false
        type: string
        description: "UV version to use"
      run-public-api:
        required: false
        type: boolean
        description: "Whether to run public API tests"
      run-swarm-deploy:
        required: false
        type: boolean
        description: "Whether to run swarm deploy tests"
      run-e2e:
        required: false
        type: boolean
        description: "Whether to run E2E tests"
      run-e2e-playwright:
        required: false
        type: boolean
        description: "Whether to run E2E Playwright tests"
      run-environment-setup:
        required: false
        type: boolean
        description: "Whether to run environment setup tests"

jobs:
  system-test-public-api:
    if: ${{ inputs.run-public-api }}
    timeout-minutes: 25
    name: "[sys] public api"
    runs-on: ${{ inputs.os }}
    steps:
      - uses: ./.github/workflows/actions/common-setup
        with:
          python-version: ${{ inputs.python-version }}
          uv-version: ${{ inputs.uv-version }}
          requirements-path: "**/public-api/requirements/ci.txt"
          runner-temp: ${{ runner.temp }}
      - name: load docker images
        run: make load-images local-src=${{ runner.temp }}/build
      - name: show system version
        run: ./ci/helpers/show_system_versions.bash
      - name: install & test
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./ci/github/system-testing/public-api.bash install
          ./ci/github/system-testing/public-api.bash test
      - name: upload failed tests logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}_docker_logs
          path: ./test_failures
      - name: cleanup
        if: ${{ !cancelled() }}
        run: ./ci/github/system-testing/public-api.bash clean_up

  system-test-swarm-deploy:
    if: ${{ inputs.run-swarm-deploy }}
    timeout-minutes: 30
    name: "[sys] deploy simcore"
    runs-on: ${{ inputs.os }}
    steps:
      - uses: ./.github/workflows/actions/common-setup
        with:
          python-version: ${{ inputs.python-version }}
          uv-version: ${{ inputs.uv-version }}
          requirements-path: "**/swarm-deploy/requirements/ci.txt"
          runner-temp: ${{ runner.temp }}
      - name: load docker images
        run: make load-images local-src=${{ runner.temp }}/build
      - name: show system version
        run: ./ci/helpers/show_system_versions.bash
      - name: install & test
        run: |
          ./ci/github/system-testing/swarm-deploy.bash install
          ./ci/github/system-testing/swarm-deploy.bash test
      - name: dump services settings schemas
        run: |
          export DOCKER_REGISTRY=local
          export DOCKER_IMAGE_TAG=production
          make settings-schema.json
      - name: upload services settings schemas
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}_services_settings_schemas
          path: ./services/**/settings-schema.json
      - name: upload failed tests logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}_docker_logs
          path: ./test_failures
      - name: cleanup
        if: ${{ !cancelled() }}
        run: ./ci/github/system-testing/swarm-deploy.bash clean_up

  system-test-e2e:
    if: ${{ inputs.run-e2e }}
    timeout-minutes: 30
    name: "[sys] e2e"
    runs-on: ${{ inputs.os }}
    steps:
      - uses: ./.github/workflows/actions/common-setup
        with:
          python-version: ${{ inputs.python-version }}
          uv-version: ${{ inputs.uv-version }}
          requirements-path: "**/e2e/requirements/requirements.txt"
          runner-temp: ${{ runner.temp }}
      - uses: actions/setup-node@v4.1.0
        with:
          node-version: ${{ inputs.node-version }}
          cache: "npm"
          cache-dependency-path: "tests/e2e/package-lock.json"
      - name: load docker images
        run: make load-images local-src=${{ runner.temp }}/build
      - name: show system version
        run: ./ci/helpers/show_system_versions.bash
      - name: install & test
        run: |
          ./ci/github/system-testing/e2e.bash install
          ./ci/github/system-testing/e2e.bash test
      - name: collect artifacts
        if: ${{ !cancelled() }}
        run: |
          ./ci/github/system-testing/e2e.bash dump_docker_logs
          for artifact in docker_logs screenshots logs; do
            if [ -d "./tests/e2e/${artifact}" ]; then
              tar -czf "${artifact}.tar.gz" "./tests/e2e/${artifact}"
            fi
          done
      - name: upload artifacts
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}_artifacts
          path: |
            docker_logs.tar.gz
            screenshots.tar.gz
            logs.tar.gz
      - name: cleanup
        if: ${{ !cancelled() }}
        run: ./ci/github/system-testing/e2e.bash clean_up

  system-test-e2e-playwright:
    if: ${{ inputs.run-e2e-playwright }}
    timeout-minutes: 30
    name: "[sys] e2e-playwright"
    runs-on: ${{ inputs.os }}
    steps:
      - uses: ./.github/workflows/actions/common-setup
        with:
          python-version: ${{ inputs.python-version }}
          uv-version: ${{ inputs.uv-version }}
          requirements-path: "**/e2e-playwright/requirements/ci.txt"
          runner-temp: ${{ runner.temp }}
      - name: load docker images
        run: make load-images local-src=${{ runner.temp }}/build
      - name: prepare devenv
        run: make devenv
      - name: show system version
        run: ./ci/helpers/show_system_versions.bash
      - name: install & test
        run: |
          ./ci/github/system-testing/e2e-playwright.bash install
          ./ci/github/system-testing/e2e-playwright.bash test
      - name: collect artifacts
        if: ${{ !cancelled() }}
        run: |
          ./ci/github/system-testing/e2e-playwright.bash dump_docker_logs
          for dir in test_failures test-results; do
            if [ -d "./tests/e2e-playwright/${dir}" ]; then
              tar -czf "${dir}.tar.gz" "./tests/e2e-playwright/${dir}"
            fi
          done
      - name: upload artifacts
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}_artifacts
          path: |
            test_failures.tar.gz
            test-results.tar.gz

  system-test-environment-setup:
    if: ${{ inputs.run-environment-setup }}
    timeout-minutes: 30
    name: "[sys] environment setup"
    runs-on: ${{ inputs.os }}
    steps:
      - uses: ./.github/workflows/actions/common-setup
        with:
          python-version: ${{ inputs.python-version }}
          uv-version: ${{ inputs.uv-version }}
          requirements-path: "**/environment-setup/requirements/ci.txt"
          runner-temp: ${{ runner.temp }}
      - name: show system version
        run: ./ci/helpers/show_system_versions.bash
      - name: install & test
        run: |
          ./ci/github/system-testing/environment-setup.bash install
          ./ci/github/system-testing/environment-setup.bash test
      - name: cleanup
        if: ${{ !cancelled() }}
        run: ./ci/github/system-testing/environment-setup.bash clean_up
