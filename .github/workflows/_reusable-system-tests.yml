name: Reusable System Tests

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
        description: "Python version to use"
      node-version:
        required: true
        type: string
        description: "Node version to use"
      os:
        required: true
        type: string
        description: "Runner OS to use"
      uv-version:
        required: false
        type: string
        description: "UV version to use"
      run-public-api:
        required: false
        type: boolean
        description: "Whether to run public API tests"
      run-swarm-deploy:
        required: false
        type: boolean
        description: "Whether to run swarm deploy tests"
      run-e2e:
        required: false
        type: boolean
        description: "Whether to run E2E tests"
      run-e2e-playwright:
        required: false
        type: boolean
        description: "Whether to run E2E Playwright tests"
      run-environment-setup:
        required: false
        type: boolean
        description: "Whether to run environment setup tests"

jobs:
  system-test-public-api:
    if: ${{ inputs.run-public-api }}
    timeout-minutes: 25 # if this timeout gets too small, then split the tests
    name: "[sys] public api"
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
      - name: setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
      - name: setup python environment
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: expose github runtime for buildx
        uses: crazy-max/ghaction-github-runtime@v3
      # FIXME: Workaround for https://github.com/actions/download-artifact/issues/249
      - name: download docker images with retry
        uses: Wandalen/wretry.action@master
        with:
          action: actions/download-artifact@v4
          with: |
            pattern: docker-buildx-images-${{ runner.os }}-${{ github.sha }}-*
            path: /${{ runner.temp }}/build
          attempt_limit: 5
          attempt_delay: 1000

      - name: install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ inputs.uv-version }}
          enable-cache: false
          cache-dependency-glob: "**/public-api/requirements/ci.txt"
      - name: load docker images
        run: make load-images local-src=/${{ runner.temp }}/build
      - name: show system version
        run: ./ci/helpers/show_system_versions.bash
      - name: install
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./ci/github/system-testing/public-api.bash install
      - name: test
        run: ./ci/github/system-testing/public-api.bash test
      - name: upload failed tests logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}_docker_logs
          path: ./test_failures
      - name: cleanup
        if: ${{ !cancelled() }}
        run: ./ci/github/system-testing/public-api.bash clean_up

  system-test-swarm-deploy:
    if: ${{ inputs.run-swarm-deploy }}
    timeout-minutes: 30 # if this timeout gets too small, then split the tests
    name: "[sys] deploy simcore"
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
      - name: setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
      - name: setup python environment
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: expose github runtime for buildx
        uses: crazy-max/ghaction-github-runtime@v3
      # FIXME: Workaround for https://github.com/actions/download-artifact/issues/249
      - name: download docker images with retry
        uses: Wandalen/wretry.action@master
        with:
          action: actions/download-artifact@v4
          with: |
            pattern: docker-buildx-images-${{ runner.os }}-${{ github.sha }}-*
            path: /${{ runner.temp }}/build
          attempt_limit: 5
          attempt_delay: 1000
      - name: install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.6.x"
          enable-cache: false
          cache-dependency-glob: "**/swarm-deploy/requirements/ci.txt"
      - name: load docker images
        run: make load-images local-src=/${{ runner.temp }}/build
      - name: show system version
        run: ./ci/helpers/show_system_versions.bash
      - name: install
        run: ./ci/github/system-testing/swarm-deploy.bash install
      - name: test
        run: ./ci/github/system-testing/swarm-deploy.bash test
      - name: dump services setting schemas
        run: export DOCKER_REGISTRY=local; export DOCKER_IMAGE_TAG=production; make settings-schema.json
      - name: upload services settings schemas
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}_services_settings_schemas
          path: ./services/**/settings-schema.json
      - name: upload failed tests logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}_docker_logs
          path: ./test_failures
      - name: cleanup
        if: ${{ !cancelled() }}
        run: ./ci/github/system-testing/swarm-deploy.bash clean_up

  system-test-e2e:
    if: ${{ inputs.run-e2e }}
    timeout-minutes: 30 # if this timeout gets too small, then split the tests
    name: "[sys] e2e"
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
      - name: setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
      - name: setup python environment
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - uses: actions/setup-node@v4.1.0
        with:
          node-version: ${{ inputs.node-version }}
          cache: "npm"
          cache-dependency-path: "tests/e2e/package-lock.json"
      - name: expose github runtime for buildx
        uses: crazy-max/ghaction-github-runtime@v3
      # FIXME: Workaround for https://github.com/actions/download-artifact/issues/249
      - name: download docker images with retry
        uses: Wandalen/wretry.action@master
        with:
          action: actions/download-artifact@v4
          with: |
            pattern: docker-buildx-images-${{ runner.os }}-${{ github.sha }}-*
            path: /${{ runner.temp }}/build
          attempt_limit: 5
          attempt_delay: 1000
      - name: install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ inputs.uv-version }}
          enable-cache: false
          cache-dependency-glob: "**/e2e/requirements/requirements.txt"
      - name: load docker images
        run: make load-images local-src=/${{ runner.temp }}/build
      - name: show system version
        run: ./ci/helpers/show_system_versions.bash
      - name: setup
        run: ./ci/github/system-testing/e2e.bash install
      - name: test
        run: ./ci/github/system-testing/e2e.bash test
      - name: dump docker logs
        if: ${{ !cancelled() }}
        run: ./ci/github/system-testing/e2e.bash dump_docker_logs
      - name: upload docker logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}_docker_logs
          path: ./tests/e2e/test_failures
      - name: upload screenshots
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}_screenshots
          path: tests/e2e/screenshots
      - name: upload e2e logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}_logs
          path: tests/e2e/logs
      - name: cleanup
        if: ${{ !cancelled() }}
        run: ./ci/github/system-testing/e2e.bash clean_up

  system-test-e2e-playwright:
    if: ${{ inputs.run-e2e-playwright }}
    timeout-minutes: 30 # if this timeout gets too small, then split the tests
    name: "[sys] e2e-playwright"
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
      - name: setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
      - name: setup python environment
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ inputs.uv-version }}
          enable-cache: false
          cache-dependency-glob: "**/e2e-playwright/requirements/ci.txt"
      - name: expose github runtime for buildx
        uses: crazy-max/ghaction-github-runtime@v3
      - name: download docker images
        uses: actions/download-artifact@v4
        with:
          pattern: docker-buildx-images-${{ runner.os }}-${{ github.sha }}-*
          path: /${{ runner.temp }}/build
      - name: load docker images
        run: make load-images local-src=/${{ runner.temp }}/build
      - name: prepare devenv
        run: make devenv
      - name: show system version
        run: ./ci/helpers/show_system_versions.bash
      - name: setup
        run: ./ci/github/system-testing/e2e-playwright.bash install
      - name: test
        run: ./ci/github/system-testing/e2e-playwright.bash test
      - name: dump docker logs
        if: ${{ !cancelled() }}
        run: ./ci/github/system-testing/e2e-playwright.bash dump_docker_logs
      - name: upload docker logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}_docker_logs
          path: ./tests/e2e-playwright/test_failures
      - name: upload tracing if failed
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}_tracing
          path: tests/e2e-playwright/test-results

  system-test-environment-setup:
    if: ${{ inputs.run-environment-setup }}
    timeout-minutes: 30 # if this timeout gets too small, then split the tests
    name: "[sys] environment setup"
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
      - name: setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
      - name: setup python environment
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ inputs.uv-version }}
          enable-cache: false
          cache-dependency-glob: "**/environment-setup/requirements/ci.txt"
      - name: show system version
        run: ./ci/helpers/show_system_versions.bash
      - name: install
        run: ./ci/github/system-testing/environment-setup.bash install
      - name: test
        run: ./ci/github/system-testing/environment-setup.bash test
      - name: cleanup
        if: ${{ !cancelled() }}
        run: ./ci/github/system-testing/environment-setup.bash clean_up
