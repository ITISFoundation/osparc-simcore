on:
  workflow_call:
    inputs:
      package-path:
        required: true
        type: string
      test-parameters:
        required: false
        type: string

jobs:
  integration-test:
    name: ${{ inputs.package-path }}
    timeout-minutes: 30 # if this timeout gets too small, then split the tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: ["3.9"]
        os: [ubuntu-20.04]
        docker_buildx: [v0.8.2]
        docker_compose: [1.29.1]
        include:
          - docker_compose: 1.29.1
            docker_compose_sha: 8097769d32e34314125847333593c8edb0dfc4a5b350e4839bef8c2fe8d09de7
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - name: setup docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: ${{ matrix.docker_buildx }}
          driver: docker-container
      - name: setup docker-compose
        run: sudo ./ci/github/helpers/setup_docker_compose.bash ${{ matrix.docker_compose }} ${{ matrix.docker_compose_sha }}
      - name: setup python environment
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
          cache: "pip"
          cache-dependency-path: "${{ inputs.package-path }}/requirements/ci.txt"
      - name: download docker images
        uses: actions/download-artifact@v3
        with:
          name: docker-buildx-images-${{ runner.os }}-${{ github.sha }}
          path: /${{ runner.temp }}/build
      - name: load docker images
        run: make load-images local-src=/${{ runner.temp }}/build
      - name: show system version
        run: ./ci/helpers/show_system_versions.bash
      - name: install package
        run: |
          ./ci/helpers/ensure_python_pip.bash
          make devenv
          source .venv/bin/activate
          make --directory=${{ inputs.package-path }} install-ci
          pip list --verbose
          make --directory=${{ inputs.package-path }} tag-version
          make --directory=${{ inputs.package-path }} info-images
      - name: test
        run: |
          source .venv/bin/activate
          make --directory=${{ inputs.package-path }} test-ci-integration ${{ inputs.test-parameters }}
      - name: upload failed tests logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}_docker_logs
          path: ./services/web/server/test_failures
      - uses: codecov/codecov-action@v3.1.1
        with:
          flags: integrationtests #optional
