name: Github-CI Integration-System-testing

on:
  push:

env:
  # secrets can be set in settings/secrets on github
  DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
  #enable buildkit
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  build-test-images:
    runs-on: ubuntu-18.04
    name: build docker test images
    steps:
    - uses: actions/checkout@v1
    - name: setup-docker
      uses: docker-practice/actions-setup-docker@0.0.1
    - name: setup docker-compose
      run: sudo ./ci/github/helpers/setup_docker_compose.sh
    - name: show system environs
      run: ./ci/helpers/show_system_versions
    - name: pull images
      run: ./ci/github/build/test-images pull_images
    - name: build images
      run: ./ci/github/build/test-images build_images

  integration-test-webserver:
    name: Integration-testing webserver
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: [3.6]
        os: [ubuntu-18.04]
      fail-fast: false
    steps:
    - uses: actions/checkout@v1
    - name: setup-docker
      uses: docker-practice/actions-setup-docker@0.0.1
    - name: setup docker-compose
      run: sudo ./ci/github/helpers/setup_docker_compose.sh
    - name: setup python environment
      uses: actions/setup-python@v1.1.1
      with:
        python-version: ${{ matrix.python }}
    - name: show system version
      run: ./ci/helpers/show_system_versions
    - name: install
      run: ./ci/github/integration-testing/webserver install
    - name: test
      run: ./ci/github/integration-testing/webserver test
    - name: cleanup
      if: always()
      run: ./ci/github/integration-testing/webserver clean_up
    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} #required
        flags: integrationtests #optional

  integration-test-simcore-sdk:
    name: Integration-testing simcore-sdk
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: [3.6]
        os: [ubuntu-18.04]
      fail-fast: false
    steps:
    - uses: actions/checkout@v1
    - name: setup-docker
      uses: docker-practice/actions-setup-docker@0.0.1
    - name: setup docker-compose
      run: sudo ./ci/github/helpers/setup_docker_compose.sh
    - name: setup python environment
      uses: actions/setup-python@v1.1.1
      with:
        python-version: ${{ matrix.python }}
    - name: show system version
      run: ./ci/helpers/show_system_versions
    - name: install
      run: ./ci/github/integration-testing/simcore-sdk install
    - name: test
      run: ./ci/github/integration-testing/simcore-sdk test
    - name: cleanup
      if: always()
      run: ./ci/github/integration-testing/simcore-sdk clean_up
    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} #required
        flags: integrationtests

  system-test-swarm-deploy:
    name: System-testing deploy simcore
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: [3.6]
        os: [ubuntu-16.04, ubuntu-18.04]
      fail-fast: false
    steps:
    - uses: actions/checkout@v1
    - name: setup-docker
      uses: docker-practice/actions-setup-docker@0.0.1
    - name: setup docker-compose
      run: sudo ./ci/github/helpers/setup_docker_compose.sh
    - name: setup python environment
      uses: actions/setup-python@v1.1.1
      with:
        python-version: ${{ matrix.python }}
    - name: show system version
      run: ./ci/helpers/show_system_versions
    - name: install
      run: ./ci/github/system-testing/swarm-deploy install
    - name: test
      run: ./ci/github/system-testing/swarm-deploy test
    - name: cleanup
      if: always()
      run: ./ci/github/system-testing/swarm-deploy clean_up

  system-test-e2e:
    name: System-testing e2e
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: [3.6]
        node: [10]
        os: [ubuntu-16.04, ubuntu-18.04]
      fail-fast: false
    steps:
    - uses: actions/checkout@v1
    - name: setup-docker
      uses: docker-practice/actions-setup-docker@0.0.1
    - name: setup docker-compose
      run: sudo ./ci/github/helpers/setup_docker_compose.sh
    - name: setup python environment
      uses: actions/setup-python@v1.1.1
      with:
        python-version: ${{ matrix.python }}
    - uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}
    - name: show system version
      run: ./ci/helpers/show_system_versions
    - name: install
      run: ./ci/github/system-testing/e2e install
    - name: test
      run: ./ci/github/system-testing/e2e test
    - name: cleanup
      if: always()
      run: ./ci/github/system-testing/swarm-deploy clean_up
