name: Github-CI

# this is an exact copy of the push workflow but it does not deploy as PR do not have access to secrets

on:
  pull_request:


env:
  # secrets can be set in settings/secrets on github, but are not available in PRs!!
  DOCKER_REGISTRY: itisfoundation
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
  #enable buildkit
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  unit-test-api:
    name: Unit-testing api
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: [3.6]
        os: [ubuntu-18.04]
      fail-fast: false
    steps:
    - uses: actions/checkout@v1
    - name: setup-docker
      uses: docker-practice/actions-setup-docker@0.0.1
    - name: setup docker-compose
      run: sudo ./ci/github/helpers/setup_docker_compose.sh
    - name: setup python environment
      uses: actions/setup-python@v1.1.1
      with:
        python-version: ${{ matrix.python }}
    - name: show system version
      run: ./ci/helpers/show_system_versions
    - name: install api
      run: ./ci/github/unit-testing/api install
    - name: test
      run: ./ci/github/unit-testing/api test
    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} #required
        flags: unittests #optional

  unit-test-director:
    name: Unit-testing director
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: [3.6]
        os: [ubuntu-18.04]
      fail-fast: false
    steps:
    - uses: actions/checkout@v1
    - name: setup-docker
      uses: docker-practice/actions-setup-docker@0.0.1
    - name: setup docker-compose
      run: sudo ./ci/github/helpers/setup_docker_compose.sh
    - name: setup python environment
      uses: actions/setup-python@v1.1.1
      with:
        python-version: ${{ matrix.python }}
    - name: show system version
      run: ./ci/helpers/show_system_versions
    - name: install
      run: ./ci/github/unit-testing/director install
    - name: test
      run: ./ci/github/unit-testing/director test
    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} #required
        flags: unittests #optional

  unit-test-frontend:
    name: Unit-testing frontend
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node: [10]
        os: [ubuntu-18.04]
      fail-fast: false
    steps:
    - uses: actions/checkout@v1
    - name: setup-docker
      uses: docker-practice/actions-setup-docker@0.0.1
    - name: setup docker-compose
      run: sudo ./ci/github/helpers/setup_docker_compose.sh
    - uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}
    - name: show system version
      run: ./ci/helpers/show_system_versions
    - name: install
      run: ./ci/github/unit-testing/frontend install
    - name: test
      run: ./ci/github/unit-testing/frontend test
    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} #required
        flags: unittests #optional

  unit-test-python-linting:
    name: Unit-testing python-linting
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: [3.6]
        os: [ubuntu-18.04]
      fail-fast: false
    steps:
    - uses: actions/checkout@v1
    - name: setup-docker
      uses: docker-practice/actions-setup-docker@0.0.1
    - name: setup docker-compose
      run: sudo ./ci/github/helpers/setup_docker_compose.sh
    - name: setup python environment
      uses: actions/setup-python@v1.1.1
      with:
        python-version: ${{ matrix.python }}
    - name: show system version
      run: ./ci/helpers/show_system_versions
    - name: install
      run: ./ci/github/unit-testing/python-linting install
    - name: test
      run: ./ci/github/unit-testing/python-linting test


  unit-test-service-library:
    name: Unit-testing service-library
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: [3.6]
        os: [ubuntu-18.04]
      fail-fast: false
    steps:
    - uses: actions/checkout@v1
    - name: setup-docker
      uses: docker-practice/actions-setup-docker@0.0.1
    - name: setup docker-compose
      run: sudo ./ci/github/helpers/setup_docker_compose.sh
    - name: setup python environment
      uses: actions/setup-python@v1.1.1
      with:
        python-version: ${{ matrix.python }}
    - name: show system version
      run: ./ci/helpers/show_system_versions
    - name: install
      run: ./ci/github/unit-testing/service-library install
    - name: test
      run: ./ci/github/unit-testing/service-library test
    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} #required
        flags: unittests #optional

  # DISABLED for now
  # unit-test-sidecar:
  #   name: Unit-testing sidecar
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       python: [3.6]
  #       os: [ubuntu-18.04]
  #     fail-fast: false
  #   steps:
  #   - uses: actions/checkout@v1
  #   - name: setup-docker
  #     uses: docker-practice/actions-setup-docker@0.0.1
  #   - name: setup docker-compose
  #     run: sudo ./ci/github/helpers/setup_docker_compose.sh
  #   - name: setup python environment
  #     uses: actions/setup-python@v1.1.1
  #     with:
  #       python-version: ${{ matrix.python }}
  #   - name: show system version
  #     run: ./ci/helpers/show_system_versions
  #   - name: install
  #     run: ./ci/github/unit-testing/sidecar install
  #   - name: test
  #     run: ./ci/github/unit-testing/sidecar test
  #   - uses: codecov/codecov-action@v1
  #     with:
  #       token: ${{ secrets.CODECOV_TOKEN }} #required
  #       flags: unittests #optional

  unit-test-simcore-sdk:
    name: Unit-testing simcore-sdk
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: [3.6]
        os: [ubuntu-18.04]
      fail-fast: false
    steps:
    - uses: actions/checkout@v1
    - name: setup-docker
      uses: docker-practice/actions-setup-docker@0.0.1
    - name: setup docker-compose
      run: sudo ./ci/github/helpers/setup_docker_compose.sh
    - name: setup python environment
      uses: actions/setup-python@v1.1.1
      with:
        python-version: ${{ matrix.python }}
    - name: show system version
      run: ./ci/helpers/show_system_versions
    - name: install
      run: ./ci/github/unit-testing/simcore-sdk install
    - name: test
      run: ./ci/github/unit-testing/simcore-sdk test
    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} #required
        flags: unittests #optional

  unit-test-storage:
    name: Unit-testing storage
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: [3.6]
        os: [ubuntu-18.04]
      fail-fast: false
    steps:
    - uses: actions/checkout@v1
    - name: setup-docker
      uses: docker-practice/actions-setup-docker@0.0.1
    - name: setup docker-compose
      run: sudo ./ci/github/helpers/setup_docker_compose.sh
    - name: setup python environment
      uses: actions/setup-python@v1.1.1
      with:
        python-version: ${{ matrix.python }}
    - name: show system version
      run: ./ci/helpers/show_system_versions
    - name: install
      run: ./ci/github/unit-testing/storage install
    - name: test
      run: ./ci/github/unit-testing/storage test
    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} #required
        flags: unittests #optional

  unit-test-webserver:
    name: Unit-testing webserver
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: [3.6]
        os: [ubuntu-18.04]
      fail-fast: false
    steps:
    - uses: actions/checkout@v1
    - name: setup-docker
      uses: docker-practice/actions-setup-docker@0.0.1
    - name: setup docker-compose
      run: sudo ./ci/github/helpers/setup_docker_compose.sh
    - name: setup python environment
      uses: actions/setup-python@v1.1.1
      with:
        python-version: ${{ matrix.python }}
    - name: show system version
      run: ./ci/helpers/show_system_versions
    - name: install webserver
      run: ./ci/github/unit-testing/webserver install
    - name: test
      run: ./ci/github/unit-testing/webserver test
    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} #required
        flags: unittests #optional

  build-test-images:
    runs-on: ubuntu-18.04
    name: build docker test images
    steps:
    - uses: actions/checkout@v1
    - name: setup-docker
      uses: docker-practice/actions-setup-docker@0.0.1
    - name: setup docker-compose
      run: sudo ./ci/github/helpers/setup_docker_compose.sh
    - name: show system environs
      run: ./ci/helpers/show_system_versions
    - name: pull images
      run: ./ci/github/build/test-images pull_images
    - name: build images
      run: ./ci/github/build/test-images build_images
    # no push here as this is a PR, there are no option to access a registry
    # - name: push images
    #   run: ./ci/github/build/test-images push_images

  integration-test-webserver:
    name: Integration-testing webserver
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: [3.6]
        os: [ubuntu-18.04]
      fail-fast: false
    steps:
    - uses: actions/checkout@v1
    - name: setup-docker
      uses: docker-practice/actions-setup-docker@0.0.1
    - name: setup docker-compose
      run: sudo ./ci/github/helpers/setup_docker_compose.sh
    - name: setup python environment
      uses: actions/setup-python@v1.1.1
      with:
        python-version: ${{ matrix.python }}
    - name: show system version
      run: ./ci/helpers/show_system_versions
    - name: install
      run: ./ci/github/integration-testing/webserver install
    - name: test
      run: ./ci/github/integration-testing/webserver test
    - name: cleanup
      if: always()
      run: ./ci/github/integration-testing/webserver clean_up
    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} #required
        flags: integrationtests #optional

  integration-test-simcore-sdk:
    name: Integration-testing simcore-sdk
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: [3.6]
        os: [ubuntu-18.04]
      fail-fast: false
    steps:
    - uses: actions/checkout@v1
    - name: setup-docker
      uses: docker-practice/actions-setup-docker@0.0.1
    - name: setup docker-compose
      run: sudo ./ci/github/helpers/setup_docker_compose.sh
    - name: setup python environment
      uses: actions/setup-python@v1.1.1
      with:
        python-version: ${{ matrix.python }}
    - name: show system version
      run: ./ci/helpers/show_system_versions
    - name: install
      run: ./ci/github/integration-testing/simcore-sdk install
    - name: test
      run: ./ci/github/integration-testing/simcore-sdk test
    - name: cleanup
      if: always()
      run: ./ci/github/integration-testing/simcore-sdk clean_up
    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} #required
        flags: integrationtests

  system-test-swarm-deploy:
    name: System-testing deploy simcore
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: [3.6]
        os: [ubuntu-16.04, ubuntu-18.04]
      fail-fast: false
    steps:
    - uses: actions/checkout@v1
    - name: setup-docker
      uses: docker-practice/actions-setup-docker@0.0.1
    - name: setup docker-compose
      run: sudo ./ci/github/helpers/setup_docker_compose.sh
    - name: setup python environment
      uses: actions/setup-python@v1.1.1
      with:
        python-version: ${{ matrix.python }}
    - name: show system version
      run: ./ci/helpers/show_system_versions
    - name: install
      run: ./ci/github/system-testing/swarm-deploy install
    - name: test
      run: ./ci/github/system-testing/swarm-deploy test
    - name: cleanup
      if: always()
      run: ./ci/github/system-testing/swarm-deploy clean_up

  system-test-e2e:
    name: System-testing e2e
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python: [3.6]
        node: [10]
        os: [ubuntu-16.04, ubuntu-18.04]
      fail-fast: false
    steps:
    - uses: actions/checkout@v1
    - name: setup-docker
      uses: docker-practice/actions-setup-docker@0.0.1
    - name: setup docker-compose
      run: sudo ./ci/github/helpers/setup_docker_compose.sh
    - name: setup python environment
      uses: actions/setup-python@v1.1.1
      with:
        python-version: ${{ matrix.python }}
    - uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node }}
    - name: show system version
      run: ./ci/helpers/show_system_versions
    - name: install
      run: ./ci/github/system-testing/e2e install
    - name: test
      run: ./ci/github/system-testing/e2e test
    - name: cleanup
      if: always()
      run: ./ci/github/system-testing/swarm-deploy clean_up
