version: '3.4'
services:  
  apihub:
    build:
      context: ../
      dockerfile: services/apihub/Dockerfile
      target: production
    ports:
      - '8043:8043'
#--------------------------------------------------------------------
  director:
    build:
      context: ../
      dockerfile: services/director/Dockerfile
      target: production
      args:
        - DOCKER_GID_ARG=${DOCKER_GID:?Undefined docker gid in host}
    ports:
      - '8001:8001'
    environment:
    # on Windows follow http://www.computerperformance.co.uk/powershell/powershell_profile_ps1.htm
    # currently needs to set $Env:COMPOSE_CONVERT_WINDOWS_PATHS=1 in powershell to make this works
    # on a windows machine
      - REGISTRY_URL=masu.speag.com
      - REGISTRY_AUTH=True
      - REGISTRY_USER=z43
      - REGISTRY_PW=z43
      - POSTGRES_ENDPOINT=${POSTGRES_ENDPOINT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - RUN_DOCKER_ENGINE_ROOT=${RUN_DOCKER_ENGINE_ROOT}
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
  #--------------------------------------------------------------------
  webclient:
    image: services_webclient:build
    build:
      context: ./web/client/
      dockerfile: Dockerfile
      target: build
    command: /bin/bash -c "echo 'built with qx' && cat build-output/version.txt"
  webserver:
    build:
      context: ../
      dockerfile: services/web/Dockerfile
      target: production
    ports:
      - '9081:8080'
    environment:
      - DIRECTOR_HOST=director
      - DIRECTOR_PORT=8001
      - POSTGRES_ENDPOINT=${POSTGRES_ENDPOINT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - RABBITMQ_PROGRESS_CHANNEL=${RABBITMQ_PROGRESS_CHANNEL}
      - RABBITMQ_LOG_CHANNEL=${RABBITMQ_LOG_CHANNEL}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
    depends_on:
      - webclient
  #--------------------------------------------------------------------
  rabbit:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - "15672:15672"
  #--------------------------------------------------------------------
  postgres:
    image: postgres:10
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  #--------------------------------------------------------------------
  sidecar:
    build:
      # the context for the build is the git repo root directory, this allows to copy
      # the packages directory into any docker image
      context: ../
      dockerfile: services/sidecar/Dockerfile
      args:
        - DOCKER_GID_ARG=${DOCKER_GID:?Undefined docker gid in host}
      target: production
    volumes:
      - input:/home/scu/input
      - output:/home/scu/output
      - log:/home/scu/log
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8000:8000"
    environment:
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - POSTGRES_ENDPOINT=${POSTGRES_ENDPOINT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - RUN_DOCKER_ENGINE_ROOT=${RUN_DOCKER_ENGINE_ROOT}
    depends_on:
      - rabbit
  #--------------------------------------------------------------------
  minio:
    image: minio/minio
    environment:
      - MINIO_ACCESS_KEY=12345678
      - MINIO_SECRET_KEY=12345678
    ports:
      - "9001:9000"
    command: server /data
  #--------------------------------------------------------------------
  registry:
    image: registry:2
    ports:
      - "5000:5000"
    volumes: 
      - registry:/var/lib/registry
    #--------------------------------------------------------------------
volumes:
  input:
  output:
  log:
  postgres:
  registry:
