{
  "openapi": "3.1.0",
  "info": {
    "title": "simcore-service-payments web API",
    "description": "Service that manages creation and validation of registration payments",
    "version": "1.4.0"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Healthcheck",
        "operationId": "healthcheck__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/token": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login To Create Access Token",
        "operationId": "login_to_create_access_token",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_to_create_access_token"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/meta": {
      "get": {
        "tags": [
          "meta"
        ],
        "summary": "Get Service Metadata",
        "operationId": "get_service_metadata_v1_meta_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meta"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/v1/payments/{payment_id}:ack": {
      "post": {
        "tags": [
          "acks"
        ],
        "summary": "Acknowledge Payment",
        "description": "completes (ie. ack) request initated by `/init` on the payments-gateway API",
        "operationId": "acknowledge_payment_v1_payments__payment_id__ack_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50,
              "minLength": 1,
              "title": "Payment Id"
            },
            "name": "payment_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AckPayment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/v1/payments-methods/{payment_method_id}:ack": {
      "post": {
        "tags": [
          "acks"
        ],
        "summary": "Acknowledge Payment Method",
        "description": "completes (ie. ack) request initated by `/payments-methods:init` on the payments-gateway API",
        "operationId": "acknowledge_payment_method_v1_payments_methods__payment_method_id__ack_post",
        "parameters": [
          {
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50,
              "minLength": 1,
              "title": "Payment Method Id"
            },
            "name": "payment_method_id",
            "in": "path"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AckPaymentMethod"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AckPayment": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "provider_payment_id": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Provider Payment Id",
            "description": "Payment ID from the provider (e.g. stripe payment ID)"
          },
          "invoice_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Invoice Url",
            "description": "Link to invoice is required when success=true"
          },
          "invoice_pdf": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Invoice Pdf",
            "description": "Link to invoice PDF"
          },
          "stripe_invoice_id": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Stripe Invoice Id",
            "description": "Stripe invoice ID"
          },
          "stripe_customer_id": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Stripe Customer Id",
            "description": "Stripe customer ID"
          },
          "saved": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SavedPaymentMethod"
              }
            ],
            "title": "Saved",
            "description": "Gets the payment-method if user opted to save it during payment.If used did not opt to save of payment-method was already saved, then it defaults to None"
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "AckPayment",
        "example": {
          "success": true,
          "provider_payment_id": "pi_123ABC",
          "invoice_url": "https://invoices.com/id=12345",
          "saved": {
            "success": true,
            "payment_method_id": "3FA85F64-5717-4562-B3FC-2C963F66AFA6"
          }
        }
      },
      "AckPaymentMethod": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "success"
        ],
        "title": "AckPaymentMethod"
      },
      "Body_login_to_create_access_token": {
        "properties": {
          "grant_type": {
            "type": "string",
            "pattern": "password",
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "type": "string",
            "title": "Client Id"
          },
          "client_secret": {
            "type": "string",
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_to_create_access_token"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Meta": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "string",
            "pattern": "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){2}(-(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*)(\\.(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*))*)?(\\+[-\\da-zA-Z]+(\\.[-\\da-zA-Z-]+)*)?$",
            "title": "Version"
          },
          "released": {
            "additionalProperties": {
              "type": "string",
              "pattern": "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){2}(-(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*)(\\.(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*))*)?(\\+[-\\da-zA-Z]+(\\.[-\\da-zA-Z-]+)*)?$"
            },
            "type": "object",
            "title": "Released",
            "description": "Maps every route's path tag with a released version"
          },
          "docs_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Docs Url"
          }
        },
        "type": "object",
        "required": [
          "name",
          "version",
          "docs_url"
        ],
        "title": "Meta",
        "example": {
          "name": "simcore_service_payments",
          "version": "2.4.45",
          "docs_url": "https://foo.io/doc"
        }
      },
      "SavedPaymentMethod": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "payment_method_id": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Payment Method Id"
          }
        },
        "type": "object",
        "required": [
          "success",
          "payment_method_id"
        ],
        "title": "SavedPaymentMethod"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "enum": [
              "bearer"
            ],
            "title": "Token Type"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "token_type"
        ],
        "title": "Token"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/v1/token"
          }
        }
      }
    }
  }
}
