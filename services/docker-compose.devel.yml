# Overrides docker-compose.yml config when deploying services in development mode,
#  i.e. binding with source code in source
#
# NOTES:
# - port 3000 used for ptsv
#
version: "3.8"
services:
  api-server:
    environment:
      API_SERVER_PROFILING : ${API_SERVER_PROFILING}
      DEBUG : true
      LOGLEVEL : DEBUG
      SC_BOOT_MODE : debug
    volumes:
      - ./api-server:/devel/services/api-server
      - ../packages:/devel/packages

  autoscaling:
    environment:
      DEBUG : true
      LOGLEVEL : DEBUG
      SC_BOOT_MODE : debug
    volumes:
      - ./autoscaling:/devel/services/autoscaling
      - ../packages:/devel/packages

  invitations:
    environment:
      DEBUG : true
      LOGLEVEL : DEBUG
      SC_BOOT_MODE : debug
    volumes:
      - ./invitations:/devel/services/invitations
      - ../packages:/devel/packages

  payments:
    environment:
      DEBUG : true
      LOGLEVEL : DEBUG
      SC_BOOT_MODE : debug
    volumes:
      - ./payments:/devel/services/payments
      - ../packages:/devel/packages

  dynamic-schdlr:
    environment:
      DEBUG : true
      DYNAMIC_SCHEDULER_PROFILING : ${DYNAMIC_SCHEDULER_PROFILING}
      LOGLEVEL : DEBUG
      SC_BOOT_MODE : debug
    volumes:
      - ./dynamic-scheduler:/devel/services/dynamic-scheduler
      - ../packages:/devel/packages
    deploy:
      replicas: 1

  catalog:
    environment:
      CATALOG_PROFILING : ${CATALOG_PROFILING}
      DEBUG : true
      DYNAMIC_SIDECAR_MOUNT_PATH_DEV : ${PWD}/services/dynamic-sidecar
      LOGLEVEL : DEBUG
      SC_BOOT_MODE : debug
    volumes:
      - ./catalog:/devel/services/catalog
      - ../packages:/devel/packages

  clusters-keeper:
    environment:
      DEBUG : true
      LOGLEVEL : DEBUG
      SC_BOOT_MODE : debug
    volumes:
      - ./clusters-keeper:/devel/services/clusters-keeper
      - ../packages:/devel/packages

  datcore-adapter:
    environment:
      LOGLEVEL : DEBUG
      SC_BOOT_MODE : debug
    volumes:
      - ./datcore-adapter:/devel/services/datcore-adapter
      - ../packages:/devel/packages

  director:
    environment:
      LOGLEVEL : debug
      SC_BOOT_MODE : debug
    volumes:
      - ./director:/devel/services/director
      - ../packages:/devel/packages
      - ../api:/devel/services/api

  director-v2:
    environment:
      DEBUG : true
      DIRECTOR_V2_PROFILING : ${DIRECTOR_V2_PROFILING}
      DYNAMIC_SIDECAR_MOUNT_PATH_DEV : ${PWD}/services/dynamic-sidecar
      LOGLEVEL : debug
      SC_BOOT_MODE : debug
    volumes:
      - ./director-v2:/devel/services/director-v2
      - ../packages:/devel/packages

  static-webserver:
    volumes:
      - ./static-webserver/client/source-output:/static-content
    environment:
      SERVER_LOGLEVEL : info

  webserver:
    volumes:
      &webserver_volumes_devel
      - ./web/server:/devel/services/web/server
      - ../packages:/devel/packages
    environment:
      &webserver_environment_devel
      SC_BOOT_MODE: debug
      WEBSERVER_LOGLEVEL: ${LOGLEVEL:-DEBUG}
      WEBSERVER_PROFILING: ${WEBSERVER_PROFILING}
      WEBSERVER_REMOTE_DEBUGGING_PORT: 3000


  wb-api-server:
    volumes: *webserver_volumes_devel
    environment:
      <<: *webserver_environment_devel

  wb-db-event-listener:
    volumes: *webserver_volumes_devel
    environment:
      <<: *webserver_environment_devel

  wb-garbage-collector:
    volumes: *webserver_volumes_devel
    environment:
      <<: *webserver_environment_devel
      RESOURCE_MANAGER_RESOURCE_TTL_S: 15

  dask-sidecar:
    volumes:
      &dev-dask-sidecar-volumes
      - ./dask-sidecar:/devel/services/dask-sidecar
      - ../packages:/devel/packages
      - ${ETC_HOSTNAME:-/etc/hostname}:/home/scu/hostname:ro

    environment:
      LOGLEVEL: DEBUG
      SC_BOOT_MODE: debug
      SIDECAR_LOGLEVEL: DEBUG
    ports:
      - "3000"
    deploy:
      endpoint_mode: vip

  dask-scheduler:
    volumes: *dev-dask-sidecar-volumes
    environment:
      LOGLEVEL: DEBUG
      SC_BOOT_MODE: debug
      SIDECAR_LOGLEVEL: DEBUG
    ports:
      - "3000"
    deploy:
      endpoint_mode: vip
      replicas: 1

  resource-usage-tracker:
    environment:
      DEBUG : true
      LOG_FORMAT_LOCAL_DEV_ENABLED : ${LOG_FORMAT_LOCAL_DEV_ENABLED}
      POSTGRES_DB : ${POSTGRES_DB}
      POSTGRES_ENDPOINT : ${POSTGRES_ENDPOINT}
      POSTGRES_HOST : ${POSTGRES_HOST}
      POSTGRES_PASSWORD : ${POSTGRES_PASSWORD}
      POSTGRES_PORT : ${POSTGRES_PORT}
      POSTGRES_USER : ${POSTGRES_USER}
      PROMETHEUS_PASSWORD : ${RESOURCE_USAGE_TRACKER_PROMETHEUS_PASSWORD}
      PROMETHEUS_URL : ${RESOURCE_USAGE_TRACKER_PROMETHEUS_URL}
      PROMETHEUS_USERNAME : ${RESOURCE_USAGE_TRACKER_PROMETHEUS_USERNAME}
      RABBIT_HOST : ${RABBIT_HOST}
      RABBIT_PASSWORD : ${RABBIT_PASSWORD}
      RABBIT_PORT : ${RABBIT_PORT}
      RABBIT_SECURE : ${RABBIT_SECURE}
      RABBIT_USER : ${RABBIT_USER}
      RESOURCE_USAGE_TRACKER_LOGLEVEL : DEBUG
      SC_BOOT_MODE : debug
    volumes:
      - ./resource-usage-tracker:/devel/services/resource-usage-tracker
      - ../packages:/devel/packages

  storage:
    volumes:
      - ./storage:/devel/services/storage
      - ../packages:/devel/packages
    environment:
      SC_BOOT_MODE : debug
      STORAGE_PROFILING : ${STORAGE_PROFILING}

  agent:
    environment:
      LOGLEVEL : DEBUG
      SC_BOOT_MODE : debug
    volumes:
      - ./agent:/devel/services/agent
      - ../packages:/devel/packages
