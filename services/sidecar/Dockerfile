FROM python:3.6-alpine as base

LABEL maintainer=mguidon

ARG DOCKER_GID_ARG=1001

RUN apk add --no-cache \
      su-exec

# create user `scu` and `docker` group (with same id as in host)
RUN adduser -D -u 8004 scu &&\
    addgroup -g $DOCKER_GID_ARG docker

ENV HOME /home/scu
# TODO: tmp workaround for https://github.com/pypa/pip/issues/6197
# - Added explicit --cache-dir that is removed at the end of the build
ENV PIP  /home/scu/.venv/bin/pip3 --cache-dir=/tmp/.pipcache

EXPOSE 8000
VOLUME /home/scu/input
VOLUME /home/scu/output
VOLUME /home/scu/log

WORKDIR /home/scu

# -------------------------- Build stage -------------------
#
# - Preserves relative folder structure
#
# + /home/scu/              $HOME
#    + services/sidecar
#        ...
#    + packages
#        ...
FROM base as build

RUN apk add --no-cache \
      postgresql-dev \
      gcc \
      libc-dev

RUN python3 -m venv $HOME/.venv &&\
    $PIP install --upgrade \
      pip \
      wheel \
      setuptools

# TODO: check if scu:scu copy is necessary!?
COPY --chown=scu:scu services/sidecar/requirements/base.txt requirements-base.txt
RUN $PIP install -r requirements-base.txt &&\
    rm requirements-base.txt

COPY --chown=scu:scu services/sidecar/docker docker
COPY --chown=scu:scu services/sidecar/boot.sh boot.sh

# --------------------------Development stage -------------------
FROM build as development

ARG HOST_GID_ARG=1000

# in dev-mode we give access to `scu` to host's mapped volumes
# FIXME: files created by scu cannot be deleted by host! we need to do the same group in host?
RUN addgroup -g $HOST_GID_ARG hgrp &&\
    addgroup scu hgrp && \
    chown -R scu:scu $HOME/.venv &&\
    rm -rf /tmp/.pipcache

VOLUME /home/scu/packages
VOLUME /home/scu/services/sidecar

ENV DEBUG 1
ENV RUN_DOCKER_ENGINE_ROOT=0
USER root
ENTRYPOINT [ "/bin/sh", "docker/entrypoint.sh" ]
CMD ["/bin/sh", "boot.sh"]


# --------------------------Cache stage -------------------
FROM build as cache
# TODO: check if scu:scu copy is necessary in all cases!? since we are just installing?
COPY --chown=scu:scu packages $HOME/packages
COPY --chown=scu:scu services/sidecar $HOME/services/sidecar
COPY --chown=scu:scu services/storage/client-sdk $HOME/services/storage/client-sdk

WORKDIR /home/scu/services/sidecar
RUN $PIP install -r requirements/prod.txt ;\
    $PIP list


# --------------------------Production multi-stage -------------------
# TODO: PC Reduce docker size by installing only non-dev
FROM cache as production

WORKDIR /home/scu/

RUN . $HOME/.venv/bin/activate; $PIP list &&\
    rm -rf $HOME/services &&\
    rm -rf /tmp/.pipcache

ENV DEBUG 0
ENV RUN_DOCKER_ENGINE_ROOT=0
USER root
ENTRYPOINT [ "/bin/sh", "docker/entrypoint.sh" ]
CMD ["/bin/sh", "boot.sh"]
