{
    "$schema": "http://json-schema.org/draft-07/schema#",

    "title": "simcore node",
    "description": "Description of a simcore node 'class' with input and output",
    "type": "object",
    "additionalProperties": false,
    "required": [
        "key",
        "name",
        "tag",
        "description",
        "authors",
        "contact",
        "inputs",
        "outputs"
    ],
    "properties": {
        "key": {
            "type": "string",
            "description": "distinctive name for the node based on the docker registry path",
            "pattern": "^(service)/(computational|dynamic)/([^\\s/]+)$",
            "examples": [
                "service/computational/sleeper",
                "service/dynamic/3dviewer"
            ]
        },
        "tag": {
            "type": "string",
            "description": "semantic version number",
            "pattern": "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){2}(-(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*)(\\.(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*))*)?(\\+[-\\da-zA-Z]+(\\.[-\\da-zA-Z-]+)*)?$",
            "examples": [
                "1.0.0",
                "0.0.1"
            ]
        },
        "name": {
            "type": "string",
            "description": "short, human readable name for the node",
            "examples": [
                "Fast Counter"
            ]
        },
        "description": {
            "type": "string",
            "description": "human readable description of the purpose of the node",
            "examples": [
                "Our best node type",
                "The mother of all nodes, makes your numbers shine!"
            ]
        },
        "authors": {
            "type": "array",
            "minItems": 1,
            "items": {
                "type": "object",
                "required": ["name", "email"],
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the author",
                        "examples": [
                            "Sun Bak",
                            "Delenn"
                        ]
                    },
                    "email": {
                        "description": "Email address",
                        "type": "string",
                        "format": "email",
                        "examples": [
                            "sun@sense.eight",
                            "deleen@minbar.bab"
                        ]
                    },
                    "affiliation": {
                        "description": "Affiliation of the author",
                        "type": "string",
                        "examples": [
                            "Sense8",
                            "Babylon 5"
                        ]
                    }
                }
            }
        },
        "contact": {
            "type": "string",
            "format": "email",
            "description": "email to correspond to the authors about the node",
            "examples": [
                "lab@net.flix"
            ]
        },
        "inputs": {
            "type": "array",
            "description": "definition of the inputs of this node",
            "items": {
                "type": "object",
                "description": "all the input configurable for this service",
                "additionalProperties": false,
                "required": [
                    "key",
                    "label",
                    "description",
                    "type",
                    "defaultValue"
                ],
                "properties": {
                    "key": {
                        "type": "string",
                        "pattern": "^[_a-z0-9]+",
                        "description": "unique identifier for this input property",
                        "examples": [
                            "age"
                        ]
                    },
                    "label": {
                        "type": "string",
                        "description": "short name for the property",
                        "examples": [
                            "Age"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "description": "description of the property",
                        "examples": [
                            "Age in seconds since 1970"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "number",
                            "file-url",
                            "boolean",
                            "string",
                            "scene"
                        ],
                        "description": "data type expected on this input",
                        "examples": [
                            "number",
                            "boolean"
                        ]
                    },
                    "fileToKeyMap": {
                        "description": "Place the data associated with the named keys in files",

                        "type": "object",
                        "patternProperties": {
                            ".+": {
                                "type": "string"
                            }
                        },
                        "examples": [
                            {
                                "dir/input1.txt": "key_1",
                                "dir33/input2.txt": "key2"
                            }
                        ]
                    },
                    "defaultValue": {
                        "description": "initial value for this input",
                        "type": ["string","number","integer","boolean"],
                        "examples": [
                            "Dog",
                            true
                        ]
                    },
                    "widget": {
                        "description": "custom widget to use instead of the default one determined from the data-type",
                        "anyOf": [
                            {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "type"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "type of the property",
                                        "type": "string",
                                        "enum": ["TextArea"]
                                    },
                                    "minHeight": {
                                        "description": "minimum Height of the textarea",
                                        "type": "integer",
                                        "minimum": 1
                                    }
                                }
                            },
                            {
                                "type": "object",
                                "additionalProperties": false,
                                "required": [
                                    "type",
                                    "structure"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "type of the property",
                                        "type": "string",
                                        "enum": ["SelectBox"]
                                    },
                                    "structure": {
                                        "type": "array",
                                        "minItems": 1,
                                        "items": {
                                            "type":"object",
                                            "additionalProperties": false,
                                            "required": [
                                                "key",
                                                "label"
                                            ],
                                            "properties": {
                                                "key": {
                                                    "type": ["string","boolean","number"]
                                                },
                                                "label": {
                                                    "type": "string"
                                                }
                                            },
                                            "examples": [
                                                [
                                                    { "key": "rat", "label": "The Rat"},
                                                    { "key": "dog", "label": "Bello the Dog"}
                                                ]
                                            ]
                                        }
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        },
        "outputs": {
            "type": "array",
            "description": "definition of the outputs of this node",
            "items": {
                "type": "object",
                "description": "all the output produced by this node",
                "additionalProperties": false,
                "required": [
                    "key",
                    "label",
                    "description",
                    "type",
                    "defaultValue"
                ],
                "properties": {
                    "key": {
                        "type": "string",
                        "pattern": "^[_a-z0-9]+",
                        "description": "unique identifier for this output property",
                        "examples": [
                            "age"
                        ]
                    },
                    "label": {
                        "type": "string",
                        "description": "short name for the property",
                        "examples": [
                            "Age"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "description": "description of the property",
                        "examples": [
                            "Age in seconds since 1970"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "number",
                            "file-url",
                            "boolean",
                            "string",
                            "scene"
                        ],
                        "description": "data type expected on this output",
                        "examples": [
                            "number",
                            "boolean"
                        ]
                    },
                    "fileToKeyMap": {
                        "description": "Place the data stored in the named files and store it in the locations pointed to by the respective output key.",
                        "type": "object",
                        "patternProperties": {
                            ".+": {
                                "type": "string"
                            }
                        },
                        "examples": [
                            {
                                "dir/input1.txt": "key_1",
                                "dir33/input2.txt": "key2"
                            }
                        ]
                    }
                }
            }
        }
    }
}
