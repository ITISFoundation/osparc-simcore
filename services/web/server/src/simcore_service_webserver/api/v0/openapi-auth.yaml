openapi: 3.0.0
info:
  title: auth API
  version: 0.1.0
  description: authentication and authorization
servers:
  - description: API server
    url: '/v0'
paths:

  /auth/register:
    post:
      operationId: auth_register
      requestBody:
        description: user registration
        content:
          application/json:
            schema:
              $ref: './components/schemas/registration.yaml#/RegistrationType'
        required: true
      responses:
        '200':
          description: User has been succesfully registered.
          content:
            application/json:
              schema:
                $ref: './components/schemas/log_message.yaml#/LogMessageEnveloped'
        default:
          $ref: './openapi.yaml#/components/responses/DefaultErrorResponse'

  /auth/login:
    post:
      summary: user logs in
      operationId: auth_login
      requestBody:
        content:
          application/json:
            schema:
              $ref: './components/schemas/auth.yaml#/LoginForm'
      responses:
        '200':
          description: Succesfully logged in
          content:
            application/json:
              schema:
                $ref: './components/schemas/log_message.yaml#/LogMessageEnveloped'
        default:
          $ref: './openapi.yaml#/components/responses/DefaultErrorResponse'

  /auth/logout:
    get:
      operationId: auth_logout
      responses:
        '200':
          description: Succesfully logged out
          content:
            application/json:
              schema:
                $ref: './components/schemas/log_message.yaml#/LogMessageEnveloped'
        default:
          $ref: './openapi.yaml#/components/responses/DefaultErrorResponse'

  /auth/reset-password:
    post:
      summary: 'a non logged-in user requests a password reset'
      operationId: auth_reset_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: './components/schemas/auth.yaml#/ResetPasswordRequest'
      responses:
        '200':
          description: confirmation email sent to user
          content:
            application/json:
              schema:
                $ref: './components/schemas/log_message.yaml#/LogMessageEnveloped'
        '503':
          description: failed to send confirmation email
          content:
            application/json:
              schema:
                $ref: './components/schemas/error.yaml#/ErrorEnveloped'

  /auth/reset-password/{code}:
    post:
      summary: changes password using a token code without being logged in
      operationId: auth_reset_password_allowed
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
            #format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: './components/schemas/auth.yaml#/ResetPasswordForm'
      responses:
        '200':
          description: password was successfully changed
          content:
            application/json:
              schema:
                $ref: './components/schemas/log_message.yaml#/LogMessageEnveloped'
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                $ref: './components/schemas/error.yaml#/ErrorEnveloped'
        default:
          $ref: './openapi.yaml#/components/responses/DefaultErrorResponse'

  /auth/change-email:
    post:
      summary: logged in user changes email
      operationId: auth_change_email
      requestBody:
        content:
          application/json:
            schema:
              $ref: './components/schemas/auth.yaml#/ChangeEmailForm'
      responses:
        '200':
          description: confirmation sent to new email to complete operation
          content:
            application/json:
              schema:
                $ref: './components/schemas/log_message.yaml#/LogMessageEnveloped'
        '401':
          description: 'unauthorized user. Login required'
          content:
            application/json:
              schema:
                $ref: './components/schemas/error.yaml#/ErrorEnveloped'
        '503':
          description: unable to send confirmation email
          content:
            application/json:
              schema:
                $ref: './components/schemas/error.yaml#/ErrorEnveloped'
        default:
          $ref: './openapi.yaml#/components/responses/DefaultErrorResponse'

  /auth/change-password:
    post:
      summary: logged in user changes password
      operationId: auth_change_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: './components/schemas/auth.yaml#/ChangePasswordForm'
      responses:
        '200':
          description: password was successfully changed
          content:
            application/json:
              schema:
                $ref: './components/schemas/log_message.yaml#/LogMessageEnveloped'
        '401':
          description: 'unauthorized user. Login required'
          content:
            application/json:
              schema:
                $ref: './components/schemas/error.yaml#/ErrorEnveloped'
        '409':
          description: 'mismatch between new and confirmation passwords'
          content:
            application/json:
              schema:
                $ref: './components/schemas/error.yaml#/ErrorEnveloped'
        '422':
          description: current password is invalid
          content:
            application/json:
              schema:
                $ref: './components/schemas/error.yaml#/ErrorEnveloped'
        default:
          $ref: './openapi.yaml#/components/responses/DefaultErrorResponse'

  /auth/confirmation/{code}:
    get:
      summary: email link sent to user to confirm an action
      operationId: auth_confirmation
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
            #format: uuid
      responses:
        '3XX':
          description: redirection to specific ui application page

  /auth/check-password/{password}:
    get:
      summary: checks password strenght and provides recommendations to improve it
      operationId: auth_check_password_strength
      parameters:
        - name: password
          in: path
          required: true
          schema:
            type: string
            # FIXME: openapi-core limitation. format: password
      responses:
        '200':
          description: evaluates password strength, gives a rating and suggests some improvements
          content:
            application/json:
              schema:
                $ref: './components/schemas/auth.yaml#/PasswordCheckEnveloped'
