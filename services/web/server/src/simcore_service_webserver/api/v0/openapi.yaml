openapi: 3.1.0
info:
  title: simcore-service-webserver
  description: ' Main service with an interface (http-API & websockets) to the web
    front-end'
  version: 0.26.0
servers:
- url: ''
  description: webserver
- url: http://{host}:{port}
  description: development server
  variables:
    host:
      default: localhost
    port:
      default: '8001'
paths:
  /v0/activity/status:
    get:
      tags:
      - tasks
      summary: Get Activity Status
      operationId: get_activity_status
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_uuid.UUID__models_library.api_schemas_webserver.activity.Activity__'
  /v0/email:test:
    post:
      tags:
      - admin
      summary: Test Email
      operationId: test_email
      parameters:
      - required: false
        schema:
          type: string
          title: X-Simcore-Products-Name
        name: x-simcore-products-name
        in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestEmail'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Union_TestFailed__TestPassed__'
  /v0/announcements:
    get:
      tags:
      - announcements
      summary: List Announcements
      operationId: list_announcements
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.announcements._models.Announcement__'
  /v0/auth/register/invitations:check:
    post:
      tags:
      - auth
      summary: Check Registration Invitation
      description: Check invitation and returns associated email or None
      operationId: auth_check_registration_invitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationCheck'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_InvitationInfo_'
  /v0/auth/register:
    post:
      tags:
      - auth
      summary: Register
      description: User registration
      operationId: auth_register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
  /v0/auth/verify-phone-number:
    post:
      tags:
      - auth
      summary: Register Phone
      description: user tries to verify phone number for 2 Factor Authentication when
        registering
      operationId: auth_register_phone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPhoneBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_RegisterPhoneNextPage_'
  /v0/auth/validate-code-register:
    post:
      tags:
      - auth
      summary: Phone Confirmation
      description: user enters 2 Factor Authentication code when registering
      operationId: auth_phone_confirmation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneConfirmationBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
  /v0/auth/login:
    post:
      tags:
      - auth
      summary: Login
      description: user logs in
      operationId: auth_login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginBody'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_LoginNextPage_'
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /v0/auth/validate-code-login:
    post:
      tags:
      - auth
      summary: Login 2Fa
      description: user enters 2 Factor Authentication code when login in
      operationId: auth_login_2fa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginTwoFactorAuthBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /v0/auth/two_factor:resend:
    post:
      tags:
      - auth
      summary: Resend 2Fa Code
      description: Resends 2FA either via email or sms
      operationId: auth_resend_2fa_code
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resend2faBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /v0/auth/logout:
    post:
      tags:
      - auth
      summary: Logout
      description: user logout
      operationId: auth_logout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
  /v0/auth/reset-password:
    post:
      tags:
      - auth
      summary: Reset Password
      description: a non logged-in user requests a password reset
      operationId: auth_reset_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /v0/auth/reset-password/{code}:
    post:
      tags:
      - auth
      summary: Reset Password Allowed
      description: changes password using a token code without being logged in
      operationId: auth_reset_password_allowed
      parameters:
      - required: true
        schema:
          type: string
          title: Code
        name: code
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordConfirmation'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /v0/auth/change-email:
    post:
      tags:
      - auth
      summary: Change Email
      description: logged in user changes email
      operationId: auth_change_email
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEmailBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '401':
          description: unauthorized user. Login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
        '503':
          description: unable to send confirmation email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /v0/auth/change-password:
    post:
      tags:
      - auth
      summary: Change Password
      description: logged in user changes password
      operationId: auth_change_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '401':
          description: unauthorized user. Login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
        '409':
          description: mismatch between new and confirmation passwords
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
        '422':
          description: current password is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /v0/auth/confirmation/{code}:
    get:
      tags:
      - auth
      summary: Email Confirmation
      description: email link sent to user to confirm an action
      operationId: auth_confirmation
      parameters:
      - required: true
        schema:
          type: string
          title: Code
        name: code
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        3XX:
          description: redirection to specific ui application page
  /v0/auth/api-keys:
    get:
      tags:
      - auth
      summary: List Api Keys
      description: lists display names of API keys by this user
      operationId: list_api_keys
      parameters:
      - required: true
        schema:
          type: string
          title: Code
        name: code
        in: query
      responses:
        '200':
          description: returns the display names of API keys
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
                title: Response 200 List Api Keys
        '400':
          description: key name requested is invalid
        '401':
          description: requires login to  list keys
        '403':
          description: not enough permissions to list keys
    post:
      tags:
      - auth
      summary: Create Api Key
      description: creates API keys to access public API
      operationId: create_api_key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyCreate'
        required: true
      responses:
        '200':
          description: Authorization granted returning API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyGet'
        '400':
          description: key name requested is invalid
        '401':
          description: requires login to  list keys
        '403':
          description: not enough permissions to list keys
    delete:
      tags:
      - auth
      summary: Delete Api Key
      description: deletes API key by name
      operationId: delete_api_key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyCreate'
        required: true
      responses:
        '204':
          description: api key successfully deleted
        '401':
          description: requires login to  delete a key
        '403':
          description: not enough permissions to delete a key
  /v0/catalog/services:
    get:
      tags:
      - catalog
      summary: List Services
      operationId: list_services
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_webserver.catalog.ServiceGet__'
  /v0/catalog/services/{service_key}/{service_version}:
    get:
      tags:
      - catalog
      summary: Get Service
      operationId: get_service
      parameters:
      - required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
        name: service_key
        in: path
      - required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
        name: service_version
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ServiceGet_'
    patch:
      tags:
      - catalog
      summary: Update Service
      operationId: update_service
      parameters:
      - required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
        name: service_key
        in: path
      - required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
        name: service_version
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ServiceGet_'
  /v0/catalog/services/{service_key}/{service_version}/inputs:
    get:
      tags:
      - catalog
      summary: List Service Inputs
      operationId: list_service_inputs
      parameters:
      - required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
        name: service_key
        in: path
      - required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
        name: service_version
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_webserver.catalog.ServiceInputGet__'
  /v0/catalog/services/{service_key}/{service_version}/inputs/{input_key}:
    get:
      tags:
      - catalog
      summary: Get Service Input
      operationId: get_service_input
      parameters:
      - required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
        name: service_key
        in: path
      - required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
        name: service_version
        in: path
      - required: true
        schema:
          type: string
          pattern: ^[-_a-zA-Z0-9]+$
          title: Input Key
        name: input_key
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ServiceInputGet_'
  /v0/catalog/services/{service_key}/{service_version}/inputs:match:
    get:
      tags:
      - catalog
      summary: Get Compatible Inputs Given Source Output
      operationId: get_compatible_inputs_given_source_output
      parameters:
      - required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
        name: service_key
        in: path
      - required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
        name: service_version
        in: path
      - required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Fromservice
        name: fromService
        in: query
      - required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Fromversion
        name: fromVersion
        in: query
      - required: true
        schema:
          type: string
          pattern: ^[-_a-zA-Z0-9]+$
          title: Fromoutput
        name: fromOutput
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.services.ServicePortKey__'
  /v0/catalog/services/{service_key}/{service_version}/outputs:
    get:
      tags:
      - catalog
      summary: List Service Outputs
      operationId: list_service_outputs
      parameters:
      - required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
        name: service_key
        in: path
      - required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
        name: service_version
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.services.ServicePortKey__'
  /v0/catalog/services/{service_key}/{service_version}/outputs/{output_key}:
    get:
      tags:
      - catalog
      summary: Get Service Output
      operationId: get_service_output
      parameters:
      - required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
        name: service_key
        in: path
      - required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
        name: service_version
        in: path
      - required: true
        schema:
          type: string
          pattern: ^[-_a-zA-Z0-9]+$
          title: Output Key
        name: output_key
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_webserver.catalog.ServiceOutputGet__'
  /v0/catalog/services/{service_key}/{service_version}/outputs:match:
    get:
      tags:
      - catalog
      summary: Get Compatible Outputs Given Target Input
      operationId: get_compatible_outputs_given_target_input
      parameters:
      - required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
        name: service_key
        in: path
      - required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
        name: service_version
        in: path
      - required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Toservice
        name: toService
        in: query
      - required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Toversion
        name: toVersion
        in: query
      - required: true
        schema:
          type: string
          pattern: ^[-_a-zA-Z0-9]+$
          title: Toinput
        name: toInput
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.services.ServicePortKey__'
  /v0/catalog/services/{service_key}/{service_version}/resources:
    get:
      tags:
      - catalog
      summary: Get Service Resources
      operationId: get_service_resources
      parameters:
      - required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
        name: service_key
        in: path
      - required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
        name: service_version
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                title: Response Get Service Resources
  /v0/clusters:
    get:
      tags:
      - clusters
      summary: List Clusters
      operationId: list_clusters
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_webserver.clusters.ClusterGet__'
    post:
      tags:
      - clusters
      summary: Create Cluster
      operationId: create_cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ClusterGet_'
  /v0/clusters:ping:
    post:
      tags:
      - clusters
      summary: Ping Cluster
      description: Test connectivity with cluster
      operationId: ping_cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterPing'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/clusters/{cluster_id}:
    get:
      tags:
      - clusters
      summary: Get Cluster
      operationId: get_cluster
      parameters:
      - required: true
        schema:
          type: integer
          minimum: 0
          title: Cluster Id
        name: cluster_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ClusterGet_'
    delete:
      tags:
      - clusters
      summary: Delete Cluster
      operationId: delete_cluster
      parameters:
      - required: true
        schema:
          type: integer
          minimum: 0
          title: Cluster Id
        name: cluster_id
        in: path
      responses:
        '204':
          description: Successful Response
    patch:
      tags:
      - clusters
      summary: Update Cluster
      operationId: update_cluster
      parameters:
      - required: true
        schema:
          type: integer
          minimum: 0
          title: Cluster Id
        name: cluster_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterPatch'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ClusterGet_'
  /v0/clusters/{cluster_id}/details:
    get:
      tags:
      - clusters
      summary: Get Cluster Details
      operationId: get_cluster_details
      parameters:
      - required: true
        schema:
          type: integer
          minimum: 0
          title: Cluster Id
        name: cluster_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ClusterDetails_'
  /v0/clusters/{cluster_id}:ping:
    post:
      tags:
      - clusters
      summary: Ping Cluster Cluster Id
      description: Tests connectivity with cluster
      operationId: ping_cluster_cluster_id
      parameters:
      - required: true
        schema:
          type: integer
          minimum: 0
          title: Cluster Id
        name: cluster_id
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/computations/{project_id}:
    get:
      tags:
      - computations
      - projects
      summary: Get Computation
      operationId: get_computation
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ComputationTaskGet_'
  /v0/computations/{project_id}:start:
    post:
      tags:
      - computations
      - projects
      summary: Start Computation
      operationId: start_computation
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_ComputationStart'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope__ComputationStarted_'
  /v0/computations/{project_id}:stop:
    post:
      tags:
      - computations
      - projects
      summary: Stop Computation
      operationId: stop_computation
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/:
    get:
      tags:
      - maintenance
      summary: Healthcheck Readiness Probe
      description: 'Readiness probe: check if the container is ready to receive traffic'
      operationId: healthcheck_readiness_probe
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_HealthInfoDict_'
  /v0/health:
    get:
      tags:
      - maintenance
      summary: Healthcheck Liveness Probe
      description: 'Liveness probe: check if the container is alive'
      operationId: healthcheck_liveness_probe
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_str__Any__'
  /v0/config:
    get:
      tags:
      - maintenance
      summary: Front end runtime configuration
      description: Returns app and products configs
      operationId: get_config
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_str__Any__'
  /v0/scheduled_maintenance:
    get:
      tags:
      - maintenance
      summary: Get Scheduled Maintenance
      operationId: get_scheduled_maintenance
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_str_'
  /v0/status:
    get:
      tags:
      - maintenance
      summary: checks status of self and connected services
      operationId: get_app_status
      responses:
        '200':
          description: Returns app status check
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_AppStatusCheck_'
  /v0/status/diagnostics:
    get:
      tags:
      - maintenance
      summary: Get App Diagnostics
      operationId: get_app_diagnostics
      parameters:
      - required: false
        schema:
          type: integer
          title: Top Tracemalloc
        name: top_tracemalloc
        in: query
      responses:
        '200':
          description: Returns app diagnostics report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_StatusDiagnosticsGet_'
  /v0/status/{service_name}:
    get:
      tags:
      - maintenance
      summary: Get Service Status
      operationId: get_service_status
      parameters:
      - required: true
        schema:
          type: string
          title: Service Name
        name: service_name
        in: path
      responses:
        '200':
          description: Returns app status check
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_AppStatusCheck_'
  /v0/projects/{project_id}:xport:
    post:
      tags:
      - projects
      - exporter
      summary: Export Project
      description: creates an archive of the project and downloads it
      operationId: export_project
      parameters:
      - required: true
        schema:
          type: string
          title: Project Id
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
  /v0/groups:
    get:
      tags:
      - groups
      summary: List Groups
      operationId: list_groups
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_AllUsersGroups_'
    post:
      tags:
      - groups
      summary: Create Group
      operationId: create_group
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_UsersGroup_'
  /v0/groups/{gid}:
    get:
      tags:
      - groups
      summary: Get Group
      operationId: get_group
      parameters:
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
        name: gid
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_UsersGroup_'
    delete:
      tags:
      - groups
      summary: Delete Group
      operationId: delete_group
      parameters:
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
        name: gid
        in: path
      responses:
        '204':
          description: Successful Response
    patch:
      tags:
      - groups
      summary: Update Group
      operationId: update_group
      parameters:
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
        name: gid
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersGroup'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_UsersGroup_'
  /v0/groups/{gid}/users:
    get:
      tags:
      - groups
      summary: Get Group Users
      operationId: get_group_users
      parameters:
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
        name: gid
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_webserver.groups.GroupUserGet__'
    post:
      tags:
      - groups
      summary: Add Group User
      operationId: add_group_user
      parameters:
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
        name: gid
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUserGet'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/groups/{gid}/users/{uid}:
    get:
      tags:
      - groups
      summary: Get Group User
      operationId: get_group_user
      parameters:
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
        name: gid
        in: path
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Uid
          minimum: 0
        name: uid
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_GroupUserGet_'
    delete:
      tags:
      - groups
      summary: Delete Group User
      operationId: delete_group_user
      parameters:
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
        name: gid
        in: path
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Uid
          minimum: 0
        name: uid
        in: path
      responses:
        '204':
          description: Successful Response
    patch:
      tags:
      - groups
      summary: Update Group User
      operationId: update_group_user
      parameters:
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
        name: gid
        in: path
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Uid
          minimum: 0
        name: uid
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUserGet'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_GroupUserGet_'
  /v0/groups/{gid}/classifiers:
    get:
      tags:
      - groups
      summary: Get Group Classifiers
      operationId: get_group_classifiers
      parameters:
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
        name: gid
        in: path
      - required: false
        schema:
          type: string
          enum:
          - std
          title: Tree View
          default: std
        name: tree_view
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_str__Any__'
  /v0/groups/sparc/classifiers/scicrunch-resources/{rrid}:
    get:
      tags:
      - groups
      summary: Get Scicrunch Resource
      operationId: get_scicrunch_resource
      parameters:
      - required: true
        schema:
          type: string
          title: Rrid
        name: rrid
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ResearchResource_'
    post:
      tags:
      - groups
      summary: Add Scicrunch Resource
      operationId: add_scicrunch_resource
      parameters:
      - required: true
        schema:
          type: string
          title: Rrid
        name: rrid
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ResearchResource_'
  /v0/groups/sparc/classifiers/scicrunch-resources:search:
    get:
      tags:
      - groups
      summary: Search Scicrunch Resources
      operationId: search_scicrunch_resources
      parameters:
      - required: true
        schema:
          type: string
          title: Guess Name
        name: guess_name
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.scicrunch.models.ResourceHit__'
  /v0/tasks:
    get:
      tags:
      - long-running-tasks
      summary: List Tasks
      operationId: list_tasks
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_long_running_tasks.tasks.TaskGet__'
  /v0/tasks/{task_id}:
    get:
      tags:
      - long-running-tasks
      summary: Get Task Status
      operationId: get_task_status
      parameters:
      - required: true
        schema:
          type: string
          title: Task Id
        name: task_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskStatus_'
    delete:
      tags:
      - long-running-tasks
      summary: Cancel And Delete Task
      operationId: cancel_and_delete_task
      parameters:
      - required: true
        schema:
          type: string
          title: Task Id
        name: task_id
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/tasks/{task_id}/result:
    get:
      tags:
      - long-running-tasks
      summary: Get Task Result
      operationId: get_task_result
      parameters:
      - required: true
        schema:
          type: string
          title: Task Id
        name: task_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /v0/projects/{project_uuid}/checkpoint/{ref_id}/iterations:
    get:
      tags:
      - projects
      - metamodeling
      summary: List Project Iterations
      operationId: list_project_iterations
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
        name: project_uuid
        in: path
      - required: true
        schema:
          type: integer
          title: Ref Id
        name: ref_id
        in: path
      - required: false
        schema:
          type: integer
          exclusiveMaximum: true
          minimum: 1
          title: Limit
          default: 20
          maximum: 50
        name: limit
        in: query
      - required: false
        schema:
          type: integer
          minimum: 0
          title: Offset
          default: 0
        name: offset
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ProjectIterationItem_'
  /v0/projects/{project_uuid}/checkpoint/{ref_id}/iterations/-/results:
    get:
      tags:
      - projects
      - metamodeling
      summary: List Project Iterations Results
      operationId: list_project_iterations_results
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
        name: project_uuid
        in: path
      - required: true
        schema:
          type: integer
          title: Ref Id
        name: ref_id
        in: path
      - required: false
        schema:
          type: integer
          exclusiveMaximum: true
          minimum: 1
          title: Limit
          default: 20
          maximum: 50
        name: limit
        in: query
      - required: false
        schema:
          type: integer
          minimum: 0
          title: Offset
          default: 0
        name: offset
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ProjectIterationResultItem_'
  /view:
    get:
      tags:
      - nih-sparc
      summary: Get Redirection To Viewer
      description: Opens a viewer in osparc for data in the NIH-sparc portal
      operationId: get_redirection_to_viewer
      parameters:
      - required: true
        schema:
          type: string
          title: File Type
        name: file_type
        in: query
      - required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Viewer Key
        name: viewer_key
        in: query
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: File Size
          minimum: 0
        name: file_size
        in: query
      - required: true
        schema:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Download Link
        name: download_link
        in: query
      - required: false
        schema:
          type: string
          title: File Name
          default: unknown
        name: file_name
        in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceKeyVersion'
        required: true
      responses:
        '302':
          description: Opens osparc and starts viewer for selected data
  /study/{id}:
    get:
      tags:
      - nih-sparc
      summary: Get Redirection To Study Page
      description: Opens a study published in osparc
      operationId: get_redirection_to_study_page
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Id
        name: id
        in: path
      responses:
        '302':
          description: Opens osparc and opens a copy of publised study
  /v0/services:
    get:
      tags:
      - nih-sparc
      summary: List Latest Services
      description: Returns a list latest version of services
      operationId: list_latest_services
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.studies_dispatcher._rest_handlers.ServiceGet__'
  /v0/viewers:
    get:
      tags:
      - nih-sparc
      summary: List Viewers
      description: 'Lists all publically available viewers


        Notice that this might contain multiple services for the same filetype


        If file_type is provided, then it filters viewer for that filetype'
      operationId: list_viewers
      parameters:
      - required: false
        schema:
          type: string
          title: File Type
        name: file_type
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.studies_dispatcher._rest_handlers.Viewer__'
  /v0/viewers/default:
    get:
      tags:
      - nih-sparc
      summary: List Default Viewers
      description: 'Lists the default viewer for each supported filetype


        This was interfaced as a subcollection of viewers because it is a very common
        use-case


        Only publicaly available viewers


        If file_type is provided, then it filters viewer for that filetype'
      operationId: list_default_viewers
      parameters:
      - required: false
        schema:
          type: string
          title: File Type
        name: file_type
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.studies_dispatcher._rest_handlers.Viewer__'
  /v0/projects/{project_uuid}/comments:
    get:
      tags:
      - projects
      - comments
      summary: Retrieve all comments for a specific project.
      operationId: list_project_comments
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
        name: project_uuid
        in: path
      - required: false
        schema:
          type: integer
          title: Limit
          default: 20
        name: limit
        in: query
      - required: false
        schema:
          type: integer
          minimum: 0
          title: Offset
          default: 0
        name: offset
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.projects_comments.ProjectsCommentsAPI__'
    post:
      tags:
      - projects
      - comments
      summary: Create a new comment for a specific project. The request body should
        contain the comment contents and user information.
      operationId: create_project_comment
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
        name: project_uuid
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_ProjectCommentsBodyParams'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_Literal__comment_id____pydantic.types.PositiveInt__'
  /v0/projects/{project_uuid}/comments/{comment_id}:
    get:
      tags:
      - projects
      - comments
      summary: Retrieve a specific comment by its ID within a project.
      operationId: get_project_comment
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
        name: project_uuid
        in: path
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Comment Id
          minimum: 0
        name: comment_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectsCommentsAPI_'
    put:
      tags:
      - projects
      - comments
      summary: Update the contents of a specific comment for a project. The request
        body should contain the updated comment contents.
      operationId: update_project_comment
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
        name: project_uuid
        in: path
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Comment Id
          minimum: 0
        name: comment_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_ProjectCommentsBodyParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectsCommentsAPI_'
    delete:
      tags:
      - projects
      - comments
      summary: Delete a specific comment associated with a project.
      operationId: delete_project_comment
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
        name: project_uuid
        in: path
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Comment Id
          minimum: 0
        name: comment_id
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/projects:
    get:
      tags:
      - projects
      summary: List Projects
      operationId: list_projects
      parameters:
      - required: false
        schema:
          type: integer
          exclusiveMaximum: true
          minimum: 1
          title: Limit
          default: 20
          maximum: 50
        name: limit
        in: query
      - required: false
        schema:
          type: integer
          minimum: 0
          title: Offset
          default: 0
        name: offset
        in: query
      - required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ProjectTypeAPI'
          default: all
        name: type
        in: query
      - required: false
        schema:
          type: boolean
          title: Show Hidden
          default: false
        name: show_hidden
        in: query
      - required: false
        schema:
          type: string
          maxLength: 100
          title: Search
        name: search
        in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_list_projects'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ProjectListItem_'
    post:
      tags:
      - projects
      summary: Creates a new project or copies an existing one
      operationId: create_project
      parameters:
      - required: false
        schema:
          type: string
          format: uuid
          title: From Study
        name: from_study
        in: query
      - required: false
        schema:
          type: boolean
          title: As Template
          default: false
        name: as_template
        in: query
      - required: false
        schema:
          type: boolean
          title: Copy Data
          default: true
        name: copy_data
        in: query
      - required: false
        schema:
          type: boolean
          title: Hidden
          default: false
        name: hidden
        in: query
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
              - $ref: '#/components/schemas/ProjectCreateNew'
              - $ref: '#/components/schemas/ProjectCopyOverride'
              title: ' Create'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskGet_'
  /v0/projects/active:
    get:
      tags:
      - projects
      summary: Get Active Project
      operationId: get_active_project
      parameters:
      - required: true
        schema:
          type: string
          title: Client Session Id
        name: client_session_id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
  /v0/projects/{project_id}:
    get:
      tags:
      - projects
      summary: Get Project
      operationId: get_project
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
    put:
      tags:
      - projects
      summary: Replace Project
      description: Replaces (i.e. full update) a project resource
      operationId: replace_project
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectReplace'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
    delete:
      tags:
      - projects
      summary: Delete Project
      operationId: delete_project
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      responses:
        '204':
          description: Successful Response
    patch:
      tags:
      - projects
      summary: Update Project
      description: Partial update of a project resource
      operationId: update_project
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
  /v0/projects/{project_id}:clone:
    post:
      tags:
      - projects
      summary: Clone Project
      operationId: clone_project
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskGet_'
  /v0/projects/{project_id}/metadata:
    get:
      tags:
      - projects
      - metadata
      summary: Get Project Metadata
      operationId: get_project_metadata
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectMetadataGet_'
    patch:
      tags:
      - projects
      - metadata
      summary: Update Project Metadata
      operationId: update_project_metadata
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectMetadataUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectMetadataGet_'
  /v0/projects/{project_id}/nodes:
    post:
      tags:
      - projects
      - nodes
      summary: Create Node
      operationId: create_node
      parameters:
      - required: true
        schema:
          type: string
          title: Project Id
        name: project_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_NodeCreated_'
  /v0/projects/{project_id}/nodes/{node_id}:
    get:
      tags:
      - projects
      - nodes
      summary: Get Node
      operationId: get_node
      parameters:
      - required: true
        schema:
          type: string
          title: Project Id
        name: project_id
        in: path
      - required: true
        schema:
          type: string
          title: Node Id
        name: node_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Union_NodeGet__NodeGetIdle__'
    delete:
      tags:
      - projects
      - nodes
      summary: Delete Node
      operationId: delete_node
      parameters:
      - required: true
        schema:
          type: string
          title: Project Id
        name: project_id
        in: path
      - required: true
        schema:
          type: string
          title: Node Id
        name: node_id
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/projects/{project_id}/nodes/{node_id}:retrieve:
    post:
      tags:
      - projects
      - nodes
      summary: Retrieve Node
      operationId: retrieve_node
      parameters:
      - required: true
        schema:
          type: string
          title: Project Id
        name: project_id
        in: path
      - required: true
        schema:
          type: string
          title: Node Id
        name: node_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeRetrieve'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_NodeRetrieved_'
  /v0/projects/{project_id}/nodes/{node_id}:start:
    post:
      tags:
      - projects
      - nodes
      summary: Start Node
      operationId: start_node
      parameters:
      - required: true
        schema:
          type: string
          title: Project Id
        name: project_id
        in: path
      - required: true
        schema:
          type: string
          title: Node Id
        name: node_id
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/projects/{project_id}/nodes/{node_id}:stop:
    post:
      tags:
      - projects
      - nodes
      summary: Stop Node
      operationId: stop_node
      parameters:
      - required: true
        schema:
          type: string
          title: Project Id
        name: project_id
        in: path
      - required: true
        schema:
          type: string
          title: Node Id
        name: node_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskGet_'
  /v0/projects/{project_id}/nodes/{node_id}:restart:
    post:
      tags:
      - projects
      - nodes
      summary: Restart Node
      description: Note that it has only effect on nodes associated to dynamic services
      operationId: restart_node
      parameters:
      - required: true
        schema:
          type: string
          title: Project Id
        name: project_id
        in: path
      - required: true
        schema:
          type: string
          title: Node Id
        name: node_id
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/projects/{project_id}/nodes/{node_id}/resources:
    get:
      tags:
      - projects
      - nodes
      summary: Get Node Resources
      operationId: get_node_resources
      parameters:
      - required: true
        schema:
          type: string
          title: Project Id
        name: project_id
        in: path
      - required: true
        schema:
          type: string
          title: Node Id
        name: node_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_models_library.docker.DockerGenericTag__models_library.services_resources.ImageResources__'
    put:
      tags:
      - projects
      - nodes
      summary: Replace Node Resources
      operationId: replace_node_resources
      parameters:
      - required: true
        schema:
          type: string
          title: Project Id
        name: project_id
        in: path
      - required: true
        schema:
          type: string
          title: Node Id
        name: node_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              type: object
              title: ' New'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_models_library.docker.DockerGenericTag__models_library.services_resources.ImageResources__'
  /v0/projects/{project_id}/nodes/-/services:access:
    get:
      tags:
      - projects
      - nodes
      summary: Check whether provided group has access to the project services
      operationId: get_project_services_access_for_gid
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: For Gid
          minimum: 0
        name: for_gid
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope__ProjectGroupAccess_'
  /v0/projects/{project_id}/nodes/-/preview:
    get:
      tags:
      - projects
      - nodes
      summary: Lists all previews in the node's project
      operationId: list_project_nodes_previews
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.projects._nodes_handlers._ProjectNodePreview__'
  /v0/projects/{project_id}/nodes/{node_id}/preview:
    get:
      tags:
      - projects
      - nodes
      summary: Gets a give node's preview
      operationId: get_project_node_preview
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      - required: true
        schema:
          type: string
          format: uuid
          title: Node Id
        name: node_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope__ProjectNodePreview_'
        '404':
          description: Node has no preview
  /v0/projects/{project_id}/inputs:
    get:
      tags:
      - projects
      - ports
      summary: Get Project Inputs
      description: New in version *0.10*
      operationId: get_project_inputs
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_uuid.UUID__simcore_service_webserver.projects._ports_handlers.ProjectInputGet__'
    patch:
      tags:
      - projects
      - ports
      summary: Update Project Inputs
      description: New in version *0.10*
      operationId: update_project_inputs
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ProjectInputUpdate'
              type: array
              title: ' Updates'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_uuid.UUID__simcore_service_webserver.projects._ports_handlers.ProjectInputGet__'
  /v0/projects/{project_id}/outputs:
    get:
      tags:
      - projects
      - ports
      summary: Get Project Outputs
      description: New in version *0.10*
      operationId: get_project_outputs
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_uuid.UUID__simcore_service_webserver.projects._ports_handlers.ProjectOutputGet__'
  /v0/projects/{project_id}/metadata/ports:
    get:
      tags:
      - projects
      - ports
      summary: List Project Metadata Ports
      description: New in version *0.12*
      operationId: list_project_metadata_ports
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.projects._ports_handlers.ProjectMetadataPortGet__'
  /v0/projects/{project_id}:open:
    post:
      tags:
      - projects
      summary: Open Project
      operationId: open_project
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      - required: false
        schema:
          type: boolean
          title: Disable Service Auto Start
          default: false
        name: disable_service_auto_start
        in: query
      requestBody:
        content:
          application/json:
            schema:
              type: string
              title: Client Session Id
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
  /v0/projects/{project_id}:close:
    post:
      tags:
      - projects
      summary: Close Project
      operationId: close_project
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              type: string
              title: Client Session Id
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/projects/{project_id}/state:
    get:
      tags:
      - projects
      summary: Get Project State
      operationId: get_project_state
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectState_'
  /v0/projects/{project_uuid}/tags/{tag_id}:
    put:
      tags:
      - projects
      - tags
      summary: Add Tag
      description: Links an existing label with an existing study
      operationId: add_tag
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
        name: project_uuid
        in: path
      - required: true
        schema:
          type: integer
          title: Tag Id
        name: tag_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
    delete:
      tags:
      - projects
      - tags
      summary: Remove Tag
      description: Removes an existing link between a label and a study
      operationId: remove_tag
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
        name: project_uuid
        in: path
      - required: true
        schema:
          type: integer
          title: Tag Id
        name: tag_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
  /v0/projects/{project_id}/wallet:
    get:
      tags:
      - projects
      summary: Get current connected wallet to the project.
      operationId: get_project_wallet
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Union_WalletGet__NoneType__'
  /v0/projects/{project_id}/wallet/{wallet_id}:
    put:
      tags:
      - projects
      summary: Connect wallet to the project (Project can have only one wallet)
      operationId: connect_wallet_to_project
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Id
        name: project_id
        in: path
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
        name: wallet_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletGet_'
  /v0/publications/service-submission:
    post:
      tags:
      - publication
      summary: Service Submission
      description: Submits files with new service candidate
      operationId: service_submission
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_service_submission'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/resource-usage/services:
    get:
      tags:
      - usage
      summary: Retrieve finished and currently running user services (user and product
        are taken from context, optionally wallet_id parameter might be provided).
      operationId: list_resource_usage_services
      parameters:
      - required: false
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
        name: wallet_id
        in: query
      - required: false
        schema:
          type: integer
          title: Limit
          default: 20
        name: limit
        in: query
      - required: false
        schema:
          type: integer
          minimum: 0
          title: Offset
          default: 0
        name: offset
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_webserver.resource_usage.ServiceRunGet__'
  /v0/storage/locations:
    get:
      tags:
      - storage
      summary: Get available storage locations
      description: Returns the list of available storage locations
      operationId: get_storage_locations
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DatasetMetaData'
                type: array
                title: Response Get Storage Locations
  /v0/storage/locations/{location_id}:sync:
    post:
      tags:
      - storage
      summary: Manually triggers the synchronisation of the file meta data table in
        the database
      description: Returns an object containing added, changed and removed paths
      operationId: synchronise_meta_data_table
      parameters:
      - required: true
        schema:
          type: integer
          title: Location Id
        name: location_id
        in: path
      - required: false
        schema:
          type: boolean
          title: Dry Run
          default: false
        name: dry_run
        in: query
      - required: false
        schema:
          type: boolean
          title: Fire And Forget
          default: false
        name: fire_and_forget
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TableSynchronisation_'
  /v0/storage/locations/{location_id}/datasets:
    get:
      tags:
      - storage
      summary: Get datasets metadata
      description: returns all the top level datasets a user has access to
      operationId: get_datasets_metadata
      parameters:
      - required: true
        schema:
          type: integer
          title: Location Id
        name: location_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.storage.schemas.DatasetMetaData__'
  /v0/storage/locations/{location_id}/files/metadata:
    get:
      tags:
      - storage
      summary: Get datasets metadata
      description: returns all the file meta data a user has access to (uuid_filter
        may be used)
      operationId: get_files_metadata
      parameters:
      - required: true
        schema:
          type: integer
          title: Location Id
        name: location_id
        in: path
      - required: false
        schema:
          type: string
          title: Uuid Filter
          default: ''
        name: uuid_filter
        in: query
      - description: Automatic directory expansion. This will be replaced by pagination
          the future
        required: false
        schema:
          type: boolean
          title: Expand Dirs
          description: Automatic directory expansion. This will be replaced by pagination
            the future
          default: true
        name: expand_dirs
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.storage.schemas.DatasetMetaData__'
  /v0/storage/locations/{location_id}/datasets/{dataset_id}/metadata:
    get:
      tags:
      - storage
      summary: Get Files Metadata
      description: returns all the file meta data inside dataset with dataset_id
      operationId: get_files_metadata_dataset
      parameters:
      - required: true
        schema:
          type: integer
          title: Location Id
        name: location_id
        in: path
      - required: true
        schema:
          type: string
          title: Dataset Id
        name: dataset_id
        in: path
      - description: Automatic directory expansion. This will be replaced by pagination
          the future
        required: false
        schema:
          type: boolean
          title: Expand Dirs
          description: Automatic directory expansion. This will be replaced by pagination
            the future
          default: true
        name: expand_dirs
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_storage.FileMetaDataGet__'
  /v0/storage/locations/{location_id}/files/{file_id}/metadata:
    get:
      tags:
      - storage
      summary: Get File Metadata
      description: returns the file meta data of file_id if user_id has the rights
        to
      operationId: get_file_metadata
      parameters:
      - required: true
        schema:
          type: integer
          title: Location Id
        name: location_id
        in: path
      - required: true
        schema:
          type: string
          title: File Id
        name: file_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/FileMetaData'
                - $ref: '#/components/schemas/Envelope_FileMetaDataGet_'
                title: Response Get File Metadata
  /v0/storage/locations/{location_id}/files/{file_id}:
    get:
      tags:
      - storage
      summary: Returns download link for requested file
      description: creates a download file link if user has the rights to
      operationId: download_file
      parameters:
      - required: true
        schema:
          type: integer
          title: Location Id
        name: location_id
        in: path
      - required: true
        schema:
          type: string
          title: File Id
        name: file_id
        in: path
      - required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/LinkType'
          default: PRESIGNED
        name: link_type
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PresignedLink_'
    put:
      tags:
      - storage
      summary: Returns upload link
      description: creates one or more upload file links if user has the rights to,
        expects the client to complete/abort upload
      operationId: upload_file
      parameters:
      - required: true
        schema:
          type: integer
          title: Location Id
        name: location_id
        in: path
      - required: true
        schema:
          type: string
          title: File Id
        name: file_id
        in: path
      - required: true
        schema:
          type: integer
          title: File Size
        name: file_size
        in: query
      - required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/LinkType'
          default: PRESIGNED
        name: link_type
        in: query
      - required: false
        schema:
          type: boolean
          title: Is Directory
          default: false
        name: is_directory
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/Envelope_FileUploadSchema_'
                - $ref: '#/components/schemas/Envelope_AnyUrl_'
                title: Response Upload File
    delete:
      tags:
      - storage
      summary: Deletes File
      description: deletes file if user has the rights to
      operationId: delete_file
      parameters:
      - required: true
        schema:
          type: integer
          title: Location Id
        name: location_id
        in: path
      - required: true
        schema:
          type: string
          title: File Id
        name: file_id
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/storage/locations/{location_id}/files/{file_id}:abort:
    post:
      tags:
      - storage
      summary: Abort Upload File
      description: 'aborts an upload if user has the rights to, and reverts

        to the latest version if available, else will delete the file'
      operationId: abort_upload_file
      parameters:
      - required: true
        schema:
          type: integer
          title: Location Id
        name: location_id
        in: path
      - required: true
        schema:
          type: string
          title: File Id
        name: file_id
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/storage/locations/{location_id}/files/{file_id}:complete:
    post:
      tags:
      - storage
      summary: Complete Upload File
      description: completes an upload if the user has the rights to
      operationId: complete_upload_file
      parameters:
      - required: true
        schema:
          type: integer
          title: Location Id
        name: location_id
        in: path
      - required: true
        schema:
          type: string
          title: File Id
        name: file_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Envelope_FileUploadCompletionBody_'
        required: true
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_FileUploadCompleteResponse_'
  /v0/storage/locations/{location_id}/files/{file_id}:complete/futures/{future_id}:
    post:
      tags:
      - storage
      summary: Check for upload completion
      description: Returns state of upload completion
      operationId: is_completed_upload_file
      parameters:
      - required: true
        schema:
          type: integer
          title: Location Id
        name: location_id
        in: path
      - required: true
        schema:
          type: string
          title: File Id
        name: file_id
        in: path
      - required: true
        schema:
          type: string
          title: Future Id
        name: future_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_FileUploadCompleteFutureResponse_'
  /v0/tags:
    get:
      tags:
      - tags
      summary: List Tags
      operationId: list_tags
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.tags._handlers.TagGet__'
    post:
      tags:
      - tags
      summary: Create Tag
      operationId: create_tag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TagGet_'
  /v0/tags/{tag_id}:
    delete:
      tags:
      - tags
      summary: Delete Tag
      operationId: delete_tag
      parameters:
      - required: true
        schema:
          type: integer
          title: Tag Id
        name: tag_id
        in: path
      responses:
        '204':
          description: Successful Response
    patch:
      tags:
      - tags
      summary: Update Tag
      operationId: update_tag
      parameters:
      - required: true
        schema:
          type: integer
          title: Tag Id
        name: tag_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TagGet_'
  /v0/me:
    get:
      tags:
      - user
      summary: Get My Profile
      operationId: get_my_profile
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProfileGet_'
    put:
      tags:
      - user
      summary: Update My Profile
      operationId: update_my_profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdate'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/me/tokens:
    get:
      tags:
      - user
      summary: List Tokens
      operationId: list_tokens
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.users.schemas.Token__'
    post:
      tags:
      - user
      summary: Create Token
      operationId: create_token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Token_'
  /v0/me/tokens/{service}:
    get:
      tags:
      - user
      summary: Get Token
      operationId: get_token
      parameters:
      - required: true
        schema:
          type: string
          title: Service
        name: service
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Token_'
    delete:
      tags:
      - user
      summary: Delete Token
      operationId: delete_token
      parameters:
      - required: true
        schema:
          type: string
          title: Service
        name: service
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/me/notifications:
    get:
      tags:
      - user
      summary: List User Notifications
      operationId: list_user_notifications
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.users._notifications.UserNotification__'
    post:
      tags:
      - user
      summary: Create User Notification
      operationId: create_user_notification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotificationCreate'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/me/notifications/{notification_id}:
    patch:
      tags:
      - user
      summary: Mark Notification As Read
      operationId: mark_notification_as_read
      parameters:
      - required: true
        schema:
          type: string
          title: Notification Id
        name: notification_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotificationPatch'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/me/permissions:
    get:
      tags:
      - user
      summary: List User Permissions
      operationId: list_user_permissions
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.users.schemas.PermissionGet__'
  /v0/repos/projects:
    get:
      tags:
      - repository
      summary: List Repos
      operationId: list_repos
      parameters:
      - required: false
        schema:
          type: integer
          exclusiveMaximum: true
          minimum: 1
          title: Limit
          default: 20
          maximum: 50
        name: limit
        in: query
      - required: false
        schema:
          type: integer
          minimum: 0
          title: Offset
          default: 0
        name: offset
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_RepoApiModel_'
  /v0/repos/projects/{project_uuid}/checkpoints:
    get:
      tags:
      - repository
      summary: List Checkpoints
      operationId: list_checkpoints
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
        name: project_uuid
        in: path
      - required: false
        schema:
          type: integer
          exclusiveMaximum: true
          minimum: 1
          title: Limit
          default: 20
          maximum: 50
        name: limit
        in: query
      - required: false
        schema:
          type: integer
          minimum: 0
          title: Offset
          default: 0
        name: offset
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_CheckpointApiModel_'
    post:
      tags:
      - repository
      summary: Create Checkpoint
      operationId: create_checkpoint
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
        name: project_uuid
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckpointNew'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_CheckpointApiModel_'
  /v0/repos/projects/{project_uuid}/checkpoints/HEAD:
    get:
      tags:
      - repository
      summary: Get Head Checkpoint
      description: Gets HEAD (i.e. current) checkpoint
      operationId: get_head_checkpoint
      parameters:
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
        name: project_uuid
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_CheckpointApiModel_'
  /v0/repos/projects/{project_uuid}/checkpoints/{ref_id}:
    get:
      tags:
      - repository
      summary: Get Checkpoint
      operationId: get_checkpoint
      parameters:
      - required: true
        schema:
          anyOf:
          - type: integer
          - type: string
          title: Ref Id
        name: ref_id
        in: path
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
        name: project_uuid
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_CheckpointApiModel_'
    patch:
      tags:
      - repository
      summary: Update Checkpoint
      description: Update Checkpoint Annotations
      operationId: update_checkpoint
      parameters:
      - required: true
        schema:
          anyOf:
          - type: integer
          - type: string
          title: Ref Id
        name: ref_id
        in: path
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
        name: project_uuid
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckpointAnnotations'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_CheckpointApiModel_'
  /v0/repos/projects/{project_uuid}/checkpoints/{ref_id}/workbench/view:
    get:
      tags:
      - repository
      summary: View Project Workbench
      operationId: view_project_workbench
      parameters:
      - required: true
        schema:
          anyOf:
          - type: integer
          - type: string
          title: Ref Id
        name: ref_id
        in: path
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
        name: project_uuid
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WorkbenchViewApiModel_'
  /v0/repos/projects/{project_uuid}/checkpoints/{ref_id}:checkout:
    post:
      tags:
      - repository
      summary: Checkout
      operationId: checkout
      parameters:
      - required: true
        schema:
          anyOf:
          - type: integer
          - type: string
          title: Ref Id
        name: ref_id
        in: path
      - required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
        name: project_uuid
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_CheckpointApiModel_'
  /v0/wallets:
    get:
      tags:
      - wallets
      summary: List Wallets
      operationId: list_wallets
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_webserver.wallets.WalletGetWithAvailableCredits__'
    post:
      tags:
      - wallets
      summary: Create Wallet
      operationId: create_wallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_CreateWalletBodyParams'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletGet_'
  /v0/wallets/{wallet_id}:
    put:
      tags:
      - wallets
      summary: Update Wallet
      operationId: update_wallet
      parameters:
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
        name: wallet_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_PutWalletBodyParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletGet_'
  /v0/wallets/{wallet_id}/groups/{group_id}:
    put:
      tags:
      - wallets
      summary: Update Wallet Group
      operationId: update_wallet_group
      parameters:
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
        name: wallet_id
        in: path
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Group Id
          minimum: 0
        name: group_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_WalletsGroupsBodyParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletGroupGet_'
    post:
      tags:
      - wallets
      summary: Create Wallet Group
      operationId: create_wallet_group
      parameters:
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
        name: wallet_id
        in: path
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Group Id
          minimum: 0
        name: group_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_WalletsGroupsBodyParams'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletGroupGet_'
    delete:
      tags:
      - wallets
      summary: Delete Wallet Group
      operationId: delete_wallet_group
      parameters:
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
        name: wallet_id
        in: path
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Group Id
          minimum: 0
        name: group_id
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/wallets/{wallet_id}/groups:
    get:
      tags:
      - wallets
      summary: List Wallet Groups
      operationId: list_wallet_groups
      parameters:
      - required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
        name: wallet_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.wallets._groups_api.WalletGroupGet__'
components:
  schemas:
    AccessEnum:
      type: string
      enum:
      - ReadAndWrite
      - Invisible
      - ReadOnly
      title: AccessEnum
      description: An enumeration.
    AccessRights:
      properties:
        read:
          type: boolean
          title: Read
          description: gives read access
        write:
          type: boolean
          title: Write
          description: gives write access
        delete:
          type: boolean
          title: Delete
          description: gives deletion rights
      additionalProperties: false
      type: object
      required:
      - read
      - write
      - delete
      title: AccessRights
    Activity:
      properties:
        stats:
          $ref: '#/components/schemas/Stats'
        limits:
          $ref: '#/components/schemas/Limits'
        queued:
          type: boolean
          title: Queued
      type: object
      required:
      - stats
      - limits
      title: Activity
    AllUsersGroups:
      properties:
        me:
          $ref: '#/components/schemas/UsersGroup'
        organizations:
          items:
            $ref: '#/components/schemas/UsersGroup'
          type: array
          title: Organizations
        all:
          $ref: '#/components/schemas/UsersGroup'
        product:
          $ref: '#/components/schemas/UsersGroup'
      type: object
      title: AllUsersGroups
      example:
        me:
          gid: '27'
          label: A user
          description: A very special user
          accessRights:
            read: true
            write: true
            delete: true
        organizations:
        - gid: '15'
          label: ITIS Foundation
          description: The Foundation for Research on Information Technologies in
            Society
          accessRights:
            read: true
            write: false
            delete: false
        - gid: '16'
          label: Blue Fundation
          description: Some foundation
          accessRights:
            read: true
            write: false
            delete: false
        all:
          gid: '0'
          label: All
          description: Open to all users
          accessRights:
            read: true
            write: false
            delete: false
    Annotation:
      properties:
        type:
          type: string
          enum:
          - note
          - rect
          - text
          title: Type
        color:
          type: string
          format: color
          title: Color
        attributes:
          type: object
          title: Attributes
          description: svg attributes
      additionalProperties: false
      type: object
      required:
      - type
      - color
      - attributes
      title: Annotation
    Announcement:
      properties:
        id:
          type: string
          title: Id
        products:
          items:
            type: string
          type: array
          title: Products
        start:
          type: string
          format: date-time
          title: Start
        end:
          type: string
          format: date-time
          title: End
        title:
          type: string
          title: Title
        description:
          type: string
          title: Description
        link:
          type: string
          title: Link
        widgets:
          items:
            type: string
            enum:
            - login
            - ribbon
            - user-menu
          type: array
          title: Widgets
      type: object
      required:
      - id
      - products
      - start
      - end
      - title
      - description
      - link
      - widgets
      title: Announcement
    ApiKeyCreate:
      properties:
        display_name:
          type: string
          minLength: 3
          title: Display Name
        expiration:
          type: number
          format: time-delta
          title: Expiration
          description: Time delta from creation time to expiration. If None, then
            it does not expire.
      type: object
      required:
      - display_name
      title: ApiKeyCreate
    ApiKeyGet:
      properties:
        display_name:
          type: string
          minLength: 3
          title: Display Name
        api_key:
          type: string
          title: Api Key
        api_secret:
          type: string
          title: Api Secret
      type: object
      required:
      - display_name
      - api_key
      - api_secret
      title: ApiKeyGet
    AppStatusCheck:
      properties:
        app_name:
          type: string
          title: App Name
          description: Application name
        version:
          type: string
          title: Version
          description: Application's version
        services:
          type: object
          title: Services
          description: Other backend services connected from this service
          default: {}
        sessions:
          type: object
          title: Sessions
          description: Client sessions info. If single session per app, then is denoted
            as main
          default: {}
        url:
          type: string
          maxLength: 65536
          minLength: 1
          format: uri
          title: Url
          description: Link to current resource
        diagnostics_url:
          type: string
          maxLength: 65536
          minLength: 1
          format: uri
          title: Diagnostics Url
          description: Link to diagnostics report sub-resource. This MIGHT take some
            time to compute
      type: object
      required:
      - app_name
      - version
      title: AppStatusCheck
    Author:
      properties:
        name:
          type: string
          title: Name
          description: Name of the author
          example: Jim Knopf
        email:
          type: string
          format: email
          title: Email
          description: Email address
        affiliation:
          type: string
          title: Affiliation
          description: Affiliation of the author
      additionalProperties: false
      type: object
      required:
      - name
      - email
      title: Author
    Badge:
      properties:
        name:
          type: string
          title: Name
          description: Name of the subject
        image:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Image
          description: Url to the badge
        url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Url
          description: Link to the status
      additionalProperties: false
      type: object
      required:
      - name
      - image
      - url
      title: Badge
    Body_list_projects:
      properties:
        order_by:
          items:
            $ref: '#/components/schemas/ProjectOrderBy'
          type: array
          title: Order By
        filters:
          $ref: '#/components/schemas/ProjectListFilters'
      type: object
      title: Body_list_projects
    Body_service_submission:
      properties:
        _file:
          type: string
          format: binary
          title: ' File'
          description: metadata.json submission file
      type: object
      required:
      - _file
      title: Body_service_submission
    BootChoice:
      properties:
        label:
          type: string
          title: Label
        description:
          type: string
          title: Description
      type: object
      required:
      - label
      - description
      title: BootChoice
    BootMode:
      type: string
      enum:
      - CPU
      - GPU
      - MPI
      title: BootMode
      description: An enumeration.
    BootOption:
      properties:
        label:
          type: string
          title: Label
        description:
          type: string
          title: Description
        default:
          type: string
          title: Default
        items:
          additionalProperties:
            $ref: '#/components/schemas/BootChoice'
          type: object
          title: Items
      type: object
      required:
      - label
      - description
      - default
      - items
      title: BootOption
    ChangeEmailBody:
      properties:
        email:
          type: string
          format: email
          title: Email
      additionalProperties: false
      type: object
      required:
      - email
      title: ChangeEmailBody
    ChangePasswordBody:
      properties:
        current:
          type: string
          format: password
          title: Current
          writeOnly: true
        new:
          type: string
          format: password
          title: New
          writeOnly: true
        confirm:
          type: string
          format: password
          title: Confirm
          writeOnly: true
      additionalProperties: false
      type: object
      required:
      - current
      - new
      - confirm
      title: ChangePasswordBody
    CheckpointAnnotations:
      properties:
        tag:
          type: string
          title: Tag
        message:
          type: string
          title: Message
      type: object
      title: CheckpointAnnotations
    CheckpointApiModel:
      properties:
        id:
          type: integer
          exclusiveMinimum: true
          title: Id
          minimum: 0
        checksum:
          type: string
          pattern: ^[a-fA-F0-9]{40}$
          title: Checksum
        created_at:
          type: string
          format: date-time
          title: Created At
        tags:
          items:
            type: string
          type: array
          title: Tags
        message:
          type: string
          title: Message
        parents_ids:
          items:
            type: integer
            exclusiveMinimum: true
            minimum: 0
          type: array
          title: Parents Ids
        url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Url
      type: object
      required:
      - id
      - checksum
      - created_at
      - tags
      - url
      title: CheckpointApiModel
    CheckpointNew:
      properties:
        tag:
          type: string
          title: Tag
        message:
          type: string
          title: Message
      type: object
      required:
      - tag
      title: CheckpointNew
    ClusterAccessRights:
      properties:
        read:
          type: boolean
          title: Read
          description: allows to run pipelines on that cluster
        write:
          type: boolean
          title: Write
          description: allows to modify the cluster
        delete:
          type: boolean
          title: Delete
          description: allows to delete a cluster
      additionalProperties: false
      type: object
      required:
      - read
      - write
      - delete
      title: ClusterAccessRights
    ClusterCreate:
      properties:
        name:
          type: string
          title: Name
          description: The human readable name of the cluster
        description:
          type: string
          title: Description
        type:
          $ref: '#/components/schemas/ClusterTypeInModel'
        owner:
          type: integer
          exclusiveMinimum: true
          title: Owner
          minimum: 0
        thumbnail:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Thumbnail
          description: url to the image describing this cluster
        endpoint:
          type: string
          maxLength: 65536
          minLength: 1
          format: uri
          title: Endpoint
        authentication:
          anyOf:
          - $ref: '#/components/schemas/SimpleAuthentication'
          - $ref: '#/components/schemas/KerberosAuthentication'
          - $ref: '#/components/schemas/JupyterHubTokenAuthentication'
          title: Authentication
        accessRights:
          additionalProperties:
            $ref: '#/components/schemas/ClusterAccessRights'
          type: object
          title: Accessrights
      type: object
      required:
      - name
      - type
      - endpoint
      - authentication
      title: ClusterCreate
    ClusterDetails:
      properties:
        scheduler:
          allOf:
          - $ref: '#/components/schemas/Scheduler'
          title: Scheduler
          description: This contains dask scheduler information given by the underlying
            dask library
        dashboardLink:
          type: string
          maxLength: 65536
          minLength: 1
          format: uri
          title: Dashboardlink
          description: Link to this scheduler's dashboard
      type: object
      required:
      - scheduler
      - dashboardLink
      title: ClusterDetails
    ClusterGet:
      properties:
        name:
          type: string
          title: Name
          description: The human readable name of the cluster
        description:
          type: string
          title: Description
        type:
          $ref: '#/components/schemas/ClusterTypeInModel'
        owner:
          type: integer
          exclusiveMinimum: true
          title: Owner
          minimum: 0
        thumbnail:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Thumbnail
          description: url to the image describing this cluster
        endpoint:
          type: string
          maxLength: 65536
          minLength: 1
          format: uri
          title: Endpoint
        authentication:
          anyOf:
          - $ref: '#/components/schemas/SimpleAuthentication'
          - $ref: '#/components/schemas/KerberosAuthentication'
          - $ref: '#/components/schemas/JupyterHubTokenAuthentication'
          - $ref: '#/components/schemas/NoAuthentication'
          title: Authentication
          description: Dask gateway authentication
        accessRights:
          additionalProperties:
            $ref: '#/components/schemas/ClusterAccessRights'
          type: object
          title: Accessrights
        id:
          type: integer
          minimum: 0
          title: Id
          description: The cluster ID
      type: object
      required:
      - name
      - type
      - owner
      - endpoint
      - authentication
      - id
      title: ClusterGet
    ClusterPatch:
      properties:
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        type:
          $ref: '#/components/schemas/ClusterTypeInModel'
        owner:
          type: integer
          exclusiveMinimum: true
          title: Owner
          minimum: 0
        thumbnail:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Thumbnail
        endpoint:
          type: string
          maxLength: 65536
          minLength: 1
          format: uri
          title: Endpoint
        authentication:
          anyOf:
          - $ref: '#/components/schemas/SimpleAuthentication'
          - $ref: '#/components/schemas/KerberosAuthentication'
          - $ref: '#/components/schemas/JupyterHubTokenAuthentication'
          title: Authentication
        accessRights:
          additionalProperties:
            $ref: '#/components/schemas/ClusterAccessRights'
          type: object
          title: Accessrights
      type: object
      title: ClusterPatch
    ClusterPing:
      properties:
        endpoint:
          type: string
          maxLength: 65536
          minLength: 1
          format: uri
          title: Endpoint
        authentication:
          anyOf:
          - $ref: '#/components/schemas/SimpleAuthentication'
          - $ref: '#/components/schemas/KerberosAuthentication'
          - $ref: '#/components/schemas/JupyterHubTokenAuthentication'
          - $ref: '#/components/schemas/NoAuthentication'
          title: Authentication
          description: Dask gateway authentication
      type: object
      required:
      - endpoint
      - authentication
      title: ClusterPing
    ClusterTypeInModel:
      type: string
      enum:
      - AWS
      - ON_PREMISE
      title: ClusterTypeInModel
      description: An enumeration.
    CodePageParams:
      properties:
        message:
          type: string
          title: Message
        retry_2fa_after:
          type: integer
          exclusiveMinimum: true
          title: Retry 2Fa After
          minimum: 0
        next_url:
          type: string
          title: Next Url
      type: object
      required:
      - message
      title: CodePageParams
    ComputationTaskGet:
      properties:
        cluster_id:
          type: integer
          minimum: 0
          title: Cluster Id
      type: object
      title: ComputationTaskGet
    DatCoreFileLink:
      properties:
        store:
          type: integer
          title: Store
          description: 'The store identifier: 0 for simcore S3, 1 for datcore'
        path:
          anyOf:
          - type: string
            pattern: ^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$
          - type: string
            pattern: ^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$
          title: Path
          description: The path to the file in the storage provider domain
        label:
          type: string
          title: Label
          description: The real file name
        eTag:
          type: string
          title: Etag
          description: Entity tag that uniquely represents the file. The method to
            generate the tag is not specified (black box).
        dataset:
          type: string
          title: Dataset
          description: Unique identifier to access the dataset on datcore (REQUIRED
            for datcore)
      additionalProperties: false
      type: object
      required:
      - store
      - path
      - label
      - dataset
      title: DatCoreFileLink
      description: I/O port type to hold a link to a file in DATCORE storage
    DatasetMetaData:
      properties:
        dataset_id:
          type: string
          title: Dataset Id
        display_name:
          type: string
          title: Display Name
      type: object
      title: DatasetMetaData
      example:
        dataset_id: N:id-aaaa
        display_name: simcore-testing
    DictModel_str__PositiveFloat_:
      additionalProperties:
        type: number
        exclusiveMinimum: true
        minimum: 0.0
      type: object
      title: DictModel[str, PositiveFloat]
    DownloadLink:
      properties:
        downloadLink:
          type: string
          maxLength: 65536
          minLength: 1
          format: uri
          title: Downloadlink
        label:
          type: string
          title: Label
          description: Display name
      additionalProperties: false
      type: object
      required:
      - downloadLink
      title: DownloadLink
      description: I/O port type to hold a generic download link to a file (e.g. S3
        pre-signed link, etc)
    EmptyModel:
      properties: {}
      additionalProperties: false
      type: object
      title: EmptyModel
    Envelope_AllUsersGroups_:
      properties:
        data:
          $ref: '#/components/schemas/AllUsersGroups'
        error:
          title: Error
      type: object
      title: Envelope[AllUsersGroups]
    Envelope_AnyUrl_:
      properties:
        data:
          type: string
          maxLength: 65536
          minLength: 1
          format: uri
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[AnyUrl]
    Envelope_AppStatusCheck_:
      properties:
        data:
          $ref: '#/components/schemas/AppStatusCheck'
        error:
          title: Error
      type: object
      title: Envelope[AppStatusCheck]
    Envelope_CheckpointApiModel_:
      properties:
        data:
          $ref: '#/components/schemas/CheckpointApiModel'
        error:
          title: Error
      type: object
      title: Envelope[CheckpointApiModel]
    Envelope_ClusterDetails_:
      properties:
        data:
          $ref: '#/components/schemas/ClusterDetails'
        error:
          title: Error
      type: object
      title: Envelope[ClusterDetails]
    Envelope_ClusterGet_:
      properties:
        data:
          $ref: '#/components/schemas/ClusterGet'
        error:
          title: Error
      type: object
      title: Envelope[ClusterGet]
    Envelope_ComputationTaskGet_:
      properties:
        data:
          $ref: '#/components/schemas/ComputationTaskGet'
        error:
          title: Error
      type: object
      title: Envelope[ComputationTaskGet]
    Envelope_Error_:
      properties:
        data:
          $ref: '#/components/schemas/Error'
        error:
          title: Error
      type: object
      title: Envelope[Error]
    Envelope_FileMetaDataGet_:
      properties:
        data:
          $ref: '#/components/schemas/FileMetaDataGet'
        error:
          title: Error
      type: object
      title: Envelope[FileMetaDataGet]
    Envelope_FileUploadCompleteFutureResponse_:
      properties:
        data:
          $ref: '#/components/schemas/FileUploadCompleteFutureResponse'
        error:
          title: Error
      type: object
      title: Envelope[FileUploadCompleteFutureResponse]
    Envelope_FileUploadCompleteResponse_:
      properties:
        data:
          $ref: '#/components/schemas/FileUploadCompleteResponse'
        error:
          title: Error
      type: object
      title: Envelope[FileUploadCompleteResponse]
    Envelope_FileUploadCompletionBody_:
      properties:
        data:
          $ref: '#/components/schemas/FileUploadCompletionBody'
        error:
          title: Error
      type: object
      title: Envelope[FileUploadCompletionBody]
    Envelope_FileUploadSchema_:
      properties:
        data:
          $ref: '#/components/schemas/FileUploadSchema'
        error:
          title: Error
      type: object
      title: Envelope[FileUploadSchema]
    Envelope_GroupUserGet_:
      properties:
        data:
          $ref: '#/components/schemas/GroupUserGet'
        error:
          title: Error
      type: object
      title: Envelope[GroupUserGet]
    Envelope_HealthInfoDict_:
      properties:
        data:
          $ref: '#/components/schemas/HealthInfoDict'
        error:
          title: Error
      type: object
      title: Envelope[HealthInfoDict]
    Envelope_InvitationInfo_:
      properties:
        data:
          $ref: '#/components/schemas/InvitationInfo'
        error:
          title: Error
      type: object
      title: Envelope[InvitationInfo]
    Envelope_Log_:
      properties:
        data:
          $ref: '#/components/schemas/Log'
        error:
          title: Error
      type: object
      title: Envelope[Log]
    Envelope_LoginNextPage_:
      properties:
        data:
          $ref: '#/components/schemas/LoginNextPage'
        error:
          title: Error
      type: object
      title: Envelope[LoginNextPage]
    Envelope_NodeCreated_:
      properties:
        data:
          $ref: '#/components/schemas/NodeCreated'
        error:
          title: Error
      type: object
      title: Envelope[NodeCreated]
    Envelope_NodeRetrieved_:
      properties:
        data:
          $ref: '#/components/schemas/NodeRetrieved'
        error:
          title: Error
      type: object
      title: Envelope[NodeRetrieved]
    Envelope_PresignedLink_:
      properties:
        data:
          $ref: '#/components/schemas/PresignedLink'
        error:
          title: Error
      type: object
      title: Envelope[PresignedLink]
    Envelope_ProfileGet_:
      properties:
        data:
          $ref: '#/components/schemas/ProfileGet'
        error:
          title: Error
      type: object
      title: Envelope[ProfileGet]
    Envelope_ProjectGet_:
      properties:
        data:
          $ref: '#/components/schemas/ProjectGet'
        error:
          title: Error
      type: object
      title: Envelope[ProjectGet]
    Envelope_ProjectMetadataGet_:
      properties:
        data:
          $ref: '#/components/schemas/ProjectMetadataGet'
        error:
          title: Error
      type: object
      title: Envelope[ProjectMetadataGet]
    Envelope_ProjectState_:
      properties:
        data:
          $ref: '#/components/schemas/ProjectState'
        error:
          title: Error
      type: object
      title: Envelope[ProjectState]
    Envelope_ProjectsCommentsAPI_:
      properties:
        data:
          $ref: '#/components/schemas/ProjectsCommentsAPI'
        error:
          title: Error
      type: object
      title: Envelope[ProjectsCommentsAPI]
    Envelope_RegisterPhoneNextPage_:
      properties:
        data:
          $ref: '#/components/schemas/RegisterPhoneNextPage'
        error:
          title: Error
      type: object
      title: Envelope[RegisterPhoneNextPage]
    Envelope_ResearchResource_:
      properties:
        data:
          $ref: '#/components/schemas/ResearchResource'
        error:
          title: Error
      type: object
      title: Envelope[ResearchResource]
    Envelope_ServiceGet_:
      properties:
        data:
          $ref: '#/components/schemas/models_library__api_schemas_webserver__catalog__ServiceGet'
        error:
          title: Error
      type: object
      title: Envelope[ServiceGet]
    Envelope_ServiceInputGet_:
      properties:
        data:
          $ref: '#/components/schemas/ServiceInputGet'
        error:
          title: Error
      type: object
      title: Envelope[ServiceInputGet]
    Envelope_StatusDiagnosticsGet_:
      properties:
        data:
          $ref: '#/components/schemas/StatusDiagnosticsGet'
        error:
          title: Error
      type: object
      title: Envelope[StatusDiagnosticsGet]
    Envelope_TableSynchronisation_:
      properties:
        data:
          $ref: '#/components/schemas/TableSynchronisation'
        error:
          title: Error
      type: object
      title: Envelope[TableSynchronisation]
    Envelope_TagGet_:
      properties:
        data:
          $ref: '#/components/schemas/TagGet'
        error:
          title: Error
      type: object
      title: Envelope[TagGet]
    Envelope_TaskGet_:
      properties:
        data:
          $ref: '#/components/schemas/TaskGet'
        error:
          title: Error
      type: object
      title: Envelope[TaskGet]
    Envelope_TaskStatus_:
      properties:
        data:
          $ref: '#/components/schemas/TaskStatus'
        error:
          title: Error
      type: object
      title: Envelope[TaskStatus]
    Envelope_Token_:
      properties:
        data:
          $ref: '#/components/schemas/Token'
        error:
          title: Error
      type: object
      title: Envelope[Token]
    Envelope_Union_NodeGet__NodeGetIdle__:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/NodeGet'
          - $ref: '#/components/schemas/NodeGetIdle'
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[Union[NodeGet, NodeGetIdle]]
    Envelope_Union_TestFailed__TestPassed__:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/TestFailed'
          - $ref: '#/components/schemas/TestPassed'
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[Union[TestFailed, TestPassed]]
    Envelope_Union_WalletGet__NoneType__:
      properties:
        data:
          $ref: '#/components/schemas/WalletGet'
        error:
          title: Error
      type: object
      title: Envelope[Union[WalletGet, NoneType]]
    Envelope_UsersGroup_:
      properties:
        data:
          $ref: '#/components/schemas/UsersGroup'
        error:
          title: Error
      type: object
      title: Envelope[UsersGroup]
    Envelope_WalletGet_:
      properties:
        data:
          $ref: '#/components/schemas/WalletGet'
        error:
          title: Error
      type: object
      title: Envelope[WalletGet]
    Envelope_WalletGroupGet_:
      properties:
        data:
          $ref: '#/components/schemas/WalletGroupGet'
        error:
          title: Error
      type: object
      title: Envelope[WalletGroupGet]
    Envelope_WorkbenchViewApiModel_:
      properties:
        data:
          $ref: '#/components/schemas/WorkbenchViewApiModel'
        error:
          title: Error
      type: object
      title: Envelope[WorkbenchViewApiModel]
    Envelope__ComputationStarted_:
      properties:
        data:
          $ref: '#/components/schemas/_ComputationStarted'
        error:
          title: Error
      type: object
      title: Envelope[_ComputationStarted]
    Envelope__ProjectGroupAccess_:
      properties:
        data:
          $ref: '#/components/schemas/_ProjectGroupAccess'
        error:
          title: Error
      type: object
      title: Envelope[_ProjectGroupAccess]
    Envelope__ProjectNodePreview_:
      properties:
        data:
          $ref: '#/components/schemas/_ProjectNodePreview'
        error:
          title: Error
      type: object
      title: Envelope[_ProjectNodePreview]
    Envelope_dict_Literal__comment_id____pydantic.types.PositiveInt__:
      properties:
        data:
          additionalProperties:
            type: integer
            exclusiveMinimum: true
            minimum: 0
          type: object
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[dict[Literal['comment_id'], pydantic.types.PositiveInt]]
    Envelope_dict_models_library.docker.DockerGenericTag__models_library.services_resources.ImageResources__:
      properties:
        data:
          type: object
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[dict[models_library.docker.DockerGenericTag, models_library.services_resources.ImageResources]]
    Envelope_dict_str__Any__:
      properties:
        data:
          type: object
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[dict[str, Any]]
    Envelope_dict_uuid.UUID__models_library.api_schemas_webserver.activity.Activity__:
      properties:
        data:
          additionalProperties:
            $ref: '#/components/schemas/Activity'
          type: object
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[dict[uuid.UUID, models_library.api_schemas_webserver.activity.Activity]]
    Envelope_dict_uuid.UUID__simcore_service_webserver.projects._ports_handlers.ProjectInputGet__:
      properties:
        data:
          additionalProperties:
            $ref: '#/components/schemas/ProjectInputGet'
          type: object
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[dict[uuid.UUID, simcore_service_webserver.projects._ports_handlers.ProjectInputGet]]
    Envelope_dict_uuid.UUID__simcore_service_webserver.projects._ports_handlers.ProjectOutputGet__:
      properties:
        data:
          additionalProperties:
            $ref: '#/components/schemas/ProjectOutputGet'
          type: object
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[dict[uuid.UUID, simcore_service_webserver.projects._ports_handlers.ProjectOutputGet]]
    Envelope_list_models_library.api_schemas_long_running_tasks.tasks.TaskGet__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/TaskGet'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[models_library.api_schemas_long_running_tasks.tasks.TaskGet]]
    Envelope_list_models_library.api_schemas_storage.FileMetaDataGet__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/FileMetaDataGet'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[models_library.api_schemas_storage.FileMetaDataGet]]
    Envelope_list_models_library.api_schemas_webserver.catalog.ServiceGet__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/models_library__api_schemas_webserver__catalog__ServiceGet'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[models_library.api_schemas_webserver.catalog.ServiceGet]]
    Envelope_list_models_library.api_schemas_webserver.catalog.ServiceInputGet__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServiceInputGet'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[models_library.api_schemas_webserver.catalog.ServiceInputGet]]
    Envelope_list_models_library.api_schemas_webserver.catalog.ServiceOutputGet__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServiceOutputGet'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[models_library.api_schemas_webserver.catalog.ServiceOutputGet]]
    Envelope_list_models_library.api_schemas_webserver.clusters.ClusterGet__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ClusterGet'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[models_library.api_schemas_webserver.clusters.ClusterGet]]
    Envelope_list_models_library.api_schemas_webserver.groups.GroupUserGet__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/GroupUserGet'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[models_library.api_schemas_webserver.groups.GroupUserGet]]
    Envelope_list_models_library.api_schemas_webserver.resource_usage.ServiceRunGet__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServiceRunGet'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[models_library.api_schemas_webserver.resource_usage.ServiceRunGet]]
    Envelope_list_models_library.api_schemas_webserver.wallets.WalletGetWithAvailableCredits__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/WalletGetWithAvailableCredits'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[models_library.api_schemas_webserver.wallets.WalletGetWithAvailableCredits]]
    Envelope_list_models_library.projects_comments.ProjectsCommentsAPI__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProjectsCommentsAPI'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[models_library.projects_comments.ProjectsCommentsAPI]]
    Envelope_list_models_library.services.ServicePortKey__:
      properties:
        data:
          items:
            type: string
            pattern: ^[-_a-zA-Z0-9]+$
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[models_library.services.ServicePortKey]]
    Envelope_list_simcore_service_webserver.announcements._models.Announcement__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Announcement'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[simcore_service_webserver.announcements._models.Announcement]]
    Envelope_list_simcore_service_webserver.projects._nodes_handlers._ProjectNodePreview__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/_ProjectNodePreview'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[simcore_service_webserver.projects._nodes_handlers._ProjectNodePreview]]
    Envelope_list_simcore_service_webserver.projects._ports_handlers.ProjectMetadataPortGet__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ProjectMetadataPortGet'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[simcore_service_webserver.projects._ports_handlers.ProjectMetadataPortGet]]
    Envelope_list_simcore_service_webserver.scicrunch.models.ResourceHit__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ResourceHit'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[simcore_service_webserver.scicrunch.models.ResourceHit]]
    Envelope_list_simcore_service_webserver.storage.schemas.DatasetMetaData__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/DatasetMetaData'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[simcore_service_webserver.storage.schemas.DatasetMetaData]]
    Envelope_list_simcore_service_webserver.studies_dispatcher._rest_handlers.ServiceGet__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/simcore_service_webserver__studies_dispatcher___rest_handlers__ServiceGet'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[simcore_service_webserver.studies_dispatcher._rest_handlers.ServiceGet]]
    Envelope_list_simcore_service_webserver.studies_dispatcher._rest_handlers.Viewer__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Viewer'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[simcore_service_webserver.studies_dispatcher._rest_handlers.Viewer]]
    Envelope_list_simcore_service_webserver.tags._handlers.TagGet__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/TagGet'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[simcore_service_webserver.tags._handlers.TagGet]]
    Envelope_list_simcore_service_webserver.users._notifications.UserNotification__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/UserNotification'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[simcore_service_webserver.users._notifications.UserNotification]]
    Envelope_list_simcore_service_webserver.users.schemas.PermissionGet__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/PermissionGet'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[simcore_service_webserver.users.schemas.PermissionGet]]
    Envelope_list_simcore_service_webserver.users.schemas.Token__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/Token'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[simcore_service_webserver.users.schemas.Token]]
    Envelope_list_simcore_service_webserver.wallets._groups_api.WalletGroupGet__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/WalletGroupGet'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[simcore_service_webserver.wallets._groups_api.WalletGroupGet]]
    Envelope_str_:
      properties:
        data:
          type: string
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[str]
    Error:
      properties:
        logs:
          items:
            $ref: '#/components/schemas/Log'
          type: array
          title: Logs
          description: log messages
        errors:
          items:
            $ref: '#/components/schemas/ErrorItem'
          type: array
          title: Errors
          description: errors metadata
        status:
          type: integer
          title: Status
          description: HTTP error code
      type: object
      title: Error
    ErrorItem:
      properties:
        code:
          type: string
          title: Code
          description: Typically the name of the exception that produced it otherwise
            some known error code
        message:
          type: string
          title: Message
          description: Error message specific to this item
        resource:
          type: string
          title: Resource
          description: API resource affected by this error
        field:
          type: string
          title: Field
          description: Specific field within the resource
      type: object
      required:
      - code
      - message
      title: ErrorItem
    ExtractedResults:
      properties:
        progress:
          type: object
          title: Progress
          description: Progress in each computational node
        labels:
          type: object
          title: Labels
          description: Maps captured node with a label
        values:
          type: object
          title: Values
          description: Captured outputs per node
      type: object
      required:
      - progress
      - labels
      - values
      title: ExtractedResults
      example:
        progress:
          4c08265a-427b-4ac3-9eab-1d11c822ada4: 0
          e33c6880-1b1d-4419-82d7-270197738aa9: 100
        labels:
          0f1e38c9-dcb7-443c-a745-91b97ac28ccc: Integer iterator
          2d0ce8b9-c9c3-43ce-ad2f-ad493898de37: Probe Sensor - Integer
          445b44d1-59b3-425c-ac48-7c13e0f2ea5b: Probe Sensor - Integer_2
          d76fca06-f050-4790-88a8-0aac10c87b39: Boolean Parameter
        values:
          0f1e38c9-dcb7-443c-a745-91b97ac28ccc:
            out_1: 1
            out_2:
            - 3
            - 4
          2d0ce8b9-c9c3-43ce-ad2f-ad493898de37:
            in_1: 7
          445b44d1-59b3-425c-ac48-7c13e0f2ea5b:
            in_1: 1
          d76fca06-f050-4790-88a8-0aac10c87b39:
            out_1: true
    FileMetaData:
      properties:
        file_uuid:
          type: string
          title: File Uuid
        location_id:
          type: string
          title: Location Id
        project_name:
          type: string
          title: Project Name
        node_name:
          type: string
          title: Node Name
        file_name:
          type: string
          title: File Name
        file_id:
          type: string
          title: File Id
        created_at:
          type: string
          title: Created At
        last_modified:
          type: string
          title: Last Modified
        file_size:
          type: integer
          title: File Size
        entity_tag:
          type: string
          title: Entity Tag
        is_directory:
          type: boolean
          title: Is Directory
      type: object
      title: FileMetaData
      example:
        file_uuid: simcore-testing/105/1000/3
        location_id: '0'
        project_name: futurology
        node_name: alpha
        file_name: example.txt
        file_id: N:package:e263da07-2d89-45a6-8b0f-61061b913873
        created_at: '2019-06-19T12:29:03.308611Z'
        last_modified: '2019-06-19T12:29:03.78852Z'
        file_size: 73
        entity_tag: a87ff679a2f3e71d9181a67b7542122c
        is_directory: false
    FileMetaDataGet:
      properties:
        file_uuid:
          type: string
          title: File Uuid
          description: NOT a unique ID, like (api|uuid)/uuid/file_name or DATCORE
            folder structure
        location_id:
          type: integer
          title: Location Id
          description: Storage location
        project_name:
          type: string
          title: Project Name
          description: optional project name, used by frontend to display path
        node_name:
          type: string
          title: Node Name
          description: optional node name, used by frontend to display path
        file_name:
          type: string
          title: File Name
          description: Display name for a file
        file_id:
          anyOf:
          - type: string
            pattern: ^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$
          - type: string
            pattern: ^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$
          title: File Id
          description: THIS IS the unique ID for the file. either (api|project_id)/node_id/file_name.ext
            for S3 and N:package:UUID for datcore
        created_at:
          type: string
          format: date-time
          title: Created At
        last_modified:
          type: string
          format: date-time
          title: Last Modified
        file_size:
          anyOf:
          - type: integer
          - type: integer
          title: File Size
          description: File size in bytes (-1 means invalid)
          default: -1
        entity_tag:
          type: string
          title: Entity Tag
          description: Entity tag (or ETag), represents a specific version of the
            file, None if invalid upload or datcore
        is_soft_link:
          type: boolean
          title: Is Soft Link
          description: If true, this file is a soft link.i.e. is another entry with
            the same object_name
          default: false
        is_directory:
          type: boolean
          title: Is Directory
          description: if True this is a directory
          default: false
      additionalProperties: false
      type: object
      required:
      - file_uuid
      - location_id
      - file_name
      - file_id
      - created_at
      - last_modified
      title: FileMetaDataGet
    FileUploadCompleteFutureResponse:
      properties:
        state:
          $ref: '#/components/schemas/FileUploadCompleteState'
        e_tag:
          type: string
          title: E Tag
      type: object
      required:
      - state
      title: FileUploadCompleteFutureResponse
    FileUploadCompleteLinks:
      properties:
        state:
          type: string
          maxLength: 65536
          minLength: 1
          format: uri
          title: State
      type: object
      required:
      - state
      title: FileUploadCompleteLinks
    FileUploadCompleteResponse:
      properties:
        links:
          $ref: '#/components/schemas/FileUploadCompleteLinks'
      type: object
      required:
      - links
      title: FileUploadCompleteResponse
    FileUploadCompleteState:
      enum:
      - ok
      - nok
      title: FileUploadCompleteState
      description: An enumeration.
    FileUploadCompletionBody:
      properties:
        parts:
          items:
            $ref: '#/components/schemas/UploadedPart'
          type: array
          title: Parts
      type: object
      required:
      - parts
      title: FileUploadCompletionBody
    FileUploadLinks:
      properties:
        abort_upload:
          type: string
          maxLength: 65536
          minLength: 1
          format: uri
          title: Abort Upload
        complete_upload:
          type: string
          maxLength: 65536
          minLength: 1
          format: uri
          title: Complete Upload
      type: object
      required:
      - abort_upload
      - complete_upload
      title: FileUploadLinks
    FileUploadSchema:
      properties:
        chunk_size:
          type: integer
          title: Chunk Size
        urls:
          items:
            type: string
            maxLength: 65536
            minLength: 1
            format: uri
          type: array
          title: Urls
        links:
          $ref: '#/components/schemas/FileUploadLinks'
      type: object
      required:
      - chunk_size
      - urls
      - links
      title: FileUploadSchema
    GroupAccessRights:
      properties:
        read:
          type: boolean
          title: Read
        write:
          type: boolean
          title: Write
        delete:
          type: boolean
          title: Delete
      type: object
      required:
      - read
      - write
      - delete
      title: GroupAccessRights
      description: defines acesss rights for the user
    GroupUserGet:
      properties:
        id:
          type: string
          title: Id
          description: the user id
        login:
          type: string
          format: email
          title: Login
          description: the user login email
        first_name:
          type: string
          title: First Name
          description: the user first name
        last_name:
          type: string
          title: Last Name
          description: the user last name
        gravatar_id:
          type: string
          title: Gravatar Id
          description: the user gravatar id hash
        gid:
          type: string
          title: Gid
          description: the user primary gid
        accessRights:
          $ref: '#/components/schemas/GroupAccessRights'
      type: object
      required:
      - accessRights
      title: GroupUserGet
      example:
        id: '1'
        login: mr.smith@matrix.com
        first_name: Mr
        last_name: Smith
        gravatar_id: a1af5c6ecc38e81f29695f01d6ceb540
        gid: '3'
        accessRights:
          read: true
          write: false
          delete: false
    HealthInfoDict:
      properties:
        name:
          type: string
          title: Name
        version:
          type: string
          title: Version
        api_version:
          type: string
          title: Api Version
      type: object
      required:
      - name
      - version
      - api_version
      title: HealthInfoDict
    ImageResources:
      properties:
        image:
          type: string
          pattern: ^(?:([a-z0-9-]+(?:\.[a-z0-9-]+)+(?::\d+)?|[a-z0-9-]+:\d+)/)?((?:[a-z0-9][a-z0-9_.-]*/)*[a-z0-9-_]+[a-z0-9])(?::([\w][\w.-]{0,127}))?(\@sha256:[a-fA-F0-9]{32,64})?$
          title: Image
          description: Used by the frontend to provide a context for the users.Services
            with a docker-compose spec will have multiple entries.Using the `image:version`
            instead of the docker-compose spec is more helpful for the end user.
        resources:
          additionalProperties:
            $ref: '#/components/schemas/ResourceValue'
          type: object
          title: Resources
        boot_modes:
          items:
            $ref: '#/components/schemas/BootMode'
          type: array
          description: describe how a service shall be booted, using CPU, MPI, openMP
            or GPU
          default:
          - CPU
      type: object
      required:
      - image
      - resources
      title: ImageResources
      example:
        image: simcore/service/dynamic/pretty-intense:1.0.0
        resources:
          CPU:
            limit: 4
            reservation: 0.1
          RAM:
            limit: 103079215104
            reservation: 536870912
          VRAM:
            limit: 1
            reservation: 1
          AIRAM:
            limit: 1
            reservation: 1
          ANY_resource:
            limit: some_value
            reservation: some_value
    InvitationCheck:
      properties:
        invitation:
          type: string
          title: Invitation
          description: Invitation code
      additionalProperties: false
      type: object
      required:
      - invitation
      title: InvitationCheck
    InvitationInfo:
      properties:
        email:
          type: string
          format: email
          title: Email
          description: Email associated to invitation or None
      additionalProperties: false
      type: object
      title: InvitationInfo
    JupyterHubTokenAuthentication:
      properties:
        type:
          type: string
          enum:
          - jupyterhub
          title: Type
          default: jupyterhub
        api_token:
          type: string
          title: Api Token
      additionalProperties: false
      type: object
      required:
      - api_token
      title: JupyterHubTokenAuthentication
    KerberosAuthentication:
      properties:
        type:
          type: string
          enum:
          - kerberos
          title: Type
          default: kerberos
      additionalProperties: false
      type: object
      title: KerberosAuthentication
    Limits:
      properties:
        cpus:
          type: number
          exclusiveMinimum: true
          title: Cpus
          minimum: 0.0
        mem:
          type: number
          exclusiveMinimum: true
          title: Mem
          minimum: 0.0
      type: object
      required:
      - cpus
      - mem
      title: Limits
    LinkType:
      type: string
      enum:
      - PRESIGNED
      - S3
      title: LinkType
      description: An enumeration.
    Log:
      properties:
        level:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          description: log level
          default: INFO
        message:
          type: string
          title: Message
          description: log message. If logger is USER, then it MUST be human readable
        logger:
          type: string
          title: Logger
          description: name of the logger receiving this message
      type: object
      required:
      - message
      title: Log
      example:
        message: Hi there, Mr user
        level: INFO
        logger: user-logger
    LogLevel:
      type: string
      enum:
      - DEBUG
      - INFO
      - WARNING
      - ERROR
      title: LogLevel
      description: An enumeration.
    LoginBody:
      properties:
        email:
          type: string
          format: email
          title: Email
        password:
          type: string
          format: password
          title: Password
          writeOnly: true
      additionalProperties: false
      type: object
      required:
      - email
      - password
      title: LoginBody
    LoginNextPage:
      properties:
        name:
          type: string
          title: Name
          description: Code name to the front-end page. Ideally a PageStr
        parameters:
          $ref: '#/components/schemas/CodePageParams'
        code:
          type: string
          title: Code
          deprecated: true
        reason:
          type: string
          title: Reason
          deprecated: true
      type: object
      required:
      - name
      - code
      - reason
      title: LoginNextPage
      description: 'This is the body of a 2XX response to pass the front-end

        what kind of page shall be display next and some information about it


        An analogous structure is used in the redirects (see create_redirect_response)
        but

        using a path+query in the fragment of the URL'
    LoginTwoFactorAuthBody:
      properties:
        email:
          type: string
          format: email
          title: Email
        code:
          type: string
          format: password
          title: Code
          writeOnly: true
      additionalProperties: false
      type: object
      required:
      - email
      - code
      title: LoginTwoFactorAuthBody
    LogoutBody:
      properties:
        client_session_id:
          type: string
          title: Client Session Id
          example: 5ac57685-c40f-448f-8711-70be1936fd63
      additionalProperties: false
      type: object
      title: LogoutBody
    Marker:
      properties:
        color:
          type: string
          format: color
          title: Color
      additionalProperties: false
      type: object
      required:
      - color
      title: Marker
    NoAuthentication:
      properties:
        type:
          type: string
          enum:
          - none
          title: Type
          default: none
      additionalProperties: false
      type: object
      title: NoAuthentication
    Node:
      properties:
        key:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Key
          description: distinctive name for the node based on the docker registry
            path
        version:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Version
          description: semantic version number of the node
        label:
          type: string
          title: Label
          description: The short name of the node
        progress:
          type: number
          maximum: 100.0
          minimum: 0.0
          title: Progress
          description: the node progress value (deprecated in DB, still used for API
            only)
          deprecated: true
        thumbnail:
          type: string
          maxLength: 2083
          minLength: 0
          format: uri
          title: Thumbnail
          description: url of the latest screenshot of the node
        runHash:
          type: string
          title: Runhash
          description: the hex digest of the resolved inputs +outputs hash at the
            time when the last outputs were generated
          nullable: true
        inputs:
          type: object
          title: Inputs
          description: values of input properties
        inputsUnits:
          type: object
          title: Inputsunits
          description: Overrides default unit (if any) defined in the service for
            each port
        inputAccess:
          type: object
          description: map with key - access level pairs
        inputNodes:
          items:
            type: string
            format: uuid
          type: array
          title: Inputnodes
          description: node IDs of where the node is connected to
        outputs:
          type: object
          title: Outputs
          description: values of output properties
        outputNode:
          type: boolean
          title: Outputnode
          deprecated: true
        outputNodes:
          items:
            type: string
            format: uuid
          type: array
          title: Outputnodes
          description: Used in group-nodes. Node IDs of those connected to the output
        parent:
          type: string
          format: uuid
          title: Parent
          description: Parent's (group-nodes') node ID s. Used to group
          nullable: true
        position:
          allOf:
          - $ref: '#/components/schemas/Position'
          title: Position
          description: Use projects_ui.WorkbenchUI.position instead
          deprecated: true
        state:
          allOf:
          - $ref: '#/components/schemas/NodeState'
          title: State
          description: The node's state object
        bootOptions:
          type: object
          title: Bootoptions
          description: Some services provide alternative parameters to be injected
            at boot time. The user selection should be stored here, and it will overwrite
            the services's defaults.
      additionalProperties: false
      type: object
      required:
      - key
      - version
      - label
      title: Node
    NodeCreate:
      properties:
        service_key:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
        service_version:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
        service_id:
          type: string
          title: Service Id
      type: object
      required:
      - service_key
      - service_version
      title: NodeCreate
    NodeCreated:
      properties:
        nodeId:
          type: string
          format: uuid
          title: Nodeid
      type: object
      required:
      - nodeId
      title: NodeCreated
    NodeGet:
      properties:
        publishedPort:
          type: integer
          exclusiveMaximum: true
          exclusiveMinimum: true
          title: Publishedport
          description: The ports where the service provides its interface
          maximum: 65535
          minimum: 0
        entryPoint:
          type: string
          title: Entrypoint
          description: The entry point where the service provides its interface if
            specified
        serviceUuid:
          type: string
          title: Serviceuuid
          description: The UUID attached to this service
        serviceKey:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Servicekey
          description: distinctive name for the node based on the docker registry
            path
          example:
          - simcore/services/comp/itis/sleeper
          - simcore/services/dynamic/3dviewer
        serviceVersion:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Serviceversion
          description: semantic version number
          example:
          - 1.0.0
          - 0.0.1
        serviceHost:
          type: string
          title: Servicehost
          description: service host name within the network
        servicePort:
          type: integer
          exclusiveMaximum: true
          exclusiveMinimum: true
          title: Serviceport
          description: port to access the service within the network
          maximum: 65535
          minimum: 0
        serviceBasepath:
          type: string
          title: Servicebasepath
          description: different base path where current service is mounted otherwise
            defaults to root
          default: ''
        serviceState:
          allOf:
          - $ref: '#/components/schemas/ServiceState'
          description: 'the service state * ''pending'' - The service is waiting for
            resources to start * ''pulling'' - The service is being pulled from the
            registry * ''starting'' - The service is starting * ''running'' - The
            service is running * ''complete'' - The service completed * ''failed''
            - The service failed to start

            '
        serviceMessage:
          type: string
          title: Servicemessage
          description: the service message
        userId:
          type: string
          title: Userid
          description: the user that started the service
      type: object
      required:
      - publishedPort
      - serviceUuid
      - serviceKey
      - serviceVersion
      - serviceHost
      - servicePort
      - serviceState
      - userId
      title: NodeGet
      example:
        published_port: 30000
        entrypoint: /the/entry/point/is/here
        service_uuid: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        service_key: simcore/services/comp/itis/sleeper
        service_version: 1.2.3
        service_host: jupyter_E1O2E-LAH
        service_port: 8081
        service_basepath: /x/E1O2E-LAH
        service_state: pending
        service_message: no suitable node (insufficient resources on 1 node)
        user_id: 123
    NodeGetIdle:
      properties:
        serviceState:
          type: string
          enum:
          - idle
          title: Servicestate
        serviceUuid:
          type: string
          format: uuid
          title: Serviceuuid
      type: object
      required:
      - serviceState
      - serviceUuid
      title: NodeGetIdle
    NodeRetrieve:
      properties:
        port_keys:
          items:
            type: string
            pattern: ^[-_a-zA-Z0-9]+$
          type: array
          title: Port Keys
          default: []
      type: object
      title: NodeRetrieve
    NodeRetrieved:
      properties:
        sizeBytes:
          type: integer
          title: Sizebytes
          description: The amount of data transferred by the retrieve call
      type: object
      required:
      - sizeBytes
      title: NodeRetrieved
    NodeScreenshot:
      properties:
        thumbnail_url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Thumbnail Url
        file_url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: File Url
        mimetype:
          type: string
          title: Mimetype
          description: File's media type or None if unknown. SEE https://www.iana.org/assignments/media-types/media-types.xhtml
          example: image/jpeg
      type: object
      required:
      - thumbnail_url
      - file_url
      title: NodeScreenshot
    NodeState:
      properties:
        modified:
          type: boolean
          title: Modified
          description: true if the node's outputs need to be re-computed
          default: true
        dependencies:
          items:
            type: string
            format: uuid
          type: array
          uniqueItems: true
          title: Dependencies
          description: contains the node inputs dependencies if they need to be computed
            first
        currentStatus:
          allOf:
          - $ref: '#/components/schemas/RunningState'
          description: the node's current state
          default: NOT_STARTED
        progress:
          type: number
          maximum: 1.0
          minimum: 0.0
          title: Progress
          description: current progress of the task if available (None if not started
            or not a computational task)
          default: 0
      additionalProperties: false
      type: object
      title: NodeState
    NotificationCategory:
      type: string
      enum:
      - NEW_ORGANIZATION
      - STUDY_SHARED
      - TEMPLATE_SHARED
      - ANNOTATION_NOTE
      title: NotificationCategory
      description: An enumeration.
    OrderDirection:
      type: string
      enum:
      - asc
      - desc
      title: OrderDirection
      description: An enumeration.
    Owner:
      properties:
        user_id:
          type: integer
          title: User Id
          description: Owner's identifier when registered in the user's database table
        first_name:
          type: string
          title: First Name
          description: Owner first name
        last_name:
          type: string
          title: Last Name
          description: Owner last name
      additionalProperties: false
      type: object
      required:
      - user_id
      - first_name
      - last_name
      title: Owner
    PageLinks:
      properties:
        self:
          type: string
          maxLength: 65536
          minLength: 1
          format: uri
          title: Self
        first:
          type: string
          maxLength: 65536
          minLength: 1
          format: uri
          title: First
        prev:
          type: string
          maxLength: 65536
          minLength: 1
          format: uri
          title: Prev
        next:
          type: string
          maxLength: 65536
          minLength: 1
          format: uri
          title: Next
        last:
          type: string
          maxLength: 65536
          minLength: 1
          format: uri
          title: Last
      additionalProperties: false
      type: object
      required:
      - self
      - first
      - last
      title: PageLinks
    PageMetaInfoLimitOffset:
      properties:
        limit:
          type: integer
          exclusiveMinimum: true
          title: Limit
          default: 20
          minimum: 0
        total:
          type: integer
          minimum: 0
          title: Total
        offset:
          type: integer
          minimum: 0
          title: Offset
          default: 0
        count:
          type: integer
          minimum: 0
          title: Count
      additionalProperties: false
      type: object
      required:
      - total
      - count
      title: PageMetaInfoLimitOffset
    Page_CheckpointApiModel_:
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          items:
            $ref: '#/components/schemas/CheckpointApiModel'
          type: array
          title: Data
      additionalProperties: false
      type: object
      required:
      - _meta
      - _links
      - data
      title: Page[CheckpointApiModel]
      description: Paginated response model of ItemTs
    Page_ProjectIterationItem_:
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          items:
            $ref: '#/components/schemas/ProjectIterationItem'
          type: array
          title: Data
      additionalProperties: false
      type: object
      required:
      - _meta
      - _links
      - data
      title: Page[ProjectIterationItem]
      description: Paginated response model of ItemTs
    Page_ProjectIterationResultItem_:
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          items:
            $ref: '#/components/schemas/ProjectIterationResultItem'
          type: array
          title: Data
      additionalProperties: false
      type: object
      required:
      - _meta
      - _links
      - data
      title: Page[ProjectIterationResultItem]
      description: Paginated response model of ItemTs
    Page_ProjectListItem_:
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          items:
            $ref: '#/components/schemas/ProjectListItem'
          type: array
          title: Data
      additionalProperties: false
      type: object
      required:
      - _meta
      - _links
      - data
      title: Page[ProjectListItem]
      description: Paginated response model of ItemTs
    Page_RepoApiModel_:
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          items:
            $ref: '#/components/schemas/RepoApiModel'
          type: array
          title: Data
      additionalProperties: false
      type: object
      required:
      - _meta
      - _links
      - data
      title: Page[RepoApiModel]
      description: Paginated response model of ItemTs
    ParentMetaProjectRef:
      properties:
        project_id:
          type: string
          format: uuid
          title: Project Id
        ref_id:
          type: integer
          exclusiveMinimum: true
          title: Ref Id
          minimum: 0
      type: object
      required:
      - project_id
      - ref_id
      title: ParentMetaProjectRef
    PermissionGet:
      properties:
        name:
          type: string
          title: Name
        allowed:
          type: boolean
          title: Allowed
      type: object
      required:
      - name
      - allowed
      title: PermissionGet
    PhoneConfirmationBody:
      properties:
        email:
          type: string
          format: email
          title: Email
        phone:
          type: string
          title: Phone
          description: Phone number E.164, needed on the deployments with 2FA
        code:
          type: string
          format: password
          title: Code
          writeOnly: true
      additionalProperties: false
      type: object
      required:
      - email
      - phone
      - code
      title: PhoneConfirmationBody
    PortLink:
      properties:
        nodeUuid:
          type: string
          format: uuid
          title: Nodeuuid
          description: The node to get the port output from
        output:
          type: string
          pattern: ^[-_a-zA-Z0-9]+$
          title: Output
          description: The port key in the node given by nodeUuid
      additionalProperties: false
      type: object
      required:
      - nodeUuid
      - output
      title: PortLink
      description: I/O port type to reference to an output port of another node in
        the same project
    Position:
      properties:
        x:
          type: integer
          title: X
          description: The x position
          example:
          - '12'
        y:
          type: integer
          title: Y
          description: The y position
          example:
          - '15'
      additionalProperties: false
      type: object
      required:
      - x
      - y
      title: Position
    PresignedLink:
      properties:
        link:
          type: string
          maxLength: 65536
          minLength: 1
          format: uri
          title: Link
      type: object
      required:
      - link
      title: PresignedLink
    ProfileGet:
      properties:
        first_name:
          type: string
          title: First Name
        last_name:
          type: string
          title: Last Name
        id:
          type: integer
          exclusiveMinimum: true
          title: Id
          minimum: 0
        login:
          type: string
          format: email
          title: Login
        role:
          type: string
          enum:
          - Anonymous
          - Guest
          - User
          - Tester
          - Admin
          title: Role
        groups:
          $ref: '#/components/schemas/AllUsersGroups'
        gravatar_id:
          type: string
          title: Gravatar Id
        expirationDate:
          type: string
          format: date
          title: Expirationdate
          description: If user has a trial account, it sets the expiration date, otherwise
            None
      type: object
      required:
      - id
      - login
      - role
      title: ProfileGet
    ProfileUpdate:
      properties:
        first_name:
          type: string
          title: First Name
        last_name:
          type: string
          title: Last Name
      type: object
      title: ProfileUpdate
      example:
        first_name: Pedro
        last_name: Crespo
    ProjectCopyOverride:
      properties:
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        thumbnail:
          type: string
          maxLength: 2083
          minLength: 0
          format: uri
          title: Thumbnail
        prjOwner:
          type: string
          format: email
          title: Prjowner
      type: object
      required:
      - name
      - prjOwner
      title: ProjectCopyOverride
    ProjectCreateNew:
      properties:
        uuid:
          type: string
          format: uuid
          title: Uuid
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        thumbnail:
          type: string
          maxLength: 2083
          minLength: 0
          format: uri
          title: Thumbnail
        workbench:
          type: object
          title: Workbench
        accessRights:
          type: object
          title: Accessrights
        tags:
          items:
            type: integer
          type: array
          title: Tags
        classifiers:
          items:
            type: string
          type: array
          title: Classifiers
        ui:
          $ref: '#/components/schemas/StudyUI'
      type: object
      required:
      - name
      - workbench
      - accessRights
      title: ProjectCreateNew
    ProjectGet:
      properties:
        uuid:
          type: string
          format: uuid
          title: Uuid
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        thumbnail:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 0
            format: uri
          - type: string
            enum:
            - ''
          title: Thumbnail
        creationDate:
          type: string
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          title: Creationdate
        lastChangeDate:
          type: string
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          title: Lastchangedate
        workbench:
          type: object
          title: Workbench
        prjOwner:
          type: string
          format: email
          title: Prjowner
        accessRights:
          type: object
          title: Accessrights
        tags:
          items:
            type: integer
          type: array
          title: Tags
        classifiers:
          items:
            type: string
          type: array
          title: Classifiers
          default: []
        state:
          $ref: '#/components/schemas/ProjectState'
        ui:
          anyOf:
          - $ref: '#/components/schemas/EmptyModel'
          - $ref: '#/components/schemas/StudyUI'
          title: Ui
        quality:
          type: object
          title: Quality
          default: {}
        dev:
          type: object
          title: Dev
        permalink:
          $ref: '#/components/schemas/ProjectPermalink'
      type: object
      required:
      - uuid
      - name
      - description
      - thumbnail
      - creationDate
      - lastChangeDate
      - workbench
      - prjOwner
      - accessRights
      - tags
      title: ProjectGet
    ProjectInputGet:
      properties:
        key:
          type: string
          format: uuid
          title: Key
          description: Project port's unique identifer. Same as the UUID of the associated
            port node
        value:
          title: Value
          description: Value assigned to this i/o port
        label:
          type: string
          title: Label
      type: object
      required:
      - key
      - value
      - label
      title: ProjectInputGet
    ProjectInputUpdate:
      properties:
        key:
          type: string
          format: uuid
          title: Key
          description: Project port's unique identifer. Same as the UUID of the associated
            port node
        value:
          title: Value
          description: Value assigned to this i/o port
      type: object
      required:
      - key
      - value
      title: ProjectInputUpdate
    ProjectIterationItem:
      properties:
        name:
          type: string
          title: Name
          description: Iteration's resource API name
        parent:
          allOf:
          - $ref: '#/components/schemas/ParentMetaProjectRef'
          title: Parent
          description: Reference to the the meta-project that created this iteration
        iteration_index:
          type: integer
          exclusiveMinimum: true
          title: Iteration Index
          minimum: 0
        workcopy_project_id:
          type: string
          format: uuid
          title: Workcopy Project Id
          description: ID to this iteration's working copy.A working copy is a real
            project where this iteration is run
        workcopy_project_url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Workcopy Project Url
          description: reference to a working copy project
      type: object
      required:
      - name
      - parent
      - iteration_index
      - workcopy_project_id
      - workcopy_project_url
      title: ProjectIterationItem
    ProjectIterationResultItem:
      properties:
        name:
          type: string
          title: Name
          description: Iteration's resource API name
        parent:
          allOf:
          - $ref: '#/components/schemas/ParentMetaProjectRef'
          title: Parent
          description: Reference to the the meta-project that created this iteration
        iteration_index:
          type: integer
          exclusiveMinimum: true
          title: Iteration Index
          minimum: 0
        workcopy_project_id:
          type: string
          format: uuid
          title: Workcopy Project Id
          description: ID to this iteration's working copy.A working copy is a real
            project where this iteration is run
        workcopy_project_url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Workcopy Project Url
          description: reference to a working copy project
        results:
          $ref: '#/components/schemas/ExtractedResults'
      type: object
      required:
      - name
      - parent
      - iteration_index
      - workcopy_project_id
      - workcopy_project_url
      - results
      title: ProjectIterationResultItem
    ProjectListFilters:
      properties:
        tags:
          items:
            type: integer
            exclusiveMinimum: true
            minimum: 0
          type: array
          title: Tags
        classifiers:
          items:
            type: string
          type: array
          title: Classifiers
      additionalProperties: false
      type: object
      title: ProjectListFilters
      description: 'inspired by Docker API https://docs.docker.com/engine/api/v1.43/#tag/Container/operation/ContainerList.

        Encoded as JSON. Each available filter can have its own logic (should be well
        documented)'
    ProjectListItem:
      properties:
        uuid:
          type: string
          format: uuid
          title: Uuid
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        thumbnail:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 0
            format: uri
          - type: string
            enum:
            - ''
          title: Thumbnail
        creationDate:
          type: string
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          title: Creationdate
        lastChangeDate:
          type: string
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          title: Lastchangedate
        workbench:
          type: object
          title: Workbench
        prjOwner:
          type: string
          format: email
          title: Prjowner
        accessRights:
          type: object
          title: Accessrights
        tags:
          items:
            type: integer
          type: array
          title: Tags
        classifiers:
          items:
            type: string
          type: array
          title: Classifiers
          default: []
        state:
          $ref: '#/components/schemas/ProjectState'
        ui:
          anyOf:
          - $ref: '#/components/schemas/EmptyModel'
          - $ref: '#/components/schemas/StudyUI'
          title: Ui
        quality:
          type: object
          title: Quality
          default: {}
        dev:
          type: object
          title: Dev
        permalink:
          $ref: '#/components/schemas/ProjectPermalink'
      type: object
      required:
      - uuid
      - name
      - description
      - thumbnail
      - creationDate
      - lastChangeDate
      - workbench
      - prjOwner
      - accessRights
      - tags
      title: ProjectListItem
    ProjectLocked:
      properties:
        value:
          type: boolean
          title: Value
          description: True if the project is locked
        owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          title: Owner
          description: If locked, the user that owns the lock
        status:
          allOf:
          - $ref: '#/components/schemas/ProjectStatus'
          description: The status of the project
      additionalProperties: false
      type: object
      required:
      - value
      - status
      title: ProjectLocked
    ProjectMetadataGet:
      properties:
        projectUuid:
          type: string
          format: uuid
          title: Projectuuid
        custom:
          additionalProperties:
            anyOf:
            - type: boolean
            - type: integer
            - type: number
            - type: string
          type: object
          title: Custom
          description: Custom key-value map
      type: object
      required:
      - projectUuid
      title: ProjectMetadataGet
    ProjectMetadataPortGet:
      properties:
        key:
          type: string
          format: uuid
          title: Key
          description: Project port's unique identifer. Same as the UUID of the associated
            port node
        kind:
          type: string
          enum:
          - input
          - output
          title: Kind
        content_schema:
          type: object
          title: Content Schema
          description: jsonschema for the port's value. SEE https://json-schema.org/understanding-json-schema/
      type: object
      required:
      - key
      - kind
      title: ProjectMetadataPortGet
    ProjectMetadataUpdate:
      properties:
        custom:
          additionalProperties:
            anyOf:
            - type: boolean
            - type: integer
            - type: number
            - type: string
          type: object
          title: Custom
      type: object
      required:
      - custom
      title: ProjectMetadataUpdate
    ProjectOrderBy:
      properties:
        field:
          type: string
          title: Field
        direction:
          allOf:
          - $ref: '#/components/schemas/OrderDirection'
          default: desc
      additionalProperties: false
      type: object
      title: ProjectOrderBy
      description: inspired by Google AIP https://google.aip.dev/132#ordering
    ProjectOutputGet:
      properties:
        key:
          type: string
          format: uuid
          title: Key
          description: Project port's unique identifer. Same as the UUID of the associated
            port node
        value:
          title: Value
          description: Value assigned to this i/o port
        label:
          type: string
          title: Label
      type: object
      required:
      - key
      - value
      - label
      title: ProjectOutputGet
    ProjectPermalink:
      properties:
        url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Url
        is_public:
          type: boolean
          title: Is Public
      type: object
      required:
      - url
      - is_public
      title: ProjectPermalink
    ProjectReplace:
      properties:
        uuid:
          type: string
          format: uuid
          title: Uuid
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        thumbnail:
          type: string
          maxLength: 2083
          minLength: 0
          format: uri
          title: Thumbnail
        creationDate:
          type: string
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          title: Creationdate
        lastChangeDate:
          type: string
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          title: Lastchangedate
        workbench:
          type: object
          title: Workbench
        accessRights:
          type: object
          title: Accessrights
        tags:
          items:
            type: integer
          type: array
          title: Tags
          default: []
        classifiers:
          items:
            type: string
          type: array
          title: Classifiers
        ui:
          $ref: '#/components/schemas/StudyUI'
        quality:
          type: object
          title: Quality
      type: object
      required:
      - uuid
      - name
      - description
      - creationDate
      - lastChangeDate
      - workbench
      - accessRights
      title: ProjectReplace
    ProjectRunningState:
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/RunningState'
          description: The running state of the project
      additionalProperties: false
      type: object
      required:
      - value
      title: ProjectRunningState
    ProjectState:
      properties:
        locked:
          allOf:
          - $ref: '#/components/schemas/ProjectLocked'
          title: Locked
          description: The project lock state
        state:
          allOf:
          - $ref: '#/components/schemas/ProjectRunningState'
          title: State
          description: The project running state
      additionalProperties: false
      type: object
      required:
      - locked
      - state
      title: ProjectState
    ProjectStatus:
      type: string
      enum:
      - CLOSED
      - CLOSING
      - CLONING
      - EXPORTING
      - OPENING
      - OPENED
      title: ProjectStatus
      description: An enumeration.
    ProjectTypeAPI:
      type: string
      enum:
      - all
      - template
      - user
      title: ProjectTypeAPI
      description: An enumeration.
    ProjectUpdate:
      properties:
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        thumbnail:
          type: string
          maxLength: 2083
          minLength: 0
          format: uri
          title: Thumbnail
        workbench:
          type: object
          title: Workbench
        accessRights:
          type: object
          title: Accessrights
        tags:
          items:
            type: integer
          type: array
          title: Tags
        classifiers:
          items:
            type: string
          type: array
          title: Classifiers
        ui:
          $ref: '#/components/schemas/StudyUI'
        quality:
          type: object
          title: Quality
      type: object
      title: ProjectUpdate
    ProjectsCommentsAPI:
      properties:
        comment_id:
          type: integer
          exclusiveMinimum: true
          title: Comment Id
          description: Primary key, identifies the comment
          minimum: 0
        project_uuid:
          type: string
          format: uuid
          title: Project Uuid
          description: project reference for this table
        user_id:
          type: integer
          exclusiveMinimum: true
          title: User Id
          description: user reference for this table
          minimum: 0
        contents:
          type: string
          title: Contents
          description: Contents of the comment
        created:
          type: string
          format: date-time
          title: Created
          description: Timestamp on creation
        modified:
          type: string
          format: date-time
          title: Modified
          description: Timestamp with last update
      additionalProperties: false
      type: object
      required:
      - comment_id
      - project_uuid
      - user_id
      - contents
      - created
      - modified
      title: ProjectsCommentsAPI
    RegisterBody:
      properties:
        email:
          type: string
          format: email
          title: Email
        password:
          type: string
          format: password
          title: Password
          writeOnly: true
        confirm:
          type: string
          format: password
          title: Confirm
          description: Password confirmation
          writeOnly: true
        invitation:
          type: string
          title: Invitation
          description: Invitation code
      additionalProperties: false
      type: object
      required:
      - email
      - password
      title: RegisterBody
    RegisterPhoneBody:
      properties:
        email:
          type: string
          format: email
          title: Email
        phone:
          type: string
          title: Phone
          description: Phone number E.164, needed on the deployments with 2FA
      additionalProperties: false
      type: object
      required:
      - email
      - phone
      title: RegisterPhoneBody
    RegisterPhoneNextPage:
      properties:
        name:
          type: string
          title: Name
          description: Code name to the front-end page. Ideally a PageStr
        parameters:
          $ref: '#/components/schemas/_PageParams'
        logger:
          type: string
          title: Logger
          default: user
          deprecated: true
        level:
          type: string
          enum:
          - INFO
          - WARNING
          - ERROR
          title: Level
          default: INFO
        message:
          type: string
          title: Message
      type: object
      required:
      - name
      - message
      title: RegisterPhoneNextPage
      description: 'This is the body of a 2XX response to pass the front-end

        what kind of page shall be display next and some information about it


        An analogous structure is used in the redirects (see create_redirect_response)
        but

        using a path+query in the fragment of the URL'
    RepoApiModel:
      properties:
        project_uuid:
          type: string
          format: uuid
          title: Project Uuid
        url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Url
      type: object
      required:
      - project_uuid
      - url
      title: RepoApiModel
    ResearchResource:
      properties:
        rrid:
          type: string
          pattern: ^(RRID:)([^_\s]{1,30})_(\S{1,30})$
          title: Rrid
          description: Unique identifier used as classifier, i.e. to tag studies and
            services
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
      type: object
      required:
      - rrid
      - name
      - description
      title: ResearchResource
    Resend2faBody:
      properties:
        email:
          type: string
          format: email
          title: Email
          description: User email (identifier)
        via:
          type: string
          enum:
          - SMS
          - Email
          title: Via
          default: SMS
      additionalProperties: false
      type: object
      required:
      - email
      title: Resend2faBody
    ResetPasswordBody:
      properties:
        email:
          type: string
          title: Email
      additionalProperties: false
      type: object
      required:
      - email
      title: ResetPasswordBody
    ResetPasswordConfirmation:
      properties:
        password:
          type: string
          format: password
          title: Password
          writeOnly: true
        confirm:
          type: string
          format: password
          title: Confirm
          writeOnly: true
      additionalProperties: false
      type: object
      required:
      - password
      - confirm
      title: ResetPasswordConfirmation
    ResourceHit:
      properties:
        rid:
          type: string
          title: Rid
        name:
          type: string
          title: Name
      type: object
      required:
      - rid
      - name
      title: ResourceHit
    ResourceValue:
      properties:
        limit:
          anyOf:
          - type: integer
          - type: number
          - type: string
          title: Limit
        reservation:
          anyOf:
          - type: integer
          - type: number
          - type: string
          title: Reservation
      type: object
      required:
      - limit
      - reservation
      title: ResourceValue
    RunningState:
      type: string
      enum:
      - UNKNOWN
      - PUBLISHED
      - NOT_STARTED
      - PENDING
      - WAITING_FOR_RESOURCES
      - STARTED
      - SUCCESS
      - FAILED
      - ABORTED
      title: RunningState
      description: 'State of execution of a project''s computational workflow


        SEE StateType for task state'
    Scheduler:
      properties:
        status:
          type: string
          title: Status
          description: The running status of the scheduler
        workers:
          additionalProperties:
            $ref: '#/components/schemas/Worker'
          type: object
          title: Workers
      type: object
      required:
      - status
      title: Scheduler
    SelectBox:
      properties:
        structure:
          items:
            $ref: '#/components/schemas/Structure'
          type: array
          minItems: 1
          title: Structure
      additionalProperties: false
      type: object
      required:
      - structure
      title: SelectBox
    ServiceGroupAccessRights:
      properties:
        execute_access:
          type: boolean
          title: Execute Access
          description: defines whether the group can execute the service
          default: false
        write_access:
          type: boolean
          title: Write Access
          description: defines whether the group can modify the service
          default: false
      type: object
      title: ServiceGroupAccessRights
    ServiceInputGet:
      properties:
        unitLong:
          type: string
          title: Unitlong
          description: Long name of the unit for display (html-compatible), if available
        unitShort:
          type: string
          title: Unitshort
          description: Short name for the unit for display (html-compatible), if available
        displayOrder:
          type: number
          title: Displayorder
          description: 'DEPRECATED: new display order is taken from the item position.
            This will be removed.'
          deprecated: true
        label:
          type: string
          title: Label
          description: short name for the property
          example: Age
        description:
          type: string
          title: Description
          description: description of the property
          example: Age in seconds since 1970
        type:
          type: string
          pattern: ^(number|integer|boolean|string|ref_contentSchema|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$
          title: Type
          description: data type expected on this input glob matching for data type
            is allowed
        contentSchema:
          type: object
          title: Contentschema
          description: jsonschema of this input/output. Required when type='ref_contentSchema'
        fileToKeyMap:
          type: object
          title: Filetokeymap
          description: Place the data associated with the named keys in files
        unit:
          type: string
          title: Unit
          description: Units, when it refers to a physical quantity
        defaultValue:
          anyOf:
          - type: boolean
          - type: integer
          - type: number
          - type: string
          title: Defaultvalue
        widget:
          allOf:
          - $ref: '#/components/schemas/Widget'
          title: Widget
          description: custom widget to use instead of the default one determined
            from the data-type
        keyId:
          type: string
          pattern: ^[-_a-zA-Z0-9]+$
          title: Keyid
          description: Unique name identifier for this input
      additionalProperties: false
      type: object
      required:
      - label
      - description
      - type
      - keyId
      title: ServiceInputGet
      description: Extends fields of api_schemas_catalog.services.ServiceGet.outputs[*]
      example:
        displayOrder: 2
        label: Sleep Time
        description: Time to wait before completion
        type: number
        defaultValue: 0
        unit: second
        widget:
          type: TextArea
          details:
            minHeight: 1
        keyId: input_2
        unitLong: seconds
        unitShort: sec
    ServiceKeyVersion:
      properties:
        key:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Key
          description: distinctive name for the node based on the docker registry
            path
        version:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Version
          description: service version number
      type: object
      required:
      - key
      - version
      title: ServiceKeyVersion
      description: This pair uniquely identifies a services
    ServiceOutputGet:
      properties:
        unitLong:
          type: string
          title: Unitlong
          description: Long name of the unit for display (html-compatible), if available
        unitShort:
          type: string
          title: Unitshort
          description: Short name for the unit for display (html-compatible), if available
        displayOrder:
          type: number
          title: Displayorder
          description: 'DEPRECATED: new display order is taken from the item position.
            This will be removed.'
          deprecated: true
        label:
          type: string
          title: Label
          description: short name for the property
          example: Age
        description:
          type: string
          title: Description
          description: description of the property
          example: Age in seconds since 1970
        type:
          type: string
          pattern: ^(number|integer|boolean|string|ref_contentSchema|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$
          title: Type
          description: data type expected on this input glob matching for data type
            is allowed
        contentSchema:
          type: object
          title: Contentschema
          description: jsonschema of this input/output. Required when type='ref_contentSchema'
        fileToKeyMap:
          type: object
          title: Filetokeymap
          description: Place the data associated with the named keys in files
        unit:
          type: string
          title: Unit
          description: Units, when it refers to a physical quantity
        widget:
          allOf:
          - $ref: '#/components/schemas/Widget'
          title: Widget
          description: custom widget to use instead of the default one determined
            from the data-type
          deprecated: true
        keyId:
          type: string
          pattern: ^[-_a-zA-Z0-9]+$
          title: Keyid
          description: Unique name identifier for this input
      additionalProperties: false
      type: object
      required:
      - label
      - description
      - type
      - keyId
      title: ServiceOutputGet
      description: Extends fields of api_schemas_catalog.services.ServiceGet.outputs[*]
      example:
        displayOrder: 2
        label: Time Slept
        description: Time the service waited before completion
        type: number
        unit: second
        unitLong: seconds
        unitShort: sec
        keyId: output_2
    ServiceRunGet:
      properties:
        service_run_id:
          type: string
          title: Service Run Id
        wallet_id:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
        wallet_name:
          type: string
          title: Wallet Name
        user_id:
          type: integer
          exclusiveMinimum: true
          title: User Id
          minimum: 0
        project_id:
          type: string
          format: uuid
          title: Project Id
        project_name:
          type: string
          title: Project Name
        node_id:
          type: string
          format: uuid
          title: Node Id
        node_name:
          type: string
          title: Node Name
        service_key:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
        service_version:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
        service_type:
          type: string
          title: Service Type
        service_resources:
          type: object
          title: Service Resources
        started_at:
          type: string
          format: date-time
          title: Started At
        stopped_at:
          type: string
          format: date-time
          title: Stopped At
        service_run_status:
          $ref: '#/components/schemas/ServiceRunStatus'
      type: object
      required:
      - service_run_id
      - user_id
      - project_id
      - project_name
      - node_id
      - node_name
      - service_key
      - service_version
      - service_type
      - service_resources
      - started_at
      - service_run_status
      title: ServiceRunGet
    ServiceRunStatus:
      type: string
      enum:
      - RUNNING
      - SUCCESS
      - ERROR
      title: ServiceRunStatus
      description: An enumeration.
    ServiceState:
      enum:
      - pending
      - pulling
      - starting
      - running
      - complete
      - failed
      - stopping
      title: ServiceState
      description: An enumeration.
    ServiceType:
      type: string
      enum:
      - computational
      - dynamic
      - frontend
      - backend
      title: ServiceType
      description: An enumeration.
    ServiceUpdate:
      properties:
        accessRights:
          additionalProperties:
            $ref: '#/components/schemas/ServiceGroupAccessRights'
          type: object
          title: Accessrights
          description: service access rights per group id
        name:
          type: string
          title: Name
        thumbnail:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Thumbnail
        description:
          type: string
          title: Description
        deprecated:
          type: string
          format: date-time
          title: Deprecated
          description: If filled with a date, then the service is to be deprecated
            at that date (e.g. cannot start anymore)
        classifiers:
          items:
            type: string
          type: array
          title: Classifiers
        quality:
          type: object
          title: Quality
          default: {}
      type: object
      title: ServiceUpdate
      example:
        accessRights:
          1:
            execute_access: false
            write_access: false
          2:
            execute_access: true
            write_access: true
          44:
            execute_access: false
            write_access: false
        name: My Human Readable Service Name
        description: An interesting service that does something
        classifiers:
        - RRID:SCR_018997
        - RRID:SCR_019001
        quality:
          tsr:
            r01:
              level: 3
              references: ''
            r02:
              level: 2
              references: ''
            r03:
              level: 0
              references: ''
            r04:
              level: 0
              references: ''
            r05:
              level: 2
              references: ''
            r06:
              level: 0
              references: ''
            r07:
              level: 0
              references: ''
            r08:
              level: 1
              references: ''
            r09:
              level: 0
              references: ''
            r10:
              level: 0
              references: ''
          enabled: true
          annotations:
            vandv: ''
            purpose: ''
            standards: ''
            limitations: ''
            documentation: ''
            certificationLink: ''
            certificationStatus: Uncertified
    SimCoreFileLink:
      properties:
        store:
          type: integer
          title: Store
          description: 'The store identifier: 0 for simcore S3, 1 for datcore'
        path:
          anyOf:
          - type: string
            pattern: ^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$
          - type: string
            pattern: ^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$
          title: Path
          description: The path to the file in the storage provider domain
        label:
          type: string
          title: Label
          description: The real file name
        eTag:
          type: string
          title: Etag
          description: Entity tag that uniquely represents the file. The method to
            generate the tag is not specified (black box).
        dataset:
          type: string
          title: Dataset
          deprecated: true
      additionalProperties: false
      type: object
      required:
      - store
      - path
      title: SimCoreFileLink
      description: I/O port type to hold a link to a file in simcore S3 storage
    SimpleAuthentication:
      properties:
        type:
          type: string
          enum:
          - simple
          title: Type
          default: simple
        username:
          type: string
          title: Username
        password:
          type: string
          format: password
          title: Password
          writeOnly: true
      additionalProperties: false
      type: object
      required:
      - username
      - password
      title: SimpleAuthentication
    Slideshow:
      properties:
        position:
          type: integer
          title: Position
        instructions:
          type: string
          title: Instructions
      type: object
      required:
      - position
      title: Slideshow
    StackInfoDict:
      properties:
        f_code:
          type: string
          title: F Code
        f_lineno:
          type: string
          title: F Lineno
      type: object
      required:
      - f_code
      - f_lineno
      title: StackInfoDict
    Stats:
      properties:
        cpuUsage:
          type: number
          exclusiveMinimum: true
          title: Cpuusage
          minimum: 0.0
        memUsage:
          type: number
          exclusiveMinimum: true
          title: Memusage
          minimum: 0.0
      type: object
      required:
      - cpuUsage
      - memUsage
      title: Stats
    StatusDiagnosticsGet:
      properties:
        loop_tasks:
          items:
            $ref: '#/components/schemas/TaskInfoDict'
          type: array
          title: Loop Tasks
        top_tracemalloc:
          items:
            type: string
          type: array
          title: Top Tracemalloc
      type: object
      required:
      - loop_tasks
      - top_tracemalloc
      title: StatusDiagnosticsGet
    Structure:
      properties:
        key:
          anyOf:
          - type: string
          - type: boolean
          - type: number
          title: Key
        label:
          type: string
          title: Label
      additionalProperties: false
      type: object
      required:
      - key
      - label
      title: Structure
    StudyUI:
      properties:
        workbench:
          type: object
          title: Workbench
        slideshow:
          type: object
          title: Slideshow
        currentNodeId:
          type: string
          format: uuid
          title: Currentnodeid
        annotations:
          type: object
          title: Annotations
      type: object
      title: StudyUI
    TableSynchronisation:
      properties:
        dry_run:
          type: boolean
          title: Dry Run
        fire_and_forget:
          type: boolean
          title: Fire And Forget
        removed:
          items:
            type: string
          type: array
          title: Removed
      type: object
      required:
      - removed
      title: TableSynchronisation
    TagAccessRights:
      properties:
        read:
          type: boolean
          title: Read
        write:
          type: boolean
          title: Write
        delete:
          type: boolean
          title: Delete
      type: object
      required:
      - read
      - write
      - delete
      title: TagAccessRights
    TagCreate:
      properties:
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        color:
          type: string
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          title: Color
      additionalProperties: false
      type: object
      required:
      - name
      - color
      title: TagCreate
    TagGet:
      properties:
        id:
          type: integer
          exclusiveMinimum: true
          title: Id
          minimum: 0
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        color:
          type: string
          title: Color
        accessRights:
          $ref: '#/components/schemas/TagAccessRights'
      type: object
      required:
      - id
      - name
      - color
      - accessRights
      title: TagGet
    TagUpdate:
      properties:
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        color:
          type: string
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          title: Color
      additionalProperties: false
      type: object
      title: TagUpdate
    TaskCounts:
      properties:
        error:
          type: integer
          title: Error
          default: 0
        memory:
          type: integer
          title: Memory
          default: 0
        executing:
          type: integer
          title: Executing
          default: 0
      type: object
      title: TaskCounts
    TaskGet:
      properties:
        task_id:
          type: string
          title: Task Id
        task_name:
          type: string
          title: Task Name
        status_href:
          type: string
          title: Status Href
        result_href:
          type: string
          title: Result Href
        abort_href:
          type: string
          title: Abort Href
      type: object
      required:
      - task_id
      - task_name
      - status_href
      - result_href
      - abort_href
      title: TaskGet
    TaskInfoDict:
      properties:
        txt:
          type: string
          title: Txt
        type:
          type: string
          title: Type
        done:
          type: boolean
          title: Done
        cancelled:
          type: boolean
          title: Cancelled
        stack:
          items:
            $ref: '#/components/schemas/StackInfoDict'
          type: array
          title: Stack
        exception:
          type: string
          title: Exception
      type: object
      required:
      - txt
      - type
      - done
      - cancelled
      - stack
      - exception
      title: TaskInfoDict
    TaskProgress:
      properties:
        message:
          type: string
          title: Message
          default: ''
        percent:
          type: number
          maximum: 1.0
          minimum: 0.0
          title: Percent
          default: 0.0
      type: object
      title: TaskProgress
      description: 'Helps the user to keep track of the progress. Progress is expected
        to be

        defined as a float bound between 0.0 and 1.0'
    TaskStatus:
      properties:
        task_progress:
          $ref: '#/components/schemas/TaskProgress'
        done:
          type: boolean
          title: Done
        started:
          type: string
          format: date-time
          title: Started
      type: object
      required:
      - task_progress
      - done
      - started
      title: TaskStatus
    TestEmail:
      properties:
        from_:
          type: string
          format: email
          title: 'From '
          description: Email sender
        to:
          type: string
          format: email
          title: To
          description: Email receiver
        template_name:
          type: string
          enum:
          - change_email_email.jinja2
          - new_2fa_code.jinja2
          - registration_email.jinja2
          - reset_password_email_failed.jinja2
          - reset_password_email.jinja2
          - service_submission.jinja2
          title: Template Name
          default: registration_email.jinja2
        template_context:
          type: object
          title: Template Context
          default: {}
      type: object
      required:
      - to
      title: TestEmail
    TestFailed:
      properties:
        test_name:
          type: string
          title: Test Name
        error_type:
          type: string
          title: Error Type
        error_message:
          type: string
          title: Error Message
        traceback:
          type: string
          title: Traceback
      type: object
      required:
      - test_name
      - error_type
      - error_message
      - traceback
      title: TestFailed
    TestPassed:
      properties:
        fixtures:
          type: object
          title: Fixtures
        info:
          type: object
          title: Info
      type: object
      required:
      - fixtures
      - info
      title: TestPassed
    TextArea:
      properties:
        minHeight:
          type: integer
          exclusiveMinimum: true
          title: Minheight
          description: minimum Height of the textarea
          minimum: 0
      additionalProperties: false
      type: object
      required:
      - minHeight
      title: TextArea
    Token:
      properties:
        service:
          type: string
          title: Service
          description: uniquely identifies the service where this token is used
        token_key:
          type: string
          format: uuid
          title: Token Key
          description: basic token key
        token_secret:
          type: string
          format: uuid
          title: Token Secret
      type: object
      required:
      - service
      - token_key
      title: Token
      description: Tokens used to access third-party services connected to osparc
        (e.g. pennsieve, scicrunch, etc)
      example:
        service: github-api-v1
        token_key: 5f21abf5-c596-47b7-bfd1-c0e436ef1107
    TokenCreate:
      properties:
        service:
          type: string
          title: Service
          description: uniquely identifies the service where this token is used
        token_key:
          type: string
          format: uuid
          title: Token Key
          description: basic token key
        token_secret:
          type: string
          format: uuid
          title: Token Secret
      type: object
      required:
      - service
      - token_key
      title: TokenCreate
      description: Tokens used to access third-party services connected to osparc
        (e.g. pennsieve, scicrunch, etc)
      example:
        service: github-api-v1
        token_key: 5f21abf5-c596-47b7-bfd1-c0e436ef1107
    UploadedPart:
      properties:
        number:
          type: integer
          exclusiveMinimum: true
          title: Number
          minimum: 0
        e_tag:
          type: string
          title: E Tag
      type: object
      required:
      - number
      - e_tag
      title: UploadedPart
    UsedResources:
      additionalProperties:
        type: number
        minimum: 0.0
      type: object
      title: UsedResources
    UserNotification:
      properties:
        user_id:
          type: integer
          exclusiveMinimum: true
          title: User Id
          minimum: 0
        category:
          $ref: '#/components/schemas/NotificationCategory'
        actionable_path:
          type: string
          title: Actionable Path
        title:
          type: string
          title: Title
        text:
          type: string
          title: Text
        date:
          type: string
          format: date-time
          title: Date
        id:
          type: string
          title: Id
        read:
          type: boolean
          title: Read
      type: object
      required:
      - user_id
      - category
      - actionable_path
      - title
      - text
      - date
      - id
      - read
      title: UserNotification
    UserNotificationCreate:
      properties:
        user_id:
          type: integer
          exclusiveMinimum: true
          title: User Id
          minimum: 0
        category:
          $ref: '#/components/schemas/NotificationCategory'
        actionable_path:
          type: string
          title: Actionable Path
        title:
          type: string
          title: Title
        text:
          type: string
          title: Text
        date:
          type: string
          format: date-time
          title: Date
      type: object
      required:
      - user_id
      - category
      - actionable_path
      - title
      - text
      - date
      title: UserNotificationCreate
    UserNotificationPatch:
      properties:
        read:
          type: boolean
          title: Read
      type: object
      required:
      - read
      title: UserNotificationPatch
    UsersGroup:
      properties:
        gid:
          type: integer
          title: Gid
          description: the group ID
        label:
          type: string
          title: Label
          description: the group name
        description:
          type: string
          title: Description
          description: the group description
        thumbnail:
          type: string
          maxLength: 65536
          minLength: 1
          format: uri
          title: Thumbnail
          description: url to the group thumbnail
        accessRights:
          $ref: '#/components/schemas/GroupAccessRights'
        inclusionRules:
          additionalProperties:
            type: string
          type: object
          title: Inclusionrules
          description: Maps user's column and regular expression
      type: object
      required:
      - gid
      - label
      - description
      - accessRights
      title: UsersGroup
    Viewer:
      properties:
        title:
          type: string
          title: Title
          description: Short formatted label with name and version of the viewer
        file_type:
          type: string
          title: File Type
          description: Identifier for the file type
        view_url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: View Url
          description: Base url to execute viewer. Needs appending file_size,[file_name]
            and download_link as query parameters
      type: object
      required:
      - title
      - file_type
      - view_url
      title: Viewer
      description: "API model for a viewer resource\n\nA viewer is a service with\
        \ an associated filetype.\nYou can think of it as a tuple (filetype, service)\n\
        \nThe service could consume other filetypes BUT at this\ninterface this is\
        \ represented in yet another viewer resource\n\nFor instance, the same service\
        \ can be in two different viewer resources\n  - viewer1=(JPEG, RawGraph service)\n\
        \  - viewer2=(CSV, RawGraph service)\n\nA viewer can be dispatched using the\
        \ view_url and appending the"
    WalletGet:
      properties:
        wallet_id:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        owner:
          type: integer
          exclusiveMinimum: true
          title: Owner
          minimum: 0
        thumbnail:
          type: string
          title: Thumbnail
        status:
          $ref: '#/components/schemas/WalletStatus'
        created:
          type: string
          format: date-time
          title: Created
        modified:
          type: string
          format: date-time
          title: Modified
      type: object
      required:
      - wallet_id
      - name
      - owner
      - status
      - created
      - modified
      title: WalletGet
    WalletGetWithAvailableCredits:
      properties:
        wallet_id:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        owner:
          type: integer
          exclusiveMinimum: true
          title: Owner
          minimum: 0
        thumbnail:
          type: string
          title: Thumbnail
        status:
          $ref: '#/components/schemas/WalletStatus'
        created:
          type: string
          format: date-time
          title: Created
        modified:
          type: string
          format: date-time
          title: Modified
        available_credits:
          type: number
          title: Available Credits
      type: object
      required:
      - wallet_id
      - name
      - owner
      - status
      - created
      - modified
      - available_credits
      title: WalletGetWithAvailableCredits
    WalletGroupGet:
      properties:
        gid:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
        read:
          type: boolean
          title: Read
        write:
          type: boolean
          title: Write
        delete:
          type: boolean
          title: Delete
        created:
          type: string
          format: date-time
          title: Created
        modified:
          type: string
          format: date-time
          title: Modified
      type: object
      required:
      - gid
      - read
      - write
      - delete
      - created
      - modified
      title: WalletGroupGet
    WalletStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
      title: WalletStatus
      description: An enumeration.
    Widget:
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/WidgetType'
          description: type of the property
        details:
          anyOf:
          - $ref: '#/components/schemas/TextArea'
          - $ref: '#/components/schemas/SelectBox'
          title: Details
      additionalProperties: false
      type: object
      required:
      - type
      - details
      title: Widget
    WidgetType:
      type: string
      enum:
      - TextArea
      - SelectBox
      title: WidgetType
      description: An enumeration.
    WorkbenchUI:
      properties:
        position:
          allOf:
          - $ref: '#/components/schemas/Position'
          title: Position
          description: The node position in the workbench
        marker:
          $ref: '#/components/schemas/Marker'
      additionalProperties: false
      type: object
      required:
      - position
      title: WorkbenchUI
    WorkbenchViewApiModel:
      properties:
        workbench:
          additionalProperties:
            $ref: '#/components/schemas/Node'
          type: object
          title: Workbench
        ui:
          type: object
          title: Ui
          default: {}
        url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Url
        checkpoint_url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Checkpoint Url
      type: object
      required:
      - workbench
      - url
      - checkpoint_url
      title: WorkbenchViewApiModel
      description: A view (i.e. read-only and visual) of the project's workbench
    Worker:
      properties:
        id:
          type: string
          title: Id
        name:
          type: string
          title: Name
        resources:
          $ref: '#/components/schemas/DictModel_str__PositiveFloat_'
        used_resources:
          $ref: '#/components/schemas/UsedResources'
        memory_limit:
          type: integer
          title: Memory Limit
        metrics:
          $ref: '#/components/schemas/WorkerMetrics'
      type: object
      required:
      - id
      - name
      - resources
      - used_resources
      - memory_limit
      - metrics
      title: Worker
    WorkerMetrics:
      properties:
        cpu:
          type: number
          title: Cpu
          description: consumed % of cpus
        memory:
          type: integer
          title: Memory
          description: consumed memory
        num_fds:
          type: integer
          title: Num Fds
          description: consumed file descriptors
        task_counts:
          allOf:
          - $ref: '#/components/schemas/TaskCounts'
          title: Task Counts
          description: task details
      type: object
      required:
      - cpu
      - memory
      - num_fds
      - task_counts
      title: WorkerMetrics
    _ComputationStart:
      properties:
        force_restart:
          type: boolean
          title: Force Restart
          default: false
        cluster_id:
          type: integer
          minimum: 0
          title: Cluster Id
          default: 0
        subgraph:
          items:
            type: string
          type: array
          uniqueItems: true
          title: Subgraph
          default: []
      type: object
      title: _ComputationStart
    _ComputationStarted:
      properties:
        pipeline_id:
          type: string
          format: uuid
          title: Pipeline Id
          description: ID for created pipeline (=project identifier)
        ref_ids:
          items:
            type: integer
          type: array
          title: Ref Ids
          description: Checkpoints IDs for created pipeline
      type: object
      required:
      - pipeline_id
      title: _ComputationStarted
    _CreateWalletBodyParams:
      properties:
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        thumbnail:
          type: string
          title: Thumbnail
      additionalProperties: false
      type: object
      required:
      - name
      title: _CreateWalletBodyParams
    _PageParams:
      properties:
        retry_2fa_after:
          type: integer
          exclusiveMinimum: true
          title: Retry 2Fa After
          minimum: 0
      type: object
      title: _PageParams
    _ProjectCommentsBodyParams:
      properties:
        contents:
          type: string
          title: Contents
      additionalProperties: false
      type: object
      required:
      - contents
      title: _ProjectCommentsBodyParams
    _ProjectGroupAccess:
      properties:
        gid:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
        accessible:
          type: boolean
          title: Accessible
        inaccessible_services:
          items:
            $ref: '#/components/schemas/ServiceKeyVersion'
          type: array
          title: Inaccessible Services
      type: object
      required:
      - gid
      - accessible
      title: _ProjectGroupAccess
    _ProjectNodePreview:
      properties:
        project_id:
          type: string
          format: uuid
          title: Project Id
        node_id:
          type: string
          format: uuid
          title: Node Id
        screenshots:
          items:
            $ref: '#/components/schemas/NodeScreenshot'
          type: array
          title: Screenshots
      type: object
      required:
      - project_id
      - node_id
      title: _ProjectNodePreview
    _PutWalletBodyParams:
      properties:
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        thumbnail:
          type: string
          title: Thumbnail
        status:
          $ref: '#/components/schemas/WalletStatus'
      additionalProperties: false
      type: object
      required:
      - name
      - status
      title: _PutWalletBodyParams
    _WalletsGroupsBodyParams:
      properties:
        read:
          type: boolean
          title: Read
        write:
          type: boolean
          title: Write
        delete:
          type: boolean
          title: Delete
      additionalProperties: false
      type: object
      required:
      - read
      - write
      - delete
      title: _WalletsGroupsBodyParams
    models_library__api_schemas_webserver__catalog__ServiceGet:
      properties:
        name:
          type: string
          title: Name
          description: short, human readable name for the node
          example: Fast Counter
        thumbnail:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Thumbnail
          description: url to the thumbnail
        description:
          type: string
          title: Description
          description: human readable description of the purpose of the node
        deprecated:
          type: string
          format: date-time
          title: Deprecated
          description: If filled with a date, then the service is to be deprecated
            at that date (e.g. cannot start anymore)
        classifiers:
          items:
            type: string
          type: array
          title: Classifiers
        quality:
          type: object
          title: Quality
          default: {}
        accessRights:
          additionalProperties:
            $ref: '#/components/schemas/ServiceGroupAccessRights'
          type: object
          title: Accessrights
          description: service access rights per group id
        key:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Key
          description: distinctive name for the node based on the docker registry
            path
        version:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Version
          description: service version number
        integration-version:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Integration-Version
          description: integration version number
        type:
          allOf:
          - $ref: '#/components/schemas/ServiceType'
          description: service type
        badges:
          items:
            $ref: '#/components/schemas/Badge'
          type: array
          title: Badges
        authors:
          items:
            $ref: '#/components/schemas/Author'
          type: array
          minItems: 1
          title: Authors
        contact:
          type: string
          format: email
          title: Contact
          description: email to correspond to the authors about the node
        inputs:
          type: object
          title: Inputs
          description: inputs with extended information
        outputs:
          type: object
          title: Outputs
          description: outputs with extended information
        boot-options:
          type: object
          title: Boot-Options
          description: Service defined boot options. These get injected in the service
            as env variables.
        min-visible-inputs:
          type: integer
          minimum: 0
          title: Min-Visible-Inputs
          description: The number of 'data type inputs' displayed by default in the
            UI. When None all 'data type inputs' are displayed.
        owner:
          type: string
          format: email
          title: Owner
      type: object
      required:
      - name
      - description
      - key
      - version
      - type
      - authors
      - contact
      - inputs
      - outputs
      title: ServiceGet
      description: 'Static metadata for a service injected in the image labels


        This is one to one with node-meta-v0.0.1.json'
      example:
        name: File Picker
        description: description
        classifiers: []
        quality: {}
        accessRights:
          '1':
            execute_access: true
            write_access: false
          '4':
            execute_access: true
            write_access: true
        key: simcore/services/frontend/file-picker
        version: 1.0.0
        type: dynamic
        authors:
        - name: Red Pandas
          email: redpandas@wonderland.com
        contact: redpandas@wonderland.com
        inputs:
          input0:
            label: Acceleration
            description: acceleration with units
            type: ref_contentSchema
            contentSchema:
              title: Acceleration
              type: number
              x_unit: m/s**2
            keyId: input_1
            unitLong: meter/second<sup>3</sup>
            unitShort: m/s<sup>3</sup>
        outputs:
          outFile:
            displayOrder: 2
            label: Time Slept
            description: Time the service waited before completion
            type: number
            unit: second
            unitLong: seconds
            unitShort: sec
            keyId: output_2
        owner: redpandas@wonderland.com
    simcore_service_webserver__studies_dispatcher___rest_handlers__ServiceGet:
      properties:
        key:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Key
          description: Service key ID
        title:
          type: string
          title: Title
          description: Service name for display
        description:
          type: string
          title: Description
          description: Long description of the service
        thumbnail:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Thumbnail
          description: Url to service thumbnail
        file_extensions:
          items:
            type: string
          type: array
          title: File Extensions
          description: File extensions that this service can process
        view_url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: View Url
          description: Redirection to open a service in osparc (see /view)
      type: object
      required:
      - key
      - title
      - description
      - thumbnail
      - view_url
      title: ServiceGet
      example:
        key: simcore/services/dynamic/sim4life
        title: Sim4Life Mattermost
        description: It is also sim4life for the web
        thumbnail: https://via.placeholder.com/170x120.png
        file_extensions:
        - smash
        - h5
        view_url: https://host.com/view?viewer_key=simcore/services/dynamic/raw-graphs&viewer_version=1.2.3
