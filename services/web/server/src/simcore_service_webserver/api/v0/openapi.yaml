openapi: 3.0.0
info:
  title: osparc-simcore RESTful API
  version: 0.5.1
  description: RESTful API designed for web clients
  contact:
    name: IT'IS Foundation
    email: support@simcore.io
  license:
    name: MIT
    url: 'https://github.com/ITISFoundation/osparc-simcore/blob/master/LICENSE'
servers:
  - description: API server
    url: /v0
  - description: Development server
    url: 'http://{host}:{port}/{basePath}'
    variables:
      host:
        default: localhost
      port:
        default: '8001'
      basePath:
        enum:
          - v0
        default: v0
tags:
  - name: authentication
  - name: user
  - name: project
  - name: catalog
  - name: storage
  - name: service
  - name: activity
  - name: tag
    description: |
      Grouping the paths and operations that perform changes on the TAG entity.
      Tags are customized visual elements that help the user group and quickly identify different items
      on the interface. They can also be used for searching and filtering purposes.
  - name: node
    description: |
      The simcore frontend provides a bunch of custom ui elements for nodes to interact with users.
      The frontend uses these api calls to query the nodes about the gui elemets they want to use, and it
      defines the protocol for the frontend to interact with the node.
  - name: configuration
  - name: maintenance
  - name: publications
    description: |
      oSPARC users can make publications. Starting from submission of new service candidates, but this could
      end up accepting other types of publications.
paths:
  /:
    get:
      tags:
        - maintenance
      summary: run check
      operationId: check_running
      responses:
        '200':
          description: Service information
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                      status:
                        type: string
                      api_version:
                        type: string
                      version:
                        type: string
                    example:
                      name: simcore-director-service
                      status: SERVICE_RUNNING
                      api_version: 0.1.0-dev+NJuzzD9S
                      version: 0.1.0-dev+N127Mfv9H
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  /health:
    get:
      tags:
        - maintenance
      summary: health check
      operationId: check_health
      responses:
        '200':
          description: Service information
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                      status:
                        type: string
                      api_version:
                        type: string
                      version:
                        type: string
                    example:
                      name: simcore-director-service
                      status: SERVICE_RUNNING
                      api_version: 0.1.0-dev+NJuzzD9S
                      version: 0.1.0-dev+N127Mfv9H
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  '/check/{action}':
    post:
      tags:
        - maintenance
      summary: service test endpoint
      operationId: check_action
      parameters:
        - in: path
          required: true
          name: action
          schema:
            type: string
            default: echo
            enum:
              - fail
              - echo
        - in: query
          name: data
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - path_value
                - query_value
                - body_value
              properties:
                path_value:
                  type: string
                query_value:
                  type: string
                body_value:
                  type: object
                  additionalProperties:
                    type: string
              example:
                path_value: foo
                query_value: bar
                body_value:
                  key1: value1
                  key2: value2
      responses:
        '200':
          description: Echoes response based on action
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - path_value
                      - query_value
                      - body_value
                    properties:
                      path_value:
                        type: string
                      query_value:
                        type: string
                      body_value:
                        type: object
                        additionalProperties:
                          type: string
                    example:
                      path_value: foo
                      query_value: bar
                      body_value:
                        key1: value1
                        key2: value2
                  error:
                    nullable: true
                    default: null
        default:
          description: Returns enveloped payload w/ or w/o data
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - path_value
                      - query_value
                      - body_value
                    properties:
                      path_value:
                        type: string
                      query_value:
                        type: string
                      body_value:
                        type: object
                        additionalProperties:
                          type: string
                    example:
                      path_value: foo
                      query_value: bar
                      body_value:
                        key1: value1
                        key2: value2
                  error:
                    nullable: true
                    default: null
  /config:
    get:
      summary: Front end runtime configuration
      operationId: get_config
      tags:
        - configuration
      responses:
        '200':
          description: configuration details
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      invitation_required:
                        type: boolean
                    example:
                      invitation_required: true
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  /auth/register:
    post:
      operationId: auth_register
      tags:
        - authentication
      requestBody:
        description: user registration
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                confirm:
                  type: string
                invitation:
                  type: string
                  description: Invitation code
              required:
                - email
                - password
              example:
                email: foo@mymail.com
                password: my secret
                confirm: my secret
                invitation: 33c451d4-17b7-4e65-9880-694559b8ffc2
        required: true
      responses:
        '200':
          description: User has been succesfully registered.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      level:
                        description: log level
                        type: string
                        default: INFO
                        enum:
                          - DEBUG
                          - WARNING
                          - INFO
                          - ERROR
                      message:
                        description: 'log message. If logger is USER, then it MUST be human readable'
                        type: string
                      logger:
                        description: name of the logger receiving this message
                        type: string
                    required:
                      - message
                    example:
                      message: 'Hi there, Mr user'
                      level: INFO
                      logger: user-logger
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  /auth/login:
    post:
      summary: user logs in
      tags:
        - authentication
      operationId: auth_login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              example:
                email: foo@mymail.com
                password: my secret
      responses:
        '200':
          description: Succesfully logged in
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      level:
                        description: log level
                        type: string
                        default: INFO
                        enum:
                          - DEBUG
                          - WARNING
                          - INFO
                          - ERROR
                      message:
                        description: 'log message. If logger is USER, then it MUST be human readable'
                        type: string
                      logger:
                        description: name of the logger receiving this message
                        type: string
                    required:
                      - message
                    example:
                      message: 'Hi there, Mr user'
                      level: INFO
                      logger: user-logger
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  /auth/logout:
    post:
      tags:
        - authentication
      operationId: auth_logout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                client_session_id:
                  type: string
                  example: 5ac57685-c40f-448f-8711-70be1936fd63
      responses:
        '200':
          description: Succesfully logged out
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      level:
                        description: log level
                        type: string
                        default: INFO
                        enum:
                          - DEBUG
                          - WARNING
                          - INFO
                          - ERROR
                      message:
                        description: 'log message. If logger is USER, then it MUST be human readable'
                        type: string
                      logger:
                        description: name of the logger receiving this message
                        type: string
                    required:
                      - message
                    example:
                      message: 'Hi there, Mr user'
                      level: INFO
                      logger: user-logger
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  /auth/reset-password:
    post:
      summary: a non logged-in user requests a password reset
      tags:
        - authentication
      operationId: auth_reset_password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
              example:
                email: foo@mymail.com
      responses:
        '200':
          description: confirmation email sent to user
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      level:
                        description: log level
                        type: string
                        default: INFO
                        enum:
                          - DEBUG
                          - WARNING
                          - INFO
                          - ERROR
                      message:
                        description: 'log message. If logger is USER, then it MUST be human readable'
                        type: string
                      logger:
                        description: name of the logger receiving this message
                        type: string
                    required:
                      - message
                    example:
                      message: 'Hi there, Mr user'
                      level: INFO
                      logger: user-logger
                  error:
                    nullable: true
                    default: null
        '503':
          description: failed to send confirmation email
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  '/auth/reset-password/{code}':
    post:
      tags:
        - authentication
      summary: changes password using a token code without being logged in
      operationId: auth_reset_password_allowed
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - password
                - confirm
              properties:
                password:
                  type: string
                confirm:
                  type: string
              example:
                password: my secret
                confirm: my secret
      responses:
        '200':
          description: password was successfully changed
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      level:
                        description: log level
                        type: string
                        default: INFO
                        enum:
                          - DEBUG
                          - WARNING
                          - INFO
                          - ERROR
                      message:
                        description: 'log message. If logger is USER, then it MUST be human readable'
                        type: string
                      logger:
                        description: name of the logger receiving this message
                        type: string
                    required:
                      - message
                    example:
                      message: 'Hi there, Mr user'
                      level: INFO
                      logger: user-logger
                  error:
                    nullable: true
                    default: null
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  /auth/change-email:
    post:
      summary: logged in user changes email
      tags:
        - authentication
      operationId: auth_change_email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
              example:
                email: foo@mymail.com
      responses:
        '200':
          description: confirmation sent to new email to complete operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      level:
                        description: log level
                        type: string
                        default: INFO
                        enum:
                          - DEBUG
                          - WARNING
                          - INFO
                          - ERROR
                      message:
                        description: 'log message. If logger is USER, then it MUST be human readable'
                        type: string
                      logger:
                        description: name of the logger receiving this message
                        type: string
                    required:
                      - message
                    example:
                      message: 'Hi there, Mr user'
                      level: INFO
                      logger: user-logger
                  error:
                    nullable: true
                    default: null
        '401':
          description: unauthorized user. Login required
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
        '503':
          description: unable to send confirmation email
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  /auth/change-password:
    post:
      summary: logged in user changes password
      tags:
        - authentication
      operationId: auth_change_password
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - current
                - new
                - confirm
              properties:
                current:
                  type: string
                new:
                  type: string
                confirm:
                  type: string
              example:
                current: my secret
                new: my new secret
                confirm: my new secret
      responses:
        '200':
          description: password was successfully changed
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      level:
                        description: log level
                        type: string
                        default: INFO
                        enum:
                          - DEBUG
                          - WARNING
                          - INFO
                          - ERROR
                      message:
                        description: 'log message. If logger is USER, then it MUST be human readable'
                        type: string
                      logger:
                        description: name of the logger receiving this message
                        type: string
                    required:
                      - message
                    example:
                      message: 'Hi there, Mr user'
                      level: INFO
                      logger: user-logger
                  error:
                    nullable: true
                    default: null
        '401':
          description: unauthorized user. Login required
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
        '409':
          description: mismatch between new and confirmation passwords
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
        '422':
          description: current password is invalid
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  '/auth/confirmation/{code}':
    get:
      summary: email link sent to user to confirm an action
      tags:
        - authentication
      operationId: auth_confirmation
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
      responses:
        3XX:
          description: redirection to specific ui application page
  /auth/api-keys:
    get:
      summary: lists display names of API keys by this user
      tags:
        - authentication
      operationId: list_api_keys
      responses:
        '200':
          description: returns the display names of API keys
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '401':
          description: requires login to  list keys
        '403':
          description: not enough permissions to list keys
    post:
      summary: creates API keys to access public API
      tags:
        - authentication
      operationId: create_api_key
      requestBody:
        description: user registration
        content:
          application/json:
            schema:
              type: object
              properties:
                display_name:
                  type: string
      responses:
        '200':
          description: Authorization granted returning API key
          content:
            application/json:
              schema:
                type: object
                properties:
                  display_name:
                    type: string
                  api_key:
                    type: string
                  api_secret:
                    type: string
        '400':
          description: key name requested is invalid
        '401':
          description: requires login to  create a key
        '403':
          description: not enough permissions to create a key
    delete:
      summary: deletes API key by name
      tags:
        - authentication
      operationId: delete_api_key
      requestBody:
        description: deletes given api key by name
        content:
          application/json:
            schema:
              type: object
              properties:
                display_name:
                  type: string
      responses:
        '204':
          description: api key successfully deleted
        '401':
          description: requires login to  delete a key
        '403':
          description: not enough permissions to delete a key
  /me:
    get:
      operationId: get_my_profile
      tags:
        - user
      responses:
        '200':
          description: current user profile
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    allOf:
                      - type: object
                        properties:
                          first_name:
                            type: string
                          last_name:
                            type: string
                        example:
                          first_name: Pedro
                          last_name: Crespo
                      - type: object
                        properties:
                          login:
                            type: string
                            format: email
                          role:
                            type: string
                          groups:
                            type: object
                            properties:
                              me:
                                type: object
                                properties:
                                  gid:
                                    description: the group ID
                                    type: string
                                  label:
                                    description: the group name
                                    type: string
                                  description:
                                    description: the group description
                                    type: string
                                  thumbnail:
                                    description: url to the group thumbnail
                                    type: string
                                    format: uri
                                  accessRights:
                                    description: defines acesss rights for the user
                                    type: object
                                    properties:
                                      read:
                                        type: boolean
                                      write:
                                        type: boolean
                                      delete:
                                        type: boolean
                                    required:
                                      - read
                                      - write
                                      - delete
                                    example:
                                      - read: true
                                        write: false
                                        delete: false
                                      - read: true
                                        write: true
                                        delete: false
                                      - read: true
                                        write: true
                                        delete: true
                                required:
                                  - gid
                                  - label
                                  - description
                                  - accessRights
                                example:
                                  - gid: '27'
                                    label: A user
                                    description: A very special user
                                    thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                                  - gid: '1'
                                    label: ITIS Foundation
                                    description: The Foundation for Research on Information Technologies in Society
                                    thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                                  - gid: '0'
                                    label: All
                                    description: Open to all users
                                    thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                              organizations:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    gid:
                                      description: the group ID
                                      type: string
                                    label:
                                      description: the group name
                                      type: string
                                    description:
                                      description: the group description
                                      type: string
                                    thumbnail:
                                      description: url to the group thumbnail
                                      type: string
                                      format: uri
                                    accessRights:
                                      description: defines acesss rights for the user
                                      type: object
                                      properties:
                                        read:
                                          type: boolean
                                        write:
                                          type: boolean
                                        delete:
                                          type: boolean
                                      required:
                                        - read
                                        - write
                                        - delete
                                      example:
                                        - read: true
                                          write: false
                                          delete: false
                                        - read: true
                                          write: true
                                          delete: false
                                        - read: true
                                          write: true
                                          delete: true
                                  required:
                                    - gid
                                    - label
                                    - description
                                    - accessRights
                                  example:
                                    - gid: '27'
                                      label: A user
                                      description: A very special user
                                      thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                                    - gid: '1'
                                      label: ITIS Foundation
                                      description: The Foundation for Research on Information Technologies in Society
                                      thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                                    - gid: '0'
                                      label: All
                                      description: Open to all users
                                      thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                              all:
                                type: object
                                properties:
                                  gid:
                                    description: the group ID
                                    type: string
                                  label:
                                    description: the group name
                                    type: string
                                  description:
                                    description: the group description
                                    type: string
                                  thumbnail:
                                    description: url to the group thumbnail
                                    type: string
                                    format: uri
                                  accessRights:
                                    description: defines acesss rights for the user
                                    type: object
                                    properties:
                                      read:
                                        type: boolean
                                      write:
                                        type: boolean
                                      delete:
                                        type: boolean
                                    required:
                                      - read
                                      - write
                                      - delete
                                    example:
                                      - read: true
                                        write: false
                                        delete: false
                                      - read: true
                                        write: true
                                        delete: false
                                      - read: true
                                        write: true
                                        delete: true
                                required:
                                  - gid
                                  - label
                                  - description
                                  - accessRights
                                example:
                                  - gid: '27'
                                    label: A user
                                    description: A very special user
                                    thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                                  - gid: '1'
                                    label: ITIS Foundation
                                    description: The Foundation for Research on Information Technologies in Society
                                    thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                                  - gid: '0'
                                    label: All
                                    description: Open to all users
                                    thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                          gravatar_id:
                            type: string
                    example:
                      login: pcrespov@foo.com
                      role: Admin
                      gravatar_id: 205e460b479e2e5b48aec07710c08d50
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
    put:
      operationId: update_my_profile
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                  example:
                    first_name: Pedro
                    last_name: Crespo
              example:
                first_name: Pedro
                last_name: Crespo
      responses:
        '204':
          description: updated profile
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  /me/tokens:
    get:
      summary: List tokens
      operationId: list_tokens
      tags:
        - user
      responses:
        '200':
          description: list of tokens
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      description: api keys for third party services
                      type: object
                      properties:
                        service:
                          description: uniquely identifies the service where this token is used
                          type: string
                        token_key:
                          description: basic token key
                          type: string
                          format: uuid
                        token_secret:
                          type: string
                          format: uuid
                      required:
                        - service
                        - token_key
                      example:
                        service: github-api-v1
                        token_key: N1BP5ZSpB
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
    post:
      summary: Create tokens
      operationId: create_tokens
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - data
              properties:
                data:
                  description: api keys for third party services
                  type: object
                  properties:
                    service:
                      description: uniquely identifies the service where this token is used
                      type: string
                    token_key:
                      description: basic token key
                      type: string
                      format: uuid
                    token_secret:
                      type: string
                      format: uuid
                  required:
                    - service
                    - token_key
                  example:
                    service: github-api-v1
                    token_key: N1BP5ZSpB
                error:
                  nullable: true
                  default: null
      responses:
        '201':
          description: token created
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    description: api keys for third party services
                    type: object
                    properties:
                      service:
                        description: uniquely identifies the service where this token is used
                        type: string
                      token_key:
                        description: basic token key
                        type: string
                        format: uuid
                      token_secret:
                        type: string
                        format: uuid
                    required:
                      - service
                      - token_key
                    example:
                      service: github-api-v1
                      token_key: N1BP5ZSpB
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  '/me/tokens/{service}':
    parameters:
      - name: service
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Gets specific token
      operationId: get_token
      tags:
        - user
      responses:
        '200':
          description: got detailed token
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    description: api keys for third party services
                    type: object
                    properties:
                      service:
                        description: uniquely identifies the service where this token is used
                        type: string
                      token_key:
                        description: basic token key
                        type: string
                        format: uuid
                      token_secret:
                        type: string
                        format: uuid
                    required:
                      - service
                      - token_key
                    example:
                      service: github-api-v1
                      token_key: N1BP5ZSpB
                  error:
                    nullable: true
                    default: null
    put:
      summary: Updates token
      operationId: update_token
      tags:
        - user
      responses:
        '204':
          description: token has been successfully updated
    delete:
      summary: Delete token
      operationId: delete_token
      tags:
        - user
      responses:
        '204':
          description: token has been successfully deleted
  /groups:
    get:
      summary: List my groups
      operationId: list_groups
      tags:
        - group
      responses:
        '200':
          description: list of the groups I belonged to
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      me:
                        type: object
                        properties:
                          gid:
                            description: the group ID
                            type: string
                          label:
                            description: the group name
                            type: string
                          description:
                            description: the group description
                            type: string
                          thumbnail:
                            description: url to the group thumbnail
                            type: string
                            format: uri
                          accessRights:
                            description: defines acesss rights for the user
                            type: object
                            properties:
                              read:
                                type: boolean
                              write:
                                type: boolean
                              delete:
                                type: boolean
                            required:
                              - read
                              - write
                              - delete
                            example:
                              - read: true
                                write: false
                                delete: false
                              - read: true
                                write: true
                                delete: false
                              - read: true
                                write: true
                                delete: true
                        required:
                          - gid
                          - label
                          - description
                          - accessRights
                        example:
                          - gid: '27'
                            label: A user
                            description: A very special user
                            thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                          - gid: '1'
                            label: ITIS Foundation
                            description: The Foundation for Research on Information Technologies in Society
                            thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                          - gid: '0'
                            label: All
                            description: Open to all users
                            thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                      organizations:
                        type: array
                        items:
                          type: object
                          properties:
                            gid:
                              description: the group ID
                              type: string
                            label:
                              description: the group name
                              type: string
                            description:
                              description: the group description
                              type: string
                            thumbnail:
                              description: url to the group thumbnail
                              type: string
                              format: uri
                            accessRights:
                              description: defines acesss rights for the user
                              type: object
                              properties:
                                read:
                                  type: boolean
                                write:
                                  type: boolean
                                delete:
                                  type: boolean
                              required:
                                - read
                                - write
                                - delete
                              example:
                                - read: true
                                  write: false
                                  delete: false
                                - read: true
                                  write: true
                                  delete: false
                                - read: true
                                  write: true
                                  delete: true
                          required:
                            - gid
                            - label
                            - description
                            - accessRights
                          example:
                            - gid: '27'
                              label: A user
                              description: A very special user
                              thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                            - gid: '1'
                              label: ITIS Foundation
                              description: The Foundation for Research on Information Technologies in Society
                              thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                            - gid: '0'
                              label: All
                              description: Open to all users
                              thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                      all:
                        type: object
                        properties:
                          gid:
                            description: the group ID
                            type: string
                          label:
                            description: the group name
                            type: string
                          description:
                            description: the group description
                            type: string
                          thumbnail:
                            description: url to the group thumbnail
                            type: string
                            format: uri
                          accessRights:
                            description: defines acesss rights for the user
                            type: object
                            properties:
                              read:
                                type: boolean
                              write:
                                type: boolean
                              delete:
                                type: boolean
                            required:
                              - read
                              - write
                              - delete
                            example:
                              - read: true
                                write: false
                                delete: false
                              - read: true
                                write: true
                                delete: false
                              - read: true
                                write: true
                                delete: true
                        required:
                          - gid
                          - label
                          - description
                          - accessRights
                        example:
                          - gid: '27'
                            label: A user
                            description: A very special user
                            thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                          - gid: '1'
                            label: ITIS Foundation
                            description: The Foundation for Research on Information Technologies in Society
                            thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                          - gid: '0'
                            label: All
                            description: Open to all users
                            thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
    post:
      summary: Create a new group
      operationId: create_group
      tags:
        - group
      requestBody:
        required: true
        description: the group to create
        content:
          application/json:
            schema:
              type: object
              properties:
                gid:
                  description: the group ID
                  type: string
                label:
                  description: the group name
                  type: string
                description:
                  description: the group description
                  type: string
                thumbnail:
                  description: url to the group thumbnail
                  type: string
                  format: uri
                accessRights:
                  description: defines acesss rights for the user
                  type: object
                  properties:
                    read:
                      type: boolean
                    write:
                      type: boolean
                    delete:
                      type: boolean
                  required:
                    - read
                    - write
                    - delete
                  example:
                    - read: true
                      write: false
                      delete: false
                    - read: true
                      write: true
                      delete: false
                    - read: true
                      write: true
                      delete: true
              required:
                - gid
                - label
                - description
                - accessRights
              example:
                - gid: '27'
                  label: A user
                  description: A very special user
                  thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                - gid: '1'
                  label: ITIS Foundation
                  description: The Foundation for Research on Information Technologies in Society
                  thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                - gid: '0'
                  label: All
                  description: Open to all users
                  thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
      responses:
        '201':
          description: group created
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      gid:
                        description: the group ID
                        type: string
                      label:
                        description: the group name
                        type: string
                      description:
                        description: the group description
                        type: string
                      thumbnail:
                        description: url to the group thumbnail
                        type: string
                        format: uri
                      accessRights:
                        description: defines acesss rights for the user
                        type: object
                        properties:
                          read:
                            type: boolean
                          write:
                            type: boolean
                          delete:
                            type: boolean
                        required:
                          - read
                          - write
                          - delete
                        example:
                          - read: true
                            write: false
                            delete: false
                          - read: true
                            write: true
                            delete: false
                          - read: true
                            write: true
                            delete: true
                    required:
                      - gid
                      - label
                      - description
                      - accessRights
                    example:
                      - gid: '27'
                        label: A user
                        description: A very special user
                        thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                      - gid: '1'
                        label: ITIS Foundation
                        description: The Foundation for Research on Information Technologies in Society
                        thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                      - gid: '0'
                        label: All
                        description: Open to all users
                        thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  '/groups/{gid}':
    parameters:
      - name: gid
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - group
      summary: Gets one group details
      operationId: get_group
      responses:
        '200':
          description: got group
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      gid:
                        description: the group ID
                        type: string
                      label:
                        description: the group name
                        type: string
                      description:
                        description: the group description
                        type: string
                      thumbnail:
                        description: url to the group thumbnail
                        type: string
                        format: uri
                      accessRights:
                        description: defines acesss rights for the user
                        type: object
                        properties:
                          read:
                            type: boolean
                          write:
                            type: boolean
                          delete:
                            type: boolean
                        required:
                          - read
                          - write
                          - delete
                        example:
                          - read: true
                            write: false
                            delete: false
                          - read: true
                            write: true
                            delete: false
                          - read: true
                            write: true
                            delete: true
                    required:
                      - gid
                      - label
                      - description
                      - accessRights
                    example:
                      - gid: '27'
                        label: A user
                        description: A very special user
                        thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                      - gid: '1'
                        label: ITIS Foundation
                        description: The Foundation for Research on Information Technologies in Society
                        thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                      - gid: '0'
                        label: All
                        description: Open to all users
                        thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
    patch:
      summary: Update one group
      operationId: update_group
      tags:
        - group
      requestBody:
        required: true
        description: the group to update
        content:
          application/json:
            schema:
              type: object
              properties:
                gid:
                  description: the group ID
                  type: string
                label:
                  description: the group name
                  type: string
                description:
                  description: the group description
                  type: string
                thumbnail:
                  description: url to the group thumbnail
                  type: string
                  format: uri
                accessRights:
                  description: defines acesss rights for the user
                  type: object
                  properties:
                    read:
                      type: boolean
                    write:
                      type: boolean
                    delete:
                      type: boolean
                  required:
                    - read
                    - write
                    - delete
                  example:
                    - read: true
                      write: false
                      delete: false
                    - read: true
                      write: true
                      delete: false
                    - read: true
                      write: true
                      delete: true
              required:
                - gid
                - label
                - description
                - accessRights
              example:
                - gid: '27'
                  label: A user
                  description: A very special user
                  thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                - gid: '1'
                  label: ITIS Foundation
                  description: The Foundation for Research on Information Technologies in Society
                  thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                - gid: '0'
                  label: All
                  description: Open to all users
                  thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
      responses:
        '200':
          description: the modified group
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      gid:
                        description: the group ID
                        type: string
                      label:
                        description: the group name
                        type: string
                      description:
                        description: the group description
                        type: string
                      thumbnail:
                        description: url to the group thumbnail
                        type: string
                        format: uri
                      accessRights:
                        description: defines acesss rights for the user
                        type: object
                        properties:
                          read:
                            type: boolean
                          write:
                            type: boolean
                          delete:
                            type: boolean
                        required:
                          - read
                          - write
                          - delete
                        example:
                          - read: true
                            write: false
                            delete: false
                          - read: true
                            write: true
                            delete: false
                          - read: true
                            write: true
                            delete: true
                    required:
                      - gid
                      - label
                      - description
                      - accessRights
                    example:
                      - gid: '27'
                        label: A user
                        description: A very special user
                        thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                      - gid: '1'
                        label: ITIS Foundation
                        description: The Foundation for Research on Information Technologies in Society
                        thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                      - gid: '0'
                        label: All
                        description: Open to all users
                        thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
    delete:
      tags:
        - group
      summary: Deletes one group
      operationId: delete_group
      responses:
        '204':
          description: group has been successfully deleted
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  '/groups/{gid}/users':
    parameters:
      - name: gid
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - group
      summary: Gets list of users in group
      operationId: get_group_users
      responses:
        '200':
          description: got list of users and their respective rights
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      allOf:
                        - type: object
                          properties:
                            first_name:
                              type: string
                              description: the user first name
                            last_name:
                              type: string
                              description: the user last name
                            login:
                              type: string
                              format: email
                              description: the user login email
                            gravatar_id:
                              type: string
                              description: the user gravatar id hash
                            id:
                              type: string
                              description: the user id
                            gid:
                              type: string
                              description: the user primary gid
                          example:
                            first_name: Mr
                            last_name: Smith
                            login: mr.smith@matrix.com
                            gravatar_id: a1af5c6ecc38e81f29695f01d6ceb540
                            id: '1'
                            gid: '3'
                        - description: defines acesss rights for the user
                          type: object
                          properties:
                            read:
                              type: boolean
                            write:
                              type: boolean
                            delete:
                              type: boolean
                          required:
                            - read
                            - write
                            - delete
                          example:
                            - read: true
                              write: false
                              delete: false
                            - read: true
                              write: true
                              delete: false
                            - read: true
                              write: true
                              delete: true
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
    post:
      tags:
        - group
      summary: Adds a user in the group
      operationId: add_group_user
      requestBody:
        required: true
        description: the user to add
        content:
          application/json:
            schema:
              anyOf:
                - type: object
                  required:
                    - uid
                  properties:
                    uid:
                      type: string
                      description: the user id
                - type: object
                  required:
                    - email
                  properties:
                    email:
                      type: string
                      format: email
                      description: the user email
      responses:
        '204':
          description: user successfully added
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  '/groups/{gid}/users/{uid}':
    parameters:
      - name: gid
        in: path
        required: true
        schema:
          type: string
      - name: uid
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - group
      summary: Gets specific user in group
      operationId: get_group_user
      responses:
        '200':
          description: got user
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    allOf:
                      - type: object
                        properties:
                          first_name:
                            type: string
                            description: the user first name
                          last_name:
                            type: string
                            description: the user last name
                          login:
                            type: string
                            format: email
                            description: the user login email
                          gravatar_id:
                            type: string
                            description: the user gravatar id hash
                          id:
                            type: string
                            description: the user id
                          gid:
                            type: string
                            description: the user primary gid
                        example:
                          first_name: Mr
                          last_name: Smith
                          login: mr.smith@matrix.com
                          gravatar_id: a1af5c6ecc38e81f29695f01d6ceb540
                          id: '1'
                          gid: '3'
                      - description: defines acesss rights for the user
                        type: object
                        properties:
                          read:
                            type: boolean
                          write:
                            type: boolean
                          delete:
                            type: boolean
                        required:
                          - read
                          - write
                          - delete
                        example:
                          - read: true
                            write: false
                            delete: false
                          - read: true
                            write: true
                            delete: false
                          - read: true
                            write: true
                            delete: true
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
    patch:
      tags:
        - group
      summary: Modify specific user in group
      operationId: update_group_user
      requestBody:
        required: true
        description: the user rights to modify
        content:
          application/json:
            schema:
              type: object
              properties:
                accessRights:
                  description: defines acesss rights for the user
                  type: object
                  properties:
                    read:
                      type: boolean
                    write:
                      type: boolean
                    delete:
                      type: boolean
                  required:
                    - read
                    - write
                    - delete
                  example:
                    - read: true
                      write: false
                      delete: false
                    - read: true
                      write: true
                      delete: false
                    - read: true
                      write: true
                      delete: true
              required:
                - accessRights
      responses:
        '200':
          description: modified user
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    allOf:
                      - type: object
                        properties:
                          first_name:
                            type: string
                            description: the user first name
                          last_name:
                            type: string
                            description: the user last name
                          login:
                            type: string
                            format: email
                            description: the user login email
                          gravatar_id:
                            type: string
                            description: the user gravatar id hash
                          id:
                            type: string
                            description: the user id
                          gid:
                            type: string
                            description: the user primary gid
                        example:
                          first_name: Mr
                          last_name: Smith
                          login: mr.smith@matrix.com
                          gravatar_id: a1af5c6ecc38e81f29695f01d6ceb540
                          id: '1'
                          gid: '3'
                      - description: defines acesss rights for the user
                        type: object
                        properties:
                          read:
                            type: boolean
                          write:
                            type: boolean
                          delete:
                            type: boolean
                        required:
                          - read
                          - write
                          - delete
                        example:
                          - read: true
                            write: false
                            delete: false
                          - read: true
                            write: true
                            delete: false
                          - read: true
                            write: true
                            delete: true
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
    delete:
      tags:
        - group
      summary: Delete specific user in group
      operationId: delete_group_user
      responses:
        '204':
          description: successfully removed user
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  /storage/locations:
    get:
      summary: Get available storage locations
      tags:
        - storage
      operationId: get_storage_locations
      responses:
        '200':
          description: List of availabe storage locations
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    id:
                      type: number
                  example:
                    filename: simcore.s3
                    id: 0
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  '/storage/locations/{location_id}/files/metadata':
    get:
      summary: Get list of file meta data
      tags:
        - storage
      operationId: get_files_metadata
      parameters:
        - name: location_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: list of file meta-datas
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    file_uuid:
                      type: string
                    location_id:
                      type: string
                    location:
                      type: string
                    bucket_name:
                      type: string
                    object_name:
                      type: string
                    project_id:
                      type: string
                    project_name:
                      type: string
                    node_id:
                      type: string
                    node_name:
                      type: string
                    file_name:
                      type: string
                    user_id:
                      type: string
                    user_name:
                      type: string
                    file_id:
                      type: string
                    raw_file_path:
                      type: string
                    display_file_path:
                      type: string
                    created_at:
                      type: string
                    last_modified:
                      type: string
                    file_size:
                      type: integer
                    parent_id:
                      type: string
                  example:
                    file_uuid: simcore-testing/105/1000/3
                    location_id: '0'
                    location_name: simcore.s3
                    bucket_name: simcore-testing
                    object_name: 105/10000/3
                    project_id: '105'
                    project_name: futurology
                    node_id: '10000'
                    node_name: alpha
                    file_name: example.txt
                    user_id: '12'
                    user_name: dennis
                    file_id: 'N:package:e263da07-2d89-45a6-8b0f-61061b913873'
                    raw_file_path: Curation/derivatives/subjects/sourcedata/docs/samples/sam_1/sam_1.csv
                    display_file_path: Curation/derivatives/subjects/sourcedata/docs/samples/sam_1/sam_1.csv
                    created_at: '2019-06-19T12:29:03.308611Z'
                    last_modified: '2019-06-19T12:29:03.78852Z'
                    file_size: 73
                    parent_id: 'N:collection:e263da07-2d89-45a6-8b0f-61061b913873'
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  '/storage/locations/{location_id}/files/{fileId}':
    get:
      summary: Returns download link for requested file
      tags:
        - storage
      operationId: download_file
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns presigned link
          content:
            application/json:
              schema:
                type: object
                properties:
                  link:
                    type: string
                example:
                  link: example_link
    put:
      summary: Returns upload link or performs copy operation to datcore
      tags:
        - storage
      operationId: upload_file
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: extra_location
          in: query
          required: false
          schema:
            type: string
        - name: extra_source
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns presigned link
          content:
            application/json:
              schema:
                type: object
                properties:
                  link:
                    type: string
                example:
                  link: example_link
    delete:
      summary: Deletes File
      tags:
        - storage
      operationId: delete_file
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
  '/storage/locations/{location_id}/files/{fileId}/metadata':
    get:
      summary: Get File Metadata
      tags:
        - storage
      operationId: get_file_metadata
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns file metadata
          content:
            application/json:
              schema:
                type: object
                properties:
                  file_uuid:
                    type: string
                  location_id:
                    type: string
                  location:
                    type: string
                  bucket_name:
                    type: string
                  object_name:
                    type: string
                  project_id:
                    type: string
                  project_name:
                    type: string
                  node_id:
                    type: string
                  node_name:
                    type: string
                  file_name:
                    type: string
                  user_id:
                    type: string
                  user_name:
                    type: string
                  file_id:
                    type: string
                  raw_file_path:
                    type: string
                  display_file_path:
                    type: string
                  created_at:
                    type: string
                  last_modified:
                    type: string
                  file_size:
                    type: integer
                  parent_id:
                    type: string
                example:
                  file_uuid: simcore-testing/105/1000/3
                  location_id: '0'
                  location_name: simcore.s3
                  bucket_name: simcore-testing
                  object_name: 105/10000/3
                  project_id: '105'
                  project_name: futurology
                  node_id: '10000'
                  node_name: alpha
                  file_name: example.txt
                  user_id: '12'
                  user_name: dennis
                  file_id: 'N:package:e263da07-2d89-45a6-8b0f-61061b913873'
                  raw_file_path: Curation/derivatives/subjects/sourcedata/docs/samples/sam_1/sam_1.csv
                  display_file_path: Curation/derivatives/subjects/sourcedata/docs/samples/sam_1/sam_1.csv
                  created_at: '2019-06-19T12:29:03.308611Z'
                  last_modified: '2019-06-19T12:29:03.78852Z'
                  file_size: 73
                  parent_id: 'N:collection:e263da07-2d89-45a6-8b0f-61061b913873'
    patch:
      summary: Update File Metadata
      tags:
        - storage
      operationId: update_file_meta_data
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file_uuid:
                  type: string
                location_id:
                  type: string
                location:
                  type: string
                bucket_name:
                  type: string
                object_name:
                  type: string
                project_id:
                  type: string
                project_name:
                  type: string
                node_id:
                  type: string
                node_name:
                  type: string
                file_name:
                  type: string
                user_id:
                  type: string
                user_name:
                  type: string
                file_id:
                  type: string
                raw_file_path:
                  type: string
                display_file_path:
                  type: string
                created_at:
                  type: string
                last_modified:
                  type: string
                file_size:
                  type: integer
                parent_id:
                  type: string
              example:
                file_uuid: simcore-testing/105/1000/3
                location_id: '0'
                location_name: simcore.s3
                bucket_name: simcore-testing
                object_name: 105/10000/3
                project_id: '105'
                project_name: futurology
                node_id: '10000'
                node_name: alpha
                file_name: example.txt
                user_id: '12'
                user_name: dennis
                file_id: 'N:package:e263da07-2d89-45a6-8b0f-61061b913873'
                raw_file_path: Curation/derivatives/subjects/sourcedata/docs/samples/sam_1/sam_1.csv
                display_file_path: Curation/derivatives/subjects/sourcedata/docs/samples/sam_1/sam_1.csv
                created_at: '2019-06-19T12:29:03.308611Z'
                last_modified: '2019-06-19T12:29:03.78852Z'
                file_size: 73
                parent_id: 'N:collection:e263da07-2d89-45a6-8b0f-61061b913873'
      responses:
        '200':
          description: Returns file metadata
          content:
            application/json:
              schema:
                type: object
                properties:
                  file_uuid:
                    type: string
                  location_id:
                    type: string
                  location:
                    type: string
                  bucket_name:
                    type: string
                  object_name:
                    type: string
                  project_id:
                    type: string
                  project_name:
                    type: string
                  node_id:
                    type: string
                  node_name:
                    type: string
                  file_name:
                    type: string
                  user_id:
                    type: string
                  user_name:
                    type: string
                  file_id:
                    type: string
                  raw_file_path:
                    type: string
                  display_file_path:
                    type: string
                  created_at:
                    type: string
                  last_modified:
                    type: string
                  file_size:
                    type: integer
                  parent_id:
                    type: string
                example:
                  file_uuid: simcore-testing/105/1000/3
                  location_id: '0'
                  location_name: simcore.s3
                  bucket_name: simcore-testing
                  object_name: 105/10000/3
                  project_id: '105'
                  project_name: futurology
                  node_id: '10000'
                  node_name: alpha
                  file_name: example.txt
                  user_id: '12'
                  user_name: dennis
                  file_id: 'N:package:e263da07-2d89-45a6-8b0f-61061b913873'
                  raw_file_path: Curation/derivatives/subjects/sourcedata/docs/samples/sam_1/sam_1.csv
                  display_file_path: Curation/derivatives/subjects/sourcedata/docs/samples/sam_1/sam_1.csv
                  created_at: '2019-06-19T12:29:03.308611Z'
                  last_modified: '2019-06-19T12:29:03.78852Z'
                  file_size: 73
                  parent_id: 'N:collection:e263da07-2d89-45a6-8b0f-61061b913873'
  '/storage/locations/{location_id}/datasets/{dataset_id}/metadata':
    get:
      summary: Get Files Metadata
      tags:
        - storage
      operationId: get_files_metadata_dataset
      parameters:
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: dataset_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: list of file meta-datas
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    file_uuid:
                      type: string
                    location_id:
                      type: string
                    location:
                      type: string
                    bucket_name:
                      type: string
                    object_name:
                      type: string
                    project_id:
                      type: string
                    project_name:
                      type: string
                    node_id:
                      type: string
                    node_name:
                      type: string
                    file_name:
                      type: string
                    user_id:
                      type: string
                    user_name:
                      type: string
                    file_id:
                      type: string
                    raw_file_path:
                      type: string
                    display_file_path:
                      type: string
                    created_at:
                      type: string
                    last_modified:
                      type: string
                    file_size:
                      type: integer
                    parent_id:
                      type: string
                  example:
                    file_uuid: simcore-testing/105/1000/3
                    location_id: '0'
                    location_name: simcore.s3
                    bucket_name: simcore-testing
                    object_name: 105/10000/3
                    project_id: '105'
                    project_name: futurology
                    node_id: '10000'
                    node_name: alpha
                    file_name: example.txt
                    user_id: '12'
                    user_name: dennis
                    file_id: 'N:package:e263da07-2d89-45a6-8b0f-61061b913873'
                    raw_file_path: Curation/derivatives/subjects/sourcedata/docs/samples/sam_1/sam_1.csv
                    display_file_path: Curation/derivatives/subjects/sourcedata/docs/samples/sam_1/sam_1.csv
                    created_at: '2019-06-19T12:29:03.308611Z'
                    last_modified: '2019-06-19T12:29:03.78852Z'
                    file_size: 73
                    parent_id: 'N:collection:e263da07-2d89-45a6-8b0f-61061b913873'
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  '/storage/locations/{location_id}/datasets':
    get:
      summary: Get datasets metadata
      tags:
        - storage
      operationId: get_datasets_metadata
      parameters:
        - name: location_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: list of dataset meta-datas
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    dataset_id:
                      type: string
                    display_name:
                      type: string
                  example:
                    dataset_uuid: 'N:id-aaaa'
                    display_name: simcore-testing
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  /services:
    get:
      description: Lists available services in catalog
      tags:
        - service
      operationId: services_get
      parameters:
        - in: query
          name: service_type
          description: |
            The service type:
              * computational - a computational service
              * interactive - an interactive service
          required: false
          schema:
            type: string
            enum:
              - computational
              - interactive
            example: computational
      responses:
        '200':
          description: Returns list of services in catalog
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      title: simcore node
                      description: Description of a simcore node 'class' with input and output
                      type: object
                      additionalProperties: false
                      required:
                        - key
                        - version
                        - type
                        - name
                        - description
                        - authors
                        - contact
                        - inputs
                        - outputs
                      properties:
                        key:
                          type: string
                          description: distinctive name for the node based on the docker registry path
                          pattern: '^(simcore)/(services)/(comp|dynamic)(/[^\s/]+)+$'
                          example: simcore/services/comp/itis/sleeper
                        integration-version:
                          type: string
                          description: integration version number
                          pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                          example: 1.0.0
                        version:
                          type: string
                          description: semantic version number
                          pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                          example: 1.0.0
                        type:
                          type: string
                          description: service type
                          enum:
                            - computational
                            - dynamic
                          example: computational
                        name:
                          type: string
                          description: 'short, human readable name for the node'
                          example: Fast Counter
                        thumbnail:
                          type: string
                          description: url to the thumbanil
                          example: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                        badges:
                          type: array
                          items:
                            type: object
                            required:
                              - name
                              - image
                              - url
                            additionalProperties: false
                            properties:
                              name:
                                type: string
                                description: Name of the subject
                                example: travis-ci
                              image:
                                type: string
                                description: Url to the shield
                                example: 'https://travis-ci.org/ITISFoundation/osparc-simcore.svg?branch=master'
                              url:
                                type: string
                                description: Link to status
                                example: 'https://travis-ci.org/ITISFoundation/osparc-simcore ''State of CI: build, test and pushing images'''
                        description:
                          type: string
                          description: human readable description of the purpose of the node
                          example: Our best node type
                        authors:
                          type: array
                          minItems: 1
                          items:
                            type: object
                            required:
                              - name
                              - email
                            additionalProperties: false
                            properties:
                              name:
                                type: string
                                description: Name of the author
                                example: Sun Bak
                              email:
                                description: Email address
                                type: string
                                format: email
                                example: sun@sense.eight
                              affiliation:
                                description: Affiliation of the author
                                type: string
                                example: Sense8
                        contact:
                          type: string
                          format: email
                          description: email to correspond to the authors about the node
                          example: lab@net.flix
                        inputs:
                          type: object
                          description: definition of the inputs of this node
                          x-patternProperties:
                            '^[-_a-zA-Z0-9]+$':
                              type: object
                              description: all the input configurable for this service
                              additionalProperties: false
                              required:
                                - displayOrder
                                - label
                                - description
                                - type
                              properties:
                                displayOrder:
                                  type: number
                                  description: use this to numerically sort the properties for display
                                  example:
                                    - 1
                                    - -0.2
                                label:
                                  type: string
                                  description: short name for the property
                                  example:
                                    - Age
                                description:
                                  type: string
                                  description: description of the property
                                  example:
                                    - Age in seconds since 1970
                                type:
                                  type: string
                                  pattern: '^(number|integer|boolean|string|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$'
                                  description: data type expected on this input glob matching for data type is allowed
                                  example:
                                    - number
                                    - boolean
                                    - 'data:*/*'
                                    - 'data:text/*'
                                    - 'data:[image/jpeg,image/png]'
                                    - 'data:application/json'
                                    - 'data:application/json;schema=https://my-schema/not/really/schema.json'
                                    - 'data:application/vnd.ms-excel'
                                    - 'data:text/plain'
                                    - 'data:application/hdf5'
                                    - 'data:application/edu.ucdavis@ceclancy.xyz'
                                fileToKeyMap:
                                  description: Place the data associated with the named keys in files
                                  type: object
                                  patternProperties:
                                    .+:
                                      type: string
                                      pattern: '^[-_a-zA-Z0-9]+$'
                                  example:
                                    - dir/input1.txt: key_1
                                      dir33/input2.txt: key2
                                defaultValue:
                                  description: initial value for this input
                                  type:
                                    - string
                                    - number
                                    - integer
                                    - boolean
                                  example:
                                    - Dog
                                    - true
                                widget:
                                  description: custom widget to use instead of the default one determined from the data-type
                                  anyOf:
                                    - type: object
                                      additionalProperties: false
                                      required:
                                        - type
                                      properties:
                                        type:
                                          description: type of the property
                                          type: string
                                          enum:
                                            - TextArea
                                        minHeight:
                                          description: minimum Height of the textarea
                                          type: integer
                                          minimum: 1
                                    - type: object
                                      additionalProperties: false
                                      required:
                                        - type
                                        - structure
                                      properties:
                                        type:
                                          description: type of the property
                                          type: string
                                          enum:
                                            - SelectBox
                                        structure:
                                          type: array
                                          minItems: 1
                                          items:
                                            type: object
                                            additionalProperties: false
                                            required:
                                              - key
                                              - label
                                            properties:
                                              key:
                                                type:
                                                  - string
                                                  - boolean
                                                  - number
                                              label:
                                                type: string
                                            example:
                                              - - key: rat
                                                  label: The Rat
                                                - key: dog
                                                  label: Bello the Dog
                          additionalProperties: true
                        outputs:
                          type: object
                          description: definition of the outputs of this node
                          x-patternProperties:
                            '^[-_a-zA-Z0-9]+$':
                              type: object
                              description: all the output produced by this node
                              additionalProperties: false
                              required:
                                - displayOrder
                                - label
                                - description
                                - type
                              properties:
                                displayOrder:
                                  type: number
                                  description: use this to numerically sort the properties for display
                                  example:
                                    - 1
                                    - -0.2
                                label:
                                  type: string
                                  description: short name for the property
                                  example:
                                    - Age
                                description:
                                  type: string
                                  description: description of the property
                                  example:
                                    - Age in seconds since 1970
                                type:
                                  type: string
                                  pattern: '^(number|integer|boolean|string|data:[^/\s,]+/[^/\s,]+)$'
                                  description: data type expected on this output
                                  example:
                                    - number
                                    - integer
                                    - boolean
                                    - string
                                    - 'data:application/json'
                                    - 'data:application/vnd.ms-excel '
                                    - 'data:text/plain'
                                    - 'data:application/hdf5'
                                fileToKeyMap:
                                  description: Place the data stored in the named files and store it in the locations pointed to by the respective output key.
                                  type: object
                                  patternProperties:
                                    .+:
                                      type: string
                                      pattern: '^[-_a-zA-Z0-9]+$'
                                  example:
                                    - dir/input1.txt: key_1
                                      dir33/input2.txt: key2
                          additionalProperties: true
                  error:
                    nullable: true
                    default: null
        '401':
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  '/computation/pipeline/{project_id}':
    put:
      description: Update a pipeline using workbench section from given project
      tags:
        - service
      operationId: update_pipeline
      parameters:
        - in: path
          name: project_id
          required: true
          description: the uuid of the project
          schema:
            type: string
            example: 123e4567-e89b-12d3-a456-426655440000
      responses:
        '204':
          description: Succesfully updated the pipeline
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  '/computation/pipeline/{project_id}/start':
    post:
      description: Starts a pipeline of a given project
      tags:
        - service
      operationId: start_pipeline
      parameters:
        - in: path
          name: project_id
          required: true
          description: the uuid of the project
          schema:
            type: string
            example: 123e4567-e89b-12d3-a456-426655440000
      responses:
        '200':
          description: Succesffully started the pipeline
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - pipeline_name
                      - pipeline_id
                    properties:
                      pipeline_name:
                        type: string
                        example: a pipeline named pipeline
                      pipeline_id:
                        type: string
                        example: 123e4567-e89b-12d3-a456-426655440000
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  /projects:
    get:
      tags:
        - project
      summary: List all projects
      operationId: list_projects
      parameters:
        - name: type
          in: query
          schema:
            type: string
            default: all
            enum:
              - template
              - user
              - all
          description: if true only templates otherwise only users
        - name: state
          in: query
          schema:
            type: string
            default: active
            enum:
              - active
          description: if set only active projects are returned. if type=template this parameter is ignored.
        - name: start
          in: query
          schema:
            type: integer
            minItems: 0
          description: index to the first item to return
        - name: count
          in: query
          schema:
            type: integer
            minItems: 1
          description: maximum number of items to return
      responses:
        '200':
          description: list of projects
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      title: simcore project
                      description: Description of a simcore project
                      type: object
                      additionalProperties: false
                      required:
                        - uuid
                        - name
                        - description
                        - prjOwner
                        - accessRights
                        - creationDate
                        - lastChangeDate
                        - thumbnail
                        - workbench
                      properties:
                        uuid:
                          type: string
                          description: project unique identifier
                          example: 07640335-a91f-468c-ab69-a374fa82078d
                        name:
                          type: string
                          description: project name
                          example: Temporal Distortion Simulator
                        description:
                          type: string
                          description: longer one-line description about the project
                          example: Dabbling in temporal transitions ...
                        prjOwner:
                          type: string
                          format: idn-email
                          description: user email
                        accessRights:
                          type: object
                          description: object containing the GroupID as key and read/write/execution permissions as value
                          additionalProperties: false
                          x-patternProperties:
                            ^\d+$:
                              type: object
                              description: the group id
                              additionalProperties: false
                              required:
                                - read
                                - write
                                - delete
                              properties:
                                read:
                                  type: boolean
                                  description: gives read access
                                write:
                                  type: boolean
                                  description: gives write access
                                delete:
                                  type: boolean
                                  description: gives deletion rights
                        creationDate:
                          type: string
                          description: project creation date
                          pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                          example: '2018-07-01T11:13:43Z'
                        lastChangeDate:
                          type: string
                          description: last save date
                          pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                          example: '2018-07-01T11:13:43Z'
                        thumbnail:
                          type: string
                          description: url of the latest screenshot of the project
                          example: 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                        workbench:
                          type: object
                          x-patternProperties:
                            ^\S+$:
                              type: object
                              additionalProperties: false
                              required:
                                - key
                                - version
                                - label
                                - position
                              properties:
                                key:
                                  type: string
                                  description: distinctive name for the node based on the docker registry path
                                  pattern: '^(simcore)/(services)(/demodec)?/(comp|dynamic|frontend)(/[^\s/]+)+$'
                                  example:
                                    - simcore/services/comp/sleeper
                                    - simcore/services/dynamic/3dviewer
                                    - simcore/services/frontend/file-picker
                                version:
                                  type: string
                                  description: semantic version number of the node
                                  pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                                  example:
                                    - 1.0.0
                                    - 0.0.1
                                label:
                                  type: string
                                progress:
                                  type: number
                                  maximum: 100
                                  minimum: 0
                                  description: the node progress value
                                thumbnail:
                                  type: string
                                  description: url of the latest screenshot of the node
                                  example:
                                    - 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                                inputs:
                                  type: object
                                  description: values of input properties
                                  patternProperties:
                                    '^[-_a-zA-Z0-9]+$':
                                      oneOf:
                                        - type:
                                            - integer
                                            - boolean
                                            - string
                                            - number
                                            - 'null'
                                        - type: object
                                          additionalProperties: false
                                          required:
                                            - nodeUuid
                                            - output
                                          properties:
                                            nodeUuid:
                                              type: string
                                            output:
                                              type: string
                                        - type: object
                                          additionalProperties: false
                                          required:
                                            - store
                                            - path
                                          properties:
                                            store:
                                              type:
                                                - string
                                                - integer
                                            dataset:
                                              type: string
                                            path:
                                              type: string
                                            label:
                                              type: string
                                inputAccess:
                                  description: map with key - access level pairs
                                  type: object
                                  patternProperties:
                                    '^[-_a-zA-Z0-9]+$':
                                      type: string
                                      enum:
                                        - Invisible
                                        - ReadOnly
                                        - ReadAndWrite
                                      default: ReadAndWrite
                                      example:
                                        - ReadOnly
                                inputNodes:
                                  type: array
                                  items:
                                    type: string
                                    pattern: ^\S+$
                                  description: node IDs of where the node is connected to
                                  example:
                                    - nodeUuid1
                                    - nodeUuid2
                                outputs:
                                  type: object
                                  patternProperties:
                                    '^[-_a-zA-Z0-9]+$':
                                      oneOf:
                                        - type:
                                            - integer
                                            - boolean
                                            - string
                                            - number
                                            - 'null'
                                        - type: object
                                          additionalProperties: false
                                          required:
                                            - store
                                            - path
                                          properties:
                                            store:
                                              type:
                                                - string
                                                - integer
                                            dataset:
                                              type: string
                                            path:
                                              type: string
                                            label:
                                              type: string
                                outputNode:
                                  type: boolean
                                  deprecated: true
                                outputNodes:
                                  type: array
                                  items:
                                    type: string
                                    pattern: ^\S+$
                                  description: Used in group-nodes. Node IDs of those connected to the output
                                  example:
                                    - nodeUuid1
                                    - nodeUuid2
                                parent:
                                  type:
                                    - string
                                    - 'null'
                                  pattern: ^\S+$
                                  description: Parent's (group-nodes') node ID s.
                                  example:
                                    - nodeUuid1
                                    - nodeUuid2
                                position:
                                  type: object
                                  additionalProperties: false
                                  required:
                                    - x
                                    - 'y'
                                  properties:
                                    x:
                                      type: integer
                                    'y':
                                      type: integer
                          additionalProperties: true
                        tags:
                          type: array
                          items:
                            type: integer
                        classifiers:
                          type: array
                          description: Contains the reference to the project classifiers
                          items:
                            type: string
                          example: 'some:id:to:a:classifier'
                        dev:
                          type: object
                          description: object used for development purposes only
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
    post:
      tags:
        - project
      summary: Create new project
      operationId: create_projects
      parameters:
        - name: from_template
          in: query
          schema:
            type: string
          description: 'Option to create a project from existing template: from_template={template_uuid}'
        - name: as_template
          in: query
          schema:
            type: string
          description: 'Option to create a template from existing project: as_template={study_uuid}'
      requestBody:
        content:
          application/json:
            schema:
              title: simcore project
              description: Description of a simcore project
              type: object
              additionalProperties: false
              required:
                - uuid
                - name
                - description
                - prjOwner
                - accessRights
                - creationDate
                - lastChangeDate
                - thumbnail
                - workbench
              properties:
                uuid:
                  type: string
                  description: project unique identifier
                  example: 07640335-a91f-468c-ab69-a374fa82078d
                name:
                  type: string
                  description: project name
                  example: Temporal Distortion Simulator
                description:
                  type: string
                  description: longer one-line description about the project
                  example: Dabbling in temporal transitions ...
                prjOwner:
                  type: string
                  format: idn-email
                  description: user email
                accessRights:
                  type: object
                  description: object containing the GroupID as key and read/write/execution permissions as value
                  additionalProperties: false
                  x-patternProperties:
                    ^\d+$:
                      type: object
                      description: the group id
                      additionalProperties: false
                      required:
                        - read
                        - write
                        - delete
                      properties:
                        read:
                          type: boolean
                          description: gives read access
                        write:
                          type: boolean
                          description: gives write access
                        delete:
                          type: boolean
                          description: gives deletion rights
                creationDate:
                  type: string
                  description: project creation date
                  pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                  example: '2018-07-01T11:13:43Z'
                lastChangeDate:
                  type: string
                  description: last save date
                  pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                  example: '2018-07-01T11:13:43Z'
                thumbnail:
                  type: string
                  description: url of the latest screenshot of the project
                  example: 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                workbench:
                  type: object
                  x-patternProperties:
                    ^\S+$:
                      type: object
                      additionalProperties: false
                      required:
                        - key
                        - version
                        - label
                        - position
                      properties:
                        key:
                          type: string
                          description: distinctive name for the node based on the docker registry path
                          pattern: '^(simcore)/(services)(/demodec)?/(comp|dynamic|frontend)(/[^\s/]+)+$'
                          example:
                            - simcore/services/comp/sleeper
                            - simcore/services/dynamic/3dviewer
                            - simcore/services/frontend/file-picker
                        version:
                          type: string
                          description: semantic version number of the node
                          pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                          example:
                            - 1.0.0
                            - 0.0.1
                        label:
                          type: string
                        progress:
                          type: number
                          maximum: 100
                          minimum: 0
                          description: the node progress value
                        thumbnail:
                          type: string
                          description: url of the latest screenshot of the node
                          example:
                            - 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                        inputs:
                          type: object
                          description: values of input properties
                          patternProperties:
                            '^[-_a-zA-Z0-9]+$':
                              oneOf:
                                - type:
                                    - integer
                                    - boolean
                                    - string
                                    - number
                                    - 'null'
                                - type: object
                                  additionalProperties: false
                                  required:
                                    - nodeUuid
                                    - output
                                  properties:
                                    nodeUuid:
                                      type: string
                                    output:
                                      type: string
                                - type: object
                                  additionalProperties: false
                                  required:
                                    - store
                                    - path
                                  properties:
                                    store:
                                      type:
                                        - string
                                        - integer
                                    dataset:
                                      type: string
                                    path:
                                      type: string
                                    label:
                                      type: string
                        inputAccess:
                          description: map with key - access level pairs
                          type: object
                          patternProperties:
                            '^[-_a-zA-Z0-9]+$':
                              type: string
                              enum:
                                - Invisible
                                - ReadOnly
                                - ReadAndWrite
                              default: ReadAndWrite
                              example:
                                - ReadOnly
                        inputNodes:
                          type: array
                          items:
                            type: string
                            pattern: ^\S+$
                          description: node IDs of where the node is connected to
                          example:
                            - nodeUuid1
                            - nodeUuid2
                        outputs:
                          type: object
                          patternProperties:
                            '^[-_a-zA-Z0-9]+$':
                              oneOf:
                                - type:
                                    - integer
                                    - boolean
                                    - string
                                    - number
                                    - 'null'
                                - type: object
                                  additionalProperties: false
                                  required:
                                    - store
                                    - path
                                  properties:
                                    store:
                                      type:
                                        - string
                                        - integer
                                    dataset:
                                      type: string
                                    path:
                                      type: string
                                    label:
                                      type: string
                        outputNode:
                          type: boolean
                          deprecated: true
                        outputNodes:
                          type: array
                          items:
                            type: string
                            pattern: ^\S+$
                          description: Used in group-nodes. Node IDs of those connected to the output
                          example:
                            - nodeUuid1
                            - nodeUuid2
                        parent:
                          type:
                            - string
                            - 'null'
                          pattern: ^\S+$
                          description: Parent's (group-nodes') node ID s.
                          example:
                            - nodeUuid1
                            - nodeUuid2
                        position:
                          type: object
                          additionalProperties: false
                          required:
                            - x
                            - 'y'
                          properties:
                            x:
                              type: integer
                            'y':
                              type: integer
                  additionalProperties: true
                tags:
                  type: array
                  items:
                    type: integer
                classifiers:
                  type: array
                  description: Contains the reference to the project classifiers
                  items:
                    type: string
                  example: 'some:id:to:a:classifier'
                dev:
                  type: object
                  description: object used for development purposes only
      responses:
        '201':
          description: project created
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    title: simcore project
                    description: Description of a simcore project
                    type: object
                    additionalProperties: false
                    required:
                      - uuid
                      - name
                      - description
                      - prjOwner
                      - accessRights
                      - creationDate
                      - lastChangeDate
                      - thumbnail
                      - workbench
                    properties:
                      uuid:
                        type: string
                        description: project unique identifier
                        example: 07640335-a91f-468c-ab69-a374fa82078d
                      name:
                        type: string
                        description: project name
                        example: Temporal Distortion Simulator
                      description:
                        type: string
                        description: longer one-line description about the project
                        example: Dabbling in temporal transitions ...
                      prjOwner:
                        type: string
                        format: idn-email
                        description: user email
                      accessRights:
                        type: object
                        description: object containing the GroupID as key and read/write/execution permissions as value
                        additionalProperties: false
                        x-patternProperties:
                          ^\d+$:
                            type: object
                            description: the group id
                            additionalProperties: false
                            required:
                              - read
                              - write
                              - delete
                            properties:
                              read:
                                type: boolean
                                description: gives read access
                              write:
                                type: boolean
                                description: gives write access
                              delete:
                                type: boolean
                                description: gives deletion rights
                      creationDate:
                        type: string
                        description: project creation date
                        pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                        example: '2018-07-01T11:13:43Z'
                      lastChangeDate:
                        type: string
                        description: last save date
                        pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                        example: '2018-07-01T11:13:43Z'
                      thumbnail:
                        type: string
                        description: url of the latest screenshot of the project
                        example: 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                      workbench:
                        type: object
                        x-patternProperties:
                          ^\S+$:
                            type: object
                            additionalProperties: false
                            required:
                              - key
                              - version
                              - label
                              - position
                            properties:
                              key:
                                type: string
                                description: distinctive name for the node based on the docker registry path
                                pattern: '^(simcore)/(services)(/demodec)?/(comp|dynamic|frontend)(/[^\s/]+)+$'
                                example:
                                  - simcore/services/comp/sleeper
                                  - simcore/services/dynamic/3dviewer
                                  - simcore/services/frontend/file-picker
                              version:
                                type: string
                                description: semantic version number of the node
                                pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                                example:
                                  - 1.0.0
                                  - 0.0.1
                              label:
                                type: string
                              progress:
                                type: number
                                maximum: 100
                                minimum: 0
                                description: the node progress value
                              thumbnail:
                                type: string
                                description: url of the latest screenshot of the node
                                example:
                                  - 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                              inputs:
                                type: object
                                description: values of input properties
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    oneOf:
                                      - type:
                                          - integer
                                          - boolean
                                          - string
                                          - number
                                          - 'null'
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - nodeUuid
                                          - output
                                        properties:
                                          nodeUuid:
                                            type: string
                                          output:
                                            type: string
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - store
                                          - path
                                        properties:
                                          store:
                                            type:
                                              - string
                                              - integer
                                          dataset:
                                            type: string
                                          path:
                                            type: string
                                          label:
                                            type: string
                              inputAccess:
                                description: map with key - access level pairs
                                type: object
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    type: string
                                    enum:
                                      - Invisible
                                      - ReadOnly
                                      - ReadAndWrite
                                    default: ReadAndWrite
                                    example:
                                      - ReadOnly
                              inputNodes:
                                type: array
                                items:
                                  type: string
                                  pattern: ^\S+$
                                description: node IDs of where the node is connected to
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              outputs:
                                type: object
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    oneOf:
                                      - type:
                                          - integer
                                          - boolean
                                          - string
                                          - number
                                          - 'null'
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - store
                                          - path
                                        properties:
                                          store:
                                            type:
                                              - string
                                              - integer
                                          dataset:
                                            type: string
                                          path:
                                            type: string
                                          label:
                                            type: string
                              outputNode:
                                type: boolean
                                deprecated: true
                              outputNodes:
                                type: array
                                items:
                                  type: string
                                  pattern: ^\S+$
                                description: Used in group-nodes. Node IDs of those connected to the output
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              parent:
                                type:
                                  - string
                                  - 'null'
                                pattern: ^\S+$
                                description: Parent's (group-nodes') node ID s.
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              position:
                                type: object
                                additionalProperties: false
                                required:
                                  - x
                                  - 'y'
                                properties:
                                  x:
                                    type: integer
                                  'y':
                                    type: integer
                        additionalProperties: true
                      tags:
                        type: array
                        items:
                          type: integer
                      classifiers:
                        type: array
                        description: Contains the reference to the project classifiers
                        items:
                          type: string
                        example: 'some:id:to:a:classifier'
                      dev:
                        type: object
                        description: object used for development purposes only
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  /projects/active:
    get:
      tags:
        - project
      summary: Gets active project
      operationId: get_active_project
      responses:
        '200':
          description: returns active project
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    title: simcore project
                    description: Description of a simcore project
                    type: object
                    additionalProperties: false
                    required:
                      - uuid
                      - name
                      - description
                      - prjOwner
                      - accessRights
                      - creationDate
                      - lastChangeDate
                      - thumbnail
                      - workbench
                    properties:
                      uuid:
                        type: string
                        description: project unique identifier
                        example: 07640335-a91f-468c-ab69-a374fa82078d
                      name:
                        type: string
                        description: project name
                        example: Temporal Distortion Simulator
                      description:
                        type: string
                        description: longer one-line description about the project
                        example: Dabbling in temporal transitions ...
                      prjOwner:
                        type: string
                        format: idn-email
                        description: user email
                      accessRights:
                        type: object
                        description: object containing the GroupID as key and read/write/execution permissions as value
                        additionalProperties: false
                        x-patternProperties:
                          ^\d+$:
                            type: object
                            description: the group id
                            additionalProperties: false
                            required:
                              - read
                              - write
                              - delete
                            properties:
                              read:
                                type: boolean
                                description: gives read access
                              write:
                                type: boolean
                                description: gives write access
                              delete:
                                type: boolean
                                description: gives deletion rights
                      creationDate:
                        type: string
                        description: project creation date
                        pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                        example: '2018-07-01T11:13:43Z'
                      lastChangeDate:
                        type: string
                        description: last save date
                        pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                        example: '2018-07-01T11:13:43Z'
                      thumbnail:
                        type: string
                        description: url of the latest screenshot of the project
                        example: 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                      workbench:
                        type: object
                        x-patternProperties:
                          ^\S+$:
                            type: object
                            additionalProperties: false
                            required:
                              - key
                              - version
                              - label
                              - position
                            properties:
                              key:
                                type: string
                                description: distinctive name for the node based on the docker registry path
                                pattern: '^(simcore)/(services)(/demodec)?/(comp|dynamic|frontend)(/[^\s/]+)+$'
                                example:
                                  - simcore/services/comp/sleeper
                                  - simcore/services/dynamic/3dviewer
                                  - simcore/services/frontend/file-picker
                              version:
                                type: string
                                description: semantic version number of the node
                                pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                                example:
                                  - 1.0.0
                                  - 0.0.1
                              label:
                                type: string
                              progress:
                                type: number
                                maximum: 100
                                minimum: 0
                                description: the node progress value
                              thumbnail:
                                type: string
                                description: url of the latest screenshot of the node
                                example:
                                  - 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                              inputs:
                                type: object
                                description: values of input properties
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    oneOf:
                                      - type:
                                          - integer
                                          - boolean
                                          - string
                                          - number
                                          - 'null'
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - nodeUuid
                                          - output
                                        properties:
                                          nodeUuid:
                                            type: string
                                          output:
                                            type: string
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - store
                                          - path
                                        properties:
                                          store:
                                            type:
                                              - string
                                              - integer
                                          dataset:
                                            type: string
                                          path:
                                            type: string
                                          label:
                                            type: string
                              inputAccess:
                                description: map with key - access level pairs
                                type: object
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    type: string
                                    enum:
                                      - Invisible
                                      - ReadOnly
                                      - ReadAndWrite
                                    default: ReadAndWrite
                                    example:
                                      - ReadOnly
                              inputNodes:
                                type: array
                                items:
                                  type: string
                                  pattern: ^\S+$
                                description: node IDs of where the node is connected to
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              outputs:
                                type: object
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    oneOf:
                                      - type:
                                          - integer
                                          - boolean
                                          - string
                                          - number
                                          - 'null'
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - store
                                          - path
                                        properties:
                                          store:
                                            type:
                                              - string
                                              - integer
                                          dataset:
                                            type: string
                                          path:
                                            type: string
                                          label:
                                            type: string
                              outputNode:
                                type: boolean
                                deprecated: true
                              outputNodes:
                                type: array
                                items:
                                  type: string
                                  pattern: ^\S+$
                                description: Used in group-nodes. Node IDs of those connected to the output
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              parent:
                                type:
                                  - string
                                  - 'null'
                                pattern: ^\S+$
                                description: Parent's (group-nodes') node ID s.
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              position:
                                type: object
                                additionalProperties: false
                                required:
                                  - x
                                  - 'y'
                                properties:
                                  x:
                                    type: integer
                                  'y':
                                    type: integer
                        additionalProperties: true
                      tags:
                        type: array
                        items:
                          type: integer
                      classifiers:
                        type: array
                        description: Contains the reference to the project classifiers
                        items:
                          type: string
                        example: 'some:id:to:a:classifier'
                      dev:
                        type: object
                        description: object used for development purposes only
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  '/projects/{project_id}':
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - project
      summary: Gets given project
      operationId: get_project
      responses:
        '200':
          description: got detailed project
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    title: simcore project
                    description: Description of a simcore project
                    type: object
                    additionalProperties: false
                    required:
                      - uuid
                      - name
                      - description
                      - prjOwner
                      - accessRights
                      - creationDate
                      - lastChangeDate
                      - thumbnail
                      - workbench
                    properties:
                      uuid:
                        type: string
                        description: project unique identifier
                        example: 07640335-a91f-468c-ab69-a374fa82078d
                      name:
                        type: string
                        description: project name
                        example: Temporal Distortion Simulator
                      description:
                        type: string
                        description: longer one-line description about the project
                        example: Dabbling in temporal transitions ...
                      prjOwner:
                        type: string
                        format: idn-email
                        description: user email
                      accessRights:
                        type: object
                        description: object containing the GroupID as key and read/write/execution permissions as value
                        additionalProperties: false
                        x-patternProperties:
                          ^\d+$:
                            type: object
                            description: the group id
                            additionalProperties: false
                            required:
                              - read
                              - write
                              - delete
                            properties:
                              read:
                                type: boolean
                                description: gives read access
                              write:
                                type: boolean
                                description: gives write access
                              delete:
                                type: boolean
                                description: gives deletion rights
                      creationDate:
                        type: string
                        description: project creation date
                        pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                        example: '2018-07-01T11:13:43Z'
                      lastChangeDate:
                        type: string
                        description: last save date
                        pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                        example: '2018-07-01T11:13:43Z'
                      thumbnail:
                        type: string
                        description: url of the latest screenshot of the project
                        example: 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                      workbench:
                        type: object
                        x-patternProperties:
                          ^\S+$:
                            type: object
                            additionalProperties: false
                            required:
                              - key
                              - version
                              - label
                              - position
                            properties:
                              key:
                                type: string
                                description: distinctive name for the node based on the docker registry path
                                pattern: '^(simcore)/(services)(/demodec)?/(comp|dynamic|frontend)(/[^\s/]+)+$'
                                example:
                                  - simcore/services/comp/sleeper
                                  - simcore/services/dynamic/3dviewer
                                  - simcore/services/frontend/file-picker
                              version:
                                type: string
                                description: semantic version number of the node
                                pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                                example:
                                  - 1.0.0
                                  - 0.0.1
                              label:
                                type: string
                              progress:
                                type: number
                                maximum: 100
                                minimum: 0
                                description: the node progress value
                              thumbnail:
                                type: string
                                description: url of the latest screenshot of the node
                                example:
                                  - 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                              inputs:
                                type: object
                                description: values of input properties
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    oneOf:
                                      - type:
                                          - integer
                                          - boolean
                                          - string
                                          - number
                                          - 'null'
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - nodeUuid
                                          - output
                                        properties:
                                          nodeUuid:
                                            type: string
                                          output:
                                            type: string
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - store
                                          - path
                                        properties:
                                          store:
                                            type:
                                              - string
                                              - integer
                                          dataset:
                                            type: string
                                          path:
                                            type: string
                                          label:
                                            type: string
                              inputAccess:
                                description: map with key - access level pairs
                                type: object
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    type: string
                                    enum:
                                      - Invisible
                                      - ReadOnly
                                      - ReadAndWrite
                                    default: ReadAndWrite
                                    example:
                                      - ReadOnly
                              inputNodes:
                                type: array
                                items:
                                  type: string
                                  pattern: ^\S+$
                                description: node IDs of where the node is connected to
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              outputs:
                                type: object
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    oneOf:
                                      - type:
                                          - integer
                                          - boolean
                                          - string
                                          - number
                                          - 'null'
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - store
                                          - path
                                        properties:
                                          store:
                                            type:
                                              - string
                                              - integer
                                          dataset:
                                            type: string
                                          path:
                                            type: string
                                          label:
                                            type: string
                              outputNode:
                                type: boolean
                                deprecated: true
                              outputNodes:
                                type: array
                                items:
                                  type: string
                                  pattern: ^\S+$
                                description: Used in group-nodes. Node IDs of those connected to the output
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              parent:
                                type:
                                  - string
                                  - 'null'
                                pattern: ^\S+$
                                description: Parent's (group-nodes') node ID s.
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              position:
                                type: object
                                additionalProperties: false
                                required:
                                  - x
                                  - 'y'
                                properties:
                                  x:
                                    type: integer
                                  'y':
                                    type: integer
                        additionalProperties: true
                      tags:
                        type: array
                        items:
                          type: integer
                      classifiers:
                        type: array
                        description: Contains the reference to the project classifiers
                        items:
                          type: string
                        example: 'some:id:to:a:classifier'
                      dev:
                        type: object
                        description: object used for development purposes only
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
    put:
      tags:
        - project
      summary: Enclosed entity replaces given project
      operationId: replace_project
      parameters:
        - name: run
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              title: simcore project
              description: Description of a simcore project
              type: object
              additionalProperties: false
              required:
                - uuid
                - name
                - description
                - prjOwner
                - accessRights
                - creationDate
                - lastChangeDate
                - thumbnail
                - workbench
              properties:
                uuid:
                  type: string
                  description: project unique identifier
                  example: 07640335-a91f-468c-ab69-a374fa82078d
                name:
                  type: string
                  description: project name
                  example: Temporal Distortion Simulator
                description:
                  type: string
                  description: longer one-line description about the project
                  example: Dabbling in temporal transitions ...
                prjOwner:
                  type: string
                  format: idn-email
                  description: user email
                accessRights:
                  type: object
                  description: object containing the GroupID as key and read/write/execution permissions as value
                  additionalProperties: false
                  x-patternProperties:
                    ^\d+$:
                      type: object
                      description: the group id
                      additionalProperties: false
                      required:
                        - read
                        - write
                        - delete
                      properties:
                        read:
                          type: boolean
                          description: gives read access
                        write:
                          type: boolean
                          description: gives write access
                        delete:
                          type: boolean
                          description: gives deletion rights
                creationDate:
                  type: string
                  description: project creation date
                  pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                  example: '2018-07-01T11:13:43Z'
                lastChangeDate:
                  type: string
                  description: last save date
                  pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                  example: '2018-07-01T11:13:43Z'
                thumbnail:
                  type: string
                  description: url of the latest screenshot of the project
                  example: 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                workbench:
                  type: object
                  x-patternProperties:
                    ^\S+$:
                      type: object
                      additionalProperties: false
                      required:
                        - key
                        - version
                        - label
                        - position
                      properties:
                        key:
                          type: string
                          description: distinctive name for the node based on the docker registry path
                          pattern: '^(simcore)/(services)(/demodec)?/(comp|dynamic|frontend)(/[^\s/]+)+$'
                          example:
                            - simcore/services/comp/sleeper
                            - simcore/services/dynamic/3dviewer
                            - simcore/services/frontend/file-picker
                        version:
                          type: string
                          description: semantic version number of the node
                          pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                          example:
                            - 1.0.0
                            - 0.0.1
                        label:
                          type: string
                        progress:
                          type: number
                          maximum: 100
                          minimum: 0
                          description: the node progress value
                        thumbnail:
                          type: string
                          description: url of the latest screenshot of the node
                          example:
                            - 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                        inputs:
                          type: object
                          description: values of input properties
                          patternProperties:
                            '^[-_a-zA-Z0-9]+$':
                              oneOf:
                                - type:
                                    - integer
                                    - boolean
                                    - string
                                    - number
                                    - 'null'
                                - type: object
                                  additionalProperties: false
                                  required:
                                    - nodeUuid
                                    - output
                                  properties:
                                    nodeUuid:
                                      type: string
                                    output:
                                      type: string
                                - type: object
                                  additionalProperties: false
                                  required:
                                    - store
                                    - path
                                  properties:
                                    store:
                                      type:
                                        - string
                                        - integer
                                    dataset:
                                      type: string
                                    path:
                                      type: string
                                    label:
                                      type: string
                        inputAccess:
                          description: map with key - access level pairs
                          type: object
                          patternProperties:
                            '^[-_a-zA-Z0-9]+$':
                              type: string
                              enum:
                                - Invisible
                                - ReadOnly
                                - ReadAndWrite
                              default: ReadAndWrite
                              example:
                                - ReadOnly
                        inputNodes:
                          type: array
                          items:
                            type: string
                            pattern: ^\S+$
                          description: node IDs of where the node is connected to
                          example:
                            - nodeUuid1
                            - nodeUuid2
                        outputs:
                          type: object
                          patternProperties:
                            '^[-_a-zA-Z0-9]+$':
                              oneOf:
                                - type:
                                    - integer
                                    - boolean
                                    - string
                                    - number
                                    - 'null'
                                - type: object
                                  additionalProperties: false
                                  required:
                                    - store
                                    - path
                                  properties:
                                    store:
                                      type:
                                        - string
                                        - integer
                                    dataset:
                                      type: string
                                    path:
                                      type: string
                                    label:
                                      type: string
                        outputNode:
                          type: boolean
                          deprecated: true
                        outputNodes:
                          type: array
                          items:
                            type: string
                            pattern: ^\S+$
                          description: Used in group-nodes. Node IDs of those connected to the output
                          example:
                            - nodeUuid1
                            - nodeUuid2
                        parent:
                          type:
                            - string
                            - 'null'
                          pattern: ^\S+$
                          description: Parent's (group-nodes') node ID s.
                          example:
                            - nodeUuid1
                            - nodeUuid2
                        position:
                          type: object
                          additionalProperties: false
                          required:
                            - x
                            - 'y'
                          properties:
                            x:
                              type: integer
                            'y':
                              type: integer
                  additionalProperties: true
                tags:
                  type: array
                  items:
                    type: integer
                classifiers:
                  type: array
                  description: Contains the reference to the project classifiers
                  items:
                    type: string
                  example: 'some:id:to:a:classifier'
                dev:
                  type: object
                  description: object used for development purposes only
      responses:
        '200':
          description: got detailed project
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    title: simcore project
                    description: Description of a simcore project
                    type: object
                    additionalProperties: false
                    required:
                      - uuid
                      - name
                      - description
                      - prjOwner
                      - accessRights
                      - creationDate
                      - lastChangeDate
                      - thumbnail
                      - workbench
                    properties:
                      uuid:
                        type: string
                        description: project unique identifier
                        example: 07640335-a91f-468c-ab69-a374fa82078d
                      name:
                        type: string
                        description: project name
                        example: Temporal Distortion Simulator
                      description:
                        type: string
                        description: longer one-line description about the project
                        example: Dabbling in temporal transitions ...
                      prjOwner:
                        type: string
                        format: idn-email
                        description: user email
                      accessRights:
                        type: object
                        description: object containing the GroupID as key and read/write/execution permissions as value
                        additionalProperties: false
                        x-patternProperties:
                          ^\d+$:
                            type: object
                            description: the group id
                            additionalProperties: false
                            required:
                              - read
                              - write
                              - delete
                            properties:
                              read:
                                type: boolean
                                description: gives read access
                              write:
                                type: boolean
                                description: gives write access
                              delete:
                                type: boolean
                                description: gives deletion rights
                      creationDate:
                        type: string
                        description: project creation date
                        pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                        example: '2018-07-01T11:13:43Z'
                      lastChangeDate:
                        type: string
                        description: last save date
                        pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                        example: '2018-07-01T11:13:43Z'
                      thumbnail:
                        type: string
                        description: url of the latest screenshot of the project
                        example: 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                      workbench:
                        type: object
                        x-patternProperties:
                          ^\S+$:
                            type: object
                            additionalProperties: false
                            required:
                              - key
                              - version
                              - label
                              - position
                            properties:
                              key:
                                type: string
                                description: distinctive name for the node based on the docker registry path
                                pattern: '^(simcore)/(services)(/demodec)?/(comp|dynamic|frontend)(/[^\s/]+)+$'
                                example:
                                  - simcore/services/comp/sleeper
                                  - simcore/services/dynamic/3dviewer
                                  - simcore/services/frontend/file-picker
                              version:
                                type: string
                                description: semantic version number of the node
                                pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                                example:
                                  - 1.0.0
                                  - 0.0.1
                              label:
                                type: string
                              progress:
                                type: number
                                maximum: 100
                                minimum: 0
                                description: the node progress value
                              thumbnail:
                                type: string
                                description: url of the latest screenshot of the node
                                example:
                                  - 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                              inputs:
                                type: object
                                description: values of input properties
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    oneOf:
                                      - type:
                                          - integer
                                          - boolean
                                          - string
                                          - number
                                          - 'null'
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - nodeUuid
                                          - output
                                        properties:
                                          nodeUuid:
                                            type: string
                                          output:
                                            type: string
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - store
                                          - path
                                        properties:
                                          store:
                                            type:
                                              - string
                                              - integer
                                          dataset:
                                            type: string
                                          path:
                                            type: string
                                          label:
                                            type: string
                              inputAccess:
                                description: map with key - access level pairs
                                type: object
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    type: string
                                    enum:
                                      - Invisible
                                      - ReadOnly
                                      - ReadAndWrite
                                    default: ReadAndWrite
                                    example:
                                      - ReadOnly
                              inputNodes:
                                type: array
                                items:
                                  type: string
                                  pattern: ^\S+$
                                description: node IDs of where the node is connected to
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              outputs:
                                type: object
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    oneOf:
                                      - type:
                                          - integer
                                          - boolean
                                          - string
                                          - number
                                          - 'null'
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - store
                                          - path
                                        properties:
                                          store:
                                            type:
                                              - string
                                              - integer
                                          dataset:
                                            type: string
                                          path:
                                            type: string
                                          label:
                                            type: string
                              outputNode:
                                type: boolean
                                deprecated: true
                              outputNodes:
                                type: array
                                items:
                                  type: string
                                  pattern: ^\S+$
                                description: Used in group-nodes. Node IDs of those connected to the output
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              parent:
                                type:
                                  - string
                                  - 'null'
                                pattern: ^\S+$
                                description: Parent's (group-nodes') node ID s.
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              position:
                                type: object
                                additionalProperties: false
                                required:
                                  - x
                                  - 'y'
                                properties:
                                  x:
                                    type: integer
                                  'y':
                                    type: integer
                        additionalProperties: true
                      tags:
                        type: array
                        items:
                          type: integer
                      classifiers:
                        type: array
                        description: Contains the reference to the project classifiers
                        items:
                          type: string
                        example: 'some:id:to:a:classifier'
                      dev:
                        type: object
                        description: object used for development purposes only
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
    delete:
      tags:
        - project
      summary: Delete given project
      operationId: delete_project
      responses:
        '204':
          description: project has been successfully deleted
  '/projects/{project_id}:open':
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - project
      summary: Open a given project
      operationId: open_project
      requestBody:
        description: browser tab identifier
        required: true
        content:
          application/json:
            schema:
              type: string
              example: 5ac57685-c40f-448f-8711-70be1936fd63
      responses:
        '200':
          description: project successfuly opened
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    title: simcore project
                    description: Description of a simcore project
                    type: object
                    additionalProperties: false
                    required:
                      - uuid
                      - name
                      - description
                      - prjOwner
                      - accessRights
                      - creationDate
                      - lastChangeDate
                      - thumbnail
                      - workbench
                    properties:
                      uuid:
                        type: string
                        description: project unique identifier
                        example: 07640335-a91f-468c-ab69-a374fa82078d
                      name:
                        type: string
                        description: project name
                        example: Temporal Distortion Simulator
                      description:
                        type: string
                        description: longer one-line description about the project
                        example: Dabbling in temporal transitions ...
                      prjOwner:
                        type: string
                        format: idn-email
                        description: user email
                      accessRights:
                        type: object
                        description: object containing the GroupID as key and read/write/execution permissions as value
                        additionalProperties: false
                        x-patternProperties:
                          ^\d+$:
                            type: object
                            description: the group id
                            additionalProperties: false
                            required:
                              - read
                              - write
                              - delete
                            properties:
                              read:
                                type: boolean
                                description: gives read access
                              write:
                                type: boolean
                                description: gives write access
                              delete:
                                type: boolean
                                description: gives deletion rights
                      creationDate:
                        type: string
                        description: project creation date
                        pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                        example: '2018-07-01T11:13:43Z'
                      lastChangeDate:
                        type: string
                        description: last save date
                        pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                        example: '2018-07-01T11:13:43Z'
                      thumbnail:
                        type: string
                        description: url of the latest screenshot of the project
                        example: 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                      workbench:
                        type: object
                        x-patternProperties:
                          ^\S+$:
                            type: object
                            additionalProperties: false
                            required:
                              - key
                              - version
                              - label
                              - position
                            properties:
                              key:
                                type: string
                                description: distinctive name for the node based on the docker registry path
                                pattern: '^(simcore)/(services)(/demodec)?/(comp|dynamic|frontend)(/[^\s/]+)+$'
                                example:
                                  - simcore/services/comp/sleeper
                                  - simcore/services/dynamic/3dviewer
                                  - simcore/services/frontend/file-picker
                              version:
                                type: string
                                description: semantic version number of the node
                                pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                                example:
                                  - 1.0.0
                                  - 0.0.1
                              label:
                                type: string
                              progress:
                                type: number
                                maximum: 100
                                minimum: 0
                                description: the node progress value
                              thumbnail:
                                type: string
                                description: url of the latest screenshot of the node
                                example:
                                  - 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                              inputs:
                                type: object
                                description: values of input properties
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    oneOf:
                                      - type:
                                          - integer
                                          - boolean
                                          - string
                                          - number
                                          - 'null'
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - nodeUuid
                                          - output
                                        properties:
                                          nodeUuid:
                                            type: string
                                          output:
                                            type: string
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - store
                                          - path
                                        properties:
                                          store:
                                            type:
                                              - string
                                              - integer
                                          dataset:
                                            type: string
                                          path:
                                            type: string
                                          label:
                                            type: string
                              inputAccess:
                                description: map with key - access level pairs
                                type: object
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    type: string
                                    enum:
                                      - Invisible
                                      - ReadOnly
                                      - ReadAndWrite
                                    default: ReadAndWrite
                                    example:
                                      - ReadOnly
                              inputNodes:
                                type: array
                                items:
                                  type: string
                                  pattern: ^\S+$
                                description: node IDs of where the node is connected to
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              outputs:
                                type: object
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    oneOf:
                                      - type:
                                          - integer
                                          - boolean
                                          - string
                                          - number
                                          - 'null'
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - store
                                          - path
                                        properties:
                                          store:
                                            type:
                                              - string
                                              - integer
                                          dataset:
                                            type: string
                                          path:
                                            type: string
                                          label:
                                            type: string
                              outputNode:
                                type: boolean
                                deprecated: true
                              outputNodes:
                                type: array
                                items:
                                  type: string
                                  pattern: ^\S+$
                                description: Used in group-nodes. Node IDs of those connected to the output
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              parent:
                                type:
                                  - string
                                  - 'null'
                                pattern: ^\S+$
                                description: Parent's (group-nodes') node ID s.
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              position:
                                type: object
                                additionalProperties: false
                                required:
                                  - x
                                  - 'y'
                                properties:
                                  x:
                                    type: integer
                                  'y':
                                    type: integer
                        additionalProperties: true
                      tags:
                        type: array
                        items:
                          type: integer
                      classifiers:
                        type: array
                        description: Contains the reference to the project classifiers
                        items:
                          type: string
                        example: 'some:id:to:a:classifier'
                      dev:
                        type: object
                        description: object used for development purposes only
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  '/projects/{project_id}/state':
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - project
      summary: returns the state of a project
      operationId: state_project
      responses:
        '200':
          description: returns the project current state
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - locked
                    properties:
                      locked:
                        type: object
                        description: describes the project lock state
                        required:
                          - value
                        properties:
                          value:
                            type: boolean
                            description: true if the project is locked
                          owner:
                            type: object
                            properties:
                              first_name:
                                type: string
                              last_name:
                                type: string
                            required:
                              - firstName
                              - lastName
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  '/projects/{project_id}:close':
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - project
      summary: Closes a given project
      operationId: close_project
      requestBody:
        description: browser tab identifier
        required: true
        content:
          application/json:
            schema:
              type: string
              example: 5ac57685-c40f-448f-8711-70be1936fd63
      responses:
        '204':
          description: project succesfuly closed
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  '/projects/{project_id}/nodes':
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - project
      summary: Create a new node
      operationId: create_node
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service_uuid:
                  type: string
                  description: the uuid to assign to the service
                service_key:
                  type: string
                  pattern: '^(simcore)/(services)/(comp|dynamic)(/[^\s/]+)+$'
                  description: The key (url) of the service
                service_version:
                  type: string
                  pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                  description: The tag/version of the service
              required:
                - service_key
                - service_version
            example:
              service_key: simcore/services/dynamic/3d-viewer
              service_version: 1.4.0
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - node_id
                    properties:
                      node_id:
                        type: string
                        description: The UUID attached to this node
                        example: 123e4567-e89b-12d3-a456-426655440000
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  '/projects/{project_id}/nodes/{node_id}':
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
      - name: node_id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - project
      description: Gets node status
      operationId: get_node
      responses:
        '200':
          description: OK service exists and runs. Returns node details.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - published_port
                      - service_uuid
                      - service_key
                      - service_version
                      - service_host
                      - service_port
                      - service_state
                    properties:
                      published_port:
                        description: The ports where the service provides its interface
                        type: integer
                        format: int32
                        minimum: 1
                        example: 30000
                      entry_point:
                        description: The entry point where the service provides its interface if specified
                        type: string
                        example: /the/entry/point/is/here
                      service_uuid:
                        description: The UUID attached to this service
                        type: string
                        example: 123e4567-e89b-12d3-a456-426655440000
                      service_key:
                        type: string
                        description: distinctive name for the node based on the docker registry path
                        pattern: '^(simcore)/(services)/(comp|dynamic)(/[^\s/]+)+$'
                        example:
                          - simcore/services/comp/itis/sleeper
                          - simcore/services/dynamic/3dviewer
                      service_version:
                        type: string
                        description: semantic version number
                        pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                        example:
                          - 1.0.0
                          - 0.0.1
                      service_host:
                        description: service host name within the network
                        type: string
                        example: jupyter_E1O2E-LAH
                      service_port:
                        description: port to access the service within the network
                        type: integer
                        minimum: 1
                        example: 8081
                      service_basepath:
                        description: different base path where current service is mounted otherwise defaults to root
                        type: string
                        example: /x/E1O2E-LAH
                        default: ''
                      service_state:
                        description: |
                          the service state * 'pending' - The service is waiting for resources to start * 'pulling' - The service is being pulled from the registry * 'starting' - The service is starting * 'running' - The service is running * 'complete' - The service completed * 'failed' - The service failed to start
                        type: string
                        enum:
                          - pending
                          - pulling
                          - starting
                          - running
                          - complete
                          - failed
                      service_message:
                        description: the service message
                        type: string
                        example: no suitable node (insufficient resources on 1 node)
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
    delete:
      tags:
        - project
      description: Stops and removes a node from the project
      operationId: delete_node
      responses:
        '204':
          description: node has been successfully deleted from project
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  '/nodes/{nodeInstanceUUID}/outputUi/{outputKey}':
    get:
      tags:
        - node
      description: get a json description of the ui for presenting the output within the mainUi and a list of open api json schema objects describing the possible json payloads and responses for the api calls available at this endpoint
      operationId: get_node_output_ui
      parameters:
        - in: path
          name: nodeInstanceUUID
          required: true
          schema:
            type: string
        - in: path
          name: outputKey
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Service Information
          content:
            application/json:
              schema:
                type: object
                properties:
                  plugin:
                    type: string
                  config:
                    type: object
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
  '/nodes/{nodeInstanceUUID}/outputUi/{outputKey}/{apiCall}':
    post:
      tags:
        - node
      summary: send data back to the output api ... protocol depends on the definition
      operationId: send_to_node_output_api
      parameters:
        - in: path
          name: nodeInstanceUUID
          required: true
          schema:
            type: string
        - in: path
          name: outputKey
          required: true
          schema:
            type: string
        - in: path
          name: apiCall
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - description: oa3 json schema description of the request structure
                  type: object
                  required:
                    - start
                    - count
                  properties:
                    start:
                      type: integer
                    count:
                      type: integer
                    filter:
                      type: string
                    orderBy:
                      type: string
                - type: object
                  required:
                    - key
                  properties:
                    key:
                      type: string
                - description: |
                    oa3 json schema description of the request structure.
                    If no `rootKey` is specified, the first level of the tree is returned.
                    The `filter` will return any items matching the filter string as well as any
                    folder items containing matching items further down the tree.
                  type: object
                  properties:
                    rootKey:
                      type: string
                    filter:
                      type: string
                - type: object
                  required:
                    - key
                  properties:
                    key:
                      type: string
      responses:
        default:
          description: node type specific api call according to the node type presented
          content:
            application/json:
              schema:
                oneOf:
                  - type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        label:
                          type: string
                        thumbnail:
                          description: 'data url - https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs'
                          type: string
                  - type: object
                  - type: array
                    items:
                      type: object
                      properties:
                        key:
                          type: string
                        label:
                          type: string
                        folder:
                          type: boolean
                  - type: object
  '/nodes/{nodeInstanceUUID}/iframe':
    get:
      tags:
        - node
      summary: entry point for iframe interaction with the node. This relies on the reverse proxy code.
      operationId: get_node_output_iframe
      parameters:
        - in: path
          name: nodeInstanceUUID
          required: true
          schema:
            type: string
      responses:
        default:
          description: any response appropriate in the iframe context
  '/projects/{study_uuid}/tags/{tag_id}':
    parameters:
      - name: tag_id
        in: path
        required: true
        schema:
          type: integer
      - name: study_uuid
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - project
      summary: Links an existing label with an existing study
      operationId: add_tag
      responses:
        '200':
          description: The tag has been successfully linked to the study
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    title: simcore project
                    description: Description of a simcore project
                    type: object
                    additionalProperties: false
                    required:
                      - uuid
                      - name
                      - description
                      - prjOwner
                      - accessRights
                      - creationDate
                      - lastChangeDate
                      - thumbnail
                      - workbench
                    properties:
                      uuid:
                        type: string
                        description: project unique identifier
                        example: 07640335-a91f-468c-ab69-a374fa82078d
                      name:
                        type: string
                        description: project name
                        example: Temporal Distortion Simulator
                      description:
                        type: string
                        description: longer one-line description about the project
                        example: Dabbling in temporal transitions ...
                      prjOwner:
                        type: string
                        format: idn-email
                        description: user email
                      accessRights:
                        type: object
                        description: object containing the GroupID as key and read/write/execution permissions as value
                        additionalProperties: false
                        x-patternProperties:
                          ^\d+$:
                            type: object
                            description: the group id
                            additionalProperties: false
                            required:
                              - read
                              - write
                              - delete
                            properties:
                              read:
                                type: boolean
                                description: gives read access
                              write:
                                type: boolean
                                description: gives write access
                              delete:
                                type: boolean
                                description: gives deletion rights
                      creationDate:
                        type: string
                        description: project creation date
                        pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                        example: '2018-07-01T11:13:43Z'
                      lastChangeDate:
                        type: string
                        description: last save date
                        pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                        example: '2018-07-01T11:13:43Z'
                      thumbnail:
                        type: string
                        description: url of the latest screenshot of the project
                        example: 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                      workbench:
                        type: object
                        x-patternProperties:
                          ^\S+$:
                            type: object
                            additionalProperties: false
                            required:
                              - key
                              - version
                              - label
                              - position
                            properties:
                              key:
                                type: string
                                description: distinctive name for the node based on the docker registry path
                                pattern: '^(simcore)/(services)(/demodec)?/(comp|dynamic|frontend)(/[^\s/]+)+$'
                                example:
                                  - simcore/services/comp/sleeper
                                  - simcore/services/dynamic/3dviewer
                                  - simcore/services/frontend/file-picker
                              version:
                                type: string
                                description: semantic version number of the node
                                pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                                example:
                                  - 1.0.0
                                  - 0.0.1
                              label:
                                type: string
                              progress:
                                type: number
                                maximum: 100
                                minimum: 0
                                description: the node progress value
                              thumbnail:
                                type: string
                                description: url of the latest screenshot of the node
                                example:
                                  - 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                              inputs:
                                type: object
                                description: values of input properties
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    oneOf:
                                      - type:
                                          - integer
                                          - boolean
                                          - string
                                          - number
                                          - 'null'
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - nodeUuid
                                          - output
                                        properties:
                                          nodeUuid:
                                            type: string
                                          output:
                                            type: string
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - store
                                          - path
                                        properties:
                                          store:
                                            type:
                                              - string
                                              - integer
                                          dataset:
                                            type: string
                                          path:
                                            type: string
                                          label:
                                            type: string
                              inputAccess:
                                description: map with key - access level pairs
                                type: object
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    type: string
                                    enum:
                                      - Invisible
                                      - ReadOnly
                                      - ReadAndWrite
                                    default: ReadAndWrite
                                    example:
                                      - ReadOnly
                              inputNodes:
                                type: array
                                items:
                                  type: string
                                  pattern: ^\S+$
                                description: node IDs of where the node is connected to
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              outputs:
                                type: object
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    oneOf:
                                      - type:
                                          - integer
                                          - boolean
                                          - string
                                          - number
                                          - 'null'
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - store
                                          - path
                                        properties:
                                          store:
                                            type:
                                              - string
                                              - integer
                                          dataset:
                                            type: string
                                          path:
                                            type: string
                                          label:
                                            type: string
                              outputNode:
                                type: boolean
                                deprecated: true
                              outputNodes:
                                type: array
                                items:
                                  type: string
                                  pattern: ^\S+$
                                description: Used in group-nodes. Node IDs of those connected to the output
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              parent:
                                type:
                                  - string
                                  - 'null'
                                pattern: ^\S+$
                                description: Parent's (group-nodes') node ID s.
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              position:
                                type: object
                                additionalProperties: false
                                required:
                                  - x
                                  - 'y'
                                properties:
                                  x:
                                    type: integer
                                  'y':
                                    type: integer
                        additionalProperties: true
                      tags:
                        type: array
                        items:
                          type: integer
                      classifiers:
                        type: array
                        description: Contains the reference to the project classifiers
                        items:
                          type: string
                        example: 'some:id:to:a:classifier'
                      dev:
                        type: object
                        description: object used for development purposes only
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
    delete:
      tags:
        - project
      summary: Removes an existing link between a label and a study
      operationId: remove_tag
      responses:
        '200':
          description: The tag has been successfully removed from the study
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    title: simcore project
                    description: Description of a simcore project
                    type: object
                    additionalProperties: false
                    required:
                      - uuid
                      - name
                      - description
                      - prjOwner
                      - accessRights
                      - creationDate
                      - lastChangeDate
                      - thumbnail
                      - workbench
                    properties:
                      uuid:
                        type: string
                        description: project unique identifier
                        example: 07640335-a91f-468c-ab69-a374fa82078d
                      name:
                        type: string
                        description: project name
                        example: Temporal Distortion Simulator
                      description:
                        type: string
                        description: longer one-line description about the project
                        example: Dabbling in temporal transitions ...
                      prjOwner:
                        type: string
                        format: idn-email
                        description: user email
                      accessRights:
                        type: object
                        description: object containing the GroupID as key and read/write/execution permissions as value
                        additionalProperties: false
                        x-patternProperties:
                          ^\d+$:
                            type: object
                            description: the group id
                            additionalProperties: false
                            required:
                              - read
                              - write
                              - delete
                            properties:
                              read:
                                type: boolean
                                description: gives read access
                              write:
                                type: boolean
                                description: gives write access
                              delete:
                                type: boolean
                                description: gives deletion rights
                      creationDate:
                        type: string
                        description: project creation date
                        pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                        example: '2018-07-01T11:13:43Z'
                      lastChangeDate:
                        type: string
                        description: last save date
                        pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                        example: '2018-07-01T11:13:43Z'
                      thumbnail:
                        type: string
                        description: url of the latest screenshot of the project
                        example: 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                      workbench:
                        type: object
                        x-patternProperties:
                          ^\S+$:
                            type: object
                            additionalProperties: false
                            required:
                              - key
                              - version
                              - label
                              - position
                            properties:
                              key:
                                type: string
                                description: distinctive name for the node based on the docker registry path
                                pattern: '^(simcore)/(services)(/demodec)?/(comp|dynamic|frontend)(/[^\s/]+)+$'
                                example:
                                  - simcore/services/comp/sleeper
                                  - simcore/services/dynamic/3dviewer
                                  - simcore/services/frontend/file-picker
                              version:
                                type: string
                                description: semantic version number of the node
                                pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                                example:
                                  - 1.0.0
                                  - 0.0.1
                              label:
                                type: string
                              progress:
                                type: number
                                maximum: 100
                                minimum: 0
                                description: the node progress value
                              thumbnail:
                                type: string
                                description: url of the latest screenshot of the node
                                example:
                                  - 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                              inputs:
                                type: object
                                description: values of input properties
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    oneOf:
                                      - type:
                                          - integer
                                          - boolean
                                          - string
                                          - number
                                          - 'null'
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - nodeUuid
                                          - output
                                        properties:
                                          nodeUuid:
                                            type: string
                                          output:
                                            type: string
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - store
                                          - path
                                        properties:
                                          store:
                                            type:
                                              - string
                                              - integer
                                          dataset:
                                            type: string
                                          path:
                                            type: string
                                          label:
                                            type: string
                              inputAccess:
                                description: map with key - access level pairs
                                type: object
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    type: string
                                    enum:
                                      - Invisible
                                      - ReadOnly
                                      - ReadAndWrite
                                    default: ReadAndWrite
                                    example:
                                      - ReadOnly
                              inputNodes:
                                type: array
                                items:
                                  type: string
                                  pattern: ^\S+$
                                description: node IDs of where the node is connected to
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              outputs:
                                type: object
                                patternProperties:
                                  '^[-_a-zA-Z0-9]+$':
                                    oneOf:
                                      - type:
                                          - integer
                                          - boolean
                                          - string
                                          - number
                                          - 'null'
                                      - type: object
                                        additionalProperties: false
                                        required:
                                          - store
                                          - path
                                        properties:
                                          store:
                                            type:
                                              - string
                                              - integer
                                          dataset:
                                            type: string
                                          path:
                                            type: string
                                          label:
                                            type: string
                              outputNode:
                                type: boolean
                                deprecated: true
                              outputNodes:
                                type: array
                                items:
                                  type: string
                                  pattern: ^\S+$
                                description: Used in group-nodes. Node IDs of those connected to the output
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              parent:
                                type:
                                  - string
                                  - 'null'
                                pattern: ^\S+$
                                description: Parent's (group-nodes') node ID s.
                                example:
                                  - nodeUuid1
                                  - nodeUuid2
                              position:
                                type: object
                                additionalProperties: false
                                required:
                                  - x
                                  - 'y'
                                properties:
                                  x:
                                    type: integer
                                  'y':
                                    type: integer
                        additionalProperties: true
                      tags:
                        type: array
                        items:
                          type: integer
                      classifiers:
                        type: array
                        description: Contains the reference to the project classifiers
                        items:
                          type: string
                        example: 'some:id:to:a:classifier'
                      dev:
                        type: object
                        description: object used for development purposes only
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  /activity/status:
    get:
      operationId: get_status
      tags:
        - activity
      responses:
        '200':
          description: 'Object containing queuing, CPU and Memory usage/limits information of services'
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    additionalProperties: true
                    type: object
                    properties:
                      stats:
                        type: object
                        properties:
                          cpuUsage:
                            type: number
                            minimum: 0
                          memoryUsage:
                            type: number
                      limits:
                        type: object
                        properties:
                          cpus:
                            type: number
                          mem:
                            type: number
                      queued:
                        type: boolean
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  /tags:
    get:
      tags:
        - tag
      summary: List all tags for the current user
      operationId: list_tags
      responses:
        '200':
          description: List of tags
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - tags
                    properties:
                      tags:
                        type: array
                        items:
                          type: object
                          required:
                            - name
                            - color
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            description:
                              type: string
                            color:
                              type: string
                              pattern: '^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$'
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
    post:
      tags:
        - tag
      summary: Creates a new tag
      operationId: create_tag
      responses:
        '200':
          description: The created tag
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - name
                      - color
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      color:
                        type: string
                        pattern: '^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$'
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  '/tags/{tag_id}':
    parameters:
      - name: tag_id
        in: path
        required: true
        schema:
          type: integer
    put:
      tags:
        - tag
      summary: Updates a tag
      operationId: update_tag
      responses:
        '200':
          description: The updated tag
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - name
                      - color
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      description:
                        type: string
                      color:
                        type: string
                        pattern: '^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$'
                  error:
                    nullable: true
                    default: null
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
    delete:
      tags:
        - tag
      summary: Deletes an existing tag
      operationId: delete_tag
      responses:
        '204':
          description: The tag has been successfully deleted
  /publications/service-submission:
    post:
      tags:
        - publication
      summary: Submits a new service candidate
      operationId: service_submission
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - metadata
              properties:
                metadata:
                  type: string
                  format: binary
                attachment:
                  type: string
                  format: binary
      responses:
        '204':
          description: Submission has been registered
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  /catalog/dags:
    get:
      tags:
        - catalog
      operationId: list_catalog_dags
      responses:
        '200':
          description: List of catalog dags
        '422':
          description: Validation Error
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
    post:
      tags:
        - catalog
      summary: Creates a new dag in catalog
      operationId: create_catalog_dag
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '201':
          description: The dag was successfully created
        '422':
          description: Validation Error
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
  '/catalog/dags/{dag_id}':
    parameters:
      - in: path
        name: dag_id
        required: true
        schema:
          title: Dag Id
          type: integer
    put:
      tags:
        - catalog
      summary: Replaces a dag in catalog
      operationId: replace_catalog_dag
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: The dag was replaced in catalog
        '422':
          description: Validation Error
        default:
          description: Default http error response body
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    nullable: true
                    properties:
                      logs:
                        description: log messages
                        type: array
                        items:
                          type: object
                          properties:
                            level:
                              description: log level
                              type: string
                              default: INFO
                              enum:
                                - DEBUG
                                - WARNING
                                - INFO
                                - ERROR
                            message:
                              description: 'log message. If logger is USER, then it MUST be human readable'
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                          required:
                            - message
                          example:
                            message: 'Hi there, Mr user'
                            level: INFO
                            logger: user-logger
                      errors:
                        description: errors metadata
                        type: array
                        items:
                          type: object
                          required:
                            - code
                            - message
                          properties:
                            code:
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              type: string
                              description: Error message specific to this item
                            resource:
                              type: string
                              description: API resource affected by this error
                            field:
                              type: string
                              description: Specific field within the resource
                      status:
                        description: HTTP error code
                        type: integer
                    example:
                      BadRequestError:
                        logs:
                          - message: Requested information is incomplete or malformed
                            level: ERROR
                          - message: Invalid email and password
                            level: ERROR
                            logger: USER
                        errors:
                          - code: InvalidEmail
                            message: Email is malformed
                            field: email
                          - code: UnsavePassword
                            message: Password is not secure
                            field: pasword
                        status: 400
    delete:
      tags:
        - catalog
      summary: Deletes an existing dag
      operationId: delete_catalog_dag
      responses:
        '204':
          description: Successfully deleted
        '422':
          description: Validation Error
components:
  responses:
    DefaultErrorResponse:
      description: Default http error response body
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              data:
                nullable: true
                default: null
              error:
                type: object
                nullable: true
                properties:
                  logs:
                    description: log messages
                    type: array
                    items:
                      type: object
                      properties:
                        level:
                          description: log level
                          type: string
                          default: INFO
                          enum:
                            - DEBUG
                            - WARNING
                            - INFO
                            - ERROR
                        message:
                          description: 'log message. If logger is USER, then it MUST be human readable'
                          type: string
                        logger:
                          description: name of the logger receiving this message
                          type: string
                      required:
                        - message
                      example:
                        message: 'Hi there, Mr user'
                        level: INFO
                        logger: user-logger
                  errors:
                    description: errors metadata
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                          description: Typically the name of the exception that produced it otherwise some known error code
                        message:
                          type: string
                          description: Error message specific to this item
                        resource:
                          type: string
                          description: API resource affected by this error
                        field:
                          type: string
                          description: Specific field within the resource
                  status:
                    description: HTTP error code
                    type: integer
                example:
                  BadRequestError:
                    logs:
                      - message: Requested information is incomplete or malformed
                        level: ERROR
                      - message: Invalid email and password
                        level: ERROR
                        logger: USER
                    errors:
                      - code: InvalidEmail
                        message: Email is malformed
                        field: email
                      - code: UnsavePassword
                        message: Password is not secure
                        field: pasword
                    status: 400
