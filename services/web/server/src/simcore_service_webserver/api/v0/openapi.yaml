openapi: 3.0.0
info:
  title: osparc-simcore web API
  version: 0.25.0
  description: API designed for the front-end app
  contact:
    name: IT'IS Foundation
    email: support@simcore.io
  license:
    name: MIT
    url: 'https://github.com/ITISFoundation/osparc-simcore/blob/master/LICENSE'
servers:
  - description: Development server
    url: 'http://{host}:{port}'
    variables:
      host:
        default: localhost
      port:
        default: '8001'
paths:
  '/v0/email:test':
    post:
      tags:
        - admin
      summary: Test Email
      operationId: test_email
      parameters:
        - required: false
          schema:
            title: X-Simcore-Products-Name
            type: string
          name: x-simcore-products-name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              title: TestEmail
              required:
                - to
              type: object
              properties:
                from_:
                  title: 'From '
                  type: string
                  description: Email sender
                  format: email
                to:
                  title: To
                  type: string
                  description: Email receiver
                  format: email
                template_name:
                  title: Template Name
                  enum:
                    - change_email_email.jinja2
                    - new_2fa_code.jinja2
                    - registration_email.jinja2
                    - reset_password_email_failed.jinja2
                    - reset_password_email.jinja2
                    - service_submission.jinja2
                  type: string
                  default: registration_email.jinja2
                template_context:
                  title: Template Context
                  type: object
                  default: {}
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[Union[TestFailed, TestPassed]]'
                type: object
                properties:
                  data:
                    title: Data
                    anyOf:
                      - title: TestFailed
                        required:
                          - test_name
                          - error_type
                          - error_message
                          - traceback
                        type: object
                        properties:
                          test_name:
                            title: Test Name
                            type: string
                          error_type:
                            title: Error Type
                            type: string
                          error_message:
                            title: Error Message
                            type: string
                          traceback:
                            title: Traceback
                            type: string
                      - title: TestPassed
                        required:
                          - fixtures
                          - info
                        type: object
                        properties:
                          fixtures:
                            title: Fixtures
                            type: object
                          info:
                            title: Info
                            type: object
                  error:
                    title: Error
  /v0/announcements:
    get:
      tags:
        - announcements
      summary: List Announcements
      operationId: list_announcements
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        id:
                          type: string
                          title: Id
                        products:
                          items:
                            type: string
                            enum:
                              - osparc
                              - s4l
                              - s4llite
                              - tis
                          type: array
                          title: Products
                        start:
                          type: string
                          format: date-time
                          title: Start
                        end:
                          type: string
                          format: date-time
                          title: End
                        title:
                          type: string
                          title: Title
                        description:
                          type: string
                          title: Description
                        link:
                          type: string
                          title: Link
                        widgets:
                          items:
                            type: string
                            enum:
                              - login
                              - ribbon
                              - user-menu
                          type: array
                          title: Widgets
                      type: object
                      required:
                        - id
                        - products
                        - start
                        - end
                        - title
                        - description
                        - link
                        - widgets
                      title: Announcement
                    type: array
                    title: Data
                  error:
                    title: Error
                type: object
                title: 'Envelope[list[simcore_service_webserver.announcements._models.Announcement]]'
  /v0/:
    get:
      tags:
        - maintenance
      summary: readiness probe for
      operationId: healthcheck_readiness_probe
      responses:
        '200':
          description: Service information
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                      status:
                        type: string
                      api_version:
                        type: string
                      version:
                        type: string
                    example:
                      name: simcore-director-service
                      status: SERVICE_RUNNING
                      api_version: 0.1.0-dev+NJuzzD9S
                      version: 0.1.0-dev+N127Mfv9H
                  error:
                    nullable: true
                    default: null
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  /v0/health:
    get:
      tags:
        - maintenance
      summary: liveliness probe
      operationId: healthcheck_liveness_probe
      responses:
        '200':
          description: Service information
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1/get/responses/200/content/application~1json/schema'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  /v0/status:
    get:
      tags:
        - maintenance
      summary: checks status of self and connected services
      operationId: get_app_status
      responses:
        '200':
          description: returns app status check
  /v0/status/diagnostics:
    get:
      tags:
        - maintenance
      operationId: get_app_diagnostics
      responses:
        '200':
          description: returns app diagnostics report
  '/v0/status/{service_name}':
    get:
      tags:
        - maintenance
      operationId: get_service_status
      parameters:
        - in: path
          required: true
          name: service_name
          schema:
            type: string
      responses:
        '200':
          description: returns status of connected service
  /v0/config:
    get:
      summary: Front end runtime configuration
      operationId: get_config
      tags:
        - configuration
      responses:
        '200':
          description: configuration details
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      invitation_required:
                        type: boolean
                    example:
                      invitation_required: true
                  error:
                    nullable: true
                    default: null
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  /v0/scheduled_maintenance:
    get:
      tags:
        - maintenance
      summary: Get Scheduled Maintenance
      operationId: get_scheduled_maintenance
      responses:
        '200':
          description: Maintenance scheduled
          content:
            application/json:
              schema:
                title: ScheduledMaintenance
                type: object
                properties:
                  start:
                    title: Start
                    type: string
                    description: At what time the Maintenance starts (UTC)
                  end:
                    title: End
                    type: string
                    description: At what time the Maintenance ends (UTC)
                  reason:
                    title: Reason
                    type: string
                    description: What the purpose of the Maintenance is
                additionalProperties: false
        '204':
          description: No maintenance scheduled
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/auth/register/invitations:check':
    post:
      tags:
        - authentication
      summary: Check Registration Invitation
      description: Check invitation and returns associated email or None
      operationId: auth_check_registration_invitation
      requestBody:
        content:
          application/json:
            schema:
              title: InvitationCheck
              required:
                - invitation
              type: object
              properties:
                invitation:
                  title: Invitation
                  type: string
                  description: Invitation code
              additionalProperties: false
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[InvitationInfo]'
                type: object
                properties:
                  data:
                    title: InvitationInfo
                    type: object
                    properties:
                      email:
                        title: Email
                        type: string
                        description: Email associated to invitation or None
                        format: email
                    additionalProperties: false
                  error:
                    title: Error
  /v0/auth/register:
    post:
      tags:
        - authentication
      summary: Register
      description: User registration
      operationId: auth_register
      requestBody:
        content:
          application/json:
            schema:
              title: RegisterBody
              required:
                - email
                - password
              type: object
              properties:
                email:
                  title: Email
                  type: string
                  format: email
                password:
                  title: Password
                  type: string
                  format: password
                  writeOnly: true
                confirm:
                  title: Confirm
                  type: string
                  description: Password confirmation
                  format: password
                  writeOnly: true
                invitation:
                  title: Invitation
                  type: string
                  description: Invitation code
              additionalProperties: false
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1auth~1logout/post/responses/200/content/application~1json/schema'
  '/v0/auth/two_factor:resend':
    post:
      tags:
        - authentication
      summary: Resend 2Fa Code
      description: Resends 2FA either via email or sms
      operationId: auth_resend_2fa_code
      requestBody:
        content:
          application/json:
            schema:
              title: Resend2faBody
              required:
                - email
              type: object
              properties:
                email:
                  title: Email
                  type: string
                  description: User email (identifier)
                  format: email
                via:
                  title: Via
                  enum:
                    - SMS
                    - Email
                  type: string
                  default: SMS
              additionalProperties: false
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1auth~1logout/post/responses/200/content/application~1json/schema'
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1auth~1login/post/responses/401/content/application~1json/schema'
  /v0/auth/verify-phone-number:
    post:
      tags:
        - authentication
      summary: Register Phone
      description: user tries to verify phone number for 2 Factor Authentication when registering
      operationId: auth_register_phone
      requestBody:
        content:
          application/json:
            schema:
              title: RegisterPhoneBody
              required:
                - email
                - phone
              type: object
              properties:
                email:
                  title: Email
                  type: string
                  format: email
                phone:
                  title: Phone
                  type: string
                  description: 'Phone number E.164, needed on the deployments with 2FA'
              additionalProperties: false
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[RegisterPhoneNextPage]'
                type: object
                properties:
                  data:
                    title: RegisterPhoneNextPage
                    required:
                      - name
                      - message
                    type: object
                    properties:
                      name:
                        title: Name
                        type: string
                        description: Code name to the front-end page. Ideally a PageStr
                      parameters:
                        title: _PageParams
                        type: object
                        properties:
                          retry_2fa_after:
                            title: Retry 2Fa After
                            exclusiveMinimum: true
                            type: integer
                            minimum: 0
                      logger:
                        title: Logger
                        type: string
                        default: user
                        deprecated: true
                      level:
                        title: Level
                        enum:
                          - INFO
                          - WARNING
                          - ERROR
                        type: string
                        default: INFO
                      message:
                        title: Message
                        type: string
                    description: |-
                      This is the body of a 2XX response to pass the front-end
                      what kind of page shall be display next and some information about it

                      An analogous structure is used in the redirects (see create_redirect_response) but
                      using a path+query in the fragment of the URL
                  error:
                    title: Error
  /v0/auth/validate-code-register:
    post:
      tags:
        - authentication
      summary: Phone Confirmation
      description: user enters 2 Factor Authentication code when registering
      operationId: auth_phone_confirmation
      requestBody:
        content:
          application/json:
            schema:
              title: PhoneConfirmationBody
              required:
                - email
                - phone
                - code
              type: object
              properties:
                email:
                  title: Email
                  type: string
                  format: email
                phone:
                  title: Phone
                  type: string
                  description: 'Phone number E.164, needed on the deployments with 2FA'
                code:
                  title: Code
                  type: string
                  format: password
                  writeOnly: true
              additionalProperties: false
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1auth~1logout/post/responses/200/content/application~1json/schema'
  /v0/auth/login:
    post:
      tags:
        - authentication
      summary: Login
      description: user logs in
      operationId: auth_login
      requestBody:
        content:
          application/json:
            schema:
              title: LoginBody
              required:
                - email
                - password
              type: object
              properties:
                email:
                  title: Email
                  type: string
                  format: email
                password:
                  title: Password
                  type: string
                  format: password
                  writeOnly: true
              additionalProperties: false
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[LoginNextPage]'
                type: object
                properties:
                  data:
                    title: LoginNextPage
                    required:
                      - name
                      - code
                      - reason
                    type: object
                    properties:
                      name:
                        title: Name
                        type: string
                        description: Code name to the front-end page. Ideally a PageStr
                      parameters:
                        title: CodePageParams
                        required:
                          - message
                        type: object
                        properties:
                          message:
                            title: Message
                            type: string
                          retry_2fa_after:
                            title: Retry 2Fa After
                            exclusiveMinimum: true
                            type: integer
                            minimum: 0
                          next_url:
                            title: Next Url
                            type: string
                      code:
                        title: Code
                        type: string
                        deprecated: true
                      reason:
                        title: Reason
                        type: string
                        deprecated: true
                    description: |-
                      This is the body of a 2XX response to pass the front-end
                      what kind of page shall be display next and some information about it

                      An analogous structure is used in the redirects (see create_redirect_response) but
                      using a path+query in the fragment of the URL
                  error:
                    title: Error
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                title: 'Envelope[Error]'
                type: object
                properties:
                  data:
                    title: Error
                    type: object
                    properties:
                      logs:
                        title: Logs
                        type: array
                        items:
                          $ref: '#/paths/~1v0~1auth~1logout/post/responses/200/content/application~1json/schema/properties/data'
                        description: log messages
                      errors:
                        title: Errors
                        type: array
                        items:
                          title: ErrorItem
                          required:
                            - code
                            - message
                          type: object
                          properties:
                            code:
                              title: Code
                              type: string
                              description: Typically the name of the exception that produced it otherwise some known error code
                            message:
                              title: Message
                              type: string
                              description: Error message specific to this item
                            resource:
                              title: Resource
                              type: string
                              description: API resource affected by this error
                            field:
                              title: Field
                              type: string
                              description: Specific field within the resource
                        description: errors metadata
                      status:
                        title: Status
                        type: integer
                        description: HTTP error code
                  error:
                    title: Error
  /v0/auth/validate-code-login:
    post:
      tags:
        - authentication
      summary: Login 2Fa
      description: user enters 2 Factor Authentication code when login in
      operationId: auth_login_2fa
      requestBody:
        content:
          application/json:
            schema:
              title: LoginTwoFactorAuthBody
              required:
                - email
                - code
              type: object
              properties:
                email:
                  title: Email
                  type: string
                  format: email
                code:
                  title: Code
                  type: string
                  format: password
                  writeOnly: true
              additionalProperties: false
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1auth~1logout/post/responses/200/content/application~1json/schema'
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1auth~1login/post/responses/401/content/application~1json/schema'
  /v0/auth/logout:
    post:
      tags:
        - authentication
      summary: Logout
      description: user logout
      operationId: auth_logout
      requestBody:
        content:
          application/json:
            schema:
              title: LogoutBody
              type: object
              properties:
                client_session_id:
                  title: Client Session Id
                  type: string
                  example: 5ac57685-c40f-448f-8711-70be1936fd63
              additionalProperties: false
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[Log]'
                type: object
                properties:
                  data:
                    title: Log
                    required:
                      - message
                    type: object
                    properties:
                      level:
                        allOf:
                          - title: LogLevel
                            enum:
                              - DEBUG
                              - INFO
                              - WARNING
                              - ERROR
                            type: string
                            description: An enumeration.
                        description: log level
                        default: INFO
                      message:
                        title: Message
                        type: string
                        description: 'log message. If logger is USER, then it MUST be human readable'
                      logger:
                        title: Logger
                        type: string
                        description: name of the logger receiving this message
                    example:
                      message: 'Hi there, Mr user'
                      level: INFO
                      logger: user-logger
                  error:
                    title: Error
  /v0/auth/reset-password:
    post:
      tags:
        - authentication
      summary: Reset Password
      description: a non logged-in user requests a password reset
      operationId: auth_reset_password
      requestBody:
        content:
          application/json:
            schema:
              title: ResetPasswordBody
              required:
                - email
              type: object
              properties:
                email:
                  title: Email
                  type: string
              additionalProperties: false
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1auth~1logout/post/responses/200/content/application~1json/schema'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1auth~1login/post/responses/401/content/application~1json/schema'
  '/v0/auth/reset-password/{code}':
    post:
      tags:
        - authentication
      summary: Reset Password Allowed
      description: changes password using a token code without being logged in
      operationId: auth_reset_password_allowed
      parameters:
        - required: true
          schema:
            title: Code
            type: string
          name: code
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: ResetPasswordConfirmation
              required:
                - password
                - confirm
              type: object
              properties:
                password:
                  title: Password
                  type: string
                  format: password
                  writeOnly: true
                confirm:
                  title: Confirm
                  type: string
                  format: password
                  writeOnly: true
              additionalProperties: false
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1auth~1logout/post/responses/200/content/application~1json/schema'
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1auth~1login/post/responses/401/content/application~1json/schema'
  /v0/auth/change-email:
    post:
      tags:
        - authentication
      summary: Change Email
      description: logged in user changes email
      operationId: auth_change_email
      requestBody:
        content:
          application/json:
            schema:
              title: ChangeEmailBody
              required:
                - email
              type: object
              properties:
                email:
                  title: Email
                  type: string
                  format: email
              additionalProperties: false
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1auth~1logout/post/responses/200/content/application~1json/schema'
        '401':
          description: unauthorized user. Login required
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1auth~1login/post/responses/401/content/application~1json/schema'
        '503':
          description: unable to send confirmation email
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1auth~1login/post/responses/401/content/application~1json/schema'
  /v0/auth/change-password:
    post:
      tags:
        - authentication
      summary: Change Password
      description: logged in user changes password
      operationId: auth_change_password
      requestBody:
        content:
          application/json:
            schema:
              title: ChangePasswordBody
              required:
                - current
                - new
                - confirm
              type: object
              properties:
                current:
                  title: Current
                  type: string
                  format: password
                  writeOnly: true
                new:
                  title: New
                  type: string
                  format: password
                  writeOnly: true
                confirm:
                  title: Confirm
                  type: string
                  format: password
                  writeOnly: true
              additionalProperties: false
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1auth~1logout/post/responses/200/content/application~1json/schema'
        '401':
          description: unauthorized user. Login required
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1auth~1login/post/responses/401/content/application~1json/schema'
        '409':
          description: mismatch between new and confirmation passwords
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1auth~1login/post/responses/401/content/application~1json/schema'
        '422':
          description: current password is invalid
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1auth~1login/post/responses/401/content/application~1json/schema'
  '/v0/auth/confirmation/{code}':
    get:
      tags:
        - authentication
      summary: Email Confirmation
      description: email link sent to user to confirm an action
      operationId: auth_confirmation
      parameters:
        - required: true
          schema:
            title: Code
            type: string
          name: code
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1auth~1logout/post/responses/200/content/application~1json/schema'
        3XX:
          description: redirection to specific ui application page
  /v0/auth/api-keys:
    get:
      tags:
        - authentication
      summary: List Api Keys
      description: lists display names of API keys by this user
      operationId: list_api_keys
      parameters:
        - required: true
          schema:
            title: Code
            type: string
          name: code
          in: query
      responses:
        '200':
          description: returns the display names of API keys
          content:
            application/json:
              schema:
                title: Response 200 List Api Keys
                type: array
                items:
                  type: string
        '400':
          description: key name requested is invalid
        '401':
          description: requires login to  list keys
        '403':
          description: not enough permissions to list keys
    post:
      tags:
        - authentication
      summary: Create Api Key
      description: creates API keys to access public API
      operationId: create_api_key
      requestBody:
        content:
          application/json:
            schema:
              title: ApiKeyCreate
              required:
                - display_name
              type: object
              properties:
                display_name:
                  title: Display Name
                  minLength: 3
                  type: string
                expiration:
                  title: Expiration
                  type: number
                  description: 'Time delta from creation time to expiration. If None, then it does not expire.'
                  format: time-delta
        required: true
      responses:
        '200':
          description: Authorization granted returning API key
          content:
            application/json:
              schema:
                title: ApiKeyGet
                required:
                  - display_name
                  - api_key
                  - api_secret
                type: object
                properties:
                  display_name:
                    title: Display Name
                    minLength: 3
                    type: string
                  api_key:
                    title: Api Key
                    type: string
                  api_secret:
                    title: Api Secret
                    type: string
        '400':
          description: key name requested is invalid
        '401':
          description: requires login to  list keys
        '403':
          description: not enough permissions to list keys
    delete:
      tags:
        - authentication
      summary: Delete Api Key
      description: deletes API key by name
      operationId: delete_api_key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/paths/~1v0~1auth~1api-keys/post/requestBody/content/application~1json/schema'
        required: true
      responses:
        '204':
          description: api key successfully deleted
        '401':
          description: requires login to  delete a key
        '403':
          description: not enough permissions to delete a key
  /v0/me:
    get:
      tags:
        - user
      summary: Get User Profile
      operationId: get_my_profile
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[ProfileGet]'
                type: object
                properties:
                  data:
                    title: ProfileGet
                    required:
                      - id
                      - login
                      - role
                    type: object
                    properties:
                      first_name:
                        title: First Name
                        type: string
                      last_name:
                        title: Last Name
                        type: string
                      id:
                        title: Id
                        exclusiveMinimum: true
                        type: integer
                        minimum: 0
                      login:
                        title: Login
                        type: string
                        format: email
                      role:
                        title: Role
                        enum:
                          - Anonymous
                          - Guest
                          - User
                          - Tester
                          - Admin
                        type: string
                      groups:
                        title: AllUsersGroups
                        type: object
                        properties:
                          me:
                            title: UsersGroup
                            required:
                              - gid
                              - label
                              - description
                              - accessRights
                            type: object
                            properties:
                              gid:
                                title: Gid
                                type: integer
                                description: the group ID
                              label:
                                title: Label
                                type: string
                                description: the group name
                              description:
                                title: Description
                                type: string
                                description: the group description
                              thumbnail:
                                title: Thumbnail
                                maxLength: 65536
                                minLength: 1
                                type: string
                                description: url to the group thumbnail
                                format: uri
                              accessRights:
                                title: GroupAccessRights
                                required:
                                  - read
                                  - write
                                  - delete
                                type: object
                                properties:
                                  read:
                                    title: Read
                                    type: boolean
                                  write:
                                    title: Write
                                    type: boolean
                                  delete:
                                    title: Delete
                                    type: boolean
                                description: defines acesss rights for the user
                              inclusionRules:
                                title: Inclusionrules
                                type: object
                                additionalProperties:
                                  type: string
                                description: Maps user's column and regular expression
                          organizations:
                            title: Organizations
                            type: array
                            items:
                              $ref: '#/paths/~1v0~1me/get/responses/200/content/application~1json/schema/properties/data/properties/groups/properties/me'
                          all:
                            $ref: '#/paths/~1v0~1me/get/responses/200/content/application~1json/schema/properties/data/properties/groups/properties/me'
                          product:
                            $ref: '#/paths/~1v0~1me/get/responses/200/content/application~1json/schema/properties/data/properties/groups/properties/me'
                        example:
                          me:
                            gid: '27'
                            label: A user
                            description: A very special user
                            accessRights:
                              read: true
                              write: true
                              delete: true
                          organizations:
                            - gid: '15'
                              label: ITIS Foundation
                              description: The Foundation for Research on Information Technologies in Society
                              accessRights:
                                read: true
                                write: false
                                delete: false
                            - gid: '16'
                              label: Blue Fundation
                              description: Some foundation
                              accessRights:
                                read: true
                                write: false
                                delete: false
                          all:
                            gid: '0'
                            label: All
                            description: Open to all users
                            accessRights:
                              read: true
                              write: false
                              delete: false
                      gravatar_id:
                        title: Gravatar Id
                        type: string
                      expirationDate:
                        title: Expirationdate
                        type: string
                        description: 'If user has a trial account, it sets the expiration date, otherwise None'
                        format: date
                  error:
                    title: Error
    put:
      tags:
        - user
      summary: Update My Profile
      operationId: update_my_profile
      requestBody:
        content:
          application/json:
            schema:
              title: ProfileUpdate
              type: object
              properties:
                first_name:
                  title: First Name
                  type: string
                last_name:
                  title: Last Name
                  type: string
              example:
                first_name: Pedro
                last_name: Crespo
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/me/tokens:
    get:
      tags:
        - user
      summary: List Tokens
      operationId: list_tokens
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[list[simcore_service_webserver.users.schemas.Token]]'
                type: object
                properties:
                  data:
                    title: Data
                    type: array
                    items:
                      $ref: '#/paths/~1v0~1me~1tokens/post/responses/201/content/application~1json/schema/properties/data'
                  error:
                    title: Error
    post:
      tags:
        - user
      summary: Create Token
      operationId: create_token
      requestBody:
        content:
          application/json:
            schema:
              title: TokenCreate
              required:
                - service
                - token_key
              type: object
              properties:
                service:
                  title: Service
                  type: string
                  description: uniquely identifies the service where this token is used
                token_key:
                  title: Token Key
                  type: string
                  description: basic token key
                  format: uuid
                token_secret:
                  title: Token Secret
                  type: string
                  format: uuid
              description: 'Tokens used to access third-party services connected to osparc (e.g. pennsieve, scicrunch, etc)'
              example:
                service: github-api-v1
                token_key: 5f21abf5-c596-47b7-bfd1-c0e436ef1107
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[Token]'
                type: object
                properties:
                  data:
                    title: Token
                    required:
                      - service
                      - token_key
                    type: object
                    properties:
                      service:
                        title: Service
                        type: string
                        description: uniquely identifies the service where this token is used
                      token_key:
                        title: Token Key
                        type: string
                        description: basic token key
                        format: uuid
                      token_secret:
                        title: Token Secret
                        type: string
                        format: uuid
                    description: 'Tokens used to access third-party services connected to osparc (e.g. pennsieve, scicrunch, etc)'
                    example:
                      service: github-api-v1
                      token_key: 5f21abf5-c596-47b7-bfd1-c0e436ef1107
                  error:
                    title: Error
  '/v0/me/tokens/{service}':
    get:
      tags:
        - user
      summary: Get Token
      operationId: get_token
      parameters:
        - required: true
          schema:
            title: Service
            type: string
          name: service
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1me~1tokens/post/responses/201/content/application~1json/schema'
    delete:
      tags:
        - user
      summary: Delete Token
      operationId: delete_token
      parameters:
        - required: true
          schema:
            title: Service
            type: string
          name: service
          in: path
      responses:
        '204':
          description: Successful Response
  /v0/me/notifications:
    get:
      tags:
        - user
      summary: List User Notifications
      operationId: list_user_notifications
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[list[simcore_service_webserver.users._notifications.UserNotification]]'
                type: object
                properties:
                  data:
                    title: Data
                    type: array
                    items:
                      title: UserNotification
                      required:
                        - user_id
                        - category
                        - actionable_path
                        - title
                        - text
                        - date
                        - id
                        - read
                      type: object
                      properties:
                        user_id:
                          title: User Id
                          exclusiveMinimum: true
                          type: integer
                          minimum: 0
                        category:
                          $ref: '#/paths/~1v0~1me~1notifications/post/requestBody/content/application~1json/schema/properties/category'
                        actionable_path:
                          title: Actionable Path
                          type: string
                        title:
                          title: Title
                          type: string
                        text:
                          title: Text
                          type: string
                        date:
                          title: Date
                          type: string
                          format: date-time
                        id:
                          title: Id
                          type: string
                        read:
                          title: Read
                          type: boolean
                  error:
                    title: Error
    post:
      tags:
        - user
      summary: Create User Notification
      operationId: create_user_notification
      requestBody:
        content:
          application/json:
            schema:
              title: UserNotificationCreate
              required:
                - user_id
                - category
                - actionable_path
                - title
                - text
                - date
              type: object
              properties:
                user_id:
                  title: User Id
                  exclusiveMinimum: true
                  type: integer
                  minimum: 0
                category:
                  title: NotificationCategory
                  enum:
                    - NEW_ORGANIZATION
                    - STUDY_SHARED
                    - TEMPLATE_SHARED
                    - ANNOTATION_NOTE
                  type: string
                  description: An enumeration.
                actionable_path:
                  title: Actionable Path
                  type: string
                title:
                  title: Title
                  type: string
                text:
                  title: Text
                  type: string
                date:
                  title: Date
                  type: string
                  format: date-time
        required: true
      responses:
        '204':
          description: Successful Response
  '/v0/me/notifications/{notification_id}':
    patch:
      tags:
        - user
      summary: Mark Notification As Read
      operationId: mark_notification_as_read
      parameters:
        - required: true
          schema:
            title: Notification Id
            type: string
          name: notification_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: UserNotificationPatch
              required:
                - read
              type: object
              properties:
                read:
                  title: Read
                  type: boolean
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/me/permissions:
    get:
      tags:
        - user
      summary: List User Permissions
      operationId: list_user_permissions
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[list[simcore_service_webserver.users.schemas.PermissionGet]]'
                type: object
                properties:
                  data:
                    title: Data
                    type: array
                    items:
                      title: PermissionGet
                      required:
                        - name
                        - allowed
                      type: object
                      properties:
                        name:
                          title: Name
                          type: string
                        allowed:
                          title: Allowed
                          type: boolean
                  error:
                    title: Error
  /v0/groups:
    get:
      summary: List my groups
      operationId: list_groups
      tags:
        - group
      responses:
        '200':
          description: list of the groups I belonged to
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      me:
                        $ref: '#/paths/~1v0~1groups/post/requestBody/content/application~1json/schema'
                      organizations:
                        type: array
                        items:
                          $ref: '#/paths/~1v0~1groups/post/requestBody/content/application~1json/schema'
                      all:
                        $ref: '#/paths/~1v0~1groups/post/requestBody/content/application~1json/schema'
                      product:
                        $ref: '#/paths/~1v0~1groups/post/requestBody/content/application~1json/schema'
                  error:
                    nullable: true
                    default: null
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    post:
      summary: Create a new group
      operationId: create_group
      tags:
        - group
      requestBody:
        required: true
        description: the group to create
        content:
          application/json:
            schema:
              type: object
              properties:
                gid:
                  description: the group ID
                  type: string
                label:
                  description: the group name
                  type: string
                description:
                  description: the group description
                  type: string
                thumbnail:
                  description: url to the group thumbnail
                  type: string
                  format: uri
                accessRights:
                  $ref: '#/paths/~1v0~1groups~1%7Bgid%7D~1users~1%7Buid%7D/patch/requestBody/content/application~1json/schema/properties/accessRights'
              required:
                - gid
                - label
                - description
                - accessRights
              example:
                - gid: '27'
                  label: A user
                  description: A very special user
                  thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                - gid: '1'
                  label: ITIS Foundation
                  description: The Foundation for Research on Information Technologies in Society
                  thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                - gid: '0'
                  label: All
                  description: Open to all users
                  thumbnail: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
      responses:
        '201':
          description: group created
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/paths/~1v0~1groups/post/requestBody/content/application~1json/schema'
                  error:
                    nullable: true
                    default: null
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/groups/{gid}':
    parameters:
      - name: gid
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - group
      summary: Gets one group details
      operationId: get_group
      responses:
        '200':
          description: got group
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1groups/post/responses/201/content/application~1json/schema'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    patch:
      summary: Update one group
      operationId: update_group
      tags:
        - group
      requestBody:
        required: true
        description: the group to update
        content:
          application/json:
            schema:
              $ref: '#/paths/~1v0~1groups/post/requestBody/content/application~1json/schema'
      responses:
        '200':
          description: the modified group
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1groups/post/responses/201/content/application~1json/schema'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    delete:
      tags:
        - group
      summary: Deletes one group
      operationId: delete_group
      responses:
        '204':
          description: group has been successfully deleted
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/groups/{gid}/users':
    parameters:
      - name: gid
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - group
      summary: Gets list of users in group
      operationId: get_group_users
      responses:
        '200':
          description: got list of users and their respective rights
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/paths/~1v0~1groups~1%7Bgid%7D~1users~1%7Buid%7D/get/responses/200/content/application~1json/schema/properties/data'
                  error:
                    nullable: true
                    default: null
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    post:
      tags:
        - group
      summary: Adds a user in the group
      operationId: add_group_user
      requestBody:
        required: true
        description: the user to add
        content:
          application/json:
            schema:
              anyOf:
                - type: object
                  required:
                    - uid
                  properties:
                    uid:
                      type: string
                      description: the user id
                - type: object
                  required:
                    - email
                  properties:
                    email:
                      type: string
                      format: email
                      description: the user email
      responses:
        '204':
          description: user successfully added
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/groups/{gid}/users/{uid}':
    parameters:
      - name: gid
        in: path
        required: true
        schema:
          type: string
      - name: uid
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - group
      summary: Gets specific user in group
      operationId: get_group_user
      responses:
        '200':
          description: got user
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    allOf:
                      - type: object
                        properties:
                          first_name:
                            type: string
                            description: the user first name
                          last_name:
                            type: string
                            description: the user last name
                          login:
                            type: string
                            format: email
                            description: the user login email
                          gravatar_id:
                            type: string
                            description: the user gravatar id hash
                          id:
                            type: string
                            description: the user id
                          gid:
                            type: string
                            description: the user primary gid
                        example:
                          first_name: Mr
                          last_name: Smith
                          login: mr.smith@matrix.com
                          gravatar_id: a1af5c6ecc38e81f29695f01d6ceb540
                          id: '1'
                          gid: '3'
                      - $ref: '#/paths/~1v0~1groups~1%7Bgid%7D~1users~1%7Buid%7D/patch/requestBody/content/application~1json/schema/properties/accessRights'
                  error:
                    nullable: true
                    default: null
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    patch:
      tags:
        - group
      summary: Modify specific user in group
      operationId: update_group_user
      requestBody:
        required: true
        description: the user rights to modify
        content:
          application/json:
            schema:
              type: object
              properties:
                accessRights:
                  description: defines acesss rights for the user
                  type: object
                  properties:
                    read:
                      type: boolean
                    write:
                      type: boolean
                    delete:
                      type: boolean
                  required:
                    - read
                    - write
                    - delete
                  example:
                    - read: true
                      write: false
                      delete: false
                    - read: true
                      write: true
                      delete: false
                    - read: true
                      write: true
                      delete: true
              required:
                - accessRights
      responses:
        '200':
          description: modified user
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1groups~1%7Bgid%7D~1users~1%7Buid%7D/get/responses/200/content/application~1json/schema'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    delete:
      tags:
        - group
      summary: Delete specific user in group
      operationId: delete_group_user
      responses:
        '204':
          description: successfully removed user
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/groups/{gid}/classifiers':
    get:
      parameters:
        - name: gid
          in: path
          required: true
          schema:
            type: string
        - name: tree_view
          in: query
          description: Some classifiers (e.g. sparc's) offer different tree views
          schema:
            type: string
            enum:
              - std
              - sort
            default: std
      tags:
        - group
      summary: Gets classifiers bundle for this group
      operationId: get_group_classifiers
      responses:
        '200':
          description: got a bundle with all information about classifiers
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/groups/sparc/classifiers/scicrunch-resources/{rrid}':
    parameters:
      - name: rrid
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - group
      summary: 'Returns information on a valid RRID (https://www.force11.org/group/resource-identification-initiative)'
      operationId: get_scicrunch_resource
      responses:
        '200':
          description: Got information of a valid RRID
        '400':
          description: Invalid RRID
        '503':
          description: scircrunch.org service is not reachable
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    post:
      tags:
        - group
      summary: Adds new RRID to classifiers
      operationId: add_scicrunch_resource
      responses:
        '200':
          description: Got information of a valid RRID
        '400':
          description: Invalid RRID
        '503':
          description: scircrunch.org service is not reachable
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/groups/sparc/classifiers/scicrunch-resources:search':
    get:
      parameters:
        - name: guess_name
          in: query
          required: true
          schema:
            type: string
      tags:
        - group
      summary: Returns a list of related resource provided a search name
      operationId: search_scicrunch_resources
      responses:
        '200':
          description: Got information of a valid RRID
        '503':
          description: scircrunch.org service is not reachable
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  /v0/storage/locations:
    get:
      tags:
        - storage
      summary: Get available storage locations
      description: Returns the list of available storage locations
      operationId: get_storage_locations
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Storage Locations
                type: array
                items:
                  title: DatasetMetaData
                  type: object
                  properties:
                    dataset_id:
                      title: Dataset Id
                      type: string
                    display_name:
                      title: Display Name
                      type: string
                  example:
                    dataset_id: 'N:id-aaaa'
                    display_name: simcore-testing
  '/v0/storage/locations/{location_id}:sync':
    post:
      tags:
        - storage
      summary: Manually triggers the synchronisation of the file meta data table in the database
      description: 'Returns an object containing added, changed and removed paths'
      operationId: synchronise_meta_data_table
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: false
          schema:
            title: Dry Run
            type: boolean
            default: false
          name: dry_run
          in: query
        - required: false
          schema:
            title: Fire And Forget
            type: boolean
            default: false
          name: fire_and_forget
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[TableSynchronisation]'
                type: object
                properties:
                  data:
                    title: TableSynchronisation
                    required:
                      - removed
                    type: object
                    properties:
                      dry_run:
                        title: Dry Run
                        type: boolean
                      fire_and_forget:
                        title: Fire And Forget
                        type: boolean
                      removed:
                        title: Removed
                        type: array
                        items:
                          type: string
                  error:
                    title: Error
  '/v0/storage/locations/{location_id}/files/metadata':
    get:
      tags:
        - storage
      summary: Get datasets metadata
      description: returns all the file meta data a user has access to (uuid_filter may be used)
      operationId: get_files_metadata
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: false
          schema:
            title: Uuid Filter
            type: string
            default: ''
          name: uuid_filter
          in: query
        - description: Automatic directory expansion. This will be replaced by pagination the future
          required: false
          schema:
            title: Expand Dirs
            type: boolean
            description: Automatic directory expansion. This will be replaced by pagination the future
            default: true
          name: expand_dirs
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1storage~1locations~1%7Blocation_id%7D~1datasets/get/responses/200/content/application~1json/schema'
  '/v0/storage/locations/{location_id}/files/{file_id}':
    get:
      tags:
        - storage
      summary: Returns download link for requested file
      description: creates a download file link if user has the rights to
      operationId: download_file
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: true
          schema:
            title: File Id
            type: string
          name: file_id
          in: path
        - required: false
          schema:
            allOf:
              - title: LinkType
                enum:
                  - PRESIGNED
                  - S3
                type: string
                description: An enumeration.
                default: PRESIGNED
          name: link_type
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[PresignedLink]'
                type: object
                properties:
                  data:
                    title: PresignedLink
                    required:
                      - link
                    type: object
                    properties:
                      link:
                        title: Link
                        maxLength: 65536
                        minLength: 1
                        type: string
                        format: uri
                  error:
                    title: Error
    put:
      tags:
        - storage
      summary: Returns upload link
      description: 'creates one or more upload file links if user has the rights to, expects the client to complete/abort upload'
      operationId: upload_file
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: true
          schema:
            title: File Id
            type: string
          name: file_id
          in: path
        - required: true
          schema:
            title: File Size
            type: integer
          name: file_size
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/paths/~1v0~1storage~1locations~1%7Blocation_id%7D~1files~1%7Bfile_id%7D/get/parameters/2/schema/allOf/0'
          name: link_type
          in: query
        - required: false
          schema:
            title: Is Directory
            type: boolean
            default: false
          name: is_directory
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Upload File
                anyOf:
                  - title: 'Envelope[FileUploadSchema]'
                    type: object
                    properties:
                      data:
                        title: FileUploadSchema
                        required:
                          - chunk_size
                          - urls
                          - links
                        type: object
                        properties:
                          chunk_size:
                            title: Chunk Size
                            type: integer
                          urls:
                            title: Urls
                            type: array
                            items:
                              maxLength: 65536
                              minLength: 1
                              type: string
                              format: uri
                          links:
                            title: FileUploadLinks
                            required:
                              - abort_upload
                              - complete_upload
                            type: object
                            properties:
                              abort_upload:
                                title: Abort Upload
                                maxLength: 65536
                                minLength: 1
                                type: string
                                format: uri
                              complete_upload:
                                title: Complete Upload
                                maxLength: 65536
                                minLength: 1
                                type: string
                                format: uri
                      error:
                        title: Error
                  - title: 'Envelope[AnyUrl]'
                    type: object
                    properties:
                      data:
                        title: Data
                        maxLength: 65536
                        minLength: 1
                        type: string
                        format: uri
                      error:
                        title: Error
    delete:
      tags:
        - storage
      summary: Deletes File
      description: deletes file if user has the rights to
      operationId: delete_file
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: true
          schema:
            title: File Id
            type: string
          name: file_id
          in: path
      responses:
        '204':
          description: Successful Response
  '/v0/storage/locations/{location_id}/files/{file_id}:complete':
    post:
      tags:
        - storage
      summary: Complete Upload File
      description: completes an upload if the user has the rights to
      operationId: complete_upload_file
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: true
          schema:
            title: File Id
            type: string
          name: file_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: 'Envelope[FileUploadCompletionBody]'
              type: object
              properties:
                data:
                  title: FileUploadCompletionBody
                  required:
                    - parts
                  type: object
                  properties:
                    parts:
                      title: Parts
                      type: array
                      items:
                        title: UploadedPart
                        required:
                          - number
                          - e_tag
                        type: object
                        properties:
                          number:
                            title: Number
                            exclusiveMinimum: true
                            type: integer
                            minimum: 0
                          e_tag:
                            title: E Tag
                            type: string
                error:
                  title: Error
        required: true
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[FileUploadCompleteResponse]'
                type: object
                properties:
                  data:
                    title: FileUploadCompleteResponse
                    required:
                      - links
                    type: object
                    properties:
                      links:
                        title: FileUploadCompleteLinks
                        required:
                          - state
                        type: object
                        properties:
                          state:
                            title: State
                            maxLength: 65536
                            minLength: 1
                            type: string
                            format: uri
                  error:
                    title: Error
  '/v0/storage/locations/{location_id}/files/{file_id}:abort':
    post:
      tags:
        - storage
      summary: Abort Upload File
      description: |-
        aborts an upload if user has the rights to, and reverts
        to the latest version if available, else will delete the file
      operationId: abort_upload_file
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: true
          schema:
            title: File Id
            type: string
          name: file_id
          in: path
      responses:
        '204':
          description: Successful Response
  '/v0/storage/locations/{location_id}/files/{file_id}:complete/futures/{future_id}':
    post:
      tags:
        - storage
      summary: Check for upload completion
      description: Returns state of upload completion
      operationId: is_completed_upload_file
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: true
          schema:
            title: File Id
            type: string
          name: file_id
          in: path
        - required: true
          schema:
            title: Future Id
            type: string
          name: future_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[FileUploadCompleteFutureResponse]'
                type: object
                properties:
                  data:
                    title: FileUploadCompleteFutureResponse
                    required:
                      - state
                    type: object
                    properties:
                      state:
                        title: FileUploadCompleteState
                        enum:
                          - ok
                          - nok
                        description: An enumeration.
                      e_tag:
                        title: E Tag
                        type: string
                  error:
                    title: Error
  '/v0/storage/locations/{location_id}/files/{file_id}/metadata':
    get:
      tags:
        - storage
      summary: Get File Metadata
      description: returns the file meta data of file_id if user_id has the rights to
      operationId: get_file_metadata
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: true
          schema:
            title: File Id
            type: string
          name: file_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get File Metadata
                anyOf:
                  - title: FileMetaData
                    type: object
                    properties:
                      file_uuid:
                        title: File Uuid
                        type: string
                      location_id:
                        title: Location Id
                        type: string
                      project_name:
                        title: Project Name
                        type: string
                      node_name:
                        title: Node Name
                        type: string
                      file_name:
                        title: File Name
                        type: string
                      file_id:
                        title: File Id
                        type: string
                      created_at:
                        title: Created At
                        type: string
                      last_modified:
                        title: Last Modified
                        type: string
                      file_size:
                        title: File Size
                        type: integer
                      entity_tag:
                        title: Entity Tag
                        type: string
                      is_directory:
                        title: Is Directory
                        type: boolean
                    example:
                      file_uuid: simcore-testing/105/1000/3
                      location_id: '0'
                      project_name: futurology
                      node_name: alpha
                      file_name: example.txt
                      file_id: 'N:package:e263da07-2d89-45a6-8b0f-61061b913873'
                      created_at: '2019-06-19T12:29:03.308611Z'
                      last_modified: '2019-06-19T12:29:03.78852Z'
                      file_size: 73
                      entity_tag: a87ff679a2f3e71d9181a67b7542122c
                      is_directory: false
                  - title: 'Envelope[FileMetaDataGet]'
                    type: object
                    properties:
                      data:
                        $ref: '#/paths/~1v0~1storage~1locations~1%7Blocation_id%7D~1datasets~1%7Bdataset_id%7D~1metadata/get/responses/200/content/application~1json/schema/properties/data/items'
                      error:
                        title: Error
  '/v0/storage/locations/{location_id}/datasets/{dataset_id}/metadata':
    get:
      tags:
        - storage
      summary: Get Files Metadata
      description: returns all the file meta data inside dataset with dataset_id
      operationId: get_files_metadata_dataset
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: true
          schema:
            title: Dataset Id
            type: string
          name: dataset_id
          in: path
        - description: Automatic directory expansion. This will be replaced by pagination the future
          required: false
          schema:
            title: Expand Dirs
            type: boolean
            description: Automatic directory expansion. This will be replaced by pagination the future
            default: true
          name: expand_dirs
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[list[models_library.api_schemas_storage.FileMetaDataGet]]'
                type: object
                properties:
                  data:
                    title: Data
                    type: array
                    items:
                      title: FileMetaDataGet
                      required:
                        - file_uuid
                        - location_id
                        - file_name
                        - file_id
                        - created_at
                        - last_modified
                      type: object
                      properties:
                        file_uuid:
                          title: File Uuid
                          type: string
                          description: 'NOT a unique ID, like (api|uuid)/uuid/file_name or DATCORE folder structure'
                        location_id:
                          title: Location Id
                          type: integer
                          description: Storage location
                        project_name:
                          title: Project Name
                          type: string
                          description: 'optional project name, used by frontend to display path'
                        node_name:
                          title: Node Name
                          type: string
                          description: 'optional node name, used by frontend to display path'
                        file_name:
                          title: File Name
                          type: string
                          description: Display name for a file
                        file_id:
                          title: File Id
                          anyOf:
                            - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                              type: string
                            - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                              type: string
                          description: 'THIS IS the unique ID for the file. either (api|project_id)/node_id/file_name.ext for S3 and N:package:UUID for datcore'
                        created_at:
                          title: Created At
                          type: string
                          format: date-time
                        last_modified:
                          title: Last Modified
                          type: string
                          format: date-time
                        file_size:
                          title: File Size
                          type: integer
                          description: File size in bytes (-1 means invalid)
                          default: -1
                        entity_tag:
                          title: Entity Tag
                          type: string
                          description: 'Entity tag (or ETag), represents a specific version of the file, None if invalid upload or datcore'
                        is_soft_link:
                          title: Is Soft Link
                          type: boolean
                          description: 'If true, this file is a soft link.i.e. is another entry with the same object_name'
                          default: false
                        is_directory:
                          title: Is Directory
                          type: boolean
                          description: if True this is a directory
                          default: false
                      additionalProperties: false
                  error:
                    title: Error
  '/v0/storage/locations/{location_id}/datasets':
    get:
      tags:
        - storage
      summary: Get datasets metadata
      description: returns all the top level datasets a user has access to
      operationId: get_datasets_metadata
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[list[simcore_service_webserver.storage.schemas.DatasetMetaData]]'
                type: object
                properties:
                  data:
                    title: Data
                    type: array
                    items:
                      $ref: '#/paths/~1v0~1storage~1locations/get/responses/200/content/application~1json/schema/items'
                  error:
                    title: Error
  '/v0/computations/{project_id}':
    get:
      description: Returns the last computation data
      tags:
        - computations
      operationId: get_computation
      parameters:
        - in: path
          name: project_id
          required: true
          description: the uuid of the project
          schema:
            type: string
            example: 123e4567-e89b-12d3-a456-426655440000
      responses:
        '200':
          description: Succesffully retrieved computation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      iteration:
                        type: integer
                        minimum: 1
                      cluster_id:
                        type: integer
                        minimum: 0
                  error:
                    nullable: true
                    default: null
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/computations/{project_id}:start':
    post:
      description: Starts the pipeline(s) of a given (meta) project
      tags:
        - computations
      operationId: start_computation
      parameters:
        - $ref: '#/paths/~1v0~1computations~1%7Bproject_id%7D/get/parameters/0'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                force_restart:
                  type: boolean
                  default: false
                  description: if true will force re-running all dependent nodes
                cluster_id:
                  type: integer
                  description: 'the computation shall use the cluster described by its id, 0 is the default cluster'
                  default: 0
                  minimum: 0
                subgraph:
                  description: The node uuids selected for running a partial pipeline
                  type: array
                  uniqueItems: true
                  items:
                    type: string
                    format: uuid
      responses:
        '201':
          description: Successfully started the pipeline
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - pipelines_id
                    properties:
                      pipeline_id:
                        type: string
                        description: ID for created pipeline (=project identifier)
                      ref_ids:
                        type: array
                        items:
                          type: integer
                        description: Checkpoints IDs for created pipeline
                  error:
                    nullable: true
                    default: null
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/computations/{project_id}:stop':
    post:
      description: Stops (all) pipeline(s) of a given (meta) project
      tags:
        - computations
      operationId: stop_computation
      parameters:
        - $ref: '#/paths/~1v0~1computations~1%7Bproject_id%7D/get/parameters/0'
      responses:
        '204':
          description: Succesffully stopped the pipeline
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  /v0/projects:
    get:
      tags:
        - project
      summary: List Projects
      operationId: list_projects
      parameters:
        - description: maximum number of items to return (pagination)
          required: false
          schema:
            title: Limit
            exclusiveMaximum: true
            minimum: 1
            type: integer
            description: maximum number of items to return (pagination)
            default: 20
            maximum: 50
          name: limit
          in: query
        - description: index to the first item to return (pagination)
          required: false
          schema:
            title: Offset
            minimum: 0
            type: integer
            description: index to the first item to return (pagination)
            default: 0
          name: offset
          in: query
        - required: false
          schema:
            allOf:
              - title: ProjectTypeAPI
                enum:
                  - all
                  - template
                  - user
                type: string
                description: An enumeration.
                default: all
          name: type
          in: query
        - description: includes projects marked as hidden in the listing
          required: false
          schema:
            title: Show Hidden
            type: boolean
            description: includes projects marked as hidden in the listing
            default: false
          name: show_hidden
          in: query
        - description: 'Comma separated list of fields for ordering. The default sorting order is ascending. To specify descending order for a field, users append a ''desc'' suffix'
          required: false
          schema:
            title: Order By
            type: string
            description: 'Comma separated list of fields for ordering. The default sorting order is ascending. To specify descending order for a field, users append a ''desc'' suffix'
          example: 'foo desc, bar'
          name: order_by
          in: query
        - description: 'Filters to process on the projects list, encoded as JSON'
          required: false
          schema:
            title: Filters
            type: string
            description: 'Filters to process on the projects list, encoded as JSON'
          example: '{"tags": [1, 5], "classifiers": ["foo", "bar"]}'
          name: filters
          in: query
        - description: Multi column full text search
          required: false
          schema:
            title: Search
            maxLength: 25
            type: string
            description: Multi column full text search
          example: My project
          name: search
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Page[ProjectListItem]'
                required:
                  - _meta
                  - _links
                  - data
                type: object
                properties:
                  _meta:
                    title: PageMetaInfoLimitOffset
                    required:
                      - total
                      - count
                    type: object
                    properties:
                      limit:
                        title: Limit
                        exclusiveMinimum: true
                        type: integer
                        default: 20
                        minimum: 0
                      total:
                        title: Total
                        minimum: 0
                        type: integer
                      offset:
                        title: Offset
                        minimum: 0
                        type: integer
                        default: 0
                      count:
                        title: Count
                        minimum: 0
                        type: integer
                    additionalProperties: false
                  _links:
                    title: PageLinks
                    required:
                      - self
                      - first
                      - last
                    type: object
                    properties:
                      self:
                        title: Self
                        maxLength: 65536
                        minLength: 1
                        type: string
                        format: uri
                      first:
                        title: First
                        maxLength: 65536
                        minLength: 1
                        type: string
                        format: uri
                      prev:
                        title: Prev
                        maxLength: 65536
                        minLength: 1
                        type: string
                        format: uri
                      next:
                        title: Next
                        maxLength: 65536
                        minLength: 1
                        type: string
                        format: uri
                      last:
                        title: Last
                        maxLength: 65536
                        minLength: 1
                        type: string
                        format: uri
                    additionalProperties: false
                  data:
                    title: Data
                    type: array
                    items:
                      title: ProjectListItem
                      required:
                        - uuid
                        - name
                        - description
                        - thumbnail
                        - creationDate
                        - lastChangeDate
                        - workbench
                        - prjOwner
                        - accessRights
                        - tags
                      type: object
                      properties:
                        uuid:
                          title: Uuid
                          type: string
                          format: uuid
                        name:
                          title: Name
                          type: string
                        description:
                          title: Description
                          type: string
                        thumbnail:
                          title: Thumbnail
                          anyOf:
                            - maxLength: 2083
                              minLength: 0
                              type: string
                              format: uri
                            - enum:
                                - ''
                              type: string
                        creationDate:
                          title: Creationdate
                          pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                          type: string
                        lastChangeDate:
                          title: Lastchangedate
                          pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                          type: string
                        workbench:
                          title: Workbench
                          type: object
                        prjOwner:
                          title: Prjowner
                          type: string
                          format: email
                        accessRights:
                          title: Accessrights
                          type: object
                        tags:
                          title: Tags
                          type: array
                          items:
                            type: integer
                        classifiers:
                          title: Classifiers
                          type: array
                          items:
                            type: string
                          default: []
                        state:
                          $ref: '#/paths/~1v0~1projects~1active/get/responses/200/content/application~1json/schema/properties/data/properties/state'
                        ui:
                          title: Ui
                          anyOf:
                            - $ref: '#/paths/~1v0~1projects~1active/get/responses/200/content/application~1json/schema/properties/data/properties/ui/anyOf/0'
                            - $ref: '#/paths/~1v0~1projects~1%7Bproject_id%7D/put/requestBody/content/application~1json/schema/properties/ui'
                        quality:
                          title: Quality
                          type: object
                          default: {}
                        dev:
                          title: Dev
                          type: object
                        permalink:
                          $ref: '#/paths/~1v0~1projects~1active/get/responses/200/content/application~1json/schema/properties/data/properties/permalink'
                additionalProperties: false
                description: Paginated response model of ItemTs
    post:
      tags:
        - project
      summary: Creates a new project or copies an existing one
      operationId: create_project
      parameters:
        - description: 'Option to create a project from existing template or study: from_study={study_uuid}'
          required: false
          schema:
            title: From Study
            type: string
            description: 'Option to create a project from existing template or study: from_study={study_uuid}'
            format: uuid
          name: from_study
          in: query
        - description: 'Option to create a template from existing project: as_template=true'
          required: false
          schema:
            title: As Template
            type: boolean
            description: 'Option to create a template from existing project: as_template=true'
            default: false
          name: as_template
          in: query
        - description: 'Option to copy data when creating from an existing template or as a template, defaults to True'
          required: false
          schema:
            title: Copy Data
            type: boolean
            description: 'Option to copy data when creating from an existing template or as a template, defaults to True'
            default: true
          name: copy_data
          in: query
        - description: Enables/disables hidden flag. Hidden projects are by default unlisted
          required: false
          schema:
            title: Hidden
            type: boolean
            description: Enables/disables hidden flag. Hidden projects are by default unlisted
            default: false
          name: hidden
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Create
              anyOf:
                - title: ProjectCreateNew
                  required:
                    - name
                    - workbench
                    - accessRights
                  type: object
                  properties:
                    uuid:
                      title: Uuid
                      type: string
                      format: uuid
                    name:
                      title: Name
                      type: string
                    description:
                      title: Description
                      type: string
                    thumbnail:
                      title: Thumbnail
                      maxLength: 2083
                      minLength: 0
                      type: string
                      format: uri
                    workbench:
                      title: Workbench
                      type: object
                    accessRights:
                      title: Accessrights
                      type: object
                    tags:
                      title: Tags
                      type: array
                      items:
                        type: integer
                    classifiers:
                      title: Classifiers
                      type: array
                      items:
                        type: string
                    ui:
                      $ref: '#/paths/~1v0~1projects~1%7Bproject_id%7D/put/requestBody/content/application~1json/schema/properties/ui'
                - title: ProjectCopyOverride
                  required:
                    - name
                    - prjOwner
                  type: object
                  properties:
                    name:
                      title: Name
                      type: string
                    description:
                      title: Description
                      type: string
                    thumbnail:
                      title: Thumbnail
                      maxLength: 2083
                      minLength: 0
                      type: string
                      format: uri
                    prjOwner:
                      title: Prjowner
                      type: string
                      format: email
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[TaskGet]'
                type: object
                properties:
                  data:
                    title: TaskGet
                    required:
                      - task_id
                      - task_name
                      - status_href
                      - result_href
                      - abort_href
                    type: object
                    properties:
                      task_id:
                        title: Task Id
                        type: string
                      task_name:
                        title: Task Name
                        type: string
                      status_href:
                        title: Status Href
                        type: string
                      result_href:
                        title: Result Href
                        type: string
                      abort_href:
                        title: Abort Href
                        type: string
                  error:
                    title: Error
  /v0/projects/active:
    get:
      tags:
        - project
      summary: Get Active Project
      operationId: get_active_project
      parameters:
        - required: true
          schema:
            title: Client Session Id
            type: string
          name: client_session_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[ProjectGet]'
                type: object
                properties:
                  data:
                    title: ProjectGet
                    required:
                      - uuid
                      - name
                      - description
                      - thumbnail
                      - creationDate
                      - lastChangeDate
                      - workbench
                      - prjOwner
                      - accessRights
                      - tags
                    type: object
                    properties:
                      uuid:
                        title: Uuid
                        type: string
                        format: uuid
                      name:
                        title: Name
                        type: string
                      description:
                        title: Description
                        type: string
                      thumbnail:
                        title: Thumbnail
                        anyOf:
                          - maxLength: 2083
                            minLength: 0
                            type: string
                            format: uri
                          - enum:
                              - ''
                            type: string
                      creationDate:
                        title: Creationdate
                        pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                        type: string
                      lastChangeDate:
                        title: Lastchangedate
                        pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                        type: string
                      workbench:
                        title: Workbench
                        type: object
                      prjOwner:
                        title: Prjowner
                        type: string
                        format: email
                      accessRights:
                        title: Accessrights
                        type: object
                      tags:
                        title: Tags
                        type: array
                        items:
                          type: integer
                      classifiers:
                        title: Classifiers
                        type: array
                        items:
                          type: string
                        default: []
                      state:
                        title: ProjectState
                        required:
                          - locked
                          - state
                        type: object
                        properties:
                          locked:
                            title: Locked
                            allOf:
                              - title: ProjectLocked
                                required:
                                  - value
                                  - status
                                type: object
                                properties:
                                  value:
                                    title: Value
                                    type: boolean
                                    description: True if the project is locked
                                  owner:
                                    title: Owner
                                    allOf:
                                      - title: Owner
                                        required:
                                          - user_id
                                          - first_name
                                          - last_name
                                        type: object
                                        properties:
                                          user_id:
                                            title: User Id
                                            type: integer
                                            description: Owner's identifier when registered in the user's database table
                                          first_name:
                                            title: First Name
                                            type: string
                                            description: Owner first name
                                          last_name:
                                            title: Last Name
                                            type: string
                                            description: Owner last name
                                        additionalProperties: false
                                    description: 'If locked, the user that owns the lock'
                                  status:
                                    allOf:
                                      - title: ProjectStatus
                                        enum:
                                          - CLOSED
                                          - CLOSING
                                          - CLONING
                                          - EXPORTING
                                          - OPENING
                                          - OPENED
                                        type: string
                                        description: An enumeration.
                                    description: The status of the project
                                additionalProperties: false
                            description: The project lock state
                          state:
                            title: State
                            allOf:
                              - title: ProjectRunningState
                                required:
                                  - value
                                type: object
                                properties:
                                  value:
                                    allOf:
                                      - title: RunningState
                                        enum:
                                          - UNKNOWN
                                          - PUBLISHED
                                          - NOT_STARTED
                                          - PENDING
                                          - STARTED
                                          - RETRY
                                          - SUCCESS
                                          - FAILED
                                          - ABORTED
                                        type: string
                                        description: |-
                                          State of execution of a project's computational workflow

                                          SEE StateType for task state
                                    description: The running state of the project
                                additionalProperties: false
                            description: The project running state
                        additionalProperties: false
                      ui:
                        title: Ui
                        anyOf:
                          - title: EmptyModel
                            type: object
                            properties: {}
                            additionalProperties: false
                          - $ref: '#/paths/~1v0~1projects~1%7Bproject_id%7D/put/requestBody/content/application~1json/schema/properties/ui'
                      quality:
                        title: Quality
                        type: object
                        default: {}
                      dev:
                        title: Dev
                        type: object
                      permalink:
                        title: ProjectPermalink
                        required:
                          - url
                          - is_public
                        type: object
                        properties:
                          url:
                            title: Url
                            maxLength: 2083
                            minLength: 1
                            type: string
                            format: uri
                          is_public:
                            title: Is Public
                            type: boolean
                  error:
                    title: Error
  '/v0/projects/{project_id}':
    get:
      tags:
        - project
      summary: Get Project
      operationId: get_project
      parameters:
        - required: true
          schema:
            title: Project Id
            type: string
            format: uuid
          name: project_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1projects~1active/get/responses/200/content/application~1json/schema'
    put:
      tags:
        - project
      summary: Replace Project
      description: Replaces (i.e. full update) a project resource
      operationId: replace_project
      parameters:
        - required: true
          schema:
            title: Project Id
            type: string
            format: uuid
          name: project_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: ProjectReplace
              required:
                - uuid
                - name
                - description
                - creationDate
                - lastChangeDate
                - workbench
                - accessRights
              type: object
              properties:
                uuid:
                  title: Uuid
                  type: string
                  format: uuid
                name:
                  title: Name
                  type: string
                description:
                  title: Description
                  type: string
                thumbnail:
                  title: Thumbnail
                  maxLength: 2083
                  minLength: 0
                  type: string
                  format: uri
                creationDate:
                  title: Creationdate
                  pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                  type: string
                lastChangeDate:
                  title: Lastchangedate
                  pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                  type: string
                workbench:
                  title: Workbench
                  type: object
                accessRights:
                  title: Accessrights
                  type: object
                tags:
                  title: Tags
                  type: array
                  items:
                    type: integer
                  default: []
                classifiers:
                  title: Classifiers
                  type: array
                  items:
                    type: string
                ui:
                  title: StudyUI
                  type: object
                  properties:
                    workbench:
                      title: Workbench
                      type: object
                    slideshow:
                      title: Slideshow
                      type: object
                    currentNodeId:
                      title: Currentnodeid
                      type: string
                      format: uuid
                    annotations:
                      title: Annotations
                      type: object
                quality:
                  title: Quality
                  type: object
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1projects~1active/get/responses/200/content/application~1json/schema'
    delete:
      tags:
        - project
      summary: Delete Project
      operationId: delete_project
      parameters:
        - required: true
          schema:
            title: Project Id
            type: string
            format: uuid
          name: project_id
          in: path
      responses:
        '204':
          description: Successful Response
    patch:
      tags:
        - project
      summary: Update Project
      description: Partial update of a project resource
      operationId: update_project
      parameters:
        - required: true
          schema:
            title: Project Id
            type: string
            format: uuid
          name: project_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: ProjectUpdate
              type: object
              properties:
                permalink:
                  title: Permalink
                  type: object
                ui:
                  $ref: '#/paths/~1v0~1projects~1%7Bproject_id%7D/put/requestBody/content/application~1json/schema/properties/ui'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1projects~1active/get/responses/200/content/application~1json/schema'
  '/v0/projects/{project_id}:open':
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
      - name: disable_service_auto_start
        in: query
        required: false
        schema:
          type: boolean
          default: false
    post:
      tags:
        - project
      summary: Open a given project
      operationId: open_project
      requestBody:
        description: browser tab identifier
        required: true
        content:
          application/json:
            schema:
              type: string
              example: 5ac57685-c40f-448f-8711-70be1936fd63
      responses:
        '200':
          description: project successfuly opened
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    allOf:
                      - additionalProperties: false
                        properties:
                          accessRights:
                            additionalProperties:
                              additionalProperties: false
                              properties:
                                delete:
                                  description: gives deletion rights
                                  title: Delete
                                  type: boolean
                                read:
                                  description: gives read access
                                  title: Read
                                  type: boolean
                                write:
                                  description: gives write access
                                  title: Write
                                  type: boolean
                              required:
                                - read
                                - write
                                - delete
                              title: AccessRights
                              type: object
                            description: object containing the GroupID as key and read/write/execution permissions as value
                            title: Accessrights
                            type: object
                            x-patternProperties:
                              ^\S+$:
                                additionalProperties: false
                                properties:
                                  delete:
                                    description: gives deletion rights
                                    title: Delete
                                    type: boolean
                                  read:
                                    description: gives read access
                                    title: Read
                                    type: boolean
                                  write:
                                    description: gives write access
                                    title: Write
                                    type: boolean
                                required:
                                  - read
                                  - write
                                  - delete
                                title: AccessRights
                                type: object
                          classifiers:
                            description: Contains the reference to the project classifiers
                            example: 'some:id:to:a:classifier'
                            items:
                              type: string
                            title: Classifiers
                            type: array
                          creationDate:
                            description: project creation date
                            example: '2018-07-01T11:13:43Z'
                            pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                            title: Creationdate
                            type: string
                          description:
                            description: longer one-line description about the project
                            example: Dabbling in temporal transitions ...
                            title: Description
                            type: string
                          dev:
                            description: object used for development purposes only
                            title: Dev
                            type: object
                          lastChangeDate:
                            description: last save date
                            example: '2018-07-01T11:13:43Z'
                            pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                            title: Lastchangedate
                            type: string
                          name:
                            description: project name
                            example: Temporal Distortion Simulator
                            title: Name
                            type: string
                          prjOwner:
                            description: user email
                            format: email
                            title: Prjowner
                            type: string
                          quality:
                            description: stores the study quality assessment
                            title: Quality
                            type: object
                          state:
                            anyOf:
                              - nullable: true
                              - additionalProperties: false
                                properties:
                                  locked:
                                    allOf:
                                      - additionalProperties: false
                                        example:
                                          status: CLOSED
                                          value: false
                                        properties:
                                          owner:
                                            allOf:
                                              - additionalProperties: false
                                                properties:
                                                  first_name:
                                                    description: Owner first name
                                                    example: John
                                                    title: First Name
                                                    type: string
                                                  last_name:
                                                    description: Owner last name
                                                    example: Smith
                                                    title: Last Name
                                                    type: string
                                                  user_id:
                                                    description: Owner's identifier when registered in the user's database table
                                                    example: 2
                                                    title: User Id
                                                    type: integer
                                                required:
                                                  - user_id
                                                  - first_name
                                                  - last_name
                                                title: Owner
                                                type: object
                                            description: 'If locked, the user that owns the lock'
                                            title: Owner
                                          status:
                                            allOf:
                                              - description: An enumeration.
                                                enum:
                                                  - CLOSED
                                                  - CLOSING
                                                  - CLONING
                                                  - EXPORTING
                                                  - OPENING
                                                  - OPENED
                                                title: ProjectStatus
                                                type: string
                                            description: The status of the project
                                          value:
                                            description: True if the project is locked
                                            title: Value
                                            type: boolean
                                        required:
                                          - value
                                          - status
                                        title: ProjectLocked
                                        type: object
                                    description: The project lock state
                                    title: Locked
                                  state:
                                    allOf:
                                      - additionalProperties: false
                                        properties:
                                          value:
                                            allOf:
                                              - description: |-
                                                  State of execution of a project's computational workflow

                                                  SEE StateType for task state
                                                enum:
                                                  - UNKNOWN
                                                  - PUBLISHED
                                                  - NOT_STARTED
                                                  - PENDING
                                                  - STARTED
                                                  - RETRY
                                                  - SUCCESS
                                                  - FAILED
                                                  - ABORTED
                                                title: RunningState
                                                type: string
                                            description: The running state of the project
                                            example: STARTED
                                        required:
                                          - value
                                        title: ProjectRunningState
                                        type: object
                                    description: The project running state
                                    title: State
                                required:
                                  - locked
                                  - state
                                title: ProjectState
                                type: object
                          tags:
                            default: []
                            items:
                              type: integer
                            title: Tags
                            type: array
                          thumbnail:
                            description: url of the project thumbnail
                            example: 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                            format: uri
                            maxLength: 2083
                            minLength: 0
                            title: Thumbnail
                            type: string
                          ui:
                            properties:
                              annotations:
                                additionalProperties:
                                  additionalProperties: false
                                  example:
                                    attributes:
                                      height: 26
                                      width: 117
                                      x: 415
                                      'y': 100
                                    color: '#FF0000'
                                    type: rect
                                  properties:
                                    attributes:
                                      description: svg attributes
                                      title: Attributes
                                      type: object
                                    color:
                                      format: color
                                      title: Color
                                      type: string
                                    type:
                                      enum:
                                        - rect
                                        - text
                                      title: Type
                                      type: string
                                  required:
                                    - type
                                    - color
                                    - attributes
                                  title: Annotation
                                  type: object
                                title: Annotations
                                type: object
                                x-patternProperties:
                                  '^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$':
                                    additionalProperties: false
                                    example:
                                      - attributes:
                                          height: 26
                                          width: 117
                                          x: 415
                                          'y': 100
                                        color: '#FF0000'
                                        type: rect
                                      - attributes:
                                          text: Hey!
                                          x: 415
                                          'y': 100
                                        color: '#0000FF'
                                        type: text
                                    properties:
                                      attributes:
                                        description: svg attributes
                                        title: Attributes
                                        type: object
                                      color:
                                        format: color
                                        title: Color
                                        type: string
                                      type:
                                        enum:
                                          - rect
                                          - text
                                        title: Type
                                        type: string
                                    required:
                                      - type
                                      - color
                                      - attributes
                                    title: Annotation
                                    type: object
                              currentNodeId:
                                format: uuid
                                title: Currentnodeid
                                type: string
                              slideshow:
                                additionalProperties:
                                  properties:
                                    instructions:
                                      title: Instructions
                                      type: string
                                    position:
                                      title: Position
                                      type: integer
                                  required:
                                    - position
                                  title: Slideshow
                                  type: object
                                title: Slideshow
                                type: object
                                x-patternProperties:
                                  '^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$':
                                    properties:
                                      instructions:
                                        title: Instructions
                                        type: string
                                      position:
                                        title: Position
                                        type: integer
                                    required:
                                      - position
                                    title: Slideshow
                                    type: object
                              workbench:
                                additionalProperties:
                                  additionalProperties: false
                                  properties:
                                    marker:
                                      additionalProperties: false
                                      properties:
                                        color:
                                          format: color
                                          title: Color
                                          type: string
                                      required:
                                        - color
                                      title: Marker
                                      type: object
                                    position:
                                      allOf:
                                        - additionalProperties: false
                                          properties:
                                            x:
                                              description: The x position
                                              example:
                                                - '12'
                                              title: X
                                              type: integer
                                            'y':
                                              description: The y position
                                              example:
                                                - '15'
                                              title: 'Y'
                                              type: integer
                                          required:
                                            - x
                                            - 'y'
                                          title: Position
                                          type: object
                                      description: The node position in the workbench
                                      title: Position
                                  required:
                                    - position
                                  title: WorkbenchUI
                                  type: object
                                title: Workbench
                                type: object
                                x-patternProperties:
                                  '^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$':
                                    additionalProperties: false
                                    properties:
                                      marker:
                                        additionalProperties: false
                                        properties:
                                          color:
                                            format: color
                                            title: Color
                                            type: string
                                        required:
                                          - color
                                        title: Marker
                                        type: object
                                      position:
                                        allOf:
                                          - additionalProperties: false
                                            properties:
                                              x:
                                                description: The x position
                                                example:
                                                  - '12'
                                                title: X
                                                type: integer
                                              'y':
                                                description: The y position
                                                example:
                                                  - '15'
                                                title: 'Y'
                                                type: integer
                                            required:
                                              - x
                                              - 'y'
                                            title: Position
                                            type: object
                                        description: The node position in the workbench
                                        title: Position
                                    required:
                                      - position
                                    title: WorkbenchUI
                                    type: object
                            title: StudyUI
                            type: object
                          uuid:
                            description: project unique identifier
                            example: 07640335-a91f-468c-ab69-a374fa82078d
                            format: uuid
                            title: Uuid
                            type: string
                          workbench:
                            additionalProperties:
                              additionalProperties: false
                              properties:
                                bootOptions:
                                  additionalProperties:
                                    type: string
                                  description: 'Some services provide alternative parameters to be injected at boot time. The user selection should be stored here, and it will overwrite the services''s defaults.'
                                  title: Bootoptions
                                  type: object
                                  x-patternProperties:
                                    '[a-zA-Z][a-azA-Z0-9_]*':
                                      type: string
                                inputAccess:
                                  additionalProperties:
                                    description: An enumeration.
                                    enum:
                                      - ReadAndWrite
                                      - Invisible
                                      - ReadOnly
                                    title: AccessEnum
                                    type: string
                                  description: map with key - access level pairs
                                  type: object
                                  x-patternProperties:
                                    '^[-_a-zA-Z0-9]+$':
                                      description: An enumeration.
                                      enum:
                                        - ReadAndWrite
                                        - Invisible
                                        - ReadOnly
                                      title: AccessEnum
                                      type: string
                                inputNodes:
                                  description: node IDs of where the node is connected to
                                  items:
                                    format: uuid
                                    type: string
                                  title: Inputnodes
                                  type: array
                                inputs:
                                  additionalProperties:
                                    anyOf:
                                      - type: boolean
                                      - type: integer
                                      - type: number
                                      - format: json-string
                                        type: string
                                      - type: string
                                      - additionalProperties: false
                                        description: I/O port type to reference to an output port of another node in the same project
                                        example:
                                          nodeUuid: da5068e0-8a8d-4fb9-9516-56e5ddaef15b
                                          output: out_2
                                        properties:
                                          nodeUuid:
                                            description: The node to get the port output from
                                            format: uuid
                                            title: Nodeuuid
                                            type: string
                                          output:
                                            description: The port key in the node given by nodeUuid
                                            pattern: '^[-_a-zA-Z0-9]+$'
                                            title: Output
                                            type: string
                                        required:
                                          - nodeUuid
                                          - output
                                        title: PortLink
                                        type: object
                                      - additionalProperties: false
                                        description: I/O port type to hold a link to a file in simcore S3 storage
                                        example:
                                          eTag: 859fda0cb82fc4acb4686510a172d9a9-1
                                          label: input.txt
                                          path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                                          store: 0
                                        properties:
                                          dataset:
                                            deprecated: true
                                            title: Dataset
                                            type: string
                                          eTag:
                                            description: Entity tag that uniquely represents the file. The method to generate the tag is not specified (black box).
                                            title: Etag
                                            type: string
                                          label:
                                            description: The real file name
                                            title: Label
                                            type: string
                                          path:
                                            anyOf:
                                              - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                                                type: string
                                              - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                                                type: string
                                            description: The path to the file in the storage provider domain
                                            title: Path
                                          store:
                                            description: 'The store identifier: 0 for simcore S3, 1 for datcore'
                                            title: Store
                                            type: integer
                                        required:
                                          - store
                                          - path
                                        title: SimCoreFileLink
                                        type: object
                                      - additionalProperties: false
                                        description: I/O port type to hold a link to a file in DATCORE storage
                                        example:
                                          dataset: 'N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4'
                                          label: initial_WTstates
                                          path: 'N:package:32df09ba-e8d6-46da-bd54-f696157de6ce'
                                          store: 1
                                        properties:
                                          dataset:
                                            description: Unique identifier to access the dataset on datcore (REQUIRED for datcore)
                                            title: Dataset
                                            type: string
                                          eTag:
                                            description: Entity tag that uniquely represents the file. The method to generate the tag is not specified (black box).
                                            title: Etag
                                            type: string
                                          label:
                                            description: The real file name
                                            title: Label
                                            type: string
                                          path:
                                            anyOf:
                                              - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                                                type: string
                                              - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                                                type: string
                                            description: The path to the file in the storage provider domain
                                            title: Path
                                          store:
                                            description: 'The store identifier: 0 for simcore S3, 1 for datcore'
                                            title: Store
                                            type: integer
                                        required:
                                          - store
                                          - path
                                          - label
                                          - dataset
                                        title: DatCoreFileLink
                                        type: object
                                      - additionalProperties: false
                                        description: 'I/O port type to hold a generic download link to a file (e.g. S3 pre-signed link, etc)'
                                        example:
                                          downloadLink: 'https://fakeimg.pl/250x100/'
                                        properties:
                                          downloadLink:
                                            format: uri
                                            maxLength: 65536
                                            minLength: 1
                                            title: Downloadlink
                                            type: string
                                          label:
                                            description: Display name
                                            title: Label
                                            type: string
                                        required:
                                          - downloadLink
                                        title: DownloadLink
                                        type: object
                                      - items: {}
                                        type: array
                                      - type: object
                                  description: values of input properties
                                  title: Inputs
                                  type: object
                                  x-patternProperties:
                                    '^[-_a-zA-Z0-9]+$':
                                      anyOf:
                                        - type: boolean
                                        - type: integer
                                        - type: number
                                        - format: json-string
                                          type: string
                                        - type: string
                                        - additionalProperties: false
                                          description: I/O port type to reference to an output port of another node in the same project
                                          example:
                                            - nodeUuid: da5068e0-8a8d-4fb9-9516-56e5ddaef15b
                                              output: out_2
                                          properties:
                                            nodeUuid:
                                              description: The node to get the port output from
                                              format: uuid
                                              title: Nodeuuid
                                              type: string
                                            output:
                                              description: The port key in the node given by nodeUuid
                                              pattern: '^[-_a-zA-Z0-9]+$'
                                              title: Output
                                              type: string
                                          required:
                                            - nodeUuid
                                            - output
                                          title: PortLink
                                          type: object
                                        - additionalProperties: false
                                          description: I/O port type to hold a link to a file in simcore S3 storage
                                          example:
                                            - eTag: 859fda0cb82fc4acb4686510a172d9a9-1
                                              label: input.txt
                                              path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                                              store: 0
                                            - eTag: f7e4c7076761a42a871e978c8691c676
                                              path: 50339632-ee1d-11ec-a0c2-02420a0194e4/23b1522f-225f-5a4c-9158-c4c19a70d4a8/output.h5
                                              store: '0'
                                            - path: api/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                                              store: 0
                                            - path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/d4442ca4-23fd-5b6b-ba6d-0b75f711c109/y_1D.txt
                                              store: 0
                                          properties:
                                            dataset:
                                              deprecated: true
                                              title: Dataset
                                              type: string
                                            eTag:
                                              description: Entity tag that uniquely represents the file. The method to generate the tag is not specified (black box).
                                              title: Etag
                                              type: string
                                            label:
                                              description: The real file name
                                              title: Label
                                              type: string
                                            path:
                                              anyOf:
                                                - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                                                  type: string
                                                - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                                                  type: string
                                              description: The path to the file in the storage provider domain
                                              title: Path
                                            store:
                                              description: 'The store identifier: 0 for simcore S3, 1 for datcore'
                                              title: Store
                                              type: integer
                                          required:
                                            - store
                                            - path
                                          title: SimCoreFileLink
                                          type: object
                                        - additionalProperties: false
                                          description: I/O port type to hold a link to a file in DATCORE storage
                                          example:
                                            - dataset: 'N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4'
                                              label: initial_WTstates
                                              path: 'N:package:32df09ba-e8d6-46da-bd54-f696157de6ce'
                                              store: 1
                                            - dataset: 'N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4'
                                              label: initial_WTstates
                                              path: 'N:package:32df09ba-e8d6-46da-bd54-f696157de6ce'
                                              store: 1
                                          properties:
                                            dataset:
                                              description: Unique identifier to access the dataset on datcore (REQUIRED for datcore)
                                              title: Dataset
                                              type: string
                                            eTag:
                                              description: Entity tag that uniquely represents the file. The method to generate the tag is not specified (black box).
                                              title: Etag
                                              type: string
                                            label:
                                              description: The real file name
                                              title: Label
                                              type: string
                                            path:
                                              anyOf:
                                                - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                                                  type: string
                                                - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                                                  type: string
                                              description: The path to the file in the storage provider domain
                                              title: Path
                                            store:
                                              description: 'The store identifier: 0 for simcore S3, 1 for datcore'
                                              title: Store
                                              type: integer
                                          required:
                                            - store
                                            - path
                                            - label
                                            - dataset
                                          title: DatCoreFileLink
                                          type: object
                                        - additionalProperties: false
                                          description: 'I/O port type to hold a generic download link to a file (e.g. S3 pre-signed link, etc)'
                                          example:
                                            - downloadLink: 'https://fakeimg.pl/250x100/'
                                          properties:
                                            downloadLink:
                                              format: uri
                                              maxLength: 65536
                                              minLength: 1
                                              title: Downloadlink
                                              type: string
                                            label:
                                              description: Display name
                                              title: Label
                                              type: string
                                          required:
                                            - downloadLink
                                          title: DownloadLink
                                          type: object
                                        - items: {}
                                          type: array
                                        - type: object
                                inputsUnits:
                                  additionalProperties:
                                    type: string
                                  description: Overrides default unit (if any) defined in the service for each port
                                  title: Inputsunits
                                  type: object
                                  x-patternProperties:
                                    '^[-_a-zA-Z0-9]+$':
                                      type: string
                                key:
                                  description: distinctive name for the node based on the docker registry path
                                  example: simcore/services/comp/itis/sleeper
                                  pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
                                  title: Key
                                  type: string
                                label:
                                  description: The short name of the node
                                  example: JupyterLab
                                  title: Label
                                  type: string
                                outputNode:
                                  deprecated: true
                                  title: Outputnode
                                  type: boolean
                                outputNodes:
                                  description: Used in group-nodes. Node IDs of those connected to the output
                                  items:
                                    format: uuid
                                    type: string
                                  title: Outputnodes
                                  type: array
                                outputs:
                                  additionalProperties:
                                    anyOf:
                                      - type: boolean
                                      - type: integer
                                      - type: number
                                      - format: json-string
                                        type: string
                                      - type: string
                                      - additionalProperties: false
                                        description: I/O port type to hold a link to a file in simcore S3 storage
                                        example:
                                          eTag: 859fda0cb82fc4acb4686510a172d9a9-1
                                          label: input.txt
                                          path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                                          store: 0
                                        properties:
                                          dataset:
                                            deprecated: true
                                            title: Dataset
                                            type: string
                                          eTag:
                                            description: Entity tag that uniquely represents the file. The method to generate the tag is not specified (black box).
                                            title: Etag
                                            type: string
                                          label:
                                            description: The real file name
                                            title: Label
                                            type: string
                                          path:
                                            anyOf:
                                              - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                                                type: string
                                              - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                                                type: string
                                            description: The path to the file in the storage provider domain
                                            title: Path
                                          store:
                                            description: 'The store identifier: 0 for simcore S3, 1 for datcore'
                                            title: Store
                                            type: integer
                                        required:
                                          - store
                                          - path
                                        title: SimCoreFileLink
                                        type: object
                                      - additionalProperties: false
                                        description: I/O port type to hold a link to a file in DATCORE storage
                                        example:
                                          dataset: 'N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4'
                                          label: initial_WTstates
                                          path: 'N:package:32df09ba-e8d6-46da-bd54-f696157de6ce'
                                          store: 1
                                        properties:
                                          dataset:
                                            description: Unique identifier to access the dataset on datcore (REQUIRED for datcore)
                                            title: Dataset
                                            type: string
                                          eTag:
                                            description: Entity tag that uniquely represents the file. The method to generate the tag is not specified (black box).
                                            title: Etag
                                            type: string
                                          label:
                                            description: The real file name
                                            title: Label
                                            type: string
                                          path:
                                            anyOf:
                                              - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                                                type: string
                                              - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                                                type: string
                                            description: The path to the file in the storage provider domain
                                            title: Path
                                          store:
                                            description: 'The store identifier: 0 for simcore S3, 1 for datcore'
                                            title: Store
                                            type: integer
                                        required:
                                          - store
                                          - path
                                          - label
                                          - dataset
                                        title: DatCoreFileLink
                                        type: object
                                      - additionalProperties: false
                                        description: 'I/O port type to hold a generic download link to a file (e.g. S3 pre-signed link, etc)'
                                        example:
                                          downloadLink: 'https://fakeimg.pl/250x100/'
                                        properties:
                                          downloadLink:
                                            format: uri
                                            maxLength: 65536
                                            minLength: 1
                                            title: Downloadlink
                                            type: string
                                          label:
                                            description: Display name
                                            title: Label
                                            type: string
                                        required:
                                          - downloadLink
                                        title: DownloadLink
                                        type: object
                                      - items: {}
                                        type: array
                                      - type: object
                                  description: values of output properties
                                  title: Outputs
                                  type: object
                                  x-patternProperties:
                                    '^[-_a-zA-Z0-9]+$':
                                      anyOf:
                                        - type: boolean
                                        - type: integer
                                        - type: number
                                        - format: json-string
                                          type: string
                                        - type: string
                                        - additionalProperties: false
                                          description: I/O port type to hold a link to a file in simcore S3 storage
                                          example:
                                            - eTag: 859fda0cb82fc4acb4686510a172d9a9-1
                                              label: input.txt
                                              path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                                              store: 0
                                            - eTag: f7e4c7076761a42a871e978c8691c676
                                              path: 50339632-ee1d-11ec-a0c2-02420a0194e4/23b1522f-225f-5a4c-9158-c4c19a70d4a8/output.h5
                                              store: '0'
                                            - path: api/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                                              store: 0
                                            - path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/d4442ca4-23fd-5b6b-ba6d-0b75f711c109/y_1D.txt
                                              store: 0
                                          properties:
                                            dataset:
                                              deprecated: true
                                              title: Dataset
                                              type: string
                                            eTag:
                                              description: Entity tag that uniquely represents the file. The method to generate the tag is not specified (black box).
                                              title: Etag
                                              type: string
                                            label:
                                              description: The real file name
                                              title: Label
                                              type: string
                                            path:
                                              anyOf:
                                                - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                                                  type: string
                                                - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                                                  type: string
                                              description: The path to the file in the storage provider domain
                                              title: Path
                                            store:
                                              description: 'The store identifier: 0 for simcore S3, 1 for datcore'
                                              title: Store
                                              type: integer
                                          required:
                                            - store
                                            - path
                                          title: SimCoreFileLink
                                          type: object
                                        - additionalProperties: false
                                          description: I/O port type to hold a link to a file in DATCORE storage
                                          example:
                                            - dataset: 'N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4'
                                              label: initial_WTstates
                                              path: 'N:package:32df09ba-e8d6-46da-bd54-f696157de6ce'
                                              store: 1
                                            - dataset: 'N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4'
                                              label: initial_WTstates
                                              path: 'N:package:32df09ba-e8d6-46da-bd54-f696157de6ce'
                                              store: 1
                                          properties:
                                            dataset:
                                              description: Unique identifier to access the dataset on datcore (REQUIRED for datcore)
                                              title: Dataset
                                              type: string
                                            eTag:
                                              description: Entity tag that uniquely represents the file. The method to generate the tag is not specified (black box).
                                              title: Etag
                                              type: string
                                            label:
                                              description: The real file name
                                              title: Label
                                              type: string
                                            path:
                                              anyOf:
                                                - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                                                  type: string
                                                - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                                                  type: string
                                              description: The path to the file in the storage provider domain
                                              title: Path
                                            store:
                                              description: 'The store identifier: 0 for simcore S3, 1 for datcore'
                                              title: Store
                                              type: integer
                                          required:
                                            - store
                                            - path
                                            - label
                                            - dataset
                                          title: DatCoreFileLink
                                          type: object
                                        - additionalProperties: false
                                          description: 'I/O port type to hold a generic download link to a file (e.g. S3 pre-signed link, etc)'
                                          example:
                                            - downloadLink: 'https://fakeimg.pl/250x100/'
                                          properties:
                                            downloadLink:
                                              format: uri
                                              maxLength: 65536
                                              minLength: 1
                                              title: Downloadlink
                                              type: string
                                            label:
                                              description: Display name
                                              title: Label
                                              type: string
                                          required:
                                            - downloadLink
                                          title: DownloadLink
                                          type: object
                                        - items: {}
                                          type: array
                                        - type: object
                                parent:
                                  anyOf:
                                    - nullable: true
                                    - description: Parent's (group-nodes') node ID s. Used to group
                                      format: uuid
                                      title: Parent
                                      type: string
                                position:
                                  allOf:
                                    - additionalProperties: false
                                      properties:
                                        x:
                                          description: The x position
                                          example:
                                            - '12'
                                          title: X
                                          type: integer
                                        'y':
                                          description: The y position
                                          example:
                                            - '15'
                                          title: 'Y'
                                          type: integer
                                      required:
                                        - x
                                        - 'y'
                                      title: Position
                                      type: object
                                  deprecated: true
                                  description: Use projects_ui.WorkbenchUI.position instead
                                  title: Position
                                progress:
                                  description: the node progress value
                                  maximum: 100
                                  minimum: 0
                                  title: Progress
                                  type: number
                                runHash:
                                  anyOf:
                                    - nullable: true
                                    - description: the hex digest of the resolved inputs +outputs hash at the time when the last outputs were generated
                                      title: Runhash
                                      type: string
                                state:
                                  allOf:
                                    - additionalProperties: false
                                      example:
                                        currentStatus: NOT_STARTED
                                        dependencies: []
                                        modified: true
                                      properties:
                                        currentStatus:
                                          allOf:
                                            - description: |-
                                                State of execution of a project's computational workflow

                                                SEE StateType for task state
                                              enum:
                                                - UNKNOWN
                                                - PUBLISHED
                                                - NOT_STARTED
                                                - PENDING
                                                - STARTED
                                                - RETRY
                                                - SUCCESS
                                                - FAILED
                                                - ABORTED
                                              title: RunningState
                                              type: string
                                          default: NOT_STARTED
                                          description: the node's current state
                                        dependencies:
                                          description: contains the node inputs dependencies if they need to be computed first
                                          items:
                                            format: uuid
                                            type: string
                                          title: Dependencies
                                          type: array
                                          uniqueItems: true
                                        modified:
                                          default: true
                                          description: true if the node's outputs need to be re-computed
                                          title: Modified
                                          type: boolean
                                      title: NodeState
                                      type: object
                                  description: The node's state object
                                  title: State
                                thumbnail:
                                  description: url of the latest screenshot of the node
                                  example: 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                                  format: uri
                                  maxLength: 2083
                                  minLength: 0
                                  title: Thumbnail
                                  type: string
                                version:
                                  description: semantic version number of the node
                                  example: 1.0.0
                                  pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                                  title: Version
                                  type: string
                              required:
                                - key
                                - version
                                - label
                              title: Node
                              type: object
                            description: Project's pipeline
                            title: Workbench
                            type: object
                            x-patternProperties:
                              '^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$':
                                additionalProperties: false
                                properties:
                                  bootOptions:
                                    additionalProperties:
                                      type: string
                                    description: 'Some services provide alternative parameters to be injected at boot time. The user selection should be stored here, and it will overwrite the services''s defaults.'
                                    patternProperties:
                                      '[a-zA-Z][a-azA-Z0-9_]*':
                                        type: string
                                    title: Bootoptions
                                    type: object
                                  inputAccess:
                                    additionalProperties:
                                      description: An enumeration.
                                      enum:
                                        - ReadAndWrite
                                        - Invisible
                                        - ReadOnly
                                      title: AccessEnum
                                      type: string
                                    description: map with key - access level pairs
                                    patternProperties:
                                      '^[-_a-zA-Z0-9]+$':
                                        description: An enumeration.
                                        enum:
                                          - ReadAndWrite
                                          - Invisible
                                          - ReadOnly
                                        title: AccessEnum
                                        type: string
                                    type: object
                                  inputNodes:
                                    description: node IDs of where the node is connected to
                                    items:
                                      format: uuid
                                      type: string
                                    title: Inputnodes
                                    type: array
                                  inputs:
                                    additionalProperties:
                                      anyOf:
                                        - type: boolean
                                        - type: integer
                                        - type: number
                                        - format: json-string
                                          type: string
                                        - type: string
                                        - additionalProperties: false
                                          description: I/O port type to reference to an output port of another node in the same project
                                          example:
                                            - nodeUuid: da5068e0-8a8d-4fb9-9516-56e5ddaef15b
                                              output: out_2
                                          properties:
                                            nodeUuid:
                                              description: The node to get the port output from
                                              format: uuid
                                              title: Nodeuuid
                                              type: string
                                            output:
                                              description: The port key in the node given by nodeUuid
                                              pattern: '^[-_a-zA-Z0-9]+$'
                                              title: Output
                                              type: string
                                          required:
                                            - nodeUuid
                                            - output
                                          title: PortLink
                                          type: object
                                        - additionalProperties: false
                                          description: I/O port type to hold a link to a file in simcore S3 storage
                                          example:
                                            - eTag: 859fda0cb82fc4acb4686510a172d9a9-1
                                              label: input.txt
                                              path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                                              store: 0
                                            - eTag: f7e4c7076761a42a871e978c8691c676
                                              path: 50339632-ee1d-11ec-a0c2-02420a0194e4/23b1522f-225f-5a4c-9158-c4c19a70d4a8/output.h5
                                              store: '0'
                                            - path: api/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                                              store: 0
                                            - path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/d4442ca4-23fd-5b6b-ba6d-0b75f711c109/y_1D.txt
                                              store: 0
                                          properties:
                                            dataset:
                                              deprecated: true
                                              title: Dataset
                                              type: string
                                            eTag:
                                              description: Entity tag that uniquely represents the file. The method to generate the tag is not specified (black box).
                                              title: Etag
                                              type: string
                                            label:
                                              description: The real file name
                                              title: Label
                                              type: string
                                            path:
                                              anyOf:
                                                - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                                                  type: string
                                                - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                                                  type: string
                                              description: The path to the file in the storage provider domain
                                              title: Path
                                            store:
                                              description: 'The store identifier: 0 for simcore S3, 1 for datcore'
                                              title: Store
                                              type: integer
                                          required:
                                            - store
                                            - path
                                          title: SimCoreFileLink
                                          type: object
                                        - additionalProperties: false
                                          description: I/O port type to hold a link to a file in DATCORE storage
                                          example:
                                            - dataset: 'N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4'
                                              label: initial_WTstates
                                              path: 'N:package:32df09ba-e8d6-46da-bd54-f696157de6ce'
                                              store: 1
                                            - dataset: 'N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4'
                                              label: initial_WTstates
                                              path: 'N:package:32df09ba-e8d6-46da-bd54-f696157de6ce'
                                              store: 1
                                          properties:
                                            dataset:
                                              description: Unique identifier to access the dataset on datcore (REQUIRED for datcore)
                                              title: Dataset
                                              type: string
                                            eTag:
                                              description: Entity tag that uniquely represents the file. The method to generate the tag is not specified (black box).
                                              title: Etag
                                              type: string
                                            label:
                                              description: The real file name
                                              title: Label
                                              type: string
                                            path:
                                              anyOf:
                                                - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                                                  type: string
                                                - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                                                  type: string
                                              description: The path to the file in the storage provider domain
                                              title: Path
                                            store:
                                              description: 'The store identifier: 0 for simcore S3, 1 for datcore'
                                              title: Store
                                              type: integer
                                          required:
                                            - store
                                            - path
                                            - label
                                            - dataset
                                          title: DatCoreFileLink
                                          type: object
                                        - additionalProperties: false
                                          description: 'I/O port type to hold a generic download link to a file (e.g. S3 pre-signed link, etc)'
                                          example:
                                            - downloadLink: 'https://fakeimg.pl/250x100/'
                                          properties:
                                            downloadLink:
                                              format: uri
                                              maxLength: 65536
                                              minLength: 1
                                              title: Downloadlink
                                              type: string
                                            label:
                                              description: Display name
                                              title: Label
                                              type: string
                                          required:
                                            - downloadLink
                                          title: DownloadLink
                                          type: object
                                        - items: {}
                                          type: array
                                        - type: object
                                    description: values of input properties
                                    patternProperties:
                                      '^[-_a-zA-Z0-9]+$':
                                        anyOf:
                                          - type: boolean
                                          - type: integer
                                          - type: number
                                          - format: json-string
                                            type: string
                                          - type: string
                                          - additionalProperties: false
                                            description: I/O port type to reference to an output port of another node in the same project
                                            example:
                                              - nodeUuid: da5068e0-8a8d-4fb9-9516-56e5ddaef15b
                                                output: out_2
                                            properties:
                                              nodeUuid:
                                                description: The node to get the port output from
                                                format: uuid
                                                title: Nodeuuid
                                                type: string
                                              output:
                                                description: The port key in the node given by nodeUuid
                                                pattern: '^[-_a-zA-Z0-9]+$'
                                                title: Output
                                                type: string
                                            required:
                                              - nodeUuid
                                              - output
                                            title: PortLink
                                            type: object
                                          - additionalProperties: false
                                            description: I/O port type to hold a link to a file in simcore S3 storage
                                            example:
                                              - eTag: 859fda0cb82fc4acb4686510a172d9a9-1
                                                label: input.txt
                                                path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                                                store: 0
                                              - eTag: f7e4c7076761a42a871e978c8691c676
                                                path: 50339632-ee1d-11ec-a0c2-02420a0194e4/23b1522f-225f-5a4c-9158-c4c19a70d4a8/output.h5
                                                store: '0'
                                              - path: api/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                                                store: 0
                                              - path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/d4442ca4-23fd-5b6b-ba6d-0b75f711c109/y_1D.txt
                                                store: 0
                                            properties:
                                              dataset:
                                                deprecated: true
                                                title: Dataset
                                                type: string
                                              eTag:
                                                description: Entity tag that uniquely represents the file. The method to generate the tag is not specified (black box).
                                                title: Etag
                                                type: string
                                              label:
                                                description: The real file name
                                                title: Label
                                                type: string
                                              path:
                                                anyOf:
                                                  - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                                                    type: string
                                                  - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                                                    type: string
                                                description: The path to the file in the storage provider domain
                                                title: Path
                                              store:
                                                description: 'The store identifier: 0 for simcore S3, 1 for datcore'
                                                title: Store
                                                type: integer
                                            required:
                                              - store
                                              - path
                                            title: SimCoreFileLink
                                            type: object
                                          - additionalProperties: false
                                            description: I/O port type to hold a link to a file in DATCORE storage
                                            example:
                                              - dataset: 'N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4'
                                                label: initial_WTstates
                                                path: 'N:package:32df09ba-e8d6-46da-bd54-f696157de6ce'
                                                store: 1
                                              - dataset: 'N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4'
                                                label: initial_WTstates
                                                path: 'N:package:32df09ba-e8d6-46da-bd54-f696157de6ce'
                                                store: 1
                                            properties:
                                              dataset:
                                                description: Unique identifier to access the dataset on datcore (REQUIRED for datcore)
                                                title: Dataset
                                                type: string
                                              eTag:
                                                description: Entity tag that uniquely represents the file. The method to generate the tag is not specified (black box).
                                                title: Etag
                                                type: string
                                              label:
                                                description: The real file name
                                                title: Label
                                                type: string
                                              path:
                                                anyOf:
                                                  - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                                                    type: string
                                                  - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                                                    type: string
                                                description: The path to the file in the storage provider domain
                                                title: Path
                                              store:
                                                description: 'The store identifier: 0 for simcore S3, 1 for datcore'
                                                title: Store
                                                type: integer
                                            required:
                                              - store
                                              - path
                                              - label
                                              - dataset
                                            title: DatCoreFileLink
                                            type: object
                                          - additionalProperties: false
                                            description: 'I/O port type to hold a generic download link to a file (e.g. S3 pre-signed link, etc)'
                                            example:
                                              - downloadLink: 'https://fakeimg.pl/250x100/'
                                            properties:
                                              downloadLink:
                                                format: uri
                                                maxLength: 65536
                                                minLength: 1
                                                title: Downloadlink
                                                type: string
                                              label:
                                                description: Display name
                                                title: Label
                                                type: string
                                            required:
                                              - downloadLink
                                            title: DownloadLink
                                            type: object
                                          - items: {}
                                            type: array
                                          - type: object
                                    title: Inputs
                                    type: object
                                  inputsUnits:
                                    additionalProperties:
                                      type: string
                                    description: Overrides default unit (if any) defined in the service for each port
                                    patternProperties:
                                      '^[-_a-zA-Z0-9]+$':
                                        type: string
                                    title: Inputsunits
                                    type: object
                                  key:
                                    description: distinctive name for the node based on the docker registry path
                                    example:
                                      - simcore/services/comp/itis/sleeper
                                      - simcore/services/dynamic/3dviewer
                                      - simcore/services/frontend/file-picker
                                    pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
                                    title: Key
                                    type: string
                                  label:
                                    description: The short name of the node
                                    example:
                                      - JupyterLab
                                    title: Label
                                    type: string
                                  outputNode:
                                    deprecated: true
                                    title: Outputnode
                                    type: boolean
                                  outputNodes:
                                    description: Used in group-nodes. Node IDs of those connected to the output
                                    items:
                                      format: uuid
                                      type: string
                                    title: Outputnodes
                                    type: array
                                  outputs:
                                    additionalProperties:
                                      anyOf:
                                        - type: boolean
                                        - type: integer
                                        - type: number
                                        - format: json-string
                                          type: string
                                        - type: string
                                        - additionalProperties: false
                                          description: I/O port type to hold a link to a file in simcore S3 storage
                                          example:
                                            - eTag: 859fda0cb82fc4acb4686510a172d9a9-1
                                              label: input.txt
                                              path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                                              store: 0
                                            - eTag: f7e4c7076761a42a871e978c8691c676
                                              path: 50339632-ee1d-11ec-a0c2-02420a0194e4/23b1522f-225f-5a4c-9158-c4c19a70d4a8/output.h5
                                              store: '0'
                                            - path: api/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                                              store: 0
                                            - path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/d4442ca4-23fd-5b6b-ba6d-0b75f711c109/y_1D.txt
                                              store: 0
                                          properties:
                                            dataset:
                                              deprecated: true
                                              title: Dataset
                                              type: string
                                            eTag:
                                              description: Entity tag that uniquely represents the file. The method to generate the tag is not specified (black box).
                                              title: Etag
                                              type: string
                                            label:
                                              description: The real file name
                                              title: Label
                                              type: string
                                            path:
                                              anyOf:
                                                - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                                                  type: string
                                                - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                                                  type: string
                                              description: The path to the file in the storage provider domain
                                              title: Path
                                            store:
                                              description: 'The store identifier: 0 for simcore S3, 1 for datcore'
                                              title: Store
                                              type: integer
                                          required:
                                            - store
                                            - path
                                          title: SimCoreFileLink
                                          type: object
                                        - additionalProperties: false
                                          description: I/O port type to hold a link to a file in DATCORE storage
                                          example:
                                            - dataset: 'N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4'
                                              label: initial_WTstates
                                              path: 'N:package:32df09ba-e8d6-46da-bd54-f696157de6ce'
                                              store: 1
                                            - dataset: 'N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4'
                                              label: initial_WTstates
                                              path: 'N:package:32df09ba-e8d6-46da-bd54-f696157de6ce'
                                              store: 1
                                          properties:
                                            dataset:
                                              description: Unique identifier to access the dataset on datcore (REQUIRED for datcore)
                                              title: Dataset
                                              type: string
                                            eTag:
                                              description: Entity tag that uniquely represents the file. The method to generate the tag is not specified (black box).
                                              title: Etag
                                              type: string
                                            label:
                                              description: The real file name
                                              title: Label
                                              type: string
                                            path:
                                              anyOf:
                                                - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                                                  type: string
                                                - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                                                  type: string
                                              description: The path to the file in the storage provider domain
                                              title: Path
                                            store:
                                              description: 'The store identifier: 0 for simcore S3, 1 for datcore'
                                              title: Store
                                              type: integer
                                          required:
                                            - store
                                            - path
                                            - label
                                            - dataset
                                          title: DatCoreFileLink
                                          type: object
                                        - additionalProperties: false
                                          description: 'I/O port type to hold a generic download link to a file (e.g. S3 pre-signed link, etc)'
                                          example:
                                            - downloadLink: 'https://fakeimg.pl/250x100/'
                                          properties:
                                            downloadLink:
                                              format: uri
                                              maxLength: 65536
                                              minLength: 1
                                              title: Downloadlink
                                              type: string
                                            label:
                                              description: Display name
                                              title: Label
                                              type: string
                                          required:
                                            - downloadLink
                                          title: DownloadLink
                                          type: object
                                        - items: {}
                                          type: array
                                        - type: object
                                    description: values of output properties
                                    patternProperties:
                                      '^[-_a-zA-Z0-9]+$':
                                        anyOf:
                                          - type: boolean
                                          - type: integer
                                          - type: number
                                          - format: json-string
                                            type: string
                                          - type: string
                                          - additionalProperties: false
                                            description: I/O port type to hold a link to a file in simcore S3 storage
                                            example:
                                              - eTag: 859fda0cb82fc4acb4686510a172d9a9-1
                                                label: input.txt
                                                path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                                                store: 0
                                              - eTag: f7e4c7076761a42a871e978c8691c676
                                                path: 50339632-ee1d-11ec-a0c2-02420a0194e4/23b1522f-225f-5a4c-9158-c4c19a70d4a8/output.h5
                                                store: '0'
                                              - path: api/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                                                store: 0
                                              - path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/d4442ca4-23fd-5b6b-ba6d-0b75f711c109/y_1D.txt
                                                store: 0
                                            properties:
                                              dataset:
                                                deprecated: true
                                                title: Dataset
                                                type: string
                                              eTag:
                                                description: Entity tag that uniquely represents the file. The method to generate the tag is not specified (black box).
                                                title: Etag
                                                type: string
                                              label:
                                                description: The real file name
                                                title: Label
                                                type: string
                                              path:
                                                anyOf:
                                                  - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                                                    type: string
                                                  - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                                                    type: string
                                                description: The path to the file in the storage provider domain
                                                title: Path
                                              store:
                                                description: 'The store identifier: 0 for simcore S3, 1 for datcore'
                                                title: Store
                                                type: integer
                                            required:
                                              - store
                                              - path
                                            title: SimCoreFileLink
                                            type: object
                                          - additionalProperties: false
                                            description: I/O port type to hold a link to a file in DATCORE storage
                                            example:
                                              - dataset: 'N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4'
                                                label: initial_WTstates
                                                path: 'N:package:32df09ba-e8d6-46da-bd54-f696157de6ce'
                                                store: 1
                                              - dataset: 'N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4'
                                                label: initial_WTstates
                                                path: 'N:package:32df09ba-e8d6-46da-bd54-f696157de6ce'
                                                store: 1
                                            properties:
                                              dataset:
                                                description: Unique identifier to access the dataset on datcore (REQUIRED for datcore)
                                                title: Dataset
                                                type: string
                                              eTag:
                                                description: Entity tag that uniquely represents the file. The method to generate the tag is not specified (black box).
                                                title: Etag
                                                type: string
                                              label:
                                                description: The real file name
                                                title: Label
                                                type: string
                                              path:
                                                anyOf:
                                                  - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                                                    type: string
                                                  - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                                                    type: string
                                                description: The path to the file in the storage provider domain
                                                title: Path
                                              store:
                                                description: 'The store identifier: 0 for simcore S3, 1 for datcore'
                                                title: Store
                                                type: integer
                                            required:
                                              - store
                                              - path
                                              - label
                                              - dataset
                                            title: DatCoreFileLink
                                            type: object
                                          - additionalProperties: false
                                            description: 'I/O port type to hold a generic download link to a file (e.g. S3 pre-signed link, etc)'
                                            example:
                                              - downloadLink: 'https://fakeimg.pl/250x100/'
                                            properties:
                                              downloadLink:
                                                format: uri
                                                maxLength: 65536
                                                minLength: 1
                                                title: Downloadlink
                                                type: string
                                              label:
                                                description: Display name
                                                title: Label
                                                type: string
                                            required:
                                              - downloadLink
                                            title: DownloadLink
                                            type: object
                                          - items: {}
                                            type: array
                                          - type: object
                                    title: Outputs
                                    type: object
                                  parent:
                                    anyOf:
                                      - type: 'null'
                                      - description: Parent's (group-nodes') node ID s. Used to group
                                        format: uuid
                                        title: Parent
                                        type: string
                                  position:
                                    allOf:
                                      - additionalProperties: false
                                        properties:
                                          x:
                                            description: The x position
                                            example:
                                              - '12'
                                            title: X
                                            type: integer
                                          'y':
                                            description: The y position
                                            example:
                                              - '15'
                                            title: 'Y'
                                            type: integer
                                        required:
                                          - x
                                          - 'y'
                                        title: Position
                                        type: object
                                    deprecated: true
                                    description: Use projects_ui.WorkbenchUI.position instead
                                    title: Position
                                  progress:
                                    description: the node progress value
                                    maximum: 100
                                    minimum: 0
                                    title: Progress
                                    type: number
                                  runHash:
                                    anyOf:
                                      - type: 'null'
                                      - description: the hex digest of the resolved inputs +outputs hash at the time when the last outputs were generated
                                        title: Runhash
                                        type: string
                                  state:
                                    allOf:
                                      - additionalProperties: false
                                        example:
                                          - currentStatus: NOT_STARTED
                                            dependencies: []
                                            modified: true
                                          - currentStatus: ABORTED
                                            dependencies:
                                              - 42838344-03de-4ce2-8d93-589a5dcdfd05
                                            modified: true
                                          - currentStatus: SUCCESS
                                            dependencies: []
                                            modified: false
                                        properties:
                                          currentStatus:
                                            allOf:
                                              - description: |-
                                                  State of execution of a project's computational workflow

                                                  SEE StateType for task state
                                                enum:
                                                  - UNKNOWN
                                                  - PUBLISHED
                                                  - NOT_STARTED
                                                  - PENDING
                                                  - STARTED
                                                  - RETRY
                                                  - SUCCESS
                                                  - FAILED
                                                  - ABORTED
                                                title: RunningState
                                                type: string
                                            default: NOT_STARTED
                                            description: the node's current state
                                          dependencies:
                                            description: contains the node inputs dependencies if they need to be computed first
                                            items:
                                              format: uuid
                                              type: string
                                            title: Dependencies
                                            type: array
                                            uniqueItems: true
                                          modified:
                                            default: true
                                            description: true if the node's outputs need to be re-computed
                                            title: Modified
                                            type: boolean
                                        title: NodeState
                                        type: object
                                    description: The node's state object
                                    title: State
                                  thumbnail:
                                    description: url of the latest screenshot of the node
                                    example:
                                      - 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                                    format: uri
                                    maxLength: 2083
                                    minLength: 0
                                    title: Thumbnail
                                    type: string
                                  version:
                                    description: semantic version number of the node
                                    example:
                                      - 1.0.0
                                      - 0.0.1
                                    pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                                    title: Version
                                    type: string
                                required:
                                  - key
                                  - version
                                  - label
                                title: Node
                                type: object
                        required:
                          - uuid
                          - name
                          - description
                          - thumbnail
                          - creationDate
                          - lastChangeDate
                          - workbench
                          - prjOwner
                          - accessRights
                        title: osparc-simcore project
                        type: object
                      - type: object
                        properties:
                          state:
                            $ref: '#/paths/~1v0~1projects~1%7Bproject_id%7D~1state/get/responses/200/content/application~1json/schema/properties/data'
                  error:
                    nullable: true
                    default: null
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/projects/{project_id}/state':
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - project
      summary: returns the state of a project
      operationId: get_project_state
      responses:
        '200':
          description: returns the project current state
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - locked
                    properties:
                      locked:
                        type: object
                        description: describes the project lock state
                        required:
                          - value
                        properties:
                          value:
                            type: boolean
                            description: true if the project is locked
                          owner:
                            type: object
                            properties:
                              first_name:
                                type: string
                              last_name:
                                type: string
                            required:
                              - firstName
                              - lastName
                  error:
                    nullable: true
                    default: null
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/projects/{project_id}:xport':
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - exporter
      summary: creates an archive of the project and downloads it
      operationId: export_project
      responses:
        '200':
          description: creates an archive from a project file
          content:
            application/zip:
              schema:
                type: string
                format: binary
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/projects/{project_id}:close':
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - project
      summary: Closes a given project
      operationId: close_project
      requestBody:
        description: browser tab identifier
        required: true
        content:
          application/json:
            schema:
              $ref: '#/paths/~1v0~1projects~1%7Bproject_id%7D%3Aopen/post/requestBody/content/application~1json/schema'
      responses:
        '204':
          description: project succesfuly closed
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/projects/{project_id}/nodes':
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - project
      summary: Create a new node
      operationId: create_node
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service_id:
                  type: string
                  description: the uuid to assign to the service
                service_key:
                  type: string
                  pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
                  description: The key (url) of the service
                service_version:
                  type: string
                  pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                  description: The tag/version of the service
              required:
                - service_key
                - service_version
            example:
              service_key: simcore/services/dynamic/3d-viewer
              service_version: 1.4.0
      responses:
        '201':
          description: created
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - node_id
                    properties:
                      node_id:
                        type: string
                        description: The UUID attached to this node
                        example: 123e4567-e89b-12d3-a456-426655440000
                  error:
                    nullable: true
                    default: null
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/projects/{project_id}/nodes/{node_id}':
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
      - name: node_id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - project
      description: Gets node status
      operationId: get_node
      responses:
        '200':
          description: OK service exists and runs. Returns node details.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - published_port
                      - service_uuid
                      - service_key
                      - service_version
                      - service_host
                      - service_port
                      - service_state
                      - user_id
                    properties:
                      published_port:
                        description: The ports where the service provides its interface
                        type: integer
                        format: int32
                        minimum: 1
                        example: 30000
                      entry_point:
                        description: The entry point where the service provides its interface if specified
                        type: string
                        example: /the/entry/point/is/here
                      service_uuid:
                        description: The UUID attached to this service
                        type: string
                        example: 123e4567-e89b-12d3-a456-426655440000
                      service_key:
                        type: string
                        description: distinctive name for the node based on the docker registry path
                        pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
                        example:
                          - simcore/services/comp/itis/sleeper
                          - simcore/services/dynamic/3dviewer
                      service_version:
                        type: string
                        description: semantic version number
                        pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                        example:
                          - 1.0.0
                          - 0.0.1
                      service_host:
                        description: service host name within the network
                        type: string
                        example: jupyter_E1O2E-LAH
                      service_port:
                        description: port to access the service within the network
                        type: integer
                        minimum: 1
                        example: 8081
                      service_basepath:
                        description: different base path where current service is mounted otherwise defaults to root
                        type: string
                        example: /x/E1O2E-LAH
                        default: ''
                      service_state:
                        description: |
                          the service state * 'pending' - The service is waiting for resources to start * 'pulling' - The service is being pulled from the registry * 'starting' - The service is starting * 'running' - The service is running * 'complete' - The service completed * 'failed' - The service failed to start
                        type: string
                        enum:
                          - pending
                          - pulling
                          - starting
                          - running
                          - complete
                          - failed
                      service_message:
                        description: the service message
                        type: string
                        example: no suitable node (insufficient resources on 1 node)
                      user_id:
                        description: the user that started the service
                        type: string
                        example: '123'
                  error:
                    nullable: true
                    default: null
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    delete:
      tags:
        - project
      description: Stops and removes a node from the project
      operationId: delete_node
      responses:
        '204':
          description: node has been successfully deleted from project
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/projects/{project_id}/nodes/{node_id}:retrieve':
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
      - name: node_id
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - project
      description: Triggers service retrieve
      operationId: retrieve_node
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                port_keys:
                  description: list of por keys to be retrieved
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Returns the amount of transferred bytes when pulling data via nodeports
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: response payload
                    properties:
                      size_bytes:
                        type: integer
                        description: amount of transferred bytes
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/projects/{project_id}/nodes/{node_id}:start':
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
      - name: node_id
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - project
      description: Starts a project dynamic service
      operationId: start_node
      responses:
        '204':
          description: started service (needs to be long running though)
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/projects/{project_id}/nodes/{node_id}:stop':
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
      - name: node_id
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - project
      description: Stops a project node
      operationId: stop_node
      responses:
        '204':
          description: stopped service
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/projects/{project_id}/nodes/{node_id}:restart':
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
      - name: node_id
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - project
      description: Restarts containers started by the dynamic-sidecar
      operationId: restart_node
      responses:
        '204':
          description: Restarts containers started by the dynamic-sidecar
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/projects/{project_id}/nodes/{node_id}/resources':
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
      - name: node_id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - project
      description: Returns the node resources
      operationId: get_node_resources
      responses:
        '200':
          description: Returns the node resources.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/paths/~1v0~1projects~1%7Bproject_id%7D~1nodes~1%7Bnode_id%7D~1resources/put/requestBody/content/application~1json/schema'
                  error:
                    nullable: true
                    default: null
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    put:
      tags:
        - project
      description: Replaces the node resources
      operationId: replace_node_resources
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
                required:
                  - limit
                  - reservation
                properties:
                  limit:
                    anyOf:
                      - type: integer
                      - type: number
                      - type: string
                  reservation:
                    anyOf:
                      - type: integer
                      - type: number
                      - type: string
      responses:
        '200':
          description: Returns the udpated node resources.
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1projects~1%7Bproject_id%7D~1nodes~1%7Bnode_id%7D~1resources/get/responses/200/content/application~1json/schema'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/projects/{project_uuid}/comments':
    get:
      tags:
        - project
        - comments
      summary: Retrieve all comments for a specific project.
      operationId: list_project_comments
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Project Uuid
          name: project_uuid
          in: path
        - required: false
          schema:
            type: integer
            title: Limit
            default: 20
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            minimum: 0
            title: Offset
            default: 0
          name: offset
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/paths/~1v0~1projects~1%7Bproject_uuid%7D~1comments~1%7Bcomment_id%7D/get/responses/200/content/application~1json/schema/properties/data'
                    type: array
                    title: Data
                  error:
                    title: Error
                type: object
                title: 'Envelope[list[models_library.projects_comments.ProjectsCommentsAPI]]'
    post:
      tags:
        - project
        - comments
      summary: Create a new comment for a specific project. The request body should contain the comment contents and user information.
      operationId: create_project_comment
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Project Uuid
          name: project_uuid
          in: path
      requestBody:
        content:
          application/json:
            schema:
              properties:
                contents:
                  type: string
                  title: Contents
              additionalProperties: false
              type: object
              required:
                - contents
              title: _ProjectCommentsBodyParams
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                properties:
                  data:
                    additionalProperties:
                      type: integer
                      exclusiveMinimum: true
                      minimum: 0
                    type: object
                    title: Data
                  error:
                    title: Error
                type: object
                title: 'Envelope[dict[Literal[''comment_id''], pydantic.types.PositiveInt]]'
  '/v0/projects/{project_uuid}/comments/{comment_id}':
    get:
      tags:
        - project
        - comments
      summary: Retrieve a specific comment by its ID within a project.
      operationId: get_project_comment
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Project Uuid
          name: project_uuid
          in: path
        - required: true
          schema:
            type: integer
            exclusiveMinimum: true
            title: Comment Id
            minimum: 0
          name: comment_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      comment_id:
                        type: integer
                        exclusiveMinimum: true
                        title: Comment Id
                        description: 'Primary key, identifies the comment'
                        minimum: 0
                      project_uuid:
                        type: string
                        format: uuid
                        title: Project Uuid
                        description: project reference for this table
                      user_id:
                        type: integer
                        exclusiveMinimum: true
                        title: User Id
                        description: user reference for this table
                        minimum: 0
                      contents:
                        type: string
                        title: Contents
                        description: Contents of the comment
                      created:
                        type: string
                        format: date-time
                        title: Created
                        description: Timestamp on creation
                      modified:
                        type: string
                        format: date-time
                        title: Modified
                        description: Timestamp with last update
                    additionalProperties: false
                    type: object
                    required:
                      - comment_id
                      - project_uuid
                      - user_id
                      - contents
                      - created
                      - modified
                    title: ProjectsCommentsAPI
                  error:
                    title: Error
                type: object
                title: 'Envelope[ProjectsCommentsAPI]'
    put:
      tags:
        - project
        - comments
      summary: Update the contents of a specific comment for a project. The request body should contain the updated comment contents.
      operationId: update_project_comment
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Project Uuid
          name: project_uuid
          in: path
        - required: true
          schema:
            type: integer
            exclusiveMinimum: true
            title: Comment Id
            minimum: 0
          name: comment_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/paths/~1v0~1projects~1%7Bproject_uuid%7D~1comments/post/requestBody/content/application~1json/schema'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1projects~1%7Bproject_uuid%7D~1comments~1%7Bcomment_id%7D/get/responses/200/content/application~1json/schema'
    delete:
      tags:
        - project
        - comments
      summary: Delete a specific comment associated with a project.
      operationId: delete_project_comment
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Project Uuid
          name: project_uuid
          in: path
        - required: true
          schema:
            type: integer
            exclusiveMinimum: true
            title: Comment Id
            minimum: 0
          name: comment_id
          in: path
      responses:
        '204':
          description: Successful Response
  '/v0/projects/{project_id}/nodes/-/services:access':
    get:
      tags:
        - project
      summary: Check whether provided group has access to the project services
      operationId: get_project_services_access_for_gid
      parameters:
        - required: true
          schema:
            title: Project Id
            type: string
            format: uuid
          name: project_id
          in: path
        - required: true
          schema:
            title: For Gid
            exclusiveMinimum: true
            type: integer
            minimum: 0
          name: for_gid
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[_ProjectGroupAccess]'
                type: object
                properties:
                  data:
                    title: _ProjectGroupAccess
                    required:
                      - gid
                      - accessible
                    type: object
                    properties:
                      gid:
                        title: Gid
                        exclusiveMinimum: true
                        type: integer
                        minimum: 0
                      accessible:
                        title: Accessible
                        type: boolean
                      inaccessible_services:
                        title: Inaccessible Services
                        type: array
                        items:
                          title: ServiceKeyVersion
                          required:
                            - key
                            - version
                          type: object
                          properties:
                            key:
                              title: Key
                              pattern: '^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$'
                              type: string
                              description: distinctive name for the node based on the docker registry path
                            version:
                              title: Version
                              pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                              type: string
                              description: service version number
                          description: This pair uniquely identifies a services
                  error:
                    title: Error
  '/v0/projects/{project_id}/nodes/-/preview':
    get:
      tags:
        - project
      summary: Lists all previews in the node's project
      operationId: list_project_nodes_previews
      parameters:
        - required: true
          schema:
            title: Project Id
            type: string
            format: uuid
          name: project_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[list[simcore_service_webserver.projects._nodes_handlers._ProjectNodePreview]]'
                type: object
                properties:
                  data:
                    title: Data
                    type: array
                    items:
                      $ref: '#/paths/~1v0~1projects~1%7Bproject_id%7D~1nodes~1%7Bnode_id%7D~1preview/get/responses/200/content/application~1json/schema/properties/data'
                  error:
                    title: Error
  '/v0/projects/{project_id}/nodes/{node_id}/preview':
    get:
      tags:
        - project
      summary: Gets a give node's preview
      operationId: get_project_node_preview
      parameters:
        - required: true
          schema:
            title: Project Id
            type: string
            format: uuid
          name: project_id
          in: path
        - required: true
          schema:
            title: Node Id
            type: string
            format: uuid
          name: node_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[_ProjectNodePreview]'
                type: object
                properties:
                  data:
                    title: _ProjectNodePreview
                    required:
                      - project_id
                      - node_id
                    type: object
                    properties:
                      project_id:
                        title: Project Id
                        type: string
                        format: uuid
                      node_id:
                        title: Node Id
                        type: string
                        format: uuid
                      screenshots:
                        title: Screenshots
                        type: array
                        items:
                          title: NodeScreenshot
                          required:
                            - thumbnail_url
                            - file_url
                          type: object
                          properties:
                            thumbnail_url:
                              title: Thumbnail Url
                              maxLength: 2083
                              minLength: 1
                              type: string
                              format: uri
                            file_url:
                              title: File Url
                              maxLength: 2083
                              minLength: 1
                              type: string
                              format: uri
                            mimetype:
                              title: Mimetype
                              type: string
                              description: 'File''s media type or None if unknown. SEE https://www.iana.org/assignments/media-types/media-types.xhtml'
                              example: image/jpeg
                  error:
                    title: Error
        '404':
          description: Node has no preview
  '/v0/projects/{project_id}/inputs':
    get:
      tags:
        - project
      summary: Get Project Inputs
      description: New in version *0.10*
      operationId: get_project_inputs
      parameters:
        - required: true
          schema:
            title: Project Id
            type: string
            format: uuid
          name: project_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[dict[uuid.UUID, simcore_service_webserver.projects._ports_handlers.ProjectInputGet]]'
                type: object
                properties:
                  data:
                    title: Data
                    type: object
                    additionalProperties:
                      title: ProjectInputGet
                      required:
                        - key
                        - value
                        - label
                      type: object
                      properties:
                        key:
                          title: Key
                          type: string
                          description: Project port's unique identifer. Same as the UUID of the associated port node
                          format: uuid
                        value:
                          title: Value
                          description: Value assigned to this i/o port
                        label:
                          title: Label
                          type: string
                  error:
                    title: Error
    patch:
      tags:
        - project
      summary: Update Project Inputs
      description: New in version *0.10*
      operationId: update_project_inputs
      parameters:
        - required: true
          schema:
            title: Project Id
            type: string
            format: uuid
          name: project_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Updates
              type: array
              items:
                title: ProjectInputUpdate
                required:
                  - key
                  - value
                type: object
                properties:
                  key:
                    title: Key
                    type: string
                    description: Project port's unique identifer. Same as the UUID of the associated port node
                    format: uuid
                  value:
                    title: Value
                    description: Value assigned to this i/o port
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1projects~1%7Bproject_id%7D~1inputs/get/responses/200/content/application~1json/schema'
  '/v0/projects/{project_id}/outputs':
    get:
      tags:
        - project
      summary: Get Project Outputs
      description: New in version *0.10*
      operationId: get_project_outputs
      parameters:
        - required: true
          schema:
            title: Project Id
            type: string
            format: uuid
          name: project_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[dict[uuid.UUID, simcore_service_webserver.projects._ports_handlers.ProjectOutputGet]]'
                type: object
                properties:
                  data:
                    title: Data
                    type: object
                    additionalProperties:
                      title: ProjectOutputGet
                      required:
                        - key
                        - value
                        - label
                      type: object
                      properties:
                        key:
                          title: Key
                          type: string
                          description: Project port's unique identifer. Same as the UUID of the associated port node
                          format: uuid
                        value:
                          title: Value
                          description: Value assigned to this i/o port
                        label:
                          title: Label
                          type: string
                  error:
                    title: Error
  '/v0/projects/{project_id}/metadata':
    get:
      tags:
        - project
      summary: Get Project Metadata
      operationId: get_project_metadata
      parameters:
        - required: true
          schema:
            title: Project Id
            type: string
            format: uuid
          name: project_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[ProjectMetadataGet]'
                type: object
                properties:
                  data:
                    title: ProjectMetadataGet
                    required:
                      - projectUuid
                    type: object
                    properties:
                      projectUuid:
                        title: Projectuuid
                        type: string
                        format: uuid
                      custom:
                        title: Custom
                        type: object
                        additionalProperties:
                          anyOf:
                            - type: boolean
                            - type: integer
                            - type: number
                            - type: string
                        description: Custom key-value map
                  error:
                    title: Error
    patch:
      tags:
        - project
      summary: Update Project Metadata
      operationId: update_project_metadata
      parameters:
        - required: true
          schema:
            title: Project Id
            type: string
            format: uuid
          name: project_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: ProjectMetadataUpdate
              required:
                - custom
              type: object
              properties:
                custom:
                  title: Custom
                  type: object
                  additionalProperties:
                    anyOf:
                      - type: boolean
                      - type: integer
                      - type: number
                      - type: string
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1projects~1%7Bproject_id%7D~1metadata/get/responses/200/content/application~1json/schema'
  '/v0/projects/{project_id}/metadata/ports':
    get:
      tags:
        - project
      summary: List Project Metadata Ports
      description: New in version *0.12*
      operationId: list_project_metadata_ports
      parameters:
        - required: true
          schema:
            title: Project Id
            type: string
            format: uuid
          name: project_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[list[simcore_service_webserver.projects._ports_handlers.ProjectMetadataPortGet]]'
                type: object
                properties:
                  data:
                    title: Data
                    type: array
                    items:
                      title: ProjectMetadataPortGet
                      required:
                        - key
                        - kind
                      type: object
                      properties:
                        key:
                          title: Key
                          type: string
                          description: Project port's unique identifer. Same as the UUID of the associated port node
                          format: uuid
                        kind:
                          title: Kind
                          enum:
                            - input
                            - output
                          type: string
                        content_schema:
                          title: Content Schema
                          type: object
                          description: 'jsonschema for the port''s value. SEE https://json-schema.org/understanding-json-schema/'
                  error:
                    title: Error
  '/v0/projects/{project_uuid}/tags/{tag_id}':
    parameters:
      - name: tag_id
        in: path
        required: true
        schema:
          type: integer
      - name: project_uuid
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - project
      summary: Links an existing label with an existing study
      operationId: add_tag
      responses:
        '200':
          description: The tag has been successfully linked to the study
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1projects~1%7Bproject_id%7D%3Aopen/post/responses/200/content/application~1json/schema'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    delete:
      tags:
        - project
      summary: Removes an existing link between a label and a study
      operationId: remove_tag
      responses:
        '200':
          description: The tag has been successfully removed from the study
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1projects~1%7Bproject_id%7D%3Aopen/post/responses/200/content/application~1json/schema'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/projects/{project_id}/wallet':
    get:
      tags:
        - project
      summary: Get current connected wallet to the project.
      operationId: get_project_wallet
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Project Id
          name: project_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      wallet_id:
                        type: integer
                        exclusiveMinimum: true
                        title: Wallet Id
                        minimum: 0
                      name:
                        type: string
                        title: Name
                      description:
                        type: string
                        title: Description
                      owner:
                        type: integer
                        exclusiveMinimum: true
                        title: Owner
                        minimum: 0
                      thumbnail:
                        type: string
                        title: Thumbnail
                      status:
                        type: string
                        enum:
                          - ACTIVE
                          - INACTIVE
                        title: WalletStatus
                        description: An enumeration.
                      created:
                        type: string
                        format: date-time
                        title: Created
                      modified:
                        type: string
                        format: date-time
                        title: Modified
                    type: object
                    required:
                      - wallet_id
                      - name
                      - owner
                      - status
                      - created
                      - modified
                    title: WalletGet
                  error:
                    title: Error
                type: object
                title: 'Envelope[Union[WalletGet, NoneType]]'
  '/v0/projects/{project_id}/wallet/{wallet_id}':
    put:
      tags:
        - project
      summary: Connect wallet to the project (Project can have only one wallet)
      operationId: connect_wallet_to_project
      parameters:
        - required: true
          schema:
            type: string
            format: uuid
            title: Project Id
          name: project_id
          in: path
        - required: true
          schema:
            type: integer
            exclusiveMinimum: true
            title: Wallet Id
            minimum: 0
          name: wallet_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                properties:
                  data:
                    $ref: '#/paths/~1v0~1projects~1%7Bproject_id%7D~1wallet/get/responses/200/content/application~1json/schema/properties/data'
                  error:
                    title: Error
                type: object
                title: 'Envelope[WalletGet]'
  '/v0/projects/{project_uuid}/checkpoint/{ref_id}/iterations':
    get:
      tags:
        - meta-projects
      summary: List Project Iterations
      description: Lists current project's iterations
      operationId: simcore_service_webserver.meta_modeling._rest_handlers._list_meta_project_iterations_handler
      parameters:
        - description: Project unique identifier
          required: true
          schema:
            title: Project Uuid
            type: string
            description: Project unique identifier
            format: uuid
          name: project_uuid
          in: path
        - required: true
          schema:
            title: Ref Id
            anyOf:
              - type: integer
              - type: string
          name: ref_id
          in: path
        - description: index to the first item to return (pagination)
          required: false
          schema:
            title: Offset
            exclusiveMinimum: false
            type: integer
            description: index to the first item to return (pagination)
            default: 0
            minimum: 0
          name: offset
          in: query
        - description: maximum number of items to return (pagination)
          required: false
          schema:
            title: Limit
            maximum: 50
            minimum: 1
            type: integer
            description: maximum number of items to return (pagination)
            default: 20
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Page[IterationItem]'
                required:
                  - _meta
                  - _links
                  - data
                type: object
                properties:
                  _meta:
                    title: PageMetaInfoLimitOffset
                    required:
                      - total
                      - count
                    type: object
                    properties:
                      limit:
                        title: Limit
                        exclusiveMinimum: true
                        type: integer
                        default: 20
                        minimum: 0
                      total:
                        title: Total
                        minimum: 0
                        type: integer
                      offset:
                        title: Offset
                        minimum: 0
                        type: integer
                        default: 0
                      count:
                        title: Count
                        minimum: 0
                        type: integer
                  _links:
                    title: PageLinks
                    required:
                      - self
                      - first
                      - last
                    type: object
                    properties:
                      self:
                        title: Self
                        maxLength: 65536
                        minLength: 1
                        type: string
                        format: uri
                      first:
                        title: First
                        maxLength: 65536
                        minLength: 1
                        type: string
                        format: uri
                      prev:
                        title: Prev
                        maxLength: 65536
                        minLength: 1
                        type: string
                        format: uri
                      next:
                        title: Next
                        maxLength: 65536
                        minLength: 1
                        type: string
                        format: uri
                      last:
                        title: Last
                        maxLength: 65536
                        minLength: 1
                        type: string
                        format: uri
                    additionalProperties: false
                  data:
                    title: Data
                    type: array
                    items:
                      title: IterationItem
                      required:
                        - name
                        - parent
                        - workcopy_project_id
                        - workcopy_project_url
                        - url
                      type: object
                      properties:
                        name:
                          title: Name
                          type: string
                          description: 'Iteration''s resource name [AIP-122](https://google.aip.dev/122)'
                        parent:
                          title: Parent
                          allOf:
                            - title: ParentMetaProjectRef
                              required:
                                - project_id
                                - ref_id
                              type: object
                              properties:
                                project_id:
                                  title: Project Id
                                  type: string
                                  format: uuid
                                ref_id:
                                  title: Ref Id
                                  type: integer
                          description: Reference to the the meta-project that defines this iteration
                        workcopy_project_id:
                          title: Workcopy's Project Id
                          type: string
                          description: ID to this iteration's working copy.A working copy is a real project where this iteration is run
                          format: uuid
                        workcopy_project_url:
                          title: Workcopy's Project Url
                          maxLength: 2083
                          minLength: 1
                          type: string
                          format: uri
                        url:
                          title: Url
                          maxLength: 2083
                          minLength: 1
                          type: string
                          format: uri
        '404':
          description: This project has no iterations.Only meta-project have iterations and they must be explicitly created.
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                title: HTTPValidationError
                type: object
                properties:
                  detail:
                    title: Detail
                    type: array
                    items:
                      title: ValidationError
                      required:
                        - loc
                        - msg
                        - type
                      type: object
                      properties:
                        loc:
                          title: Location
                          type: array
                          items:
                            type: string
                        msg:
                          title: Message
                          type: string
                        type:
                          title: Error Type
                          type: string
  '/v0/projects/{project_uuid}/checkpoint/{ref_id}/iterations/{iter_id}':
    get:
      tags:
        - meta-projects
      summary: Get Project Iterations
      description: Get current project's iterations
      operationId: simcore_service_webserver.meta_modeling._rest_handlers._get_meta_project_iterations_handler
      parameters:
        - description: Project unique identifier
          required: true
          schema:
            title: Project Uuid
            type: string
            description: Project unique identifier
            format: uuid
          name: project_uuid
          in: path
        - required: true
          schema:
            title: Ref Id
            anyOf:
              - type: integer
              - type: string
          name: ref_id
          in: path
        - required: true
          name: iter_id
          schema:
            type: integer
          in: path
      responses:
        '200':
          description: Successful Response
  '/v0/projects/{project_uuid}/checkpoint/{ref_id}/iterations/-/results':
    get:
      tags:
        - meta-projects
      summary: List Project Iterations Results
      description: Lists current project's iterations results table
      operationId: simcore_service_webserver.meta_modeling._rest_handlers._list_meta_project_iterations_results_handler
      parameters:
        - description: Project unique identifier
          required: true
          schema:
            title: Project Uuid
            type: string
            description: Project unique identifier
            format: uuid
          name: project_uuid
          in: path
        - required: true
          schema:
            title: Ref Id
            anyOf:
              - type: integer
              - type: string
          name: ref_id
          in: path
        - description: index to the first item to return (pagination)
          required: false
          schema:
            title: Offset
            exclusiveMinimum: false
            type: integer
            description: index to the first item to return (pagination)
            default: 0
            minimum: 0
          name: offset
          in: query
        - description: maximum number of items to return (pagination)
          required: false
          schema:
            title: Limit
            maximum: 50
            minimum: 1
            type: integer
            description: maximum number of items to return (pagination)
            default: 20
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Page[IterationResultItem]'
                required:
                  - _meta
                  - _links
                  - data
                type: object
                properties:
                  _meta:
                    $ref: '#/paths/~1v0~1projects~1%7Bproject_uuid%7D~1checkpoint~1%7Bref_id%7D~1iterations/get/responses/200/content/application~1json/schema/properties/_meta'
                  _links:
                    $ref: '#/paths/~1v0~1projects~1%7Bproject_uuid%7D~1checkpoint~1%7Bref_id%7D~1iterations/get/responses/200/content/application~1json/schema/properties/_links'
                  data:
                    title: Data
                    type: array
                    items:
                      $ref: '#/paths/~1v0~1projects~1%7Bproject_uuid%7D~1checkpoint~1%7Bref_id%7D~1iterations/get/responses/200/content/application~1json/schema/properties/data/items'
        '404':
          description: This project has no iterations.Only meta-project have iterations and they must be explicitly created.
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1projects~1%7Bproject_uuid%7D~1checkpoint~1%7Bref_id%7D~1iterations/get/responses/422/content/application~1json/schema'
  '/v0/projects/{project_uuid}/checkpoint/{ref_id}/iterations/{iter_id}/results':
    get:
      tags:
        - meta-projects
      summary: Get Project Iteration Results
      description: Get current project's iterations
      operationId: simcore_service_webserver.meta_modeling._rest_handlers._get_meta_project_iteration_results_handler
      parameters:
        - description: Project unique identifier
          required: true
          schema:
            title: Project Uuid
            type: string
            description: Project unique identifier
            format: uuid
          name: project_uuid
          in: path
        - required: true
          schema:
            title: Ref Id
            anyOf:
              - type: integer
              - type: string
          name: ref_id
          in: path
        - required: true
          schema:
            type: integer
          name: iter_id
          in: path
      responses:
        '200':
          description: Successful Response
  /v0/repos/projects:
    get:
      tags:
        - repository
      summary: List Repos
      description: List info about versioned projects
      operationId: simcore_service_webserver.version_control._rest_handlers._list_repos_handler
      parameters:
        - description: index to the first item to return (pagination)
          required: false
          schema:
            title: Offset
            exclusiveMinimum: false
            type: integer
            description: index to the first item to return (pagination)
            default: 0
          name: offset
          in: query
        - description: maximum number of items to return (pagination)
          required: false
          schema:
            title: Limit
            maximum: 50
            minimum: 1
            type: integer
            description: maximum number of items to return (pagination)
            default: 20
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Page[Repo]'
                required:
                  - _meta
                  - _links
                  - data
                type: object
                properties:
                  _meta:
                    title: PageMetaInfoLimitOffset
                    required:
                      - limit
                      - total
                      - count
                    type: object
                    properties:
                      limit:
                        title: Limit
                        exclusiveMinimum: false
                        type: integer
                      total:
                        title: Total
                        minimum: 0
                        type: integer
                      offset:
                        title: Offset
                        minimum: 0
                        type: integer
                        default: 0
                      count:
                        title: Count
                        minimum: 0
                        type: integer
                    additionalProperties: false
                  _links:
                    title: PageLinks
                    required:
                      - self
                      - first
                      - last
                    type: object
                    properties:
                      self:
                        title: Self
                        maxLength: 65536
                        minLength: 1
                        type: string
                        format: uri
                      first:
                        title: First
                        maxLength: 65536
                        minLength: 1
                        type: string
                        format: uri
                      prev:
                        title: Prev
                        maxLength: 65536
                        minLength: 1
                        type: string
                        format: uri
                      next:
                        title: Next
                        maxLength: 65536
                        minLength: 1
                        type: string
                        format: uri
                      last:
                        title: Last
                        maxLength: 65536
                        minLength: 1
                        type: string
                        format: uri
                    additionalProperties: false
                  data:
                    title: Data
                    type: array
                    items:
                      title: Repo
                      required:
                        - project_uuid
                        - url
                      type: object
                      properties:
                        project_uuid:
                          title: Project Uuid
                          type: string
                          format: uuid
                        url:
                          title: Url
                          maxLength: 2083
                          minLength: 1
                          type: string
                          format: uri
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                title: HTTPValidationError
                type: object
                properties:
                  detail:
                    title: Detail
                    type: array
                    items:
                      title: ValidationError
                      required:
                        - loc
                        - msg
                        - type
                      type: object
                      properties:
                        loc:
                          title: Location
                          type: array
                          items:
                            type: string
                        msg:
                          title: Message
                          type: string
                        type:
                          title: Error Type
                          type: string
  '/v0/repos/projects/{project_uuid}/checkpoints':
    get:
      tags:
        - repository
      summary: List Checkpoints
      description: Lists commits&tags tree of the project
      operationId: simcore_service_webserver.version_control._rest_handlers._list_checkpoints_handler
      parameters:
        - description: Project unique identifier
          required: true
          schema:
            title: Project Uuid
            type: string
            description: Project unique identifier
            format: uuid
          name: project_uuid
          in: path
        - description: index to the first item to return (pagination)
          required: false
          schema:
            title: Offset
            exclusiveMinimum: false
            type: integer
            description: index to the first item to return (pagination)
            default: 0
          name: offset
          in: query
        - description: maximum number of items to return (pagination)
          required: false
          schema:
            title: Limit
            maximum: 50
            minimum: 1
            type: integer
            description: maximum number of items to return (pagination)
            default: 20
          name: limit
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Page[Checkpoint]'
                required:
                  - _meta
                  - _links
                  - data
                type: object
                properties:
                  _meta:
                    $ref: '#/paths/~1v0~1repos~1projects/get/responses/200/content/application~1json/schema/properties/_meta'
                  _links:
                    $ref: '#/paths/~1v0~1repos~1projects/get/responses/200/content/application~1json/schema/properties/_links'
                  data:
                    title: Data
                    type: array
                    items:
                      $ref: '#/paths/~1v0~1repos~1projects~1%7Bproject_uuid%7D~1checkpoints/post/responses/201/content/application~1json/schema/properties/data'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1repos~1projects/get/responses/422/content/application~1json/schema'
    post:
      tags:
        - repository
      summary: Create Checkpoint
      operationId: simcore_service_webserver.version_control._rest_handlers._create_checkpoint_handler
      parameters:
        - description: Project unique identifier
          required: true
          schema:
            title: Project Uuid
            type: string
            description: Project unique identifier
            format: uuid
          name: project_uuid
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: CheckpointNew
              required:
                - tag
              type: object
              properties:
                tag:
                  title: Tag
                  type: string
                message:
                  title: Message
                  type: string
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[Checkpoint]'
                type: object
                properties:
                  data:
                    title: Checkpoint
                    required:
                      - id
                      - checksum
                      - tag
                      - message
                      - parent
                      - created_at
                      - url
                    type: object
                    properties:
                      id:
                        title: Id
                        exclusiveMinimum: false
                        type: integer
                      checksum:
                        title: Checksum
                        type: string
                      tag:
                        title: Tag
                        type: string
                      message:
                        title: Message
                        type: string
                      parent:
                        title: Parent
                        exclusiveMinimum: false
                        type: integer
                      created_at:
                        title: Created At
                        type: string
                        format: date-time
                      url:
                        title: Url
                        maxLength: 2083
                        minLength: 1
                        type: string
                        format: uri
                  error:
                    title: Error
                    required:
                      - code
                      - message
                    type: object
                    properties:
                      code:
                        title: Code
                        type: integer
                      message:
                        title: Message
                        type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1repos~1projects/get/responses/422/content/application~1json/schema'
  '/v0/repos/projects/{project_uuid}/checkpoints/HEAD':
    get:
      tags:
        - repository
      summary: Gets HEAD (i.e. current) checkpoint
      description: Get current commit
      operationId: simcore_service_webserver.version_control._rest_handlers._get_checkpoint_handler_head
      parameters:
        - description: Project unique identifier
          required: true
          schema:
            title: Project Uuid
            type: string
            description: Project unique identifier
            format: uuid
          name: project_uuid
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1repos~1projects~1%7Bproject_uuid%7D~1checkpoints/post/responses/201/content/application~1json/schema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1repos~1projects/get/responses/422/content/application~1json/schema'
  '/v0/repos/projects/{project_uuid}/checkpoints/{ref_id}':
    get:
      tags:
        - repository
      summary: Get Checkpoint
      description: Set ref_id=HEAD to return current commit
      operationId: simcore_service_webserver.version_control._rest_handlers._get_checkpoint_handler
      parameters:
        - description: 'A repository ref (commit, tag or branch)'
          required: true
          schema:
            title: Ref Id
            anyOf:
              - type: string
                format: uuid
              - type: string
            description: 'A repository ref (commit, tag or branch)'
          name: ref_id
          in: path
        - description: Project unique identifier
          required: true
          schema:
            title: Project Uuid
            type: string
            description: Project unique identifier
            format: uuid
          name: project_uuid
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1repos~1projects~1%7Bproject_uuid%7D~1checkpoints/post/responses/201/content/application~1json/schema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1repos~1projects/get/responses/422/content/application~1json/schema'
    patch:
      tags:
        - repository
      summary: Update Checkpoint Annotations
      operationId: simcore_service_webserver.version_control._rest_handlers._update_checkpoint_annotations_handler
      parameters:
        - description: 'A repository ref (commit, tag or branch)'
          required: true
          schema:
            title: Ref Id
            anyOf:
              - type: string
                format: uuid
              - type: string
            description: 'A repository ref (commit, tag or branch)'
          name: ref_id
          in: path
        - description: Project unique identifier
          required: true
          schema:
            title: Project Uuid
            type: string
            description: Project unique identifier
            format: uuid
          name: project_uuid
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: CheckpointAnnotations
              type: object
              properties:
                tag:
                  title: Tag
                  type: string
                message:
                  title: Message
                  type: string
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1repos~1projects~1%7Bproject_uuid%7D~1checkpoints/post/responses/201/content/application~1json/schema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1repos~1projects/get/responses/422/content/application~1json/schema'
  '/v0/repos/projects/{project_uuid}/checkpoints/{ref_id}:checkout':
    post:
      tags:
        - repository
      summary: Checkout
      description: |-
        Affect current working copy of the project, i.e. get_project will now return
        the check out
      operationId: simcore_service_webserver.version_control._rest_handlers._checkout_handler
      parameters:
        - description: 'A repository ref (commit, tag or branch)'
          required: true
          schema:
            title: Ref Id
            anyOf:
              - type: string
                format: uuid
              - type: string
            description: 'A repository ref (commit, tag or branch)'
          name: ref_id
          in: path
        - description: Project unique identifier
          required: true
          schema:
            title: Project Uuid
            type: string
            description: Project unique identifier
            format: uuid
          name: project_uuid
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1repos~1projects~1%7Bproject_uuid%7D~1checkpoints/post/responses/201/content/application~1json/schema'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1repos~1projects/get/responses/422/content/application~1json/schema'
  '/v0/repos/projects/{project_uuid}/checkpoints/{ref_id}/workbench/view':
    get:
      tags:
        - repository
      summary: View Project Workbench
      description: Returns a view of the workbench for a given project's version
      operationId: simcore_service_webserver.version_control._rest_handlers._view_project_workbench_handler
      parameters:
        - description: 'A repository ref (commit, tag or branch)'
          required: true
          schema:
            title: Ref Id
            anyOf:
              - type: string
                format: uuid
              - type: string
            description: 'A repository ref (commit, tag or branch)'
          name: ref_id
          in: path
        - description: Project unique identifier
          required: true
          schema:
            title: Project Uuid
            type: string
            description: Project unique identifier
            format: uuid
          name: project_uuid
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[WorkbenchView]'
                type: object
                properties:
                  data:
                    title: WorkbenchView
                    type: object
                    properties:
                      workbench:
                        title: Workbench
                        type: object
                        additionalProperties:
                          title: Node
                          required:
                            - key
                            - version
                            - label
                            - inputs
                            - outputs
                          type: object
                          properties:
                            key:
                              title: Key
                              type: string
                            version:
                              title: Version
                              pattern: \d+\.\d+\.\d+
                              type: string
                            label:
                              title: Label
                              type: string
                            inputs:
                              title: Inputs
                              type: object
                            outputs:
                              title: Outputs
                              type: object
                        default: {}
                      ui:
                        title: Ui
                        type: object
                        default: {}
                    description: A view (i.e. read-only and visual) of the project's workbench
                  error:
                    $ref: '#/paths/~1v0~1repos~1projects~1%7Bproject_uuid%7D~1checkpoints/post/responses/201/content/application~1json/schema/properties/error'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1repos~1projects/get/responses/422/content/application~1json/schema'
  /v0/activity/status:
    get:
      operationId: get_status
      tags:
        - activity
      responses:
        '200':
          description: 'Object containing queuing, CPU and Memory usage/limits information of services'
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    additionalProperties: true
                    type: object
                    properties:
                      stats:
                        type: object
                        properties:
                          cpuUsage:
                            type: number
                            minimum: 0
                          memoryUsage:
                            type: number
                      limits:
                        type: object
                        properties:
                          cpus:
                            type: number
                          mem:
                            type: number
                      queued:
                        type: boolean
                  error:
                    nullable: true
                    default: null
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  /v0/tags:
    get:
      tags:
        - tag
      summary: List Tags
      operationId: list_tags
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[list[simcore_service_webserver.tags._handlers.TagGet]]'
                type: object
                properties:
                  data:
                    title: Data
                    type: array
                    items:
                      $ref: '#/paths/~1v0~1tags/post/responses/200/content/application~1json/schema/properties/data'
                  error:
                    title: Error
    post:
      tags:
        - tag
      summary: Create Tag
      operationId: create_tag
      requestBody:
        content:
          application/json:
            schema:
              title: TagCreate
              required:
                - name
                - color
              type: object
              properties:
                name:
                  title: Name
                  type: string
                description:
                  title: Description
                  type: string
                color:
                  title: Color
                  pattern: '^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$'
                  type: string
              additionalProperties: false
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[TagGet]'
                type: object
                properties:
                  data:
                    title: TagGet
                    required:
                      - id
                      - name
                      - color
                      - accessRights
                    type: object
                    properties:
                      id:
                        title: Id
                        exclusiveMinimum: true
                        type: integer
                        minimum: 0
                      name:
                        title: Name
                        type: string
                      description:
                        title: Description
                        type: string
                      color:
                        title: Color
                        type: string
                      accessRights:
                        title: TagAccessRights
                        required:
                          - read
                          - write
                          - delete
                        type: object
                        properties:
                          read:
                            title: Read
                            type: boolean
                          write:
                            title: Write
                            type: boolean
                          delete:
                            title: Delete
                            type: boolean
                  error:
                    title: Error
  '/v0/tags/{tag_id}':
    delete:
      tags:
        - tag
      summary: Delete Tag
      operationId: delete_tag
      parameters:
        - required: true
          schema:
            title: Tag Id
            type: integer
          name: tag_id
          in: path
      responses:
        '204':
          description: Successful Response
    patch:
      tags:
        - tag
      summary: Update Tag
      operationId: update_tag
      parameters:
        - required: true
          schema:
            title: Tag Id
            type: integer
          name: tag_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              title: TagUpdate
              type: object
              properties:
                name:
                  title: Name
                  type: string
                description:
                  title: Description
                  type: string
                color:
                  title: Color
                  pattern: '^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$'
                  type: string
              additionalProperties: false
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1tags/post/responses/200/content/application~1json/schema'
  /v0/wallets:
    get:
      tags:
        - wallets
      summary: List Wallets
      operationId: list_wallets
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        wallet_id:
                          type: integer
                          exclusiveMinimum: true
                          title: Wallet Id
                          minimum: 0
                        name:
                          type: string
                          title: Name
                        description:
                          type: string
                          title: Description
                        owner:
                          type: integer
                          exclusiveMinimum: true
                          title: Owner
                          minimum: 0
                        thumbnail:
                          type: string
                          title: Thumbnail
                        status:
                          $ref: '#/paths/~1v0~1wallets~1%7Bwallet_id%7D/put/requestBody/content/application~1json/schema/properties/status'
                        created:
                          type: string
                          format: date-time
                          title: Created
                        modified:
                          type: string
                          format: date-time
                          title: Modified
                        available_credits:
                          type: number
                          title: Available Credits
                      type: object
                      required:
                        - wallet_id
                        - name
                        - owner
                        - status
                        - created
                        - modified
                        - available_credits
                      title: WalletGetWithAvailableCredits
                    type: array
                    title: Data
                  error:
                    title: Error
                type: object
                title: 'Envelope[list[models_library.api_schemas_webserver.wallets.WalletGetWithAvailableCredits]]'
    post:
      tags:
        - wallets
      summary: Create Wallet
      operationId: create_wallet
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  title: Name
                description:
                  type: string
                  title: Description
                thumbnail:
                  type: string
                  title: Thumbnail
              additionalProperties: false
              type: object
              required:
                - name
              title: _CreateWalletBodyParams
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      wallet_id:
                        type: integer
                        exclusiveMinimum: true
                        title: Wallet Id
                        minimum: 0
                      name:
                        type: string
                        title: Name
                      description:
                        type: string
                        title: Description
                      owner:
                        type: integer
                        exclusiveMinimum: true
                        title: Owner
                        minimum: 0
                      thumbnail:
                        type: string
                        title: Thumbnail
                      status:
                        $ref: '#/paths/~1v0~1wallets~1%7Bwallet_id%7D/put/requestBody/content/application~1json/schema/properties/status'
                      created:
                        type: string
                        format: date-time
                        title: Created
                      modified:
                        type: string
                        format: date-time
                        title: Modified
                    type: object
                    required:
                      - wallet_id
                      - name
                      - owner
                      - status
                      - created
                      - modified
                    title: WalletGet
                  error:
                    title: Error
                type: object
                title: 'Envelope[WalletGet]'
  '/v0/wallets/{wallet_id}':
    put:
      tags:
        - wallets
      summary: Update Wallet
      operationId: update_wallet
      parameters:
        - required: true
          schema:
            type: integer
            exclusiveMinimum: true
            title: Wallet Id
            minimum: 0
          name: wallet_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  title: Name
                description:
                  type: string
                  title: Description
                thumbnail:
                  type: string
                  title: Thumbnail
                status:
                  type: string
                  enum:
                    - ACTIVE
                    - INACTIVE
                  title: WalletStatus
                  description: An enumeration.
              additionalProperties: false
              type: object
              required:
                - name
                - description
                - thumbnail
                - status
              title: _PutWalletBodyParams
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1wallets/post/responses/201/content/application~1json/schema'
  '/v0/wallets/{wallet_id}/groups':
    get:
      tags:
        - wallets
      summary: List Wallet Groups
      operationId: list_wallet_groups
      parameters:
        - required: true
          schema:
            type: integer
            exclusiveMinimum: true
            title: Wallet Id
            minimum: 0
          name: wallet_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      $ref: '#/paths/~1v0~1wallets~1%7Bwallet_id%7D~1groups~1%7Bgroup_id%7D/put/responses/200/content/application~1json/schema/properties/data'
                    type: array
                    title: Data
                  error:
                    title: Error
                type: object
                title: 'Envelope[list[simcore_service_webserver.wallets._groups_api.WalletGroupGet]]'
  '/v0/wallets/{wallet_id}/groups/{group_id}':
    put:
      tags:
        - wallets
      summary: Update Wallet Group
      operationId: update_wallet_group
      parameters:
        - required: true
          schema:
            type: integer
            exclusiveMinimum: true
            title: Wallet Id
            minimum: 0
          name: wallet_id
          in: path
        - required: true
          schema:
            type: integer
            exclusiveMinimum: true
            title: Group Id
            minimum: 0
          name: group_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              properties:
                read:
                  type: boolean
                  title: Read
                write:
                  type: boolean
                  title: Write
                delete:
                  type: boolean
                  title: Delete
              additionalProperties: false
              type: object
              required:
                - read
                - write
                - delete
              title: _WalletsGroupsBodyParams
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                properties:
                  data:
                    properties:
                      gid:
                        type: integer
                        exclusiveMinimum: true
                        title: Gid
                        minimum: 0
                      read:
                        type: boolean
                        title: Read
                      write:
                        type: boolean
                        title: Write
                      delete:
                        type: boolean
                        title: Delete
                      created:
                        type: string
                        format: date-time
                        title: Created
                      modified:
                        type: string
                        format: date-time
                        title: Modified
                    type: object
                    required:
                      - gid
                      - read
                      - write
                      - delete
                      - created
                      - modified
                    title: WalletGroupGet
                  error:
                    title: Error
                type: object
                title: 'Envelope[WalletGroupGet]'
    post:
      tags:
        - wallets
      summary: Create Wallet Group
      operationId: create_wallet_group
      parameters:
        - required: true
          schema:
            type: integer
            exclusiveMinimum: true
            title: Wallet Id
            minimum: 0
          name: wallet_id
          in: path
        - required: true
          schema:
            type: integer
            exclusiveMinimum: true
            title: Group Id
            minimum: 0
          name: group_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/paths/~1v0~1wallets~1%7Bwallet_id%7D~1groups~1%7Bgroup_id%7D/put/requestBody/content/application~1json/schema'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1wallets~1%7Bwallet_id%7D~1groups~1%7Bgroup_id%7D/put/responses/200/content/application~1json/schema'
    delete:
      tags:
        - wallets
      summary: Delete Wallet Group
      operationId: delete_wallet_group
      parameters:
        - required: true
          schema:
            type: integer
            exclusiveMinimum: true
            title: Wallet Id
            minimum: 0
          name: wallet_id
          in: path
        - required: true
          schema:
            type: integer
            exclusiveMinimum: true
            title: Group Id
            minimum: 0
          name: group_id
          in: path
      responses:
        '204':
          description: Successful Response
  /v0/resource-usage/containers:
    get:
      tags:
        - usage
      summary: Retrieve containers that were running for a user and product taken from context.
      operationId: list_resource_usage_containers
      parameters:
        - required: false
          schema:
            type: integer
            title: Limit
            default: 20
          name: limit
          in: query
        - required: false
          schema:
            type: integer
            minimum: 0
            title: Offset
            default: 0
          name: offset
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                properties:
                  data:
                    items:
                      properties:
                        project_uuid:
                          type: string
                          format: uuid
                          title: Project Uuid
                        project_name:
                          type: string
                          title: Project Name
                        node_uuid:
                          type: string
                          format: uuid
                          title: Node Uuid
                        node_label:
                          type: string
                          title: Node Label
                        service_key:
                          type: string
                          pattern: '^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$'
                          title: Service Key
                        service_version:
                          type: string
                          pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                          title: Service Version
                        start_time:
                          type: string
                          format: date-time
                          title: Start Time
                        duration:
                          type: number
                          title: Duration
                        processors:
                          type: number
                          title: Processors
                        core_hours:
                          type: number
                          title: Core Hours
                        status:
                          type: string
                          enum:
                            - running
                            - finished
                          title: ContainerStatus
                          description: An enumeration.
                      type: object
                      required:
                        - project_uuid
                        - node_uuid
                        - service_key
                        - service_version
                        - start_time
                        - duration
                        - processors
                        - core_hours
                        - status
                      title: ContainerGet
                    type: array
                    title: Data
                  error:
                    title: Error
                type: object
                title: 'Envelope[list[models_library.api_schemas_webserver.resource_usage.ContainerGet]]'
  /v0/publications/service-submission:
    post:
      tags:
        - publication
      summary: Submits a new service candidate
      operationId: service_submission
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - metadata
              properties:
                metadata:
                  type: string
                  format: binary
                attachment:
                  type: string
                  format: binary
      responses:
        '204':
          description: Submission has been registered
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  /v0/catalog/dags:
    get:
      tags:
        - catalog
      operationId: list_catalog_dags
      responses:
        '200':
          description: List of catalog dags
        '422':
          description: Validation Error
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    post:
      tags:
        - catalog
      summary: Creates a new dag in catalog
      operationId: create_catalog_dag
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '201':
          description: The dag was successfully created
        '422':
          description: Validation Error
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/catalog/dags/{dag_id}':
    parameters:
      - in: path
        name: dag_id
        required: true
        schema:
          title: Dag Id
          type: integer
    put:
      tags:
        - catalog
      summary: Replaces a dag in catalog
      operationId: replace_catalog_dag
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: The dag was replaced in catalog
        '422':
          description: Validation Error
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    delete:
      tags:
        - catalog
      summary: Deletes an existing dag
      operationId: delete_catalog_dag
      responses:
        '204':
          description: Successfully deleted
        '422':
          description: Validation Error
  /v0/catalog/services:
    get:
      tags:
        - catalog
      summary: List Services
      operationId: list_services_handler
      responses:
        '200':
          description: Returns list of services from the catalog
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/catalog/services/{service_key}/{service_version}':
    parameters:
      - in: path
        name: service_key
        required: true
        schema:
          title: Service key
          type: string
          pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
      - in: path
        name: service_version
        required: true
        schema:
          title: Service version
          type: string
          pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
    get:
      tags:
        - catalog
      summary: Get Service
      operationId: get_service_handler
      responses:
        '200':
          description: Returns service
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    patch:
      tags:
        - catalog
      summary: Update Service
      operationId: update_service_handler
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: Returns modified service
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/catalog/services/{service_key}/{service_version}/inputs':
    get:
      tags:
        - catalog
      operationId: list_service_inputs_handler
      parameters:
        - in: path
          name: service_key
          required: true
          schema:
            pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
            title: Service Key
            type: string
        - in: path
          name: service_version
          required: true
          schema:
            pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
            title: Service Version
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                description: Metadata on a service input port
                example:
                  defaultValue: 0
                  description: Time to wait before completion
                  displayOrder: 2
                  keyId: input_2
                  label: Sleep Time
                  type: number
                  unit: second
                  unitLong: seconds
                  unitShort: sec
                  widget:
                    details:
                      minHeight: 1
                    type: TextArea
                properties:
                  defaultValue:
                    anyOf:
                      - type: boolean
                      - type: integer
                      - type: number
                      - type: string
                    title: Defaultvalue
                  description:
                    description: description of the property
                    example: Age in seconds since 1970
                    title: Description
                    type: string
                  displayOrder:
                    description: use this to numerically sort the properties for display
                    title: Displayorder
                    type: number
                  fileToKeyMap:
                    description: Place the data associated with the named keys in files
                    title: Filetokeymap
                    type: object
                  keyId:
                    description: Unique name identifier for this input
                    pattern: '^[-_a-zA-Z0-9]+$'
                    title: Keyid
                    type: string
                  label:
                    description: short name for the property
                    example: Age
                    title: Label
                    type: string
                  type:
                    description: data type expected on this input glob matching for data type is allowed
                    pattern: '^(number|integer|boolean|string|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$'
                    title: Type
                    type: string
                  unit:
                    description: 'Units, when it refers to a physical quantity'
                    title: Unit
                    type: string
                  unitLong:
                    description: 'Long name of the unit, if available'
                    title: Unitlong
                    type: string
                  unitShort:
                    description: 'Short name for the unit, if available'
                    title: Unitshort
                    type: string
                  widget:
                    allOf:
                      - additionalProperties: false
                        properties:
                          details:
                            anyOf:
                              - additionalProperties: false
                                properties:
                                  minHeight:
                                    description: minimum Height of the textarea
                                    x-exclusiveMinimum: 0
                                    title: Minheight
                                    type: integer
                                required:
                                  - minHeight
                                title: TextArea
                                type: object
                              - additionalProperties: false
                                properties:
                                  structure:
                                    items:
                                      additionalProperties: false
                                      properties:
                                        key:
                                          anyOf:
                                            - type: string
                                            - type: boolean
                                            - type: number
                                          title: Key
                                        label:
                                          title: Label
                                          type: string
                                      required:
                                        - key
                                        - label
                                      title: Structure
                                      type: object
                                    minItems: 1
                                    title: Structure
                                    type: array
                                required:
                                  - structure
                                title: SelectBox
                                type: object
                            title: Details
                          type:
                            allOf:
                              - description: An enumeration.
                                enum:
                                  - TextArea
                                  - SelectBox
                                title: WidgetType
                                type: string
                            description: type of the property
                        required:
                          - type
                          - details
                        title: Widget
                        type: object
                    description: custom widget to use instead of the default one determined from the data-type
                    title: Widget
                required:
                  - displayOrder
                  - label
                  - description
                  - type
                  - keyId
                title: ServiceInputApiOut
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                properties:
                  detail:
                    items:
                      properties:
                        loc:
                          items:
                            type: string
                          title: Location
                          type: array
                        msg:
                          title: Message
                          type: string
                        type:
                          title: Error Type
                          type: string
                      required:
                        - loc
                        - msg
                        - type
                      title: ValidationError
                      type: object
                    title: Detail
                    type: array
                title: HTTPValidationError
                type: object
          description: Validation Error
      summary: List Service Inputs
  '/v0/catalog/services/{service_key}/{service_version}/inputs/{input_key}':
    get:
      tags:
        - catalog
      operationId: get_service_input_handler
      parameters:
        - in: path
          name: service_key
          required: true
          schema:
            pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
            title: Service Key
            type: string
        - in: path
          name: service_version
          required: true
          schema:
            pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
            title: Service Version
            type: string
        - in: path
          name: input_key
          required: true
          schema:
            pattern: '^[-_a-zA-Z0-9]+$'
            title: Input Key
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1catalog~1services~1%7Bservice_key%7D~1%7Bservice_version%7D~1inputs/get/responses/200/content/application~1json/schema'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1catalog~1services~1%7Bservice_key%7D~1%7Bservice_version%7D~1inputs/get/responses/422/content/application~1json/schema'
          description: Validation Error
      summary: Get Service Input
  '/v0/catalog/services/{service_key}/{service_version}/inputs:match':
    get:
      tags:
        - catalog
      description: 'Filters inputs of this service that match a given service output. Returns compatible input ports of the service, provided an output port of a connected node.'
      operationId: get_compatible_inputs_given_source_output_handler
      parameters:
        - in: path
          name: service_key
          required: true
          schema:
            pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
            title: Service Key
            type: string
        - in: path
          name: service_version
          required: true
          schema:
            pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
            title: Service Version
            type: string
        - in: query
          name: fromService
          required: true
          schema:
            pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
            title: Fromservice
            type: string
        - in: query
          name: fromVersion
          required: true
          schema:
            pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
            title: Fromversion
            type: string
        - in: query
          name: fromOutput
          required: true
          schema:
            pattern: '^[-_a-zA-Z0-9]+$'
            title: Fromoutput
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  pattern: '^[-_a-zA-Z0-9]+$'
                  type: string
                title: Response Get Compatible Inputs Given Source Output Catalog Services  Service Key   Service Version  Inputs Match Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1catalog~1services~1%7Bservice_key%7D~1%7Bservice_version%7D~1inputs/get/responses/422/content/application~1json/schema'
          description: Validation Error
      summary: Get Compatible Inputs Given Source Output
  '/v0/catalog/services/{service_key}/{service_version}/outputs':
    get:
      tags:
        - catalog
      operationId: list_service_outputs_handler
      parameters:
        - in: path
          name: service_key
          required: true
          schema:
            pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
            title: Service Key
            type: string
        - in: path
          name: service_version
          required: true
          schema:
            pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
            title: Service Version
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/paths/~1v0~1catalog~1services~1%7Bservice_key%7D~1%7Bservice_version%7D~1outputs~1%7Boutput_key%7D/get/responses/200/content/application~1json/schema'
                title: Response List Service Outputs Catalog Services  Service Key   Service Version  Outputs Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1catalog~1services~1%7Bservice_key%7D~1%7Bservice_version%7D~1inputs/get/responses/422/content/application~1json/schema'
          description: Validation Error
      summary: List Service Outputs
  '/v0/catalog/services/{service_key}/{service_version}/outputs/{output_key}':
    get:
      tags:
        - catalog
      operationId: get_service_output_handler
      parameters:
        - in: path
          name: service_key
          required: true
          schema:
            pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
            title: Service Key
            type: string
        - in: path
          name: service_version
          required: true
          schema:
            pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
            title: Service Version
            type: string
        - in: path
          name: output_key
          required: true
          schema:
            pattern: '^[-_a-zA-Z0-9]+$'
            title: Output Key
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: false
                description: Metadata on a service input or output port
                example:
                  defaultValue: 0
                  description: Time to wait before completion
                  displayOrder: 2
                  keyId: input_2
                  label: Sleep Time
                  type: number
                  unit: second
                  unitLong: seconds
                  unitShort: sec
                  widget:
                    details:
                      minHeight: 1
                    type: TextArea
                properties:
                  defaultValue:
                    anyOf:
                      - type: boolean
                      - type: integer
                      - type: number
                      - type: string
                    title: Defaultvalue
                  description:
                    description: description of the property
                    example: Age in seconds since 1970
                    title: Description
                    type: string
                  displayOrder:
                    description: use this to numerically sort the properties for display
                    title: Displayorder
                    type: number
                  fileToKeyMap:
                    description: Place the data associated with the named keys in files
                    title: Filetokeymap
                    type: object
                  keyId:
                    description: Unique name identifier for this input
                    pattern: '^[-_a-zA-Z0-9]+$'
                    title: Keyid
                    type: string
                  label:
                    description: short name for the property
                    example: Age
                    title: Label
                    type: string
                  type:
                    description: data type expected on this input glob matching for data type is allowed
                    pattern: '^(number|integer|boolean|string|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$'
                    title: Type
                    type: string
                  unit:
                    description: 'Units, when it refers to a physical quantity'
                    title: Unit
                    type: string
                  unitLong:
                    description: 'Long name of the unit, if available'
                    title: Unitlong
                    type: string
                  unitShort:
                    description: 'Short name for the unit, if available'
                    title: Unitshort
                    type: string
                  widget:
                    allOf:
                      - $ref: '#/paths/~1v0~1catalog~1services~1%7Bservice_key%7D~1%7Bservice_version%7D~1inputs/get/responses/200/content/application~1json/schema/properties/widget/allOf/0'
                    deprecated: true
                    description: custom widget to use instead of the default one determined from the data-type
                    title: Widget
                required:
                  - displayOrder
                  - label
                  - description
                  - type
                  - keyId
                title: ServiceOutputApiOut
                type: object
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1catalog~1services~1%7Bservice_key%7D~1%7Bservice_version%7D~1inputs/get/responses/422/content/application~1json/schema'
          description: Validation Error
      summary: Get Service Output
  '/v0/catalog/services/{service_key}/{service_version}/outputs:match':
    get:
      tags:
        - catalog
      description: Filters outputs of this service that match a given service input. Returns compatible output port of a connected node for a given input
      operationId: get_compatible_outputs_given_target_input_handler
      parameters:
        - in: path
          name: service_key
          required: true
          schema:
            pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
            title: Service Key
            type: string
        - in: path
          name: service_version
          required: true
          schema:
            pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
            title: Service Version
            type: string
        - in: query
          name: toService
          required: true
          schema:
            pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
            title: Toservice
            type: string
        - in: query
          name: toVersion
          required: true
          schema:
            pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
            title: Toversion
            type: string
        - in: query
          name: toInput
          required: true
          schema:
            pattern: '^[-_a-zA-Z0-9]+$'
            title: Toinput
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  pattern: '^[-_a-zA-Z0-9]+$'
                  type: string
                title: Response Get Compatible Outputs Given Target Input Catalog Services  Service Key   Service Version  Outputs Match Get
                type: array
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1catalog~1services~1%7Bservice_key%7D~1%7Bservice_version%7D~1inputs/get/responses/422/content/application~1json/schema'
          description: Validation Error
      summary: Get Compatible Outputs Given Target Input
  '/v0/catalog/services/{service_key}/{service_version}/resources':
    get:
      tags:
        - catalog
      description: Returns the service default resources
      operationId: get_service_resources_handler
      parameters:
        - in: path
          name: service_key
          required: true
          schema:
            pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
            title: Service Key
            type: string
        - in: path
          name: service_version
          required: true
          schema:
            pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
            title: Service Version
            type: string
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1projects~1%7Bproject_id%7D~1nodes~1%7Bnode_id%7D~1resources/get/responses/200/content/application~1json/schema'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/clusters:ping':
    post:
      summary: test connectivity with cluster
      operationId: ping_cluster_handler
      tags:
        - cluster
      requestBody:
        required: true
        description: the cluster endpoint/authentication to test
        content:
          application/json:
            schema:
              type: object
              properties:
                endpoint:
                  type: string
                  minLength: 1
                  maxLength: 65536
                authentication:
                  description: Dask gateway authentication
                  anyOf:
                    - $ref: '#/paths/~1v0~1clusters/post/requestBody/content/application~1json/schema/properties/authentication/anyOf/0'
                    - $ref: '#/paths/~1v0~1clusters/post/requestBody/content/application~1json/schema/properties/authentication/anyOf/1'
                    - $ref: '#/paths/~1v0~1clusters/post/requestBody/content/application~1json/schema/properties/authentication/anyOf/2'
              required:
                - endpoint
                - authentication
              additionalProperties: false
      responses:
        '204':
          description: connectivity is OK
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  /v0/clusters:
    get:
      summary: List my clusters
      operationId: list_clusters_handler
      tags:
        - cluster
      responses:
        '200':
          description: list of the clusters I have access to
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/paths/~1v0~1clusters/post/responses/201/content/application~1json/schema/properties/data'
                  error:
                    nullable: true
                    default: null
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    post:
      summary: Create a new cluster
      operationId: create_cluster_handler
      tags:
        - cluster
      requestBody:
        required: true
        description: the cluster to create
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: the cluster name
                  type: string
                description:
                  description: the cluster description
                  type: string
                type:
                  description: the cluster type
                  type: string
                  enum:
                    - ON_PREMISE
                    - AWS
                thumbnail:
                  type: string
                endpoint:
                  type: string
                  minLength: 1
                  maxLength: 65536
                authentication:
                  description: Dask gateway authentication
                  anyOf:
                    - type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - simple
                          default: simple
                        username:
                          type: string
                        password:
                          type: string
                          writeOnly: true
                      required:
                        - username
                        - password
                      additionalProperties: false
                    - type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - kerberos
                          default: kerberos
                      additionalProperties: false
                    - type: object
                      properties:
                        type:
                          type: string
                          enum:
                            - jupyterhub
                          default: jupyterhub
                        api_token:
                          type: string
                      required:
                        - api_token
                      additionalProperties: false
              required:
                - name
                - type
                - endpoint
                - authentication
              additionalProperties: false
      responses:
        '201':
          description: cluster created
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        description: the cluster id
                        type: integer
                        minimum: 1
                      name:
                        description: the cluster name
                        type: string
                      description:
                        description: the cluster description
                        type: string
                      type:
                        description: the cluster type
                        type: string
                        enum:
                          - ON_PREMISE
                          - AWS
                      owner:
                        description: the cluster owner group
                        type: integer
                        minimum: 1
                      thumbnail:
                        type: string
                        format: uri
                      endpoint:
                        type: string
                        minLength: 1
                        maxLength: 65536
                      authentication:
                        description: Dask gateway authentication
                        anyOf:
                          - $ref: '#/paths/~1v0~1clusters/post/requestBody/content/application~1json/schema/properties/authentication/anyOf/0'
                          - $ref: '#/paths/~1v0~1clusters/post/requestBody/content/application~1json/schema/properties/authentication/anyOf/1'
                          - $ref: '#/paths/~1v0~1clusters/post/requestBody/content/application~1json/schema/properties/authentication/anyOf/2'
                      accessRights:
                        type: object
                        description: object containing the GroupID as key and read/write/execution permissions as value
                        x-patternProperties:
                          ^\S+$:
                            $ref: '#/paths/~1v0~1clusters~1%7Bcluster_id%7D/patch/requestBody/content/application~1json/schema/properties/accessRights/x-patternProperties/%5E%5CS%2B%24'
                    required:
                      - id
                      - name
                      - accessRights
                      - endpoint
                      - authentication
                    additionalProperties: false
                    example:
                      - id: 1
                        name: AWS cluster
                        type: AWS
                        endpoint: 'https://registry.osparc-development.fake.dev'
                        authentication:
                          type: simple
                          username: someuser
                          password: somepassword
                        owner: 2
                        accessRights:
                          '2':
                            read: true
                            write: true
                            delete: true
                  error:
                    nullable: true
                    default: null
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/clusters/{cluster_id}':
    parameters:
      - name: cluster_id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - cluster
      summary: Gets one cluster
      operationId: get_cluster_handler
      responses:
        '200':
          description: got cluster
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1clusters/post/responses/201/content/application~1json/schema'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    patch:
      summary: Update one cluster
      operationId: update_cluster_handler
      tags:
        - cluster
      requestBody:
        required: true
        description: the cluster to update
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  description: the cluster name
                  type: string
                description:
                  description: the cluster description
                  type: string
                type:
                  description: the cluster type
                  type: string
                  enum:
                    - ON_PREMISE
                    - AWS
                owner:
                  description: the cluster owner group
                  type: integer
                  minimum: 1
                thumbnail:
                  type: string
                endpoint:
                  type: string
                  minLength: 1
                  maxLength: 65536
                authentication:
                  description: Dask gateway authentication
                  anyOf:
                    - $ref: '#/paths/~1v0~1clusters/post/requestBody/content/application~1json/schema/properties/authentication/anyOf/0'
                    - $ref: '#/paths/~1v0~1clusters/post/requestBody/content/application~1json/schema/properties/authentication/anyOf/1'
                    - $ref: '#/paths/~1v0~1clusters/post/requestBody/content/application~1json/schema/properties/authentication/anyOf/2'
                accessRights:
                  type: object
                  description: object containing the GroupID as key and read/write/execution permissions as value
                  x-patternProperties:
                    ^\S+$:
                      description: defines acesss rights for the cluster
                      type: object
                      properties:
                        read:
                          type: boolean
                          description: allows usage of the cluster
                        write:
                          type: boolean
                          description: allows modification of the cluster
                        delete:
                          type: boolean
                          description: allows deletion of the cluster
                      required:
                        - read
                        - write
                        - delete
              additionalProperties: false
      responses:
        '200':
          description: the modified cluster
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1clusters/post/responses/201/content/application~1json/schema'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    delete:
      tags:
        - cluster
      summary: Deletes one cluster
      operationId: delete_cluster_handler
      responses:
        '204':
          description: cluster has been successfully deleted
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/clusters/{cluster_id}:ping':
    parameters:
      - name: cluster_id
        in: path
        required: true
        schema:
          type: string
    post:
      summary: test connectivity with cluster
      operationId: ping_cluster_cluster_id_handler
      tags:
        - cluster
      responses:
        '204':
          description: connectivity is OK
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/clusters/{cluster_id}/details':
    parameters:
      - name: cluster_id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - cluster
      summary: Gets one cluster details
      operationId: get_cluster_details_handler
      responses:
        '200':
          description: got cluster
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      scheduler:
                        type: object
                        description: contains information about the cluster scheduler
                      cluster:
                        type: object
                        description: contains information about the cluster workers
                      dashboardLink:
                        type: string
                        minLength: 1
                        maxLength: 65536
                        description: contains the link to the cluster dashboard
                    required:
                      - scheduler
                      - cluster
                      - dashboardLink
                  error:
                    nullable: true
                    default: null
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  /v0/tasks:
    get:
      operationId: list_tasks
      tags:
        - tasks
      responses:
        '200':
          description: Returns the list of active tasks (running and/or done)
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      properties:
                        task_id:
                          type: string
                        status_href:
                          type: string
                        result_href:
                          type: string
                      required:
                        - task_id
                        - status_href
                        - result_href
                    error:
                      nullable: true
                      default: null
  '/v0/tasks/{task_id}':
    parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: get_task_status
      tags:
        - tasks
      responses:
        '200':
          description: Returns the task status
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - task_progress
                      - done
                      - started
                    properties:
                      task_progress:
                        type: number
                        minimum: 0
                        maximum: 1
                      done:
                        type: boolean
                      started:
                        type: string
                        pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                        example: '2018-07-01T11:13:43Z'
                  error:
                    nullable: true
                    default: null
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    delete:
      operationId: cancel_and_delete_task
      description: Aborts and remove the task
      tags:
        - tasks
      responses:
        '204':
          description: Task was successfully aborted
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/v0/tasks/{task_id}/result':
    parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: get_task_result
      tags:
        - tasks
      responses:
        2XX:
          description: Retrieve the task result and returns directly its HTTP code
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  /v0/services:
    get:
      tags:
        - nih-sparc
      summary: List Services
      description: Returns a list latest version of services
      operationId: list_services
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[list[simcore_service_webserver.studies_dispatcher._rest_handlers.ServiceGet]]'
                type: object
                properties:
                  data:
                    title: Data
                    type: array
                    items:
                      title: ServiceGet
                      required:
                        - key
                        - title
                        - description
                        - thumbnail
                        - view_url
                      type: object
                      properties:
                        key:
                          title: Key
                          pattern: '^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$'
                          type: string
                          description: Service key ID
                        title:
                          title: Title
                          type: string
                          description: Service name for display
                        description:
                          title: Description
                          type: string
                          description: Long description of the service
                        thumbnail:
                          title: Thumbnail
                          maxLength: 2083
                          minLength: 1
                          type: string
                          description: Url to service thumbnail
                          format: uri
                        file_extensions:
                          title: File Extensions
                          type: array
                          items:
                            type: string
                          description: File extensions that this service can process
                        view_url:
                          title: View Url
                          maxLength: 2083
                          minLength: 1
                          type: string
                          description: Redirection to open a service in osparc (see /view)
                          format: uri
                      example:
                        key: simcore/services/dynamic/sim4life
                        title: Sim4Life Mattermost
                        description: It is also sim4life for the web
                        thumbnail: 'https://via.placeholder.com/170x120.png'
                        file_extensions:
                          - smash
                          - h5
                        view_url: 'https://host.com/view?viewer_key=simcore/services/dynamic/raw-graphs&viewer_version=1.2.3'
                  error:
                    title: Error
  /v0/viewers:
    get:
      tags:
        - nih-sparc
      summary: List Viewers
      description: |-
        Lists all publically available viewers

        Notice that this might contain multiple services for the same filetype

        If file_type is provided, then it filters viewer for that filetype
      operationId: list_viewers
      parameters:
        - required: false
          schema:
            title: File Type
            type: string
          name: file_type
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: 'Envelope[list[simcore_service_webserver.studies_dispatcher._rest_handlers.Viewer]]'
                type: object
                properties:
                  data:
                    title: Data
                    type: array
                    items:
                      title: Viewer
                      required:
                        - title
                        - file_type
                        - view_url
                      type: object
                      properties:
                        title:
                          title: Title
                          type: string
                          description: Short formatted label with name and version of the viewer
                        file_type:
                          title: File Type
                          type: string
                          description: Identifier for the file type
                        view_url:
                          title: View Url
                          maxLength: 2083
                          minLength: 1
                          type: string
                          description: 'Base url to execute viewer. Needs appending file_size,[file_name] and download_link as query parameters'
                          format: uri
                      description: |-
                        API model for a viewer resource

                        A viewer is a service with an associated filetype.
                        You can think of it as a tuple (filetype, service)

                        The service could consume other filetypes BUT at this
                        interface this is represented in yet another viewer resource

                        For instance, the same service can be in two different viewer resources
                          - viewer1=(JPEG, RawGraph service)
                          - viewer2=(CSV, RawGraph service)

                        A viewer can be dispatched using the view_url and appending the
                  error:
                    title: Error
  /v0/viewers/default:
    get:
      tags:
        - nih-sparc
      summary: List Default Viewers
      description: |-
        Lists the default viewer for each supported filetype

        This was interfaced as a subcollection of viewers because it is a very common use-case

        Only publicaly available viewers

        If file_type is provided, then it filters viewer for that filetype
      operationId: list_default_viewers
      parameters:
        - required: false
          schema:
            title: File Type
            type: string
          name: file_type
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/paths/~1v0~1viewers/get/responses/200/content/application~1json/schema'
  /view:
    get:
      tags:
        - nih-sparc
      summary: Get Redirection To Viewer
      description: Opens a viewer in osparc for data in the NIH-sparc portal
      operationId: get_redirection_to_viewer
      parameters:
        - required: true
          schema:
            title: File Type
            type: string
          name: file_type
          in: query
        - required: true
          schema:
            title: Viewer Key
            pattern: '^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$'
            type: string
          name: viewer_key
          in: query
        - required: true
          schema:
            title: File Size
            exclusiveMinimum: true
            type: integer
            minimum: 0
          name: file_size
          in: query
        - required: true
          schema:
            title: Download Link
            maxLength: 2083
            minLength: 1
            type: string
            format: uri
          name: download_link
          in: query
        - required: false
          schema:
            title: File Name
            type: string
            default: unknown
          name: file_name
          in: query
      requestBody:
        content:
          application/json:
            schema:
              title: ServiceKeyVersion
              required:
                - key
                - version
              type: object
              properties:
                key:
                  title: Key
                  pattern: '^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$'
                  type: string
                  description: distinctive name for the node based on the docker registry path
                version:
                  title: Version
                  pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                  type: string
                  description: service version number
              description: This pair uniquely identifies a services
        required: true
      responses:
        '302':
          description: Opens osparc and starts viewer for selected data
  '/study/{id}':
    get:
      tags:
        - nih-sparc
      summary: Get Redirection To Study Page
      description: Opens a study published in osparc
      operationId: get_redirection_to_study_page
      parameters:
        - required: true
          schema:
            title: Study Id
            type: string
            format: uuid
          name: id
          in: path
      responses:
        '302':
          description: Opens osparc and opens a copy of publised study
components:
  responses:
    DefaultErrorResponse:
      description: Default http error response body
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              data:
                nullable: true
                default: null
              error:
                type: object
                nullable: true
                properties:
                  logs:
                    description: log messages
                    type: array
                    items:
                      type: object
                      properties:
                        level:
                          description: log level
                          type: string
                          default: INFO
                          enum:
                            - DEBUG
                            - WARNING
                            - INFO
                            - ERROR
                        message:
                          description: 'log message. If logger is USER, then it MUST be human readable'
                          type: string
                        logger:
                          description: name of the logger receiving this message
                          type: string
                      required:
                        - message
                      example:
                        message: 'Hi there, Mr user'
                        level: INFO
                        logger: user-logger
                  errors:
                    description: errors metadata
                    type: array
                    items:
                      type: object
                      required:
                        - code
                        - message
                      properties:
                        code:
                          type: string
                          description: Typically the name of the exception that produced it otherwise some known error code
                        message:
                          type: string
                          description: Error message specific to this item
                        resource:
                          type: string
                          description: API resource affected by this error
                        field:
                          type: string
                          description: Specific field within the resource
                  status:
                    description: HTTP error code
                    type: integer
                example:
                  BadRequestError:
                    logs:
                      - message: Requested information is incomplete or malformed
                        level: ERROR
                      - message: Invalid email and password
                        level: ERROR
                        logger: USER
                    errors:
                      - code: InvalidEmail
                        message: Email is malformed
                        field: email
                      - code: UnsavePassword
                        message: Password is not secure
                        field: pasword
                    status: 400
