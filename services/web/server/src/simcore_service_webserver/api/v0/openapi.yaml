openapi: 3.1.0
info:
  title: simcore-service-webserver
  description: Main service with an interface (http-API & websockets) to the web front-end
  version: 0.80.0
servers:
- url: ''
  description: webserver
- url: http://{host}:{port}
  description: development server
  variables:
    host:
      default: localhost
    port:
      default: '8001'
paths:
  /v0/auth/request-account:
    post:
      tags:
      - auth
      summary: Request Product Account
      operationId: request_product_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequestInfo'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/auth/register/invitations:check:
    post:
      tags:
      - auth
      summary: Check Registration Invitation
      description: Check invitation and returns associated email or None
      operationId: auth_check_registration_invitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationCheck'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_InvitationInfo_'
  /v0/auth/register:
    post:
      tags:
      - auth
      summary: Register
      description: User registration
      operationId: auth_register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
  /v0/auth/unregister:
    post:
      tags:
      - auth
      summary: Unregister Account
      operationId: unregister_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnregisterCheck'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
  /v0/auth/verify-phone-number:
    post:
      tags:
      - auth
      summary: Register Phone
      description: user tries to verify phone number for 2 Factor Authentication when
        registering
      operationId: auth_register_phone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPhoneBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_RegisterPhoneNextPage_'
  /v0/auth/validate-code-register:
    post:
      tags:
      - auth
      summary: Phone Confirmation
      description: user enters 2 Factor Authentication code when registering
      operationId: auth_phone_confirmation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneConfirmationBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
  /v0/auth/login:
    post:
      tags:
      - auth
      summary: Login
      description: user logs in
      operationId: auth_login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginBody'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_LoginNextPage_'
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
  /v0/auth/validate-code-login:
    post:
      tags:
      - auth
      summary: Login 2Fa
      description: user enters 2 Factor Authentication code when login in
      operationId: auth_login_2fa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginTwoFactorAuthBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
  /v0/auth/two_factor:resend:
    post:
      tags:
      - auth
      summary: Resend 2Fa Code
      description: Resends 2FA either via email or sms
      operationId: auth_resend_2fa_code
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resend2faBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
  /v0/auth/logout:
    post:
      tags:
      - auth
      summary: Logout
      description: user logout
      operationId: auth_logout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
  /v0/auth:check:
    get:
      tags:
      - auth
      summary: Check Auth
      description: checks whether user request is authenticated
      operationId: check_auth
      responses:
        '204':
          description: Successful Response
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
  /v0/auth/reset-password:
    post:
      tags:
      - auth
      summary: Initiate Reset Password
      operationId: initiate_reset_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
  /v0/auth/reset-password/{code}:
    post:
      tags:
      - auth
      summary: Complete Reset Password
      operationId: complete_reset_password
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
          title: Code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordConfirmation'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '401':
          description: Invalid token code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
  /v0/auth/change-password:
    post:
      tags:
      - auth
      summary: Change Password
      description: logged in user changes password
      operationId: auth_change_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '401':
          description: unauthorized user. Login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
        '409':
          description: mismatch between new and confirmation passwords
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
        '422':
          description: current password is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
  /v0/auth/confirmation/{code}:
    get:
      tags:
      - auth
      summary: Email Confirmation
      description: email link sent to user to confirm an action
      operationId: auth_confirmation
      parameters:
      - name: code
        in: path
        required: true
        schema:
          type: string
          title: Code
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        3XX:
          description: redirection to specific ui application page
  /v0/auth/captcha:
    get:
      tags:
      - auth
      summary: Create Captcha
      operationId: create_captcha
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
            image/png: {}
  /v0/auth/api-keys:
    post:
      tags:
      - auth
      summary: Create Api Key
      description: creates API keys to access public API
      operationId: create_api_key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyCreateRequest'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ApiKeyCreateResponse_'
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
    get:
      tags:
      - auth
      summary: List Api Keys
      description: lists API keys by this user
      operationId: list_api_keys
      parameters:
      - name: includeAutogenerated
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Includeautogenerated
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_ApiKeyGet__'
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
  /v0/auth/api-keys/{api_key_id}:
    get:
      tags:
      - auth
      summary: Get Api Key
      description: returns the API Key with the given ID
      operationId: get_api_key
      parameters:
      - name: api_key_id
        in: path
        required: true
        schema:
          type: string
          minLength: 1
          maxLength: 100
          title: Api Key Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ApiKeyGet_'
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
    delete:
      tags:
      - auth
      summary: Delete Api Key
      description: deletes the API key with the given ID
      operationId: delete_api_key
      parameters:
      - name: api_key_id
        in: path
        required: true
        schema:
          type: string
          minLength: 1
          maxLength: 100
          title: Api Key Id
      responses:
        '204':
          description: Successful Response
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
  /v0/conversations:
    post:
      tags:
      - conversations
      summary: Create Conversation
      operationId: create_conversation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_ConversationsCreateBodyParams'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ConversationRestGet_'
    get:
      tags:
      - conversations
      summary: List Conversations
      operationId: list_conversations
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 50
          minimum: 1
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          default: 0
          title: Offset
      - name: type
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ConversationType'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ConversationRestGet_'
  /v0/conversations/{conversation_id}:
    patch:
      tags:
      - conversations
      summary: Update Conversation
      operationId: update_conversation
      parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Conversation Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationPatch'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ConversationRestGet_'
    delete:
      tags:
      - conversations
      summary: Delete Conversation
      operationId: delete_conversation
      parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Conversation Id
      responses:
        '204':
          description: Successful Response
    get:
      tags:
      - conversations
      summary: Get Conversation
      operationId: get_conversation
      parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Conversation Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ConversationRestGet_'
  /v0/conversations/{conversation_id}/messages:
    post:
      tags:
      - conversations
      summary: Create Conversation Message
      operationId: create_conversation_message
      parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Conversation Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_ConversationMessageCreateBodyParams'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ConversationMessageRestGet_'
    get:
      tags:
      - conversations
      summary: List Conversation Messages
      operationId: list_conversation_messages
      parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Conversation Id
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ConversationMessageRestGet_'
  /v0/conversations/{conversation_id}/messages/{message_id}:
    put:
      tags:
      - conversations
      summary: Update Conversation Message
      operationId: update_conversation_message
      parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Conversation Id
      - name: message_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Message Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationMessagePatch'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ConversationMessageRestGet_'
    delete:
      tags:
      - conversations
      summary: Delete Conversation Message
      operationId: delete_conversation_message
      parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Conversation Id
      - name: message_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Message Id
      responses:
        '204':
          description: Successful Response
    get:
      tags:
      - conversations
      summary: Get Conversation Message
      operationId: get_conversation_message
      parameters:
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Conversation Id
      - name: message_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Message Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ConversationMessageRestGet_'
  /v0/groups:
    get:
      tags:
      - groups
      summary: List Groups
      description: List all groups (organizations, primary, everyone and products)
        I belong to
      operationId: list_groups
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_MyGroupsGet_'
    post:
      tags:
      - groups
      summary: Create Group
      description: Creates an organization group
      operationId: create_group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_GroupGet_'
  /v0/groups/{gid}:
    get:
      tags:
      - groups
      summary: Get Group
      description: Get an organization group
      operationId: get_group
      parameters:
      - name: gid
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_GroupGet_'
    patch:
      tags:
      - groups
      summary: Update Group
      description: Updates organization groups
      operationId: update_group
      parameters:
      - name: gid
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_GroupGet_'
    delete:
      tags:
      - groups
      summary: Delete Group
      description: Deletes organization groups
      operationId: delete_group
      parameters:
      - name: gid
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
      responses:
        '204':
          description: Successful Response
  /v0/groups/{gid}/users:
    get:
      tags:
      - groups
      - users
      summary: Get All Group Users
      description: Gets users in organization or primary groups
      operationId: get_all_group_users
      parameters:
      - name: gid
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_GroupUserGet__'
    post:
      tags:
      - groups
      - users
      summary: Add Group User
      description: Adds a user to an organization group using their username, user
        ID, or email (subject to privacy settings)
      operationId: add_group_user
      parameters:
      - name: gid
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUserAdd'
      responses:
        '204':
          description: Successful Response
  /v0/groups/{gid}/users/{uid}:
    get:
      tags:
      - groups
      - users
      summary: Get Group User
      description: Gets specific user in an organization group
      operationId: get_group_user
      parameters:
      - name: gid
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
      - name: uid
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Uid
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_GroupUserGet_'
    patch:
      tags:
      - groups
      - users
      summary: Update Group User
      description: Updates user (access-rights) to an organization group
      operationId: update_group_user
      parameters:
      - name: gid
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
      - name: uid
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Uid
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUserUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_GroupUserGet_'
    delete:
      tags:
      - groups
      - users
      summary: Delete Group User
      description: Removes a user from an organization group
      operationId: delete_group_user
      parameters:
      - name: gid
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
      - name: uid
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Uid
          minimum: 0
      responses:
        '204':
          description: Successful Response
  /v0/groups/{gid}/classifiers:
    get:
      tags:
      - groups
      summary: Get Group Classifiers
      operationId: get_group_classifiers
      parameters:
      - name: gid
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
      - name: tree_view
        in: query
        required: false
        schema:
          const: std
          type: string
          default: std
          title: Tree View
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_str__Any__'
  /v0/groups/sparc/classifiers/scicrunch-resources/{rrid}:
    get:
      tags:
      - groups
      summary: Get Scicrunch Resource
      operationId: get_scicrunch_resource
      parameters:
      - name: rrid
        in: path
        required: true
        schema:
          type: string
          title: Rrid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ResearchResource_'
    post:
      tags:
      - groups
      summary: Add Scicrunch Resource
      operationId: add_scicrunch_resource
      parameters:
      - name: rrid
        in: path
        required: true
        schema:
          type: string
          title: Rrid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ResearchResource_'
  /v0/groups/sparc/classifiers/scicrunch-resources:search:
    get:
      tags:
      - groups
      summary: Search Scicrunch Resources
      operationId: search_scicrunch_resources
      parameters:
      - name: guess_name
        in: query
        required: true
        schema:
          type: string
          title: Guess Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_ResourceHit__'
  /v0/tags:
    get:
      tags:
      - tags
      summary: List Tags
      operationId: list_tags
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_TagGet__'
    post:
      tags:
      - tags
      summary: Create Tag
      operationId: create_tag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TagGet_'
  /v0/tags/{tag_id}:
    patch:
      tags:
      - tags
      summary: Update Tag
      operationId: update_tag
      parameters:
      - name: tag_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Tag Id
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TagGet_'
    delete:
      tags:
      - tags
      summary: Delete Tag
      operationId: delete_tag
      parameters:
      - name: tag_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Tag Id
          minimum: 0
      responses:
        '204':
          description: Successful Response
  /v0/tags/{tag_id}/groups:
    get:
      tags:
      - tags
      - groups
      summary: List Tag Groups
      description: Lists all groups associated to this tag
      operationId: list_tag_groups
      parameters:
      - name: tag_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Tag Id
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_TagGroupGet__'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
  /v0/tags/{tag_id}/groups/{group_id}:
    post:
      tags:
      - tags
      - groups
      summary: Create Tag Group
      description: Shares tag `tag_id` with an organization or user with `group_id`
        providing access-rights to it
      operationId: create_tag_group
      parameters:
      - name: tag_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Tag Id
          minimum: 0
      - name: group_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Group Id
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagGroupCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TagGet_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
    put:
      tags:
      - tags
      - groups
      summary: Replace Tag Group
      description: Replace access rights on tag for associated organization or user
        with `group_id`
      operationId: replace_tag_group
      parameters:
      - name: tag_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Tag Id
          minimum: 0
      - name: group_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Group Id
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagGroupCreate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_TagGroupGet__'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
    delete:
      tags:
      - tags
      - groups
      summary: Delete Tag Group
      description: Delete access rights on tag to an associated organization or user
        with `group_id`
      operationId: delete_tag_group
      parameters:
      - name: tag_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Tag Id
          minimum: 0
      - name: group_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Group Id
          minimum: 0
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
  /v0/credits-price:
    get:
      tags:
      - products
      summary: Get Current Product Price
      operationId: get_current_product_price
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_CreditPriceGet_'
  /v0/products/{product_name}:
    get:
      tags:
      - products
      - po
      summary: Get Product
      description: 'NOTE: `/products/current` is used to define current project w/o
        naming it'
      operationId: get_product
      parameters:
      - name: product_name
        in: path
        required: true
        schema:
          anyOf:
          - type: string
            minLength: 1
            maxLength: 100
          - const: current
            type: string
          title: Product Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProductGet_'
  /v0/products/current/ui:
    get:
      tags:
      - products
      summary: Get Current Product Ui
      operationId: get_current_product_ui
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProductUIGet_'
  /v0/invitation:generate:
    post:
      tags:
      - products
      - po
      summary: Generate Invitation
      operationId: generate_invitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationGenerate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_InvitationGenerated_'
  /v0/me:
    get:
      tags:
      - users
      summary: Get My Profile
      operationId: get_my_profile
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_MyProfileRestGet_'
    patch:
      tags:
      - users
      summary: Update My Profile
      operationId: update_my_profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MyProfileRestPatch'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/me/phone:register:
    post:
      tags:
      - users
      summary: My Phone Register
      description: Starts the phone registration process
      operationId: my_phone_register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MyPhoneRegister'
        required: true
      responses:
        '202':
          description: Phone registration initiated
          content:
            application/json:
              schema: {}
        '401':
          description: Authentication required
        '403':
          description: Insufficient permissions
        '422':
          description: Invalid phone number format
  /v0/me/phone:resend:
    post:
      tags:
      - users
      summary: My Phone Resend
      description: Resends the phone registration code
      operationId: my_phone_resend
      responses:
        '202':
          description: Phone code resent
          content:
            application/json:
              schema: {}
        '400':
          description: No pending phone registration found
        '401':
          description: Authentication required
        '403':
          description: Insufficient permissions
  /v0/me/phone:confirm:
    post:
      tags:
      - users
      summary: My Phone Confirm
      description: Confirms the phone registration
      operationId: my_phone_confirm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MyPhoneConfirm'
        required: true
      responses:
        '204':
          description: Phone registration confirmed
        '400':
          description: No pending registration or invalid code
        '401':
          description: Authentication required
        '403':
          description: Insufficient permissions
        '422':
          description: Invalid confirmation code format
  /v0/me/preferences/{preference_id}:
    patch:
      tags:
      - users
      summary: Set Frontend Preference
      operationId: set_frontend_preference
      parameters:
      - name: preference_id
        in: path
        required: true
        schema:
          type: string
          title: Preference Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchRequestBody'
      responses:
        '204':
          description: Successful Response
  /v0/me/tokens:
    get:
      tags:
      - users
      summary: List Tokens
      operationId: list_tokens
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_MyTokenGet__'
    post:
      tags:
      - users
      summary: Create Token
      operationId: create_token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MyTokenCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_MyTokenGet_'
  /v0/me/tokens/{service}:
    get:
      tags:
      - users
      summary: Get Token
      operationId: get_token
      parameters:
      - name: service
        in: path
        required: true
        schema:
          type: string
          title: Service
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_MyTokenGet_'
    delete:
      tags:
      - users
      summary: Delete Token
      operationId: delete_token
      parameters:
      - name: service
        in: path
        required: true
        schema:
          type: string
          title: Service
      responses:
        '204':
          description: Successful Response
  /v0/me/notifications:
    get:
      tags:
      - users
      summary: List User Notifications
      operationId: list_user_notifications
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_UserNotification__'
    post:
      tags:
      - users
      summary: Create User Notification
      operationId: create_user_notification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotificationCreate'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/me/notifications/{notification_id}:
    patch:
      tags:
      - users
      summary: Mark Notification As Read
      operationId: mark_notification_as_read
      parameters:
      - name: notification_id
        in: path
        required: true
        schema:
          type: string
          title: Notification Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotificationPatch'
      responses:
        '204':
          description: Successful Response
  /v0/me/permissions:
    get:
      tags:
      - users
      summary: List User Permissions
      operationId: list_user_permissions
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_MyPermissionGet__'
  /v0/me/function-permissions:
    get:
      tags:
      - users
      summary: List User Functions Permissions
      operationId: list_user_functions_permissions
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_MyFunctionPermissionsGet_'
  /v0/users:search:
    post:
      tags:
      - users
      summary: Search Users
      description: Search among users who are publicly visible to the caller (i.e.,
        me) based on their privacy settings.
      operationId: search_users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersSearch'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_UserGet__'
  /v0/admin/user-accounts:
    get:
      tags:
      - users
      - admin
      summary: List Users Accounts
      operationId: list_users_accounts
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: review_status
        in: query
        required: false
        schema:
          anyOf:
          - enum:
            - PENDING
            - REVIEWED
            type: string
          - type: 'null'
          title: Review Status
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_UserAccountGet_'
  /v0/admin/user-accounts:approve:
    post:
      tags:
      - users
      - admin
      summary: Approve User Account
      operationId: approve_user_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccountApprove'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/admin/user-accounts:reject:
    post:
      tags:
      - users
      - admin
      summary: Reject User Account
      operationId: reject_user_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccountReject'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/admin/user-accounts:search:
    get:
      tags:
      - users
      - admin
      summary: Search User Accounts
      operationId: search_user_accounts
      parameters:
      - name: email
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            minLength: 3
            maxLength: 200
            pattern: ^[A-Za-z0-9 ._\*@-]*$
          - type: 'null'
          title: Email
      - name: primary_group_id
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Primary Group Id
      - name: user_name
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            minLength: 3
            maxLength: 200
            pattern: ^[A-Za-z0-9 ._\*@-]*$
          - type: 'null'
          title: User Name
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_UserAccountGet__'
  /v0/admin/user-accounts:pre-register:
    post:
      tags:
      - users
      - admin
      summary: Pre Register User Account
      operationId: pre_register_user_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserAccountRestPreRegister'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_UserAccountGet_'
  /v0/wallets:
    get:
      tags:
      - wallets
      summary: List Wallets
      operationId: list_wallets
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_WalletGetWithAvailableCredits__'
    post:
      tags:
      - wallets
      summary: Create Wallet
      operationId: create_wallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWalletBodyParams'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletGet_'
  /v0/wallets/default:
    get:
      tags:
      - wallets
      summary: Get Default Wallet
      operationId: get_default_wallet
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletGetWithAvailableCredits_'
  /v0/wallets/{wallet_id}:
    get:
      tags:
      - wallets
      summary: Get Wallet
      operationId: get_wallet
      parameters:
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletGetWithAvailableCredits_'
    put:
      tags:
      - wallets
      summary: Update Wallet
      operationId: update_wallet
      parameters:
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutWalletBodyParams'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletGet_'
  /v0/wallets/{wallet_id}/payments:
    post:
      tags:
      - wallets
      summary: Create Payment
      description: Creates payment to wallet `wallet_id`
      operationId: create_payment
      parameters:
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWalletPayment'
      responses:
        '202':
          description: Payment initialized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletPaymentInitiated_'
  /v0/wallets/-/payments:
    get:
      tags:
      - wallets
      summary: List All Payments
      description: Lists all user payments to his/her wallets (only the ones he/she
        created)
      operationId: list_all_payments
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 50
          minimum: 1
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_PaymentTransaction_'
  /v0/wallets/{wallet_id}/payments/{payment_id}/invoice-link:
    get:
      tags:
      - wallets
      summary: Get Payment Invoice Link
      operationId: get_payment_invoice_link
      parameters:
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      - name: payment_id
        in: path
        required: true
        schema:
          type: string
          minLength: 1
          maxLength: 100
          title: Payment Id
      responses:
        '302':
          description: redirection to invoice download link
          content:
            application/json:
              schema: {}
  /v0/wallets/{wallet_id}/payments/{payment_id}:cancel:
    post:
      tags:
      - wallets
      summary: Cancel Payment
      operationId: cancel_payment
      parameters:
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      - name: payment_id
        in: path
        required: true
        schema:
          type: string
          minLength: 1
          maxLength: 100
          title: Payment Id
      responses:
        '204':
          description: Successfully cancelled
  /v0/wallets/{wallet_id}/payments-methods:init:
    post:
      tags:
      - wallets
      summary: Init Creation Of Payment Method
      operationId: init_creation_of_payment_method
      parameters:
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      responses:
        '202':
          description: Successfully initialized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PaymentMethodInitiated_'
  /v0/wallets/{wallet_id}/payments-methods/{payment_method_id}:cancel:
    post:
      tags:
      - wallets
      summary: Cancel Creation Of Payment Method
      operationId: cancel_creation_of_payment_method
      parameters:
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      - name: payment_method_id
        in: path
        required: true
        schema:
          type: string
          minLength: 1
          maxLength: 100
          title: Payment Method Id
      responses:
        '204':
          description: Successfully cancelled
  /v0/wallets/{wallet_id}/payments-methods:
    get:
      tags:
      - wallets
      summary: List Payments Methods
      description: Lists all payments method associated to `wallet_id`
      operationId: list_payments_methods
      parameters:
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_PaymentMethodGet__'
  /v0/wallets/{wallet_id}/payments-methods/{payment_method_id}:
    get:
      tags:
      - wallets
      summary: Get Payment Method
      operationId: get_payment_method
      parameters:
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      - name: payment_method_id
        in: path
        required: true
        schema:
          type: string
          minLength: 1
          maxLength: 100
          title: Payment Method Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PaymentMethodGet_'
    delete:
      tags:
      - wallets
      summary: Delete Payment Method
      operationId: delete_payment_method
      parameters:
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      - name: payment_method_id
        in: path
        required: true
        schema:
          type: string
          minLength: 1
          maxLength: 100
          title: Payment Method Id
      responses:
        '204':
          description: Successfully deleted
  /v0/wallets/{wallet_id}/payments-methods/{payment_method_id}:pay:
    post:
      tags:
      - wallets
      summary: Pay With Payment Method
      operationId: pay_with_payment_method
      parameters:
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      - name: payment_method_id
        in: path
        required: true
        schema:
          type: string
          minLength: 1
          maxLength: 100
          title: Payment Method Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWalletPayment'
      responses:
        '202':
          description: Pay with payment-method
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletPaymentInitiated_'
  /v0/wallets/{wallet_id}/auto-recharge:
    get:
      tags:
      - wallets
      summary: Get Wallet Autorecharge
      operationId: get_wallet_autorecharge
      parameters:
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_GetWalletAutoRecharge_'
    put:
      tags:
      - wallets
      summary: Replace Wallet Autorecharge
      operationId: replace_wallet_autorecharge
      parameters:
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceWalletAutoRecharge'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_GetWalletAutoRecharge_'
  /v0/wallets/{wallet_id}/groups/{group_id}:
    post:
      tags:
      - wallets
      - groups
      summary: Create Wallet Group
      operationId: create_wallet_group
      parameters:
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      - name: group_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Group Id
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_WalletsGroupsBodyParams'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletGroupGet_'
    put:
      tags:
      - wallets
      - groups
      summary: Update Wallet Group
      operationId: update_wallet_group
      parameters:
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      - name: group_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Group Id
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_WalletsGroupsBodyParams'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletGroupGet_'
    delete:
      tags:
      - wallets
      - groups
      summary: Delete Wallet Group
      operationId: delete_wallet_group
      parameters:
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      - name: group_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Group Id
          minimum: 0
      responses:
        '204':
          description: Successful Response
  /v0/wallets/{wallet_id}/groups:
    get:
      tags:
      - wallets
      - groups
      summary: List Wallet Groups
      operationId: list_wallet_groups
      parameters:
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_WalletGroupGet__'
  /v0/activity/status:
    get:
      tags:
      - tasks
      summary: Get Activity Status
      operationId: get_activity_status
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_UUID__Activity__'
  /v0/announcements:
    get:
      tags:
      - announcements
      summary: List Announcements
      operationId: list_announcements
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_Announcement__'
  /v0/catalog/services/-/latest:
    get:
      tags:
      - catalog
      summary: List Services Latest
      operationId: list_services_latest
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 50
          minimum: 1
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_CatalogLatestServiceGet_'
  /v0/catalog/services/{service_key}/{service_version}:
    get:
      tags:
      - catalog
      summary: Get Service
      operationId: get_service
      parameters:
      - name: service_key
        in: path
        required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
      - name: service_version
        in: path
        required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_CatalogServiceGet_'
    patch:
      tags:
      - catalog
      summary: Update Service
      operationId: update_service
      parameters:
      - name: service_key
        in: path
        required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
      - name: service_version
        in: path
        required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CatalogServiceUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_CatalogServiceGet_'
  /v0/catalog/services/{service_key}/{service_version}/inputs:
    get:
      tags:
      - catalog
      summary: List Service Inputs
      operationId: list_service_inputs
      parameters:
      - name: service_key
        in: path
        required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
      - name: service_version
        in: path
        required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_ServiceInputGet__'
  /v0/catalog/services/{service_key}/{service_version}/inputs/{input_key}:
    get:
      tags:
      - catalog
      summary: Get Service Input
      operationId: get_service_input
      parameters:
      - name: service_key
        in: path
        required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
      - name: service_version
        in: path
        required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
      - name: input_key
        in: path
        required: true
        schema:
          type: string
          pattern: ^[-_a-zA-Z0-9]+$
          title: Input Key
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ServiceInputGet_'
  /v0/catalog/services/{service_key}/{service_version}/inputs:match:
    get:
      tags:
      - catalog
      summary: Get Compatible Inputs Given Source Output
      operationId: get_compatible_inputs_given_source_output
      parameters:
      - name: service_key
        in: path
        required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
      - name: service_version
        in: path
        required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
      - name: fromService
        in: query
        required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Fromservice
      - name: fromVersion
        in: query
        required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Fromversion
      - name: fromOutput
        in: query
        required: true
        schema:
          type: string
          pattern: ^[-_a-zA-Z0-9]+$
          title: Fromoutput
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_Annotated_str__StringConstraints___'
  /v0/catalog/services/{service_key}/{service_version}/outputs:
    get:
      tags:
      - catalog
      summary: List Service Outputs
      operationId: list_service_outputs
      parameters:
      - name: service_key
        in: path
        required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
      - name: service_version
        in: path
        required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_Annotated_str__StringConstraints___'
  /v0/catalog/services/{service_key}/{service_version}/outputs/{output_key}:
    get:
      tags:
      - catalog
      summary: Get Service Output
      operationId: get_service_output
      parameters:
      - name: service_key
        in: path
        required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
      - name: service_version
        in: path
        required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
      - name: output_key
        in: path
        required: true
        schema:
          type: string
          pattern: ^[-_a-zA-Z0-9]+$
          title: Output Key
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_ServiceOutputGet__'
  /v0/catalog/services/{service_key}/{service_version}/outputs:match:
    get:
      tags:
      - catalog
      summary: Get Compatible Outputs Given Target Input
      operationId: get_compatible_outputs_given_target_input
      parameters:
      - name: service_key
        in: path
        required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
      - name: service_version
        in: path
        required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
      - name: toService
        in: query
        required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Toservice
      - name: toVersion
        in: query
        required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Toversion
      - name: toInput
        in: query
        required: true
        schema:
          type: string
          pattern: ^[-_a-zA-Z0-9]+$
          title: Toinput
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_Annotated_str__StringConstraints___'
  /v0/catalog/services/{service_key}/{service_version}/resources:
    get:
      tags:
      - catalog
      summary: Get Service Resources
      operationId: get_service_resources
      parameters:
      - name: service_key
        in: path
        required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
      - name: service_version
        in: path
        required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_Annotated_str__StringConstraints___ImageResources__'
  /v0/catalog/services/{service_key}/{service_version}/pricing-plan:
    get:
      tags:
      - catalog
      - pricing-plans
      summary: Get Service Pricing Plan
      description: Retrieve default pricing plan for provided service
      operationId: get_service_pricing_plan
      parameters:
      - name: service_key
        in: path
        required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
      - name: service_version
        in: path
        required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ServicePricingPlanGet_'
  /v0/catalog/services/{service_key}/{service_version}/tags:
    get:
      tags:
      - catalog
      - tags
      summary: List Service Tags
      operationId: list_service_tags
      parameters:
      - name: service_key
        in: path
        required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
      - name: service_version
        in: path
        required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_TagGet__'
  /v0/catalog/services/{service_key}/{service_version}/tags/{tag_id}:add:
    post:
      tags:
      - catalog
      - tags
      summary: Add Service Tag
      operationId: add_service_tag
      parameters:
      - name: service_key
        in: path
        required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
      - name: service_version
        in: path
        required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
      - name: tag_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Tag Id
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_CatalogServiceGet_'
  /v0/catalog/services/{service_key}/{service_version}/tags/{tag_id}:remove:
    post:
      tags:
      - catalog
      - tags
      summary: Remove Service Tag
      operationId: remove_service_tag
      parameters:
      - name: service_key
        in: path
        required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
      - name: service_version
        in: path
        required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
      - name: tag_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Tag Id
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_CatalogServiceGet_'
  /v0/computations/{project_id}:
    get:
      tags:
      - computations
      - projects
      summary: Get Computation
      operationId: get_computation
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ComputationGet_'
  /v0/computations/{project_id}:start:
    post:
      tags:
      - computations
      - projects
      summary: Start Computation
      operationId: start_computation
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputationStart'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ComputationStarted_'
        '402':
          description: Insufficient credits to run computation
        '404':
          description: Project/wallet/pricing details were not found
        '406':
          description: Cluster not found
        '409':
          description: Project already started
        '422':
          description: Configuration error
        '503':
          description: Service not available
  /v0/computations/{project_id}:stop:
    post:
      tags:
      - computations
      - projects
      summary: Stop Computation
      operationId: stop_computation
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      responses:
        '204':
          description: Successful Response
  /v0/computations/-/iterations/latest:
    get:
      tags:
      - computations
      - projects
      summary: List Computations Latest Iteration
      operationId: list_computations_latest_iteration
      parameters:
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          contentMediaType: application/json
          contentSchema: {}
          default: '{"field":"created","direction":"asc"}'
          title: Order By
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: filter_only_running
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Filter Only Running
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ComputationRunRestGet_'
  /v0/computations/{project_id}/iterations:
    get:
      tags:
      - computations
      - projects
      summary: List Computation Iterations
      operationId: list_computation_iterations
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          contentMediaType: application/json
          contentSchema: {}
          default: '{"field":"created","direction":"asc"}'
          title: Order By
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: include_children
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Include Children
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ComputationRunRestGet_'
  /v0/computations/{project_id}/iterations/latest/tasks:
    get:
      tags:
      - computations
      - projects
      summary: List Computations Latest Iteration Tasks
      operationId: list_computations_latest_iteration_tasks
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          contentMediaType: application/json
          contentSchema: {}
          default: '{"field":"start","direction":"asc"}'
          title: Order By
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: include_children
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Include Children
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ComputationTaskRestGet_'
  /v0/computation-collection-runs:
    get:
      tags:
      - computations
      - projects
      summary: List Computation Collection Runs
      operationId: list_computation_collection_runs
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: filter_only_running
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Filter Only Running
      - name: filter_by_root_project_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Filter By Root Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ComputationCollectionRunRestGet_'
  /v0/computation-collection-runs/{collection_run_id}/tasks:
    get:
      tags:
      - computations
      - projects
      summary: List Computation Collection Run Tasks
      operationId: list_computation_collection_run_tasks
      parameters:
      - name: collection_run_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Collection Run Id
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ComputationCollectionRunTaskRestGet_'
  /v0/projects/{project_id}:xport:
    post:
      tags:
      - projects
      - exporter
      summary: Export Project
      description: creates an archive of the project and downloads it
      operationId: export_project
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      responses:
        '200':
          description: Successful Response
  /v0/folders:
    post:
      tags:
      - folders
      summary: Create Folder
      operationId: create_folder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderCreateBodyParams'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_FolderGet_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
    get:
      tags:
      - folders
      summary: List Folders
      operationId: list_folders
      parameters:
      - name: filters
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            contentMediaType: application/json
            contentSchema: {}
          - type: 'null'
          title: Filters
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          contentMediaType: application/json
          contentSchema: {}
          default: '{"field":"modified","direction":"desc"}'
          title: Order By
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: folder_id
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Folder Id
      - name: workspace_id
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Workspace Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_FolderGet__'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
  /v0/folders:search:
    get:
      tags:
      - folders
      summary: List Folders Full Search
      operationId: list_folders_full_search
      parameters:
      - name: filters
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            contentMediaType: application/json
            contentSchema: {}
          - type: 'null'
          title: Filters
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          contentMediaType: application/json
          contentSchema: {}
          default: '{"field":"modified","direction":"desc"}'
          title: Order By
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: text
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Text
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_FolderGet__'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
  /v0/folders/{folder_id}:
    get:
      tags:
      - folders
      summary: Get Folder
      operationId: get_folder
      parameters:
      - name: folder_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Folder Id
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_FolderGet_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
    put:
      tags:
      - folders
      summary: Replace Folder
      operationId: replace_folder
      parameters:
      - name: folder_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Folder Id
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderReplaceBodyParams'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_FolderGet_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
    delete:
      tags:
      - folders
      summary: Delete Folder
      operationId: delete_folder
      parameters:
      - name: folder_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Folder Id
          minimum: 0
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
  /v0/folders/{folder_id}/workspaces/{workspace_id}:move:
    post:
      tags:
      - folders
      - workspaces
      summary: Move Folder To Workspace
      description: Move folder to the workspace
      operationId: move_folder_to_workspace
      parameters:
      - name: folder_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Folder Id
          minimum: 0
      - name: workspace_id
        in: path
        required: true
        schema:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Workspace Id
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
  /v0/functions:
    post:
      tags:
      - functions
      summary: Register Function
      operationId: register_function
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/ProjectFunctionToRegister'
              - $ref: '#/components/schemas/SolverFunctionToRegister'
              discriminator:
                propertyName: functionClass
                mapping:
                  PROJECT: '#/components/schemas/ProjectFunctionToRegister'
                  SOLVER: '#/components/schemas/SolverFunctionToRegister'
              title: ' Body'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Annotated_Union_RegisteredProjectFunctionGet__RegisteredSolverFunctionGet___FieldInfo_annotation_NoneType__required_True__discriminator__function_class____'
    get:
      tags:
      - functions
      summary: List Functions
      operationId: list_functions
      parameters:
      - name: include_extras
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Include Extras
      - name: search
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search
      - name: filters
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            contentMediaType: application/json
            contentSchema: {}
          - type: 'null'
          title: Filters
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          contentMediaType: application/json
          contentSchema: {}
          default: '{"field":"modified","direction":"desc"}'
          title: Order By
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_Annotated_Union_RegisteredProjectFunctionGet__RegisteredSolverFunctionGet___FieldInfo_annotation_NoneType__required_True__discriminator__function_class_____'
  /v0/functions/{function_id}:
    get:
      tags:
      - functions
      summary: Get Function
      operationId: get_function
      parameters:
      - name: function_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Function Id
      - name: include_extras
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Include Extras
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Annotated_Union_RegisteredProjectFunctionGet__RegisteredSolverFunctionGet___FieldInfo_annotation_NoneType__required_True__discriminator__function_class____'
    patch:
      tags:
      - functions
      summary: Update Function
      operationId: update_function
      parameters:
      - name: function_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Function Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisteredFunctionUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Annotated_Union_RegisteredProjectFunctionGet__RegisteredSolverFunctionGet___FieldInfo_annotation_NoneType__required_True__discriminator__function_class____'
    delete:
      tags:
      - functions
      summary: Delete Function
      operationId: delete_function
      parameters:
      - name: function_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Function Id
      - name: force
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Force
      responses:
        '204':
          description: Successful Response
  /v0/functions/{function_id}/groups:
    get:
      tags:
      - functions
      summary: Get Function Groups
      operationId: get_function_groups
      parameters:
      - name: function_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Function Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_Annotated_int__Gt___FunctionGroupAccessRightsGet__'
  /v0/functions/{function_id}/groups/{group_id}:
    put:
      tags:
      - functions
      summary: Create or update a Function Group
      operationId: create_or_update_function_group
      parameters:
      - name: function_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Function Id
      - name: group_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Group Id
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FunctionGroupAccessRightsUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_FunctionGroupAccessRightsGet_'
    delete:
      tags:
      - functions
      summary: Delete a Function Group
      operationId: delete_function_group
      parameters:
      - name: function_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Function Id
      - name: group_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Group Id
          minimum: 0
      responses:
        '204':
          description: Successful Response
  /v0/tasks:
    get:
      tags:
      - long-running-tasks
      summary: Get Async Jobs
      description: Lists all long running tasks
      operationId: get_async_jobs
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_TaskGet__'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
        '410':
          description: Gone
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
  /v0/tasks/{task_id}:
    get:
      tags:
      - long-running-tasks
      summary: Get Async Job Status
      description: Retrieves the status of a task
      operationId: get_async_job_status
      parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          title: Task Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskStatus_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '410':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Gone
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Internal Server Error
    delete:
      tags:
      - long-running-tasks
      summary: Cancel Async Job
      description: Cancels and removes a task
      operationId: cancel_async_job
      parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          title: Task Id
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '410':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Gone
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Internal Server Error
  /v0/tasks/{task_id}/result:
    get:
      tags:
      - long-running-tasks
      summary: Get Async Job Result
      description: Retrieves the result of a task
      operationId: get_async_job_result
      parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          title: Task Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Async Job Result
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '410':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Gone
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Internal Server Error
  /v0/tasks/{task_id}/stream:
    get:
      tags:
      - long-running-tasks
      summary: Get Async Job Stream
      description: Retrieves the stream of a task
      operationId: get_async_job_stream
      parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          title: Task Id
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 50
          minimum: 1
          default: 20
          title: Limit
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskStreamResponse_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '410':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Gone
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Internal Server Error
  /v0/tasks-legacy:
    get:
      tags:
      - long-running-tasks-legacy
      summary: List Tasks
      description: Lists all long running tasks
      operationId: list_tasks
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_TaskGet__'
  /v0/tasks-legacy/{task_id}:
    get:
      tags:
      - long-running-tasks-legacy
      summary: Get Task Status
      description: Retrieves the status of a task
      operationId: get_task_status
      parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          title: Task Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskStatus_'
    delete:
      tags:
      - long-running-tasks-legacy
      summary: Remove Task
      description: Cancels and removes a task
      operationId: remove_task
      parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          title: Task Id
      responses:
        '204':
          description: Successful Response
  /v0/tasks-legacy/{task_id}/result:
    get:
      tags:
      - long-running-tasks-legacy
      summary: Get Task Result
      description: Retrieves the result of a task
      operationId: get_task_result
      parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: string
          title: Task Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Task Result
  /v0/catalog/licensed-items:
    get:
      tags:
      - licenses
      - catalog
      summary: List Licensed Items
      operationId: list_licensed_items
      parameters:
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          contentMediaType: application/json
          contentSchema: {}
          default: '{"field":"display_name","direction":"desc"}'
          title: Order By
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_LicensedItemRestGet_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
  /v0/catalog/licensed-items/{licensed_item_id}:purchase:
    post:
      tags:
      - licenses
      - catalog
      summary: Purchase Licensed Item
      operationId: purchase_licensed_item
      parameters:
      - name: licensed_item_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Licensed Item Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicensedItemsBodyParams'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicensedItemPurchaseGet'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
  /v0/wallets/{wallet_id}/licensed-items-purchases:
    get:
      tags:
      - licenses
      - wallets
      summary: List Wallet Licensed Items Purchases
      operationId: list_wallet_licensed_items_purchases
      parameters:
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          contentMediaType: application/json
          contentSchema: {}
          default: '{"field":"purchased_at","direction":"desc"}'
          title: Order By
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_LicensedItemPurchaseGet_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
  /v0/licensed-items-purchases/{licensed_item_purchase_id}:
    get:
      tags:
      - licenses
      summary: Get Licensed Item Purchase
      operationId: get_licensed_item_purchase
      parameters:
      - name: licensed_item_purchase_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Licensed Item Purchase Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_LicensedItemPurchaseGet_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
  /v0/wallets/{wallet_id}/licensed-items-checkouts:
    get:
      tags:
      - licenses
      - wallets
      summary: List Licensed Item Checkouts For Wallet
      operationId: list_licensed_item_checkouts_for_wallet
      parameters:
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          contentMediaType: application/json
          contentSchema: {}
          default: '{"field":"started_at","direction":"desc"}'
          title: Order By
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_LicensedItemPurchaseGet_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
  /v0/licensed-items-checkouts/{licensed_item_checkout_id}:
    get:
      tags:
      - licenses
      summary: Get Licensed Item Checkout
      operationId: get_licensed_item_checkout
      parameters:
      - name: licensed_item_checkout_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Licensed Item Checkout Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_LicensedItemPurchaseGet_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
  /v0/services:
    get:
      tags:
      - nih-sparc
      summary: List Latest Services
      description: Returns a list latest version of services
      operationId: list_latest_services
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_ServiceGet__'
  /v0/viewers:
    get:
      tags:
      - nih-sparc
      summary: List Viewers
      description: 'Lists all publically available viewers


        Notice that this might contain multiple services for the same filetype


        If file_type is provided, then it filters viewer for that filetype'
      operationId: list_viewers
      parameters:
      - name: file_type
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: File Type
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_Viewer__'
  /v0/viewers/default:
    get:
      tags:
      - nih-sparc
      summary: List Default Viewers
      description: 'Lists the default viewer for each supported filetype


        This was interfaced as a subcollection of viewers because it is a very common
        use-case


        Only publicaly available viewers


        If file_type is provided, then it filters viewer for that filetype'
      operationId: list_default_viewers
      parameters:
      - name: file_type
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: File Type
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_Viewer__'
  /view:
    get:
      tags:
      - nih-sparc
      summary: Get Redirection To Viewer
      description: Opens a viewer in osparc for data in the NIH-sparc portal
      operationId: get_redirection_to_viewer
      parameters:
      - name: file_type
        in: query
        required: true
        schema:
          type: string
          title: File Type
      - name: viewer_key
        in: query
        required: true
        schema:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Viewer Key
      - name: viewer_version
        in: query
        required: true
        schema:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Viewer Version
      - name: file_size
        in: query
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: File Size
          minimum: 0
      - name: download_link
        in: query
        required: true
        schema:
          type: string
          format: uri
          minLength: 1
          maxLength: 2083
          title: Download Link
      - name: file_name
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          default: unknown
          title: File Name
      responses:
        '302':
          description: Opens osparc and starts viewer for selected data
  /study/{id}:
    get:
      tags:
      - nih-sparc
      summary: Get Redirection To Study Page
      description: Opens a study published in osparc
      operationId: get_redirection_to_study_page
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Id
      responses:
        '302':
          description: Opens osparc and opens a copy of publised study
  /v0/projects:
    post:
      tags:
      - projects
      summary: Create Project
      description: 'Creates a new project or copies an existing one. NOTE: implemented
        as a long running task, i.e. requires polling `status_href` (HTTP_200_OK)
        to get status and `result_href` (HTTP_201_CREATED) to get created project'
      operationId: create_project
      parameters:
      - name: x_simcore_user_agent
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          default: undefined
          title: X Simcore User Agent
      - name: x_simcore_parent_project_uuid
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: X Simcore Parent Project Uuid
      - name: x_simcore_parent_node_id
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: X Simcore Parent Node Id
      - name: from_study
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: From Study
      - name: as_template
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: As Template
      - name: copy_data
        in: query
        required: false
        schema:
          type: boolean
          default: true
          title: Copy Data
      - name: hidden
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Hidden
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
              - $ref: '#/components/schemas/ProjectCreateNew'
              - $ref: '#/components/schemas/ProjectCopyOverride'
              title: ' Body'
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskGet_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Unprocessable Entity
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
    get:
      tags:
      - projects
      summary: List Projects
      operationId: list_projects
      parameters:
      - name: type
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ProjectTypeAPI'
          default: all
      - name: template_type
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/ProjectTemplateType'
          - type: 'null'
          title: Template Type
      - name: show_hidden
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Show Hidden
      - name: search
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Search
      - name: folder_id
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Folder Id
      - name: workspace_id
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Workspace Id
      - name: filters
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            contentMediaType: application/json
            contentSchema: {}
          - type: 'null'
          title: Filters
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          contentMediaType: application/json
          contentSchema: {}
          default: '{"field":"last_change_date","direction":"desc"}'
          title: Order By
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ProjectListItem_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Unprocessable Entity
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
  /v0/projects/active:
    get:
      tags:
      - projects
      summary: Get Active Project
      operationId: get_active_project
      parameters:
      - name: client_session_id
        in: query
        required: true
        schema:
          type: string
          title: Client Session Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Unprocessable Entity
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
  /v0/projects/{project_id}:
    get:
      tags:
      - projects
      summary: Get Project
      operationId: get_project
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Unprocessable Entity
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
    patch:
      tags:
      - projects
      summary: Patch Project
      operationId: patch_project
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPatch'
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Unprocessable Entity
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
    delete:
      tags:
      - projects
      summary: Delete Project
      operationId: delete_project
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Unprocessable Entity
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
  /v0/projects/{project_id}:clone:
    post:
      tags:
      - projects
      summary: Clone Project
      operationId: clone_project
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskGet_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Unprocessable Entity
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
  /v0/projects:search:
    get:
      tags:
      - projects
      summary: List Projects Full Search
      operationId: list_projects_full_search
      parameters:
      - name: filters
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            contentMediaType: application/json
            contentSchema: {}
          - type: 'null'
          title: Filters
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          contentMediaType: application/json
          contentSchema: {}
          default: '{"field":"last_change_date","direction":"desc"}'
          title: Order By
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: type
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ProjectTypeAPI'
          default: all
      - name: template_type
        in: query
        required: false
        schema:
          anyOf:
          - $ref: '#/components/schemas/ProjectTemplateType'
          - type: 'null'
          title: Template Type
      - name: text
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Text
      - name: tag_ids
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Tag Ids
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ProjectListItem_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Unprocessable Entity
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
  /v0/projects/{project_id}/inactivity:
    get:
      tags:
      - projects
      summary: Get Project Inactivity
      operationId: get_project_inactivity
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_GetProjectInactivityResponse_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Unprocessable Entity
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
  /v0/projects/{project_id}:share:
    post:
      tags:
      - projects
      - groups
      summary: Share Project
      operationId: share_project
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectShare'
      responses:
        '202':
          description: The request to share the project has been accepted, but the
            actual sharing process has to be confirmd.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectShareAccepted_'
  /v0/projects/{project_id}/groups/{group_id}:
    post:
      tags:
      - projects
      - groups
      summary: Create Project Group
      operationId: create_project_group
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: group_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Group Id
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsGroupsBodyParams'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGroupGet_'
    put:
      tags:
      - projects
      - groups
      summary: Replace Project Group
      operationId: replace_project_group
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: group_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Group Id
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsGroupsBodyParams'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGroupGet_'
    delete:
      tags:
      - projects
      - groups
      summary: Delete Project Group
      operationId: delete_project_group
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: group_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Group Id
          minimum: 0
      responses:
        '204':
          description: Successful Response
  /v0/projects/{project_id}/groups:
    get:
      tags:
      - projects
      - groups
      summary: List Project Groups
      operationId: list_project_groups
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_ProjectGroupGet__'
  /v0/projects/{project_uuid}/comments:
    post:
      tags:
      - projects
      - comments
      summary: Create Project Comment
      description: Create a new comment for a specific project. The request body should
        contain the comment contents and user information.
      operationId: create_project_comment
      deprecated: true
      parameters:
      - name: project_uuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_ProjectCommentsBodyParams'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_Literal__comment_id____Annotated_int__Gt___'
    get:
      tags:
      - projects
      - comments
      summary: List Project Comments
      description: Retrieve all comments for a specific project.
      operationId: list_project_comments
      deprecated: true
      parameters:
      - name: project_uuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_ProjectsCommentsAPI__'
  /v0/projects/{project_uuid}/comments/{comment_id}:
    put:
      tags:
      - projects
      - comments
      summary: Update Project Comment
      description: Update the contents of a specific comment for a project. The request
        body should contain the updated comment contents.
      operationId: update_project_comment
      deprecated: true
      parameters:
      - name: project_uuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
      - name: comment_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Comment Id
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_ProjectCommentsBodyParams'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectsCommentsAPI_'
    delete:
      tags:
      - projects
      - comments
      summary: Delete Project Comment
      description: Delete a specific comment associated with a project.
      operationId: delete_project_comment
      deprecated: true
      parameters:
      - name: project_uuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
      - name: comment_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Comment Id
          minimum: 0
      responses:
        '204':
          description: Successful Response
    get:
      tags:
      - projects
      - comments
      summary: Get Project Comment
      description: Retrieve a specific comment by its ID within a project.
      operationId: get_project_comment
      deprecated: true
      parameters:
      - name: project_uuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
      - name: comment_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Comment Id
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectsCommentsAPI_'
  /v0/projects/{project_id}/conversations:
    post:
      tags:
      - projects
      - conversations
      summary: Create Project Conversation
      operationId: create_project_conversation
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_ProjectConversationsCreateBodyParams'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ConversationRestGet_'
    get:
      tags:
      - projects
      - conversations
      summary: List Project Conversations
      operationId: list_project_conversations
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 50
          minimum: 1
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ConversationRestGet_'
  /v0/projects/{project_id}/conversations/{conversation_id}:
    put:
      tags:
      - projects
      - conversations
      summary: Update Project Conversation
      operationId: update_project_conversation
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Conversation Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_ProjectConversationsPutBodyParams'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ConversationRestGet_'
    delete:
      tags:
      - projects
      - conversations
      summary: Delete Project Conversation
      operationId: delete_project_conversation
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Conversation Id
      responses:
        '204':
          description: Successful Response
    get:
      tags:
      - projects
      - conversations
      summary: Get Project Conversation
      operationId: get_project_conversation
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Conversation Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ConversationRestGet_'
  /v0/projects/{project_id}/conversations/{conversation_id}/messages:
    post:
      tags:
      - projects
      - conversations
      summary: Create Project Conversation Message
      operationId: create_project_conversation_message
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Conversation Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_ProjectConversationMessagesCreateBodyParams'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ConversationMessageRestGet_'
    get:
      tags:
      - projects
      - conversations
      summary: List Project Conversation Messages
      operationId: list_project_conversation_messages
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Conversation Id
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          maximum: 50
          minimum: 1
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          minimum: 0
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ConversationMessageRestGet_'
  /v0/projects/{project_id}/conversations/{conversation_id}/messages/{message_id}:
    put:
      tags:
      - projects
      - conversations
      summary: Update Project Conversation Message
      operationId: update_project_conversation_message
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Conversation Id
      - name: message_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Message Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_ProjectConversationMessagesPutBodyParams'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ConversationMessageRestGet_'
    delete:
      tags:
      - projects
      - conversations
      summary: Delete Project Conversation Message
      operationId: delete_project_conversation_message
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Conversation Id
      - name: message_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Message Id
      responses:
        '204':
          description: Successful Response
    get:
      tags:
      - projects
      - conversations
      summary: Get Project Conversation Message
      operationId: get_project_conversation_message
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: conversation_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Conversation Id
      - name: message_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Message Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ConversationMessageRestGet_'
  /v0/projects/{project_id}/folders/{folder_id}:
    put:
      tags:
      - projects
      - folders
      summary: Replace Project Folder
      description: Move project to the folder
      operationId: replace_project_folder
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: folder_id
        in: path
        required: true
        schema:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Folder Id
      responses:
        '204':
          description: Successful Response
  /v0/projects/{project_id}/metadata:
    get:
      tags:
      - projects
      - metadata
      summary: Get Project Metadata
      operationId: get_project_metadata
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectMetadataGet_'
    patch:
      tags:
      - projects
      - metadata
      summary: Update Project Metadata
      operationId: update_project_metadata
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectMetadataUpdate'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectMetadataGet_'
  /v0/projects/{project_id}/nodes:
    post:
      tags:
      - projects
      - nodes
      summary: Create Node
      operationId: create_node
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeCreate'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_NodeCreated_'
  /v0/projects/{project_id}/nodes/{node_id}:
    get:
      tags:
      - projects
      - nodes
      summary: Get Node
      operationId: get_node
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: node_id
        in: path
        required: true
        schema:
          type: string
          title: Node Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Union_NodeGetIdle__NodeGetUnknown__RunningDynamicServiceDetails__NodeGet__'
    delete:
      tags:
      - projects
      - nodes
      summary: Delete Node
      operationId: delete_node
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: node_id
        in: path
        required: true
        schema:
          type: string
          title: Node Id
      responses:
        '204':
          description: Successful Response
    patch:
      tags:
      - projects
      - nodes
      summary: Patch Project Node
      operationId: patch_project_node
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: node_id
        in: path
        required: true
        schema:
          type: string
          title: Node Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodePatch'
      responses:
        '204':
          description: Successful Response
  /v0/projects/{project_id}/nodes/{node_id}:retrieve:
    post:
      tags:
      - projects
      - nodes
      summary: Retrieve Node
      operationId: retrieve_node
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: node_id
        in: path
        required: true
        schema:
          type: string
          title: Node Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeRetrieve'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_NodeRetrieved_'
  /v0/projects/{project_id}/nodes/{node_id}:start:
    post:
      tags:
      - projects
      - nodes
      summary: Start Node
      operationId: start_node
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: node_id
        in: path
        required: true
        schema:
          type: string
          title: Node Id
      responses:
        '204':
          description: Successful Response
  /v0/projects/{project_id}/nodes/{node_id}:stop:
    post:
      tags:
      - projects
      - nodes
      summary: Stop Node
      operationId: stop_node
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: node_id
        in: path
        required: true
        schema:
          type: string
          title: Node Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskGet_'
  /v0/projects/{project_id}/nodes/{node_id}:restart:
    post:
      tags:
      - projects
      - nodes
      summary: Restart Node
      description: Note that it has only effect on nodes associated to dynamic services
      operationId: restart_node
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: node_id
        in: path
        required: true
        schema:
          type: string
          title: Node Id
      responses:
        '204':
          description: Successful Response
  /v0/projects/{project_id}/nodes/{node_id}/outputs:
    patch:
      tags:
      - projects
      - nodes
      summary: Update Node Outputs
      operationId: update_node_outputs
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: node_id
        in: path
        required: true
        schema:
          type: string
          title: Node Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeOutputs'
      responses:
        '204':
          description: Successful Response
  /v0/projects/{project_id}/nodes/{node_id}/resources:
    get:
      tags:
      - projects
      - nodes
      summary: Get Node Resources
      operationId: get_node_resources
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: node_id
        in: path
        required: true
        schema:
          type: string
          title: Node Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_Annotated_str__StringConstraints___ImageResources__'
    put:
      tags:
      - projects
      - nodes
      summary: Replace Node Resources
      operationId: replace_node_resources
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          title: Project Id
      - name: node_id
        in: path
        required: true
        schema:
          type: string
          title: Node Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              title: ' New'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_Annotated_str__StringConstraints___ImageResources__'
  /v0/projects/{project_id}/nodes/-/services:
    get:
      tags:
      - projects
      - nodes
      summary: Get Project Services
      operationId: get_project_services
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectNodeServicesGet_'
  /v0/projects/{project_id}/nodes/-/services:access:
    get:
      tags:
      - projects
      - nodes
      summary: Get Project Services Access For Gid
      description: Check whether provided group has access to the project services
      operationId: get_project_services_access_for_gid
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: for_gid
        in: query
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: For Gid
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope__ProjectGroupAccess_'
  /v0/projects/{project_id}/nodes/-/preview:
    get:
      tags:
      - projects
      - nodes
      summary: List Project Nodes Previews
      description: Lists all previews in the node's project
      operationId: list_project_nodes_previews
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list__ProjectNodePreview__'
  /v0/projects/{project_id}/nodes/{node_id}/preview:
    get:
      tags:
      - projects
      - nodes
      summary: Get Project Node Preview
      description: Gets a give node's preview
      operationId: get_project_node_preview
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: node_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Node Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope__ProjectNodePreview_'
        '404':
          description: Node has no preview
  /v0/projects/{project_id}/nodes/{node_id}/pricing-unit:
    get:
      tags:
      - projects
      summary: Get Project Node Pricing Unit
      description: Get currently connected pricing unit to the project node.
      operationId: get_project_node_pricing_unit
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: node_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Node Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Union_PricingUnitGet__NoneType__'
  /v0/projects/{project_id}/nodes/{node_id}/pricing-plan/{pricing_plan_id}/pricing-unit/{pricing_unit_id}:
    put:
      tags:
      - projects
      summary: Connect Pricing Unit To Project Node
      description: Connect pricing unit to the project node (Project node can have
        only one pricing unit)
      operationId: connect_pricing_unit_to_project_node
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: node_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Node Id
      - name: pricing_plan_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Pricing Plan Id
          minimum: 0
      - name: pricing_unit_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Pricing Unit Id
          minimum: 0
      responses:
        '204':
          description: Successful Response
  /v0/projects/{project_id}/inputs:
    get:
      tags:
      - projects
      - ports
      summary: Get Project Inputs
      description: New in version *0.10*
      operationId: get_project_inputs
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_UUID__ProjectInputGet__'
    patch:
      tags:
      - projects
      - ports
      summary: Update Project Inputs
      description: New in version *0.10*
      operationId: update_project_inputs
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ProjectInputUpdate'
              title: ' Updates'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_UUID__ProjectInputGet__'
  /v0/projects/{project_id}/outputs:
    get:
      tags:
      - projects
      - ports
      summary: Get Project Outputs
      description: New in version *0.10*
      operationId: get_project_outputs
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_UUID__ProjectOutputGet__'
  /v0/projects/{project_id}/metadata/ports:
    get:
      tags:
      - projects
      - ports
      summary: List Project Metadata Ports
      description: New in version *0.12*
      operationId: list_project_metadata_ports
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_ProjectMetadataPortGet__'
  /v0/projects/{project_id}:open:
    post:
      tags:
      - projects
      summary: Open Project
      operationId: open_project
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: disable_service_auto_start
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Disable Service Auto Start
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              title: Client Session Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
        '400':
          description: ValidationError
        '402':
          description: WalletNotEnoughCreditsError
        '403':
          description: ProjectInvalidRightsError
        '404':
          description: ProjectNotFoundError, UserDefaultWalletNotFoundError
        '409':
          description: ProjectTooManyProjectOpenedError
        '422':
          description: ValidationError
        '503':
          description: DirectorV2ServiceError
  /v0/projects/{project_id}:close:
    post:
      tags:
      - projects
      summary: Close Project
      operationId: close_project
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              title: Client Session Id
      responses:
        '204':
          description: Successful Response
  /v0/projects/{project_id}/state:
    get:
      tags:
      - projects
      summary: Get Project State
      operationId: get_project_state
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectStateOutputSchema_'
  /v0/projects/{project_uuid}/tags/{tag_id}:add:
    post:
      tags:
      - projects
      - tags
      summary: Add Project Tag
      description: 'Links an existing label with an existing study


        NOTE: that the tag is not created here'
      operationId: add_project_tag
      parameters:
      - name: project_uuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
      - name: tag_id
        in: path
        required: true
        schema:
          type: integer
          title: Tag Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
  /v0/projects/{project_uuid}/tags/{tag_id}:remove:
    post:
      tags:
      - projects
      - tags
      summary: Remove Project Tag
      description: 'Removes an existing link between a label and a study


        NOTE: that the tag is not deleted here'
      operationId: remove_project_tag
      parameters:
      - name: project_uuid
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Uuid
      - name: tag_id
        in: path
        required: true
        schema:
          type: integer
          title: Tag Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
  /v0/projects/{project_id}/wallet:
    get:
      tags:
      - projects
      summary: Get Project Wallet
      description: Get current connected wallet to the project.
      operationId: get_project_wallet
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Union_WalletGet__NoneType__'
  /v0/projects/{project_id}/wallet/{wallet_id}:
    put:
      tags:
      - projects
      summary: Connect Wallet To Project
      description: Connect wallet to the project (Project can have only one wallet)
      operationId: connect_wallet_to_project
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletGet_'
  /v0/projects/{project_id}/wallet/{wallet_id}:pay-debt:
    post:
      tags:
      - projects
      summary: Pay Project Debt
      operationId: pay_project_debt
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: wallet_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
      - name: amount
        in: query
        required: true
        schema:
          anyOf:
          - type: number
            exclusiveMaximum: true
            maximum: 0.0
          - type: string
          title: Amount
      responses:
        '204':
          description: Successful Response
  /v0/projects/{project_id}/workspaces/{workspace_id}:move:
    post:
      tags:
      - projects
      - workspaces
      summary: Move Project To Workspace
      description: Move project to the workspace
      operationId: move_project_to_workspace
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: workspace_id
        in: path
        required: true
        schema:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Workspace Id
      responses:
        '204':
          description: Successful Response
  /v0/publications/service-submission:
    post:
      tags:
      - publication
      summary: Service Submission
      description: Submits files with new service candidate
      operationId: service_submission
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_service_submission'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/services/-/resource-usages:
    get:
      tags:
      - usage
      summary: List Resource Usage Services
      description: Retrieve finished and currently running user services (user and
        product are taken from context, optionally wallet_id parameter might be provided).
      operationId: list_resource_usage_services
      parameters:
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          contentMediaType: application/json
          contentSchema: {}
          default: '{"field":"started_at","direction":"desc"}'
          title: Order By
      - name: wallet_id
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Wallet Id
      - name: filters
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            contentMediaType: application/json
            contentSchema: {}
          - type: 'null'
          title: Filters
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ServiceRunGet_'
  /v0/services/-/aggregated-usages:
    get:
      tags:
      - usage
      summary: List Osparc Credits Aggregated Usages
      description: Used credits based on aggregate by type, currently supported `services`.
        (user and product are taken from context, optionally wallet_id parameter might
        be provided).
      operationId: list_osparc_credits_aggregated_usages
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      - name: aggregated_by
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ServicesAggregatedUsagesType'
      - name: time_period
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ServicesAggregatedUsagesTimePeriod'
      - name: wallet_id
        in: query
        required: true
        schema:
          type: integer
          title: Wallet Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_OsparcCreditsAggregatedByServiceGet_'
  /v0/services/-/usage-report:
    get:
      tags:
      - usage
      summary: Export Resource Usage Services
      description: Redirects to download CSV link. CSV obtains finished and currently
        running user services (user and product are taken from context, optionally
        wallet_id parameter might be provided).
      operationId: export_resource_usage_services
      parameters:
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          contentMediaType: application/json
          contentSchema: {}
          default: '{"field":"started_at","direction":"desc"}'
          title: Order By
      - name: wallet_id
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Wallet Id
      - name: filters
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            contentMediaType: application/json
            contentSchema: {}
          - type: 'null'
          title: Filters
      responses:
        '302':
          description: redirection to download link
          content:
            application/json:
              schema: {}
  /v0/pricing-plans/{pricing_plan_id}/pricing-units/{pricing_unit_id}:
    get:
      tags:
      - pricing-plans
      summary: Get Pricing Plan Unit
      operationId: get_pricing_plan_unit
      parameters:
      - name: pricing_plan_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Pricing Plan Id
          minimum: 0
      - name: pricing_unit_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Pricing Unit Id
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PricingUnitGet_'
  /v0/pricing-plans:
    get:
      tags:
      - pricing-plans
      summary: List Pricing Plans
      description: To keep the listing lightweight, the pricingUnits field is None.
      operationId: list_pricing_plans
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_PricingPlanGet_'
  /v0/pricing-plans/{pricing_plan_id}:
    get:
      tags:
      - pricing-plans
      summary: Get Pricing Plan
      operationId: get_pricing_plan
      parameters:
      - name: pricing_plan_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Pricing Plan Id
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PricingPlanGet_'
  /v0/admin/pricing-plans:
    get:
      tags:
      - admin
      summary: List Pricing Plans For Admin User
      description: To keep the listing lightweight, the pricingUnits field is None.
      operationId: list_pricing_plans_for_admin_user
      parameters:
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_PricingPlanAdminGet_'
    post:
      tags:
      - admin
      summary: Create Pricing Plan
      operationId: create_pricing_plan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePricingPlanBodyParams'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PricingPlanAdminGet_'
  /v0/admin/pricing-plans/{pricing_plan_id}:
    get:
      tags:
      - admin
      summary: Get Pricing Plan For Admin User
      operationId: get_pricing_plan_for_admin_user
      parameters:
      - name: pricing_plan_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Pricing Plan Id
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PricingPlanAdminGet_'
    put:
      tags:
      - admin
      summary: Update Pricing Plan
      operationId: update_pricing_plan
      parameters:
      - name: pricing_plan_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Pricing Plan Id
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePricingPlanBodyParams'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PricingPlanAdminGet_'
  /v0/admin/pricing-plans/{pricing_plan_id}/pricing-units/{pricing_unit_id}:
    get:
      tags:
      - admin
      summary: Get Pricing Unit
      operationId: get_pricing_unit
      parameters:
      - name: pricing_plan_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Pricing Plan Id
          minimum: 0
      - name: pricing_unit_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Pricing Unit Id
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PricingUnitAdminGet_'
    put:
      tags:
      - admin
      summary: Update Pricing Unit
      operationId: update_pricing_unit
      parameters:
      - name: pricing_plan_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Pricing Plan Id
          minimum: 0
      - name: pricing_unit_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Pricing Unit Id
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePricingUnitBodyParams'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PricingUnitAdminGet_'
  /v0/admin/pricing-plans/{pricing_plan_id}/pricing-units:
    post:
      tags:
      - admin
      summary: Create Pricing Unit
      operationId: create_pricing_unit
      parameters:
      - name: pricing_plan_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Pricing Plan Id
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePricingUnitBodyParams'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PricingUnitAdminGet_'
  /v0/admin/pricing-plans/{pricing_plan_id}/billable-services:
    get:
      tags:
      - admin
      summary: List Connected Services To Pricing Plan
      operationId: list_connected_services_to_pricing_plan
      parameters:
      - name: pricing_plan_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Pricing Plan Id
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_PricingPlanToServiceAdminGet__'
    post:
      tags:
      - admin
      summary: Connect Service To Pricing Plan
      operationId: connect_service_to_pricing_plan
      parameters:
      - name: pricing_plan_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Pricing Plan Id
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectServiceToPricingPlanBodyParams'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PricingPlanToServiceAdminGet_'
  /:
    get:
      tags:
      - statics
      summary: Get Cached Frontend Index
      operationId: get_cached_frontend_index
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
  /static-frontend-data.json:
    get:
      tags:
      - statics
      summary: Static Frontend Data
      description: Generic static info on the product's app
      operationId: static_frontend_data
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticFrontEndDict'
  /v0/storage/locations:
    get:
      tags:
      - storage
      summary: List Storage Locations
      description: Get available storage locations
      operationId: list_storage_locations
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FileLocation'
                type: array
                title: Response List Storage Locations
  /v0/storage/locations/{location_id}/paths:
    get:
      tags:
      - storage
      summary: List Storage Paths
      description: Lists the files/directories in WorkingDirectory
      operationId: list_storage_paths
      parameters:
      - name: location_id
        in: path
        required: true
        schema:
          type: integer
          title: Location Id
      - name: size
        in: query
        required: false
        schema:
          type: integer
          minimum: 1
          exclusiveMaximum: true
          default: 50
          title: Size
          maximum: 1000
      - name: cursor
        in: query
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: Cursor
      - name: fileFilter
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            format: path
          - type: 'null'
          title: Filefilter
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CursorPage___T_Customized_PathMetaDataGet_'
  /v0/storage/locations/{location_id}/paths/{path}:size:
    post:
      tags:
      - storage
      summary: Compute Path Size
      description: Compute the size of a path
      operationId: compute_path_size
      parameters:
      - name: location_id
        in: path
        required: true
        schema:
          type: integer
          title: Location Id
      - name: path
        in: path
        required: true
        schema:
          type: string
          format: path
          title: Path
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskGet_'
  /v0/storage/locations/{location_id}/-/paths:batchDelete:
    post:
      tags:
      - storage
      summary: Batch Delete Paths
      description: Deletes Paths
      operationId: batch_delete_paths
      parameters:
      - name: location_id
        in: path
        required: true
        schema:
          type: integer
          title: Location Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              uniqueItems: true
              items:
                type: string
                format: path
              title: Paths
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskGet_'
  /v0/storage/locations/{location_id}/datasets:
    get:
      tags:
      - storage
      summary: List Datasets Metadata
      description: Get datasets metadata
      operationId: list_datasets_metadata
      parameters:
      - name: location_id
        in: path
        required: true
        schema:
          type: integer
          title: Location Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_DatasetMetaData__'
  /v0/storage/locations/{location_id}/files/metadata:
    get:
      tags:
      - storage
      summary: Get Files Metadata
      description: Get datasets metadata
      operationId: get_files_metadata
      parameters:
      - name: location_id
        in: path
        required: true
        schema:
          type: integer
          title: Location Id
      - name: uuid_filter
        in: query
        required: false
        schema:
          type: string
          default: ''
          title: Uuid Filter
      - name: expand_dirs
        in: query
        required: false
        schema:
          type: boolean
          description: Automatic directory expansion. This will be replaced by pagination
            the future
          default: true
          title: Expand Dirs
        description: Automatic directory expansion. This will be replaced by pagination
          the future
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_DatasetMetaData__'
  /v0/storage/locations/{location_id}/datasets/{dataset_id}/metadata:
    get:
      tags:
      - storage
      summary: List Dataset Files Metadata
      description: Get Files Metadata
      operationId: list_dataset_files_metadata
      parameters:
      - name: location_id
        in: path
        required: true
        schema:
          type: integer
          title: Location Id
      - name: dataset_id
        in: path
        required: true
        schema:
          type: string
          title: Dataset Id
      - name: expand_dirs
        in: query
        required: false
        schema:
          type: boolean
          description: Automatic directory expansion. This will be replaced by pagination
            the future
          default: true
          title: Expand Dirs
        description: Automatic directory expansion. This will be replaced by pagination
          the future
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_FileMetaDataGet__'
  /v0/storage/locations/{location_id}/files/{file_id}/metadata:
    get:
      tags:
      - storage
      summary: Get File Metadata
      description: Get File Metadata
      operationId: get_file_metadata
      parameters:
      - name: location_id
        in: path
        required: true
        schema:
          type: integer
          title: Location Id
      - name: file_id
        in: path
        required: true
        schema:
          type: string
          title: File Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/FileMetaData'
                - $ref: '#/components/schemas/Envelope_FileMetaDataGet_'
                title: Response Get File Metadata
  /v0/storage/locations/{location_id}/files/{file_id}:
    get:
      tags:
      - storage
      summary: Download File
      description: Returns download link for requested file
      operationId: download_file
      parameters:
      - name: location_id
        in: path
        required: true
        schema:
          type: integer
          title: Location Id
      - name: file_id
        in: path
        required: true
        schema:
          type: string
          title: File Id
      - name: link_type
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LinkType'
          default: PRESIGNED
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PresignedLink_'
    put:
      tags:
      - storage
      summary: Upload File
      description: Returns upload link
      operationId: upload_file
      parameters:
      - name: location_id
        in: path
        required: true
        schema:
          type: integer
          title: Location Id
      - name: file_id
        in: path
        required: true
        schema:
          type: string
          title: File Id
      - name: file_size
        in: query
        required: true
        schema:
          anyOf:
          - type: string
            pattern: ^\s*(\d*\.?\d+)\s*(\w+)?
          - type: integer
            minimum: 0
          - type: 'null'
          title: File Size
      - name: link_type
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LinkType'
          default: PRESIGNED
      - name: is_directory
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Is Directory
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                anyOf:
                - $ref: '#/components/schemas/Envelope_FileUploadSchema_'
                - $ref: '#/components/schemas/Envelope_AnyUrl_'
                title: Response Upload File
    delete:
      tags:
      - storage
      summary: Delete File
      description: Deletes File
      operationId: delete_file
      parameters:
      - name: location_id
        in: path
        required: true
        schema:
          type: integer
          title: Location Id
      - name: file_id
        in: path
        required: true
        schema:
          type: string
          title: File Id
      responses:
        '204':
          description: Successful Response
  /v0/storage/locations/{location_id}/files/{file_id}:abort:
    post:
      tags:
      - storage
      summary: Abort Upload File
      description: 'aborts an upload if user has the rights to, and reverts

        to the latest version if available, else will delete the file'
      operationId: abort_upload_file
      parameters:
      - name: location_id
        in: path
        required: true
        schema:
          type: integer
          title: Location Id
      - name: file_id
        in: path
        required: true
        schema:
          type: string
          title: File Id
      responses:
        '204':
          description: Successful Response
  /v0/storage/locations/{location_id}/files/{file_id}:complete:
    post:
      tags:
      - storage
      summary: Complete Upload File
      description: completes an upload if the user has the rights to
      operationId: complete_upload_file
      parameters:
      - name: location_id
        in: path
        required: true
        schema:
          type: integer
          title: Location Id
      - name: file_id
        in: path
        required: true
        schema:
          type: string
          title: File Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Envelope_FileUploadCompletionBody_'
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_FileUploadCompleteResponse_'
  /v0/storage/locations/{location_id}/files/{file_id}:complete/futures/{future_id}:
    post:
      tags:
      - storage
      summary: Is Completed Upload File
      description: Check for upload completion
      operationId: is_completed_upload_file
      parameters:
      - name: location_id
        in: path
        required: true
        schema:
          type: integer
          title: Location Id
      - name: file_id
        in: path
        required: true
        schema:
          type: string
          title: File Id
      - name: future_id
        in: path
        required: true
        schema:
          type: string
          title: Future Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_FileUploadCompleteFutureResponse_'
  /v0/storage/locations/{location_id}:export-data:
    post:
      tags:
      - storage
      summary: Export Data
      description: Export data
      operationId: export_data
      parameters:
      - name: location_id
        in: path
        required: true
        schema:
          type: integer
          title: Location Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataExportPost'
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskGet_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '410':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Gone
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Internal Server Error
  /v0/storage/locations/{location_id}:search:
    post:
      tags:
      - storage
      summary: Search
      description: Starts a files/folders search
      operationId: search
      parameters:
      - name: location_id
        in: path
        required: true
        schema:
          type: integer
          title: Location Id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchBodyParams'
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskGet_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '410':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Gone
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Internal Server Error
  /v0/trash:empty:
    post:
      tags:
      - trash
      summary: Empty Trash
      operationId: empty_trash
      responses:
        '204':
          description: Successful Response
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
        '402':
          description: Payment Required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
  /v0/projects/{project_id}:trash:
    post:
      tags:
      - trash
      - projects
      summary: Trash Project
      operationId: trash_project
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      - name: force
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Force
      responses:
        '204':
          description: Successful Response
        '404':
          description: Not such a project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          description: Project is in use and cannot be trashed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
        '503':
          description: Trash service error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Unprocessable Entity
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
  /v0/projects/{project_id}:untrash:
    post:
      tags:
      - trash
      - projects
      summary: Untrash Project
      operationId: untrash_project
      parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          title: Project Id
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Unprocessable Entity
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
  /v0/folders/{folder_id}:trash:
    post:
      tags:
      - trash
      - folders
      summary: Trash Folder
      operationId: trash_folder
      parameters:
      - name: folder_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Folder Id
          minimum: 0
      - name: force
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Force
      responses:
        '204':
          description: Successful Response
        '404':
          description: Not such a folder
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          description: One or more projects in the folder are in use and cannot be
            trashed
        '503':
          description: Trash service error
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Unprocessable Entity
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
  /v0/folders/{folder_id}:untrash:
    post:
      tags:
      - trash
      - folders
      summary: Untrash Folder
      operationId: untrash_folder
      parameters:
      - name: folder_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Folder Id
          minimum: 0
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Unprocessable Entity
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
  /v0/workspaces/{workspace_id}:trash:
    post:
      tags:
      - trash
      - workspaces
      summary: Trash Workspace
      operationId: trash_workspace
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Workspace Id
          minimum: 0
      - name: force
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Force
      responses:
        '204':
          description: Successful Response
        '404':
          description: Not such a workspace
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          description: One or more projects in the workspace are in use and cannot
            be trashed
        '503':
          description: Trash service error
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Unprocessable Entity
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
  /v0/workspaces/{workspace_id}:untrash:
    post:
      tags:
      - trash
      - workspaces
      summary: Untrash Workspace
      operationId: untrash_workspace
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Workspace Id
          minimum: 0
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Unprocessable Entity
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Bad Request
        '402':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Payment Required
  /v0/workspaces:
    post:
      tags:
      - workspaces
      summary: Create Workspace
      operationId: create_workspace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCreateBodyParams'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WorkspaceGet_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
    get:
      tags:
      - workspaces
      summary: List Workspaces
      operationId: list_workspaces
      parameters:
      - name: order_by
        in: query
        required: false
        schema:
          type: string
          contentMediaType: application/json
          contentSchema: {}
          default: '{"field":"modified","direction":"desc"}'
          title: Order By
      - name: filters
        in: query
        required: false
        schema:
          anyOf:
          - type: string
            contentMediaType: application/json
            contentSchema: {}
          - type: 'null'
          title: Filters
      - name: limit
        in: query
        required: false
        schema:
          type: integer
          default: 20
          title: Limit
      - name: offset
        in: query
        required: false
        schema:
          type: integer
          default: 0
          title: Offset
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_WorkspaceGet__'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
  /v0/workspaces/{workspace_id}:
    get:
      tags:
      - workspaces
      summary: Get Workspace
      operationId: get_workspace
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Workspace Id
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WorkspaceGet_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
    put:
      tags:
      - workspaces
      summary: Replace Workspace
      operationId: replace_workspace
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Workspace Id
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceReplaceBodyParams'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WorkspaceGet_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
    delete:
      tags:
      - workspaces
      summary: Delete Workspace
      operationId: delete_workspace
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Workspace Id
          minimum: 0
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
  /v0/workspaces/{workspace_id}/groups/{group_id}:
    post:
      tags:
      - workspaces
      - groups
      summary: Create Workspace Group
      operationId: create_workspace_group
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Workspace Id
          minimum: 0
      - name: group_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Group Id
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspacesGroupsBodyParams'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WorkspaceGroupGet_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
    put:
      tags:
      - workspaces
      - groups
      summary: Replace Workspace Group
      operationId: replace_workspace_group
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Workspace Id
          minimum: 0
      - name: group_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Group Id
          minimum: 0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspacesGroupsBodyParams'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WorkspaceGroupGet_'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
    delete:
      tags:
      - workspaces
      - groups
      summary: Delete Workspace Group
      operationId: delete_workspace_group
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Workspace Id
          minimum: 0
      - name: group_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Group Id
          minimum: 0
      responses:
        '204':
          description: Successful Response
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
  /v0/workspaces/{workspace_id}/groups:
    get:
      tags:
      - workspaces
      - groups
      summary: List Workspace Groups
      operationId: list_workspace_groups
      parameters:
      - name: workspace_id
        in: path
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: Workspace Id
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_WorkspaceGroupGet__'
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Not Found
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Conflict
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvelopedError'
          description: Service Unavailable
  /v0/email:test:
    post:
      tags:
      - admin
      summary: Test Email
      operationId: test_email
      parameters:
      - name: x-simcore-products-name
        in: header
        required: false
        schema:
          anyOf:
          - type: string
          - type: 'null'
          title: X-Simcore-Products-Name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestEmail'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Union_EmailTestFailed__EmailTestPassed__'
  /v0/:
    get:
      tags:
      - maintenance
      summary: Healthcheck Readiness Probe
      description: 'Readiness probe: check if the container is ready to receive traffic'
      operationId: healthcheck_readiness_probe
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_HealthInfoDict_'
  /v0/health:
    get:
      tags:
      - maintenance
      summary: Healthcheck Liveness Probe
      description: 'Liveness probe: check if the container is alive'
      operationId: healthcheck_liveness_probe
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_str__Any__'
  /v0/config:
    get:
      tags:
      - maintenance
      summary: Get Config
      description: Front end runtime configuration
      operationId: get_config
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_str__Any__'
  /v0/scheduled_maintenance:
    get:
      tags:
      - maintenance
      summary: Get Scheduled Maintenance
      operationId: get_scheduled_maintenance
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_str_'
  /v0/status:
    get:
      tags:
      - maintenance
      summary: Get App Status
      description: checks status of self and connected services
      operationId: get_app_status
      responses:
        '200':
          description: Returns app status check
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_AppStatusCheck_'
  /v0/status/diagnostics:
    get:
      tags:
      - maintenance
      summary: Get App Diagnostics
      operationId: get_app_diagnostics
      parameters:
      - name: top_tracemalloc
        in: query
        required: false
        schema:
          anyOf:
          - type: integer
          - type: 'null'
          title: Top Tracemalloc
      responses:
        '200':
          description: Returns app diagnostics report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_StatusDiagnosticsGet_'
  /v0/status/{service_name}:
    get:
      tags:
      - maintenance
      summary: Get Service Status
      operationId: get_service_status
      parameters:
      - name: service_name
        in: path
        required: true
        schema:
          type: string
          title: Service Name
      responses:
        '200':
          description: Returns app status check
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_AppStatusCheck_'
components:
  schemas:
    AccessEnum:
      type: string
      enum:
      - ReadAndWrite
      - Invisible
      - ReadOnly
      title: AccessEnum
    AccessRights:
      properties:
        read:
          type: boolean
          title: Read
          description: has read access
        write:
          type: boolean
          title: Write
          description: has write access
        delete:
          type: boolean
          title: Delete
          description: has deletion rights
      additionalProperties: false
      type: object
      required:
      - read
      - write
      - delete
      title: AccessRights
    AccountRequestInfo:
      properties:
        form:
          additionalProperties: true
          type: object
          title: Form
        captcha:
          type: string
          title: Captcha
      type: object
      required:
      - form
      - captcha
      title: AccountRequestInfo
      example:
        captcha: A12B34
        form:
          address: Infinite Loop
          application: Antenna_Design
          city: Washington
          company: EM Com
          country: Switzerland
          description: Description of something
          email: maxwel@email.com
          eula: true
          firstName: James
          hear: Search_Engine
          lastName: Maxwel
          phone: +41 44 245 96 96
          postalCode: '98001'
          privacyPolicy: true
    AccountRequestStatus:
      type: string
      enum:
      - PENDING
      - APPROVED
      - REJECTED
      title: AccountRequestStatus
      description: Status of the request for an account
    Activity:
      properties:
        stats:
          $ref: '#/components/schemas/Stats'
        limits:
          $ref: '#/components/schemas/Limits'
        queued:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Queued
      type: object
      required:
      - stats
      - limits
      title: Activity
    AnnotationUI-Input:
      properties:
        type:
          type: string
          enum:
          - note
          - rect
          - text
          - conversation
          title: Type
        color:
          anyOf:
          - type: string
            format: color
          - type: 'null'
          title: Color
        attributes:
          additionalProperties: true
          type: object
          title: Attributes
          description: svg attributes
      additionalProperties: false
      type: object
      required:
      - type
      - attributes
      title: AnnotationUI
    AnnotationUI-Output:
      properties:
        type:
          type: string
          enum:
          - note
          - rect
          - text
          - conversation
          title: Type
        color:
          type: string
          title: Color
        attributes:
          additionalProperties: true
          type: object
          title: Attributes
          description: svg attributes
      additionalProperties: false
      type: object
      required:
      - type
      - attributes
      title: AnnotationUI
    Announcement:
      properties:
        id:
          type: string
          title: Id
        products:
          items:
            type: string
          type: array
          title: Products
        start:
          type: string
          format: date-time
          title: Start
        end:
          type: string
          format: date-time
          title: End
        title:
          type: string
          title: Title
        description:
          type: string
          title: Description
        link:
          type: string
          title: Link
        widgets:
          items:
            type: string
            enum:
            - login
            - ribbon
            - user-menu
          type: array
          title: Widgets
      type: object
      required:
      - id
      - products
      - start
      - end
      - title
      - description
      - link
      - widgets
      title: Announcement
    ApiKeyCreateRequest:
      properties:
        displayName:
          type: string
          minLength: 3
          title: Displayname
        expiration:
          anyOf:
          - type: string
            format: duration
          - type: 'null'
          title: Expiration
          description: Time delta from creation time to expiration. If None, then
            it does not expire.
      type: object
      required:
      - displayName
      title: ApiKeyCreateRequest
    ApiKeyCreateResponse:
      properties:
        id:
          type: string
          maxLength: 100
          minLength: 1
          title: Id
        displayName:
          type: string
          minLength: 3
          title: Displayname
        expiration:
          anyOf:
          - type: string
            format: duration
          - type: 'null'
          title: Expiration
          description: Time delta from creation time to expiration. If None, then
            it does not expire.
        apiBaseUrl:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Apibaseurl
        apiKey:
          type: string
          title: Apikey
        apiSecret:
          type: string
          title: Apisecret
      type: object
      required:
      - id
      - displayName
      - apiKey
      - apiSecret
      title: ApiKeyCreateResponse
    ApiKeyGet:
      properties:
        id:
          type: string
          maxLength: 100
          minLength: 1
          title: Id
        displayName:
          type: string
          minLength: 3
          title: Displayname
      type: object
      required:
      - id
      - displayName
      title: ApiKeyGet
    AppStatusCheck:
      properties:
        app_name:
          type: string
          title: App Name
          description: Application name
        version:
          type: string
          title: Version
          description: Application's version
        services:
          additionalProperties: true
          type: object
          title: Services
          description: Other backend services connected from this service
          default: {}
        sessions:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Sessions
          description: Client sessions info. If single session per app, then is denoted
            as main
          default: {}
        url:
          anyOf:
          - type: string
            minLength: 1
            format: uri
          - type: 'null'
          title: Url
          description: Link to current resource
        diagnostics_url:
          anyOf:
          - type: string
            minLength: 1
            format: uri
          - type: 'null'
          title: Diagnostics Url
          description: Link to diagnostics report sub-resource. This MIGHT take some
            time to compute
      type: object
      required:
      - app_name
      - version
      title: AppStatusCheck
    Author:
      properties:
        name:
          type: string
          title: Name
          description: Name of the author
        email:
          type: string
          format: email
          title: Email
          description: Email address
        affiliation:
          anyOf:
          - type: string
          - type: 'null'
          title: Affiliation
      type: object
      required:
      - name
      - email
      title: Author
    Body_service_submission:
      properties:
        file:
          type: string
          format: binary
          title: File
          description: metadata.json submission file
      type: object
      required:
      - file
      title: Body_service_submission
    BootChoice:
      properties:
        label:
          type: string
          title: Label
        description:
          type: string
          title: Description
      type: object
      required:
      - label
      - description
      title: BootChoice
    BootMode:
      type: string
      enum:
      - CPU
      - GPU
      - MPI
      title: BootMode
    BootOption:
      properties:
        label:
          type: string
          title: Label
        description:
          type: string
          title: Description
        default:
          type: string
          title: Default
        items:
          additionalProperties:
            $ref: '#/components/schemas/BootChoice'
          type: object
          title: Items
      type: object
      required:
      - label
      - description
      - default
      - items
      title: BootOption
    CatalogLatestServiceGet:
      properties:
        key:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Key
        version:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Version
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        versionDisplay:
          anyOf:
          - type: string
          - type: 'null'
          title: Versiondisplay
        contact:
          anyOf:
          - type: string
            format: email
          - type: 'null'
          title: Contact
        type:
          $ref: '#/components/schemas/ServiceType'
        thumbnail:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Thumbnail
        icon:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Icon
        descriptionUi:
          type: boolean
          title: Descriptionui
          default: false
        authors:
          items:
            $ref: '#/components/schemas/Author'
          type: array
          minItems: 1
          title: Authors
        owner:
          anyOf:
          - type: string
            format: email
          - type: 'null'
          title: Owner
          description: None when the owner email cannot be found in the database
        inputs:
          type: object
          title: Inputs
        outputs:
          type: object
          title: Outputs
        bootOptions:
          anyOf:
          - type: object
          - type: 'null'
          title: Bootoptions
        minVisibleInputs:
          anyOf:
          - type: integer
            minimum: 0
          - type: 'null'
          title: Minvisibleinputs
        accessRights:
          anyOf:
          - additionalProperties:
              $ref: '#/components/schemas/ServiceGroupAccessRightsV2'
            type: object
          - type: 'null'
          title: Accessrights
        classifiers:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Classifiers
        quality:
          additionalProperties: true
          type: object
          title: Quality
        release:
          $ref: '#/components/schemas/ServiceRelease'
          description: release information of current (latest) service
      type: object
      required:
      - key
      - version
      - name
      - description
      - contact
      - type
      - authors
      - owner
      - inputs
      - outputs
      - accessRights
      - release
      title: CatalogLatestServiceGet
      example:
        accessRights:
          '1':
            execute: true
            write: false
        authors:
        - affiliation: ACME
          email: author@acme.com
          name: Author Bar
        classifiers: []
        contact: contact@acme.com
        description: A service which awaits for time to pass, two times.
        description_ui: true
        icon: https://cdn-icons-png.flaticon.com/512/25/25231.png
        inputs:
          input_1:
            description: Pick a file containing only one integer
            displayOrder: 1
            fileToKeyMap:
              single_number.txt: input_1
            keyId: input_1
            label: File with int number
            type: data:text/plain
          input_2:
            contentSchema:
              minimum: 0
              title: Sleep interval
              type: integer
              x_unit: second
            defaultValue: 2
            description: Choose an amount of time to sleep in range [0:]
            displayOrder: 2
            keyId: input_2
            label: Sleep interval
            type: ref_contentSchema
            unitLong: second
            unitShort: s
          input_3:
            defaultValue: false
            description: If set to true will cause service to fail after it sleeps
            displayOrder: 3
            keyId: input_3
            label: Fail after sleep
            type: boolean
          input_4:
            contentSchema:
              title: Distance to bed
              type: integer
              x_unit: meter
            defaultValue: 0
            description: It will first walk the distance to bed
            displayOrder: 4
            keyId: input_4
            label: Distance to bed
            type: ref_contentSchema
            unitLong: meter
            unitShort: m
          input_5:
            contentSchema:
              minimum: 0
              title: Dream of the night
              type: integer
              x_unit: byte
            defaultValue: 0
            description: Defines the size of the dream that will be generated [0:]
            displayOrder: 5
            keyId: input_5
            label: Dream (or nightmare) of the night
            type: ref_contentSchema
            unitLong: byte
            unitShort: B
        key: simcore/services/comp/itis/sleeper
        name: sleeper
        outputs:
          output_1:
            description: Integer is generated in range [1-9]
            displayOrder: 1
            fileToKeyMap:
              single_number.txt: output_1
            keyId: output_1
            label: File containing one random integer
            type: data:text/plain
          output_2:
            contentSchema:
              title: Random sleep interval
              type: integer
              x_unit: second
            description: Interval is generated in range [1-9]
            displayOrder: 2
            keyId: output_2
            label: Random sleep interval
            type: ref_contentSchema
            unitLong: second
            unitShort: s
          output_3:
            description: Contains some random data representing a dream
            displayOrder: 3
            fileToKeyMap:
              dream.txt: output_3
            keyId: output_3
            label: Dream output
            type: data:text/plain
        owner: owner@acme.com
        quality: {}
        release:
          released: '2025-07-20T15:00:00'
          version: 2.2.1
          version_display: Summer Release
        type: computational
        version: 2.2.1
        version_display: 2 Xtreme
    CatalogServiceGet:
      properties:
        key:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Key
        version:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Version
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        versionDisplay:
          anyOf:
          - type: string
          - type: 'null'
          title: Versiondisplay
        contact:
          anyOf:
          - type: string
            format: email
          - type: 'null'
          title: Contact
        type:
          $ref: '#/components/schemas/ServiceType'
        thumbnail:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Thumbnail
        icon:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Icon
        descriptionUi:
          type: boolean
          title: Descriptionui
          default: false
        authors:
          items:
            $ref: '#/components/schemas/Author'
          type: array
          minItems: 1
          title: Authors
        owner:
          anyOf:
          - type: string
            format: email
          - type: 'null'
          title: Owner
          description: None when the owner email cannot be found in the database
        inputs:
          type: object
          title: Inputs
          description: inputs with extended information
        outputs:
          type: object
          title: Outputs
          description: outputs with extended information
        bootOptions:
          anyOf:
          - type: object
          - type: 'null'
          title: Bootoptions
        minVisibleInputs:
          anyOf:
          - type: integer
            minimum: 0
          - type: 'null'
          title: Minvisibleinputs
        accessRights:
          anyOf:
          - additionalProperties:
              $ref: '#/components/schemas/ServiceGroupAccessRightsV2'
            type: object
          - type: 'null'
          title: Accessrights
        classifiers:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Classifiers
        quality:
          additionalProperties: true
          type: object
          title: Quality
        history:
          items:
            $ref: '#/components/schemas/ServiceRelease'
          type: array
          title: History
          description: history of releases for this service at this point in time,
            starting from the newest to the oldest. It includes current release.
          default: []
      type: object
      required:
      - key
      - version
      - name
      - description
      - contact
      - type
      - authors
      - owner
      - inputs
      - outputs
      - accessRights
      title: CatalogServiceGet
      example:
        accessRights:
          '1':
            execute: true
            write: false
        authors:
        - affiliation: ACME
          email: author@acme.com
          name: Author Bar
        classifiers: []
        contact: contact@acme.com
        description: A service which awaits for time to pass, two times.
        description_ui: true
        history:
        - released: '2024-07-21T15:00:00'
          version: 2.2.1
          version_display: Summer Release
        - compatibility:
            canUpdateTo:
              version: 2.2.1
          version: 2.0.0
        - version: 0.9.11
        - version: 0.9.10
        - compatibility:
            canUpdateTo:
              version: 0.9.11
          version: 0.9.8
        - compatibility:
            can_update_to:
              version: 0.9.11
          released: '2024-01-20T18:49:17'
          version: 0.9.1
          versionDisplay: Matterhorn
        - retired: '2024-07-20T16:00:00'
          version: 0.9.0
        - version: 0.8.0
        - version: 0.1.0
        icon: https://cdn-icons-png.flaticon.com/512/25/25231.png
        inputs:
          input0:
            contentSchema:
              title: Acceleration
              type: number
              x_unit: m/s**2
            description: acceleration with units
            keyId: input_1
            label: Acceleration
            type: ref_contentSchema
            unitLong: meter/second<sup>3</sup>
            unitShort: m/s<sup>3</sup>
        key: simcore/services/comp/itis/sleeper
        name: sleeper
        outputs:
          outFile:
            description: Time the service waited before completion
            displayOrder: 2
            keyId: output_2
            label: Time Slept
            type: number
            unit: second
            unitLong: seconds
            unitShort: sec
        owner: owner@acme.com
        quality: {}
        type: computational
        version: 2.2.1
        version_display: 2 Xtreme
    CatalogServiceUpdate:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        thumbnail:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Thumbnail
        icon:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Icon
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        descriptionUi:
          type: boolean
          title: Descriptionui
          default: false
        versionDisplay:
          anyOf:
          - type: string
          - type: 'null'
          title: Versiondisplay
        deprecated:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Deprecated
        classifiers:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Classifiers
        quality:
          additionalProperties: true
          type: object
          title: Quality
          default: {}
        accessRights:
          anyOf:
          - additionalProperties:
              $ref: '#/components/schemas/ServiceGroupAccessRightsV2'
            type: object
          - type: 'null'
          title: Accessrights
      type: object
      title: CatalogServiceUpdate
    ChangePasswordBody:
      properties:
        current:
          type: string
          format: password
          title: Current
          writeOnly: true
        new:
          type: string
          format: password
          title: New
          writeOnly: true
        confirm:
          type: string
          format: password
          title: Confirm
          writeOnly: true
      additionalProperties: false
      type: object
      required:
      - current
      - new
      - confirm
      title: ChangePasswordBody
    CodePageParams:
      properties:
        message:
          type: string
          title: Message
        expiration_2fa:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Expiration 2Fa
        next_url:
          anyOf:
          - type: string
          - type: 'null'
          title: Next Url
      type: object
      required:
      - message
      title: CodePageParams
    Compatibility:
      properties:
        canUpdateTo:
          $ref: '#/components/schemas/CompatibleService'
          description: Latest compatible service at this moment
      type: object
      required:
      - canUpdateTo
      title: Compatibility
    CompatibleService:
      properties:
        key:
          anyOf:
          - type: string
            pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          - type: 'null'
          title: Key
          description: If None, it refer to current service. Used only for inter-service
            compatibility
        version:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Version
      type: object
      required:
      - version
      title: CompatibleService
    ComputationCollectionRunRestGet:
      properties:
        collectionRunId:
          type: string
          format: uuid
          title: Collectionrunid
        projectIds:
          items:
            type: string
          type: array
          title: Projectids
        state:
          $ref: '#/components/schemas/RunningState'
        info:
          additionalProperties: true
          type: object
          title: Info
        submittedAt:
          type: string
          format: date-time
          title: Submittedat
        startedAt:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Startedat
        endedAt:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Endedat
        name:
          type: string
          title: Name
      type: object
      required:
      - collectionRunId
      - projectIds
      - state
      - info
      - submittedAt
      - startedAt
      - endedAt
      - name
      title: ComputationCollectionRunRestGet
    ComputationCollectionRunTaskRestGet:
      properties:
        projectUuid:
          type: string
          format: uuid
          title: Projectuuid
        nodeId:
          type: string
          format: uuid
          title: Nodeid
        state:
          $ref: '#/components/schemas/RunningState'
        progress:
          type: number
          title: Progress
        image:
          additionalProperties: true
          type: object
          title: Image
        startedAt:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Startedat
        endedAt:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Endedat
        logDownloadLink:
          anyOf:
          - type: string
            minLength: 1
            format: uri
          - type: 'null'
          title: Logdownloadlink
        osparcCredits:
          anyOf:
          - type: string
          - type: 'null'
          title: Osparccredits
        name:
          type: string
          title: Name
      type: object
      required:
      - projectUuid
      - nodeId
      - state
      - progress
      - image
      - startedAt
      - endedAt
      - logDownloadLink
      - osparcCredits
      - name
      title: ComputationCollectionRunTaskRestGet
    ComputationGet:
      properties:
        id:
          type: string
          format: uuid
          title: Id
          description: the id of the computation task
        state:
          $ref: '#/components/schemas/RunningState'
          description: the state of the computational task
        result:
          anyOf:
          - type: string
          - type: 'null'
          title: Result
          description: the result of the computational task
        pipeline_details:
          $ref: '#/components/schemas/PipelineDetails'
          description: the details of the generated pipeline
        iteration:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Iteration
          description: the iteration id of the computation task (none if no task ran
            yet)
        started:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Started
          description: the timestamp when the computation was started or None if not
            started yet
        stopped:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Stopped
          description: the timestamp when the computation was stopped or None if not
            started nor stopped yet
        submitted:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Submitted
          description: task last modification timestamp or None if the there is no
            task
        url:
          type: string
          minLength: 1
          format: uri
          title: Url
          description: the link where to get the status of the task
        stop_url:
          anyOf:
          - type: string
            minLength: 1
            format: uri
          - type: 'null'
          title: Stop Url
          description: the link where to stop the task
      type: object
      required:
      - id
      - state
      - pipeline_details
      - iteration
      - started
      - stopped
      - submitted
      - url
      title: ComputationGet
    ComputationRunRestGet:
      properties:
        projectUuid:
          type: string
          format: uuid
          title: Projectuuid
        iteration:
          type: integer
          title: Iteration
        state:
          $ref: '#/components/schemas/RunningState'
        info:
          additionalProperties: true
          type: object
          title: Info
        submittedAt:
          type: string
          format: date-time
          title: Submittedat
        startedAt:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Startedat
        endedAt:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Endedat
        rootProjectName:
          type: string
          title: Rootprojectname
        projectCustomMetadata:
          additionalProperties: true
          type: object
          title: Projectcustommetadata
      type: object
      required:
      - projectUuid
      - iteration
      - state
      - info
      - submittedAt
      - startedAt
      - endedAt
      - rootProjectName
      - projectCustomMetadata
      title: ComputationRunRestGet
    ComputationStart:
      properties:
        force_restart:
          type: boolean
          title: Force Restart
          default: false
        subgraph:
          items:
            type: string
          type: array
          uniqueItems: true
          title: Subgraph
          default: []
      type: object
      title: ComputationStart
    ComputationStarted:
      properties:
        pipeline_id:
          type: string
          format: uuid
          title: Pipeline Id
          description: ID for created pipeline (=project identifier)
        ref_ids:
          items:
            type: integer
          type: array
          title: Ref Ids
          description: Checkpoints IDs for created pipeline
          default: []
      type: object
      required:
      - pipeline_id
      title: ComputationStarted
    ComputationTaskRestGet:
      properties:
        projectUuid:
          type: string
          format: uuid
          title: Projectuuid
        nodeId:
          type: string
          format: uuid
          title: Nodeid
        state:
          $ref: '#/components/schemas/RunningState'
        progress:
          type: number
          title: Progress
        image:
          additionalProperties: true
          type: object
          title: Image
        startedAt:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Startedat
        endedAt:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Endedat
        logDownloadLink:
          anyOf:
          - type: string
            minLength: 1
            format: uri
          - type: 'null'
          title: Logdownloadlink
        nodeName:
          type: string
          title: Nodename
        osparcCredits:
          anyOf:
          - type: string
          - type: 'null'
          title: Osparccredits
      type: object
      required:
      - projectUuid
      - nodeId
      - state
      - progress
      - image
      - startedAt
      - endedAt
      - logDownloadLink
      - nodeName
      - osparcCredits
      title: ComputationTaskRestGet
    ConnectServiceToPricingPlanBodyParams:
      properties:
        serviceKey:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Servicekey
        serviceVersion:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Serviceversion
      type: object
      required:
      - serviceKey
      - serviceVersion
      title: ConnectServiceToPricingPlanBodyParams
    ConversationMessagePatch:
      properties:
        content:
          anyOf:
          - type: string
          - type: 'null'
          title: Content
      type: object
      title: ConversationMessagePatch
    ConversationMessageRestGet:
      properties:
        messageId:
          type: string
          format: uuid
          title: Messageid
        conversationId:
          type: string
          format: uuid
          title: Conversationid
        userGroupId:
          type: integer
          exclusiveMinimum: true
          title: Usergroupid
          minimum: 0
        content:
          type: string
          maxLength: 4096
          title: Content
        type:
          $ref: '#/components/schemas/ConversationMessageType'
        created:
          type: string
          format: date-time
          title: Created
        modified:
          type: string
          format: date-time
          title: Modified
      type: object
      required:
      - messageId
      - conversationId
      - userGroupId
      - content
      - type
      - created
      - modified
      title: ConversationMessageRestGet
    ConversationMessageType:
      type: string
      enum:
      - MESSAGE
      - NOTIFICATION
      title: ConversationMessageType
    ConversationPatch:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        extraContext:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Extracontext
        isReadByUser:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Isreadbyuser
        isReadBySupport:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Isreadbysupport
      type: object
      title: ConversationPatch
    ConversationRestGet:
      properties:
        conversationId:
          type: string
          format: uuid
          title: Conversationid
        productName:
          type: string
          title: Productname
        name:
          type: string
          maxLength: 50
          title: Name
        projectUuid:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Projectuuid
        userGroupId:
          type: integer
          exclusiveMinimum: true
          title: Usergroupid
          minimum: 0
        type:
          $ref: '#/components/schemas/ConversationType'
        fogbugzCaseId:
          anyOf:
          - type: string
          - type: 'null'
          title: Fogbugzcaseid
        created:
          type: string
          format: date-time
          title: Created
        modified:
          type: string
          format: date-time
          title: Modified
        extraContext:
          additionalProperties:
            type: string
          type: object
          title: Extracontext
        isReadByUser:
          type: boolean
          title: Isreadbyuser
        isReadBySupport:
          type: boolean
          title: Isreadbysupport
        lastMessageCreatedAt:
          type: string
          format: date-time
          title: Lastmessagecreatedat
      type: object
      required:
      - conversationId
      - productName
      - name
      - projectUuid
      - userGroupId
      - type
      - fogbugzCaseId
      - created
      - modified
      - extraContext
      - isReadByUser
      - isReadBySupport
      - lastMessageCreatedAt
      title: ConversationRestGet
    ConversationType:
      type: string
      enum:
      - PROJECT_STATIC
      - PROJECT_ANNOTATION
      - SUPPORT
      - SUPPORT_CALL
      title: ConversationType
    CountryInfoDict:
      properties:
        name:
          type: string
          title: Name
        alpha2:
          type: string
          title: Alpha2
      type: object
      required:
      - name
      - alpha2
      title: CountryInfoDict
    CreatePricingPlanBodyParams:
      properties:
        displayName:
          type: string
          title: Displayname
        description:
          type: string
          title: Description
        classification:
          $ref: '#/components/schemas/PricingPlanClassification'
        pricingPlanKey:
          type: string
          title: Pricingplankey
      type: object
      required:
      - displayName
      - description
      - classification
      - pricingPlanKey
      title: CreatePricingPlanBodyParams
    CreatePricingUnitBodyParams:
      properties:
        unitName:
          type: string
          title: Unitname
        unitExtraInfo:
          anyOf:
          - $ref: '#/components/schemas/UnitExtraInfoTier-Input'
          - $ref: '#/components/schemas/UnitExtraInfoLicense'
          title: Unitextrainfo
        default:
          type: boolean
          title: Default
        specificInfo:
          $ref: '#/components/schemas/SpecificInfo'
        costPerUnit:
          anyOf:
          - type: number
          - type: string
          title: Costperunit
        comment:
          type: string
          title: Comment
      type: object
      required:
      - unitName
      - unitExtraInfo
      - default
      - specificInfo
      - costPerUnit
      - comment
      title: CreatePricingUnitBodyParams
    CreateWalletBodyParams:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        thumbnail:
          anyOf:
          - type: string
          - type: 'null'
          title: Thumbnail
      type: object
      required:
      - name
      title: CreateWalletBodyParams
    CreateWalletPayment:
      properties:
        priceDollars:
          anyOf:
          - type: number
            exclusiveMaximum: true
            exclusiveMinimum: true
            maximum: 1000000.0
            minimum: 0.0
          - type: string
          title: Pricedollars
        comment:
          anyOf:
          - type: string
            maxLength: 100
          - type: 'null'
          title: Comment
      type: object
      required:
      - priceDollars
      title: CreateWalletPayment
    CreditPriceGet:
      properties:
        productName:
          type: string
          title: Productname
        usdPerCredit:
          anyOf:
          - type: number
            minimum: 0.0
          - type: 'null'
          title: Usdpercredit
          description: Price of a credit in USD. If None, then this product's price
            is UNDEFINED
        minPaymentAmountUsd:
          anyOf:
          - type: integer
            minimum: 0
          - type: 'null'
          title: Minpaymentamountusd
          description: Minimum amount (included) in USD that can be paid for this
            productCan be None if this product's price is UNDEFINED
      type: object
      required:
      - productName
      - usdPerCredit
      - minPaymentAmountUsd
      title: CreditPriceGet
    CreditTransactionStatus:
      type: string
      enum:
      - PENDING
      - BILLED
      - IN_DEBT
      - NOT_BILLED
      - REQUIRES_MANUAL_REVIEW
      title: CreditTransactionStatus
    CursorPage___T_Customized_PathMetaDataGet_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/PathMetaDataGet'
          type: array
          title: Items
        total:
          anyOf:
          - type: integer
            minimum: 0
          - type: 'null'
          title: Total
        current_page:
          anyOf:
          - type: string
          - type: 'null'
          title: Current Page
          description: Cursor to refetch the current page
        current_page_backwards:
          anyOf:
          - type: string
          - type: 'null'
          title: Current Page Backwards
          description: Cursor to refetch the current page starting from the last item
        previous_page:
          anyOf:
          - type: string
          - type: 'null'
          title: Previous Page
          description: Cursor for the previous page
        next_page:
          anyOf:
          - type: string
          - type: 'null'
          title: Next Page
          description: Cursor for the next page
      type: object
      required:
      - items
      title: CursorPage[~_T]Customized[PathMetaDataGet]
    DatCoreFileLink:
      properties:
        store:
          type: integer
          title: Store
          description: 'The store identifier: 0 for simcore S3, 1 for datcore'
        path:
          anyOf:
          - type: string
            pattern: ^(exports\/\d+\/[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}\.zip)|((api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$)
          - type: string
            pattern: ^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$
          title: Path
          description: The path to the file in the storage provider domain
        label:
          type: string
          title: Label
          description: The real file name
        eTag:
          anyOf:
          - type: string
          - type: 'null'
          title: Etag
          description: Entity tag that uniquely represents the file. The method to
            generate the tag is not specified (black box).
        dataset:
          type: string
          title: Dataset
          description: Unique identifier to access the dataset on datcore (REQUIRED
            for datcore)
      additionalProperties: false
      type: object
      required:
      - store
      - path
      - label
      - dataset
      title: DatCoreFileLink
      description: I/O port type to hold a link to a file in DATCORE storage
    DataExportPost:
      properties:
        paths:
          items:
            type: string
            format: path
          type: array
          title: Paths
      type: object
      required:
      - paths
      title: DataExportPost
    DatasetMetaData:
      properties:
        dataset_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Dataset Id
        display_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Display Name
      type: object
      title: DatasetMetaData
      example:
        dataset_id: N:id-aaaa
        display_name: simcore-testing
    DownloadLink:
      properties:
        downloadLink:
          type: string
          title: Downloadlink
        label:
          anyOf:
          - type: string
          - type: 'null'
          title: Label
          description: Display name
      additionalProperties: false
      type: object
      required:
      - downloadLink
      title: DownloadLink
      description: I/O port type to hold a generic download link to a file (e.g. S3
        pre-signed link, etc)
    EmailTestFailed:
      properties:
        test_name:
          type: string
          title: Test Name
        error_code:
          anyOf:
          - type: string
          - type: 'null'
          title: Error Code
        user_message:
          type: string
          title: User Message
          default: Email test failed
      type: object
      required:
      - test_name
      title: EmailTestFailed
    EmailTestPassed:
      properties:
        fixtures:
          additionalProperties: true
          type: object
          title: Fixtures
        info:
          additionalProperties: true
          type: object
          title: Info
      type: object
      required:
      - fixtures
      - info
      title: EmailTestPassed
    EmptyModel:
      properties: {}
      additionalProperties: false
      type: object
      title: EmptyModel
    ? Envelope_Annotated_Union_RegisteredProjectFunctionGet__RegisteredSolverFunctionGet___FieldInfo_annotation_NoneType__required_True__discriminator__function_class____
    : properties:
        data:
          anyOf:
          - oneOf:
            - $ref: '#/components/schemas/RegisteredProjectFunctionGet'
            - $ref: '#/components/schemas/RegisteredSolverFunctionGet'
            discriminator:
              propertyName: functionClass
              mapping:
                PROJECT: '#/components/schemas/RegisteredProjectFunctionGet'
                SOLVER: '#/components/schemas/RegisteredSolverFunctionGet'
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[Annotated[Union[RegisteredProjectFunctionGet, RegisteredSolverFunctionGet],
        FieldInfo(annotation=NoneType, required=True, discriminator='function_class')]]
    Envelope_AnyUrl_:
      properties:
        data:
          anyOf:
          - type: string
            minLength: 1
            format: uri
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[AnyUrl]
    Envelope_ApiKeyCreateResponse_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/ApiKeyCreateResponse'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[ApiKeyCreateResponse]
    Envelope_ApiKeyGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/ApiKeyGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[ApiKeyGet]
    Envelope_AppStatusCheck_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/AppStatusCheck'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[AppStatusCheck]
    Envelope_CatalogServiceGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/CatalogServiceGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[CatalogServiceGet]
    Envelope_ComputationGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/ComputationGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[ComputationGet]
    Envelope_ComputationStarted_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/ComputationStarted'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[ComputationStarted]
    Envelope_ConversationMessageRestGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/ConversationMessageRestGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[ConversationMessageRestGet]
    Envelope_ConversationRestGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/ConversationRestGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[ConversationRestGet]
    Envelope_CreditPriceGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/CreditPriceGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[CreditPriceGet]
    Envelope_FileMetaDataGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/FileMetaDataGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[FileMetaDataGet]
    Envelope_FileUploadCompleteFutureResponse_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/FileUploadCompleteFutureResponse'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[FileUploadCompleteFutureResponse]
    Envelope_FileUploadCompleteResponse_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/FileUploadCompleteResponse'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[FileUploadCompleteResponse]
    Envelope_FileUploadCompletionBody_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/FileUploadCompletionBody'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[FileUploadCompletionBody]
    Envelope_FileUploadSchema_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/FileUploadSchema'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[FileUploadSchema]
    Envelope_FolderGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/FolderGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[FolderGet]
    Envelope_FunctionGroupAccessRightsGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/FunctionGroupAccessRightsGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[FunctionGroupAccessRightsGet]
    Envelope_GetProjectInactivityResponse_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/GetProjectInactivityResponse'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[GetProjectInactivityResponse]
    Envelope_GetWalletAutoRecharge_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/GetWalletAutoRecharge'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[GetWalletAutoRecharge]
    Envelope_GroupGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/GroupGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[GroupGet]
    Envelope_GroupUserGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/GroupUserGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[GroupUserGet]
    Envelope_HealthInfoDict_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/HealthInfoDict'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[HealthInfoDict]
    Envelope_InvitationGenerated_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/InvitationGenerated'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[InvitationGenerated]
    Envelope_InvitationInfo_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/InvitationInfo'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[InvitationInfo]
    Envelope_LicensedItemPurchaseGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/LicensedItemPurchaseGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[LicensedItemPurchaseGet]
    Envelope_Log_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/Log'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[Log]
    Envelope_LoginNextPage_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/LoginNextPage'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[LoginNextPage]
    Envelope_MyFunctionPermissionsGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/MyFunctionPermissionsGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[MyFunctionPermissionsGet]
    Envelope_MyGroupsGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/MyGroupsGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[MyGroupsGet]
    Envelope_MyProfileRestGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/MyProfileRestGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[MyProfileRestGet]
    Envelope_MyTokenGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/MyTokenGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[MyTokenGet]
    Envelope_NodeCreated_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/NodeCreated'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[NodeCreated]
    Envelope_NodeRetrieved_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/NodeRetrieved'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[NodeRetrieved]
    Envelope_PaymentMethodGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/PaymentMethodGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[PaymentMethodGet]
    Envelope_PaymentMethodInitiated_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/PaymentMethodInitiated'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[PaymentMethodInitiated]
    Envelope_PresignedLink_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/PresignedLink'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[PresignedLink]
    Envelope_PricingPlanAdminGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/PricingPlanAdminGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[PricingPlanAdminGet]
    Envelope_PricingPlanGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/PricingPlanGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[PricingPlanGet]
    Envelope_PricingPlanToServiceAdminGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/PricingPlanToServiceAdminGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[PricingPlanToServiceAdminGet]
    Envelope_PricingUnitAdminGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/PricingUnitAdminGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[PricingUnitAdminGet]
    Envelope_PricingUnitGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/PricingUnitGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[PricingUnitGet]
    Envelope_ProductGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/ProductGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[ProductGet]
    Envelope_ProductUIGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/ProductUIGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[ProductUIGet]
    Envelope_ProjectGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/ProjectGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[ProjectGet]
    Envelope_ProjectGroupGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/ProjectGroupGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[ProjectGroupGet]
    Envelope_ProjectMetadataGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/ProjectMetadataGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[ProjectMetadataGet]
    Envelope_ProjectNodeServicesGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/ProjectNodeServicesGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[ProjectNodeServicesGet]
    Envelope_ProjectShareAccepted_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/ProjectShareAccepted'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[ProjectShareAccepted]
    Envelope_ProjectStateOutputSchema_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/ProjectStateOutputSchema'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[ProjectStateOutputSchema]
    Envelope_ProjectsCommentsAPI_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/ProjectsCommentsAPI'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[ProjectsCommentsAPI]
    Envelope_RegisterPhoneNextPage_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/RegisterPhoneNextPage'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[RegisterPhoneNextPage]
    Envelope_ResearchResource_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/ResearchResource'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[ResearchResource]
    Envelope_ServiceInputGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/ServiceInputGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[ServiceInputGet]
    Envelope_ServicePricingPlanGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/ServicePricingPlanGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[ServicePricingPlanGet]
    Envelope_StatusDiagnosticsGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/StatusDiagnosticsGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[StatusDiagnosticsGet]
    Envelope_TagGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/TagGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[TagGet]
    Envelope_TaskGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/TaskGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[TaskGet]
    Envelope_TaskStatus_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/TaskStatus'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[TaskStatus]
    Envelope_TaskStreamResponse_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/TaskStreamResponse'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[TaskStreamResponse]
    Envelope_Union_EmailTestFailed__EmailTestPassed__:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/EmailTestFailed'
          - $ref: '#/components/schemas/EmailTestPassed'
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[Union[EmailTestFailed, EmailTestPassed]]
    Envelope_Union_NodeGetIdle__NodeGetUnknown__RunningDynamicServiceDetails__NodeGet__:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/NodeGetIdle'
          - $ref: '#/components/schemas/NodeGetUnknown'
          - $ref: '#/components/schemas/RunningDynamicServiceDetails'
          - $ref: '#/components/schemas/NodeGet'
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[Union[NodeGetIdle, NodeGetUnknown, RunningDynamicServiceDetails,
        NodeGet]]
    Envelope_Union_PricingUnitGet__NoneType__:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/PricingUnitGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[Union[PricingUnitGet, NoneType]]
    Envelope_Union_WalletGet__NoneType__:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/WalletGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[Union[WalletGet, NoneType]]
    Envelope_UserAccountGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/UserAccountGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[UserAccountGet]
    Envelope_WalletGetWithAvailableCredits_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/WalletGetWithAvailableCredits'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[WalletGetWithAvailableCredits]
    Envelope_WalletGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/WalletGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[WalletGet]
    Envelope_WalletGroupGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/WalletGroupGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[WalletGroupGet]
    Envelope_WalletPaymentInitiated_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/WalletPaymentInitiated'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[WalletPaymentInitiated]
    Envelope_WorkspaceGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/WorkspaceGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[WorkspaceGet]
    Envelope_WorkspaceGroupGet_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/WorkspaceGroupGet'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[WorkspaceGroupGet]
    Envelope__ProjectGroupAccess_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/_ProjectGroupAccess'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[_ProjectGroupAccess]
    Envelope__ProjectNodePreview_:
      properties:
        data:
          anyOf:
          - $ref: '#/components/schemas/_ProjectNodePreview'
          - type: 'null'
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[_ProjectNodePreview]
    Envelope_dict_Annotated_int__Gt___FunctionGroupAccessRightsGet__:
      properties:
        data:
          anyOf:
          - additionalProperties:
              $ref: '#/components/schemas/FunctionGroupAccessRightsGet'
            type: object
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[dict[Annotated[int, Gt], FunctionGroupAccessRightsGet]]
    Envelope_dict_Annotated_str__StringConstraints___ImageResources__:
      properties:
        data:
          anyOf:
          - type: object
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[dict[Annotated[str, StringConstraints], ImageResources]]
    Envelope_dict_Literal__comment_id____Annotated_int__Gt___:
      properties:
        data:
          anyOf:
          - additionalProperties:
              type: integer
              exclusiveMinimum: true
              minimum: 0
            propertyNames:
              const: comment_id
            type: object
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[dict[Literal['comment_id'], Annotated[int, Gt]]]
    Envelope_dict_UUID__Activity__:
      properties:
        data:
          anyOf:
          - additionalProperties:
              $ref: '#/components/schemas/Activity'
            propertyNames:
              format: uuid
            type: object
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[dict[UUID, Activity]]
    Envelope_dict_UUID__ProjectInputGet__:
      properties:
        data:
          anyOf:
          - additionalProperties:
              $ref: '#/components/schemas/ProjectInputGet'
            propertyNames:
              format: uuid
            type: object
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[dict[UUID, ProjectInputGet]]
    Envelope_dict_UUID__ProjectOutputGet__:
      properties:
        data:
          anyOf:
          - additionalProperties:
              $ref: '#/components/schemas/ProjectOutputGet'
            propertyNames:
              format: uuid
            type: object
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[dict[UUID, ProjectOutputGet]]
    Envelope_dict_str__Any__:
      properties:
        data:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[dict[str, Any]]
    ? Envelope_list_Annotated_Union_RegisteredProjectFunctionGet__RegisteredSolverFunctionGet___FieldInfo_annotation_NoneType__required_True__discriminator__function_class_____
    : properties:
        data:
          anyOf:
          - items:
              oneOf:
              - $ref: '#/components/schemas/RegisteredProjectFunctionGet'
              - $ref: '#/components/schemas/RegisteredSolverFunctionGet'
              discriminator:
                propertyName: functionClass
                mapping:
                  PROJECT: '#/components/schemas/RegisteredProjectFunctionGet'
                  SOLVER: '#/components/schemas/RegisteredSolverFunctionGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[Annotated[Union[RegisteredProjectFunctionGet, RegisteredSolverFunctionGet],
        FieldInfo(annotation=NoneType, required=True, discriminator='function_class')]]]
    Envelope_list_Annotated_str__StringConstraints___:
      properties:
        data:
          anyOf:
          - items:
              type: string
              pattern: ^[-_a-zA-Z0-9]+$
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[Annotated[str, StringConstraints]]]
    Envelope_list_Announcement__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/Announcement'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[Announcement]]
    Envelope_list_ApiKeyGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/ApiKeyGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[ApiKeyGet]]
    Envelope_list_DatasetMetaData__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/DatasetMetaData'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[DatasetMetaData]]
    Envelope_list_FileMetaDataGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/FileMetaDataGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[FileMetaDataGet]]
    Envelope_list_FolderGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/FolderGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[FolderGet]]
    Envelope_list_GroupUserGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/GroupUserGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[GroupUserGet]]
    Envelope_list_MyPermissionGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/MyPermissionGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[MyPermissionGet]]
    Envelope_list_MyTokenGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/MyTokenGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[MyTokenGet]]
    Envelope_list_PaymentMethodGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/PaymentMethodGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[PaymentMethodGet]]
    Envelope_list_PricingPlanToServiceAdminGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/PricingPlanToServiceAdminGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[PricingPlanToServiceAdminGet]]
    Envelope_list_ProjectGroupGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/ProjectGroupGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[ProjectGroupGet]]
    Envelope_list_ProjectMetadataPortGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/ProjectMetadataPortGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[ProjectMetadataPortGet]]
    Envelope_list_ProjectsCommentsAPI__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/ProjectsCommentsAPI'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[ProjectsCommentsAPI]]
    Envelope_list_ResourceHit__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/ResourceHit'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[ResourceHit]]
    Envelope_list_ServiceGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/ServiceGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[ServiceGet]]
    Envelope_list_ServiceInputGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/ServiceInputGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[ServiceInputGet]]
    Envelope_list_ServiceOutputGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/ServiceOutputGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[ServiceOutputGet]]
    Envelope_list_TagGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/TagGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[TagGet]]
    Envelope_list_TagGroupGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/TagGroupGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[TagGroupGet]]
    Envelope_list_TaskGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/TaskGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[TaskGet]]
    Envelope_list_UserAccountGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/UserAccountGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[UserAccountGet]]
    Envelope_list_UserGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/UserGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[UserGet]]
    Envelope_list_UserNotification__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/UserNotification'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[UserNotification]]
    Envelope_list_Viewer__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/Viewer'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[Viewer]]
    Envelope_list_WalletGetWithAvailableCredits__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/WalletGetWithAvailableCredits'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[WalletGetWithAvailableCredits]]
    Envelope_list_WalletGroupGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/WalletGroupGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[WalletGroupGet]]
    Envelope_list_WorkspaceGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/WorkspaceGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[WorkspaceGet]]
    Envelope_list_WorkspaceGroupGet__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/WorkspaceGroupGet'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[WorkspaceGroupGet]]
    Envelope_list__ProjectNodePreview__:
      properties:
        data:
          anyOf:
          - items:
              $ref: '#/components/schemas/_ProjectNodePreview'
            type: array
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[list[_ProjectNodePreview]]
    Envelope_str_:
      properties:
        data:
          anyOf:
          - type: string
          - type: 'null'
          title: Data
        error:
          anyOf:
          - {}
          - type: 'null'
          title: Error
      type: object
      title: Envelope[str]
    EnvelopedError:
      properties:
        data:
          type: 'null'
          title: Data
        error:
          $ref: '#/components/schemas/ErrorGet'
      type: object
      required:
      - error
      title: EnvelopedError
    ErrorGet:
      properties:
        message:
          type: string
          minLength: 5
          title: Message
          description: Message displayed to the user
        supportId:
          anyOf:
          - type: string
            maxLength: 100
            minLength: 1
          - type: 'null'
          title: Supportid
          description: ID to track the incident during support
        status:
          type: integer
          title: Status
          description: Redundant HTTP status code of the error.Must be the same as
            in the HTTP response
        errors:
          items:
            $ref: '#/components/schemas/ErrorItemType'
          type: array
          title: Errors
          default: []
          deprecated: true
        logs:
          items:
            $ref: '#/components/schemas/LogMessageType'
          type: array
          title: Logs
          default: []
          deprecated: true
      type: object
      required:
      - message
      - status
      title: ErrorGet
    ErrorItemType:
      properties:
        code:
          type: string
          title: Code
        message:
          type: string
          title: Message
        resource:
          anyOf:
          - type: string
          - type: 'null'
          title: Resource
        field:
          anyOf:
          - type: string
          - type: 'null'
          title: Field
      type: object
      required:
      - code
      - message
      - resource
      - field
      title: ErrorItemType
    ExecutableAccessRights:
      properties:
        write:
          type: boolean
          title: Write
          description: can change executable settings
        execute:
          type: boolean
          title: Execute
          description: can run executable
      additionalProperties: false
      type: object
      required:
      - write
      - execute
      title: ExecutableAccessRights
    FeaturesDict:
      properties:
        age:
          type: string
          title: Age
        date:
          type: string
          format: date
          title: Date
        ethnicity:
          type: string
          title: Ethnicity
        functionality:
          type: string
          title: Functionality
        height:
          type: string
          title: Height
        name:
          type: string
          title: Name
        sex:
          type: string
          title: Sex
        species:
          type: string
          title: Species
        version:
          type: string
          title: Version
        weight:
          type: string
          title: Weight
      type: object
      required:
      - date
      title: FeaturesDict
    FileLocation:
      properties:
        name:
          type: string
          title: Name
        id:
          type: integer
          title: Id
      additionalProperties: false
      type: object
      required:
      - name
      - id
      title: FileLocation
    FileMetaData:
      properties:
        file_uuid:
          anyOf:
          - type: string
          - type: 'null'
          title: File Uuid
        location_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Location Id
        project_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Project Name
        node_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Node Name
        file_name:
          anyOf:
          - type: string
          - type: 'null'
          title: File Name
        file_id:
          anyOf:
          - type: string
          - type: 'null'
          title: File Id
        created_at:
          anyOf:
          - type: string
          - type: 'null'
          title: Created At
        last_modified:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Modified
        file_size:
          anyOf:
          - type: integer
          - type: 'null'
          title: File Size
        entity_tag:
          anyOf:
          - type: string
          - type: 'null'
          title: Entity Tag
        is_directory:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Is Directory
      type: object
      title: FileMetaData
      example:
        created_at: '2019-06-19T12:29:03.308611Z'
        entity_tag: a87ff679a2f3e71d9181a67b7542122c
        file_id: N:package:e263da07-2d89-45a6-8b0f-61061b913873
        file_name: example.txt
        file_size: 73
        file_uuid: simcore-testing/105/1000/3
        is_directory: false
        last_modified: '2019-06-19T12:29:03.78852Z'
        location_id: '0'
        node_name: alpha
        project_name: futurology
    FileMetaDataGet:
      properties:
        file_uuid:
          type: string
          title: File Uuid
          description: NOT a unique ID, like (api|uuid)/uuid/file_name or DATCORE
            folder structure
        location_id:
          type: integer
          title: Location Id
          description: Storage location
        project_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Project Name
          description: optional project name, used by frontend to display path
        node_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Node Name
          description: optional node name, used by frontend to display path
        file_name:
          type: string
          title: File Name
          description: Display name for a file
        file_id:
          anyOf:
          - type: string
            pattern: ^(exports\/\d+\/[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}\.zip)|((api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$)
          - type: string
            pattern: ^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$
          title: File Id
          description: THIS IS the unique ID for the file. either (api|project_id)/node_id/file_name.ext
            for S3 and N:package:UUID for datcore
        created_at:
          type: string
          format: date-time
          title: Created At
        last_modified:
          type: string
          format: date-time
          title: Last Modified
        file_size:
          anyOf:
          - type: integer
            const: -1
          - type: integer
            minimum: 0
          title: File Size
          description: File size in bytes (-1 means invalid)
          default: -1
        entity_tag:
          anyOf:
          - type: string
          - type: 'null'
          title: Entity Tag
          description: Entity tag (or ETag), represents a specific version of the
            file, None if invalid upload or datcore
        is_soft_link:
          type: boolean
          title: Is Soft Link
          description: If true, this file is a soft link.i.e. is another entry with
            the same object_name
          default: false
        is_directory:
          type: boolean
          title: Is Directory
          description: if True this is a directory
          default: false
        sha256_checksum:
          anyOf:
          - type: string
            pattern: ^[a-fA-F0-9]{64}$
          - type: 'null'
          title: Sha256 Checksum
          description: 'SHA256 message digest of the file content. Main purpose: cheap
            lookup.'
      type: object
      required:
      - file_uuid
      - location_id
      - file_name
      - file_id
      - created_at
      - last_modified
      title: FileMetaDataGet
    FileUploadCompleteFutureResponse:
      properties:
        state:
          $ref: '#/components/schemas/FileUploadCompleteState'
        e_tag:
          anyOf:
          - type: string
          - type: 'null'
          title: E Tag
      type: object
      required:
      - state
      title: FileUploadCompleteFutureResponse
    FileUploadCompleteLinks:
      properties:
        state:
          type: string
          minLength: 1
          format: uri
          title: State
      type: object
      required:
      - state
      title: FileUploadCompleteLinks
    FileUploadCompleteResponse:
      properties:
        links:
          $ref: '#/components/schemas/FileUploadCompleteLinks'
      type: object
      required:
      - links
      title: FileUploadCompleteResponse
    FileUploadCompleteState:
      type: string
      enum:
      - ok
      - nok
      title: FileUploadCompleteState
    FileUploadCompletionBody:
      properties:
        parts:
          items:
            $ref: '#/components/schemas/UploadedPart'
          type: array
          title: Parts
      type: object
      required:
      - parts
      title: FileUploadCompletionBody
    FileUploadLinks:
      properties:
        abort_upload:
          type: string
          minLength: 1
          format: uri
          title: Abort Upload
        complete_upload:
          type: string
          minLength: 1
          format: uri
          title: Complete Upload
      type: object
      required:
      - abort_upload
      - complete_upload
      title: FileUploadLinks
    FileUploadSchema:
      properties:
        chunk_size:
          type: integer
          minimum: 0
          title: Chunk Size
        urls:
          items:
            type: string
            minLength: 1
            format: uri
          type: array
          title: Urls
        links:
          $ref: '#/components/schemas/FileUploadLinks'
      additionalProperties: false
      type: object
      required:
      - chunk_size
      - urls
      - links
      title: FileUploadSchema
    FolderCreateBodyParams:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 1
          title: Name
        parentFolderId:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Parentfolderid
        workspaceId:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Workspaceid
      additionalProperties: false
      type: object
      required:
      - name
      title: FolderCreateBodyParams
    FolderGet:
      properties:
        folderId:
          type: integer
          exclusiveMinimum: true
          title: Folderid
          minimum: 0
        parentFolderId:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Parentfolderid
        name:
          type: string
          title: Name
        createdAt:
          type: string
          format: date-time
          title: Createdat
        modifiedAt:
          type: string
          format: date-time
          title: Modifiedat
        trashedAt:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Trashedat
        trashedBy:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Trashedby
          description: The primary gid of the user who trashed
        owner:
          type: integer
          exclusiveMinimum: true
          title: Owner
          minimum: 0
        workspaceId:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Workspaceid
        myAccessRights:
          $ref: '#/components/schemas/AccessRights'
      type: object
      required:
      - folderId
      - name
      - createdAt
      - modifiedAt
      - trashedAt
      - trashedBy
      - owner
      - workspaceId
      - myAccessRights
      title: FolderGet
    FolderReplaceBodyParams:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 1
          title: Name
        parentFolderId:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Parentfolderid
      additionalProperties: false
      type: object
      required:
      - name
      title: FolderReplaceBodyParams
    FunctionGroupAccessRightsGet:
      properties:
        read:
          type: boolean
          title: Read
        write:
          type: boolean
          title: Write
        execute:
          type: boolean
          title: Execute
      type: object
      required:
      - read
      - write
      - execute
      title: FunctionGroupAccessRightsGet
    FunctionGroupAccessRightsUpdate:
      properties:
        read:
          type: boolean
          title: Read
        write:
          type: boolean
          title: Write
        execute:
          type: boolean
          title: Execute
      type: object
      required:
      - read
      - write
      - execute
      title: FunctionGroupAccessRightsUpdate
    GetProjectInactivityResponse:
      properties:
        is_inactive:
          type: boolean
          title: Is Inactive
      type: object
      required:
      - is_inactive
      title: GetProjectInactivityResponse
      example:
        is_inactive: 'false'
    GetWalletAutoRecharge:
      properties:
        enabled:
          type: boolean
          title: Enabled
          description: Enables/disables auto-recharge trigger in this wallet
          default: false
        paymentMethodId:
          anyOf:
          - type: string
            maxLength: 100
            minLength: 1
          - type: 'null'
          title: Paymentmethodid
          description: Payment method in the wallet used to perform the auto-recharge
            payments or None if still undefined
        minBalanceInCredits:
          type: string
          title: Minbalanceincredits
          description: Minimum balance in credits that triggers an auto-recharge [Read
            only]
        topUpAmountInUsd:
          type: string
          title: Topupamountinusd
          description: Amount in USD payed when auto-recharge condition is satisfied
        monthlyLimitInUsd:
          anyOf:
          - type: string
          - type: 'null'
          title: Monthlylimitinusd
          description: Maximum amount in USD charged within a natural month.None indicates
            no limit.
      type: object
      required:
      - paymentMethodId
      - minBalanceInCredits
      - topUpAmountInUsd
      - monthlyLimitInUsd
      title: GetWalletAutoRecharge
    GroupAccessRights:
      properties:
        read:
          type: boolean
          title: Read
        write:
          type: boolean
          title: Write
        delete:
          type: boolean
          title: Delete
      type: object
      required:
      - read
      - write
      - delete
      title: GroupAccessRights
      description: defines acesss rights for the user
    GroupCreate:
      properties:
        label:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[A-Za-z0-9 ._-]+$
          title: Label
        description:
          type: string
          maxLength: 5000
          minLength: 3
          title: Description
        thumbnail:
          anyOf:
          - type: string
            minLength: 1
            format: uri
          - type: 'null'
          title: Thumbnail
      type: object
      required:
      - label
      - description
      title: GroupCreate
    GroupGet:
      properties:
        gid:
          type: integer
          exclusiveMinimum: true
          title: Gid
          description: the group's unique ID
          minimum: 0
        label:
          type: string
          title: Label
          description: the group's display name
        description:
          type: string
          title: Description
        thumbnail:
          anyOf:
          - type: string
            minLength: 1
            format: uri
          - type: 'null'
          title: Thumbnail
          description: a link to the group's thumbnail
        accessRights:
          $ref: '#/components/schemas/GroupAccessRights'
        inclusionRules:
          additionalProperties:
            type: string
          type: object
          title: Inclusionrules
          deprecated: true
      type: object
      required:
      - gid
      - label
      - description
      - accessRights
      title: GroupGet
    GroupGetBase:
      properties:
        gid:
          type: integer
          exclusiveMinimum: true
          title: Gid
          description: the group's unique ID
          minimum: 0
        label:
          type: string
          title: Label
          description: the group's display name
        description:
          type: string
          title: Description
        thumbnail:
          anyOf:
          - type: string
            minLength: 1
            format: uri
          - type: 'null'
          title: Thumbnail
          description: a link to the group's thumbnail
      type: object
      required:
      - gid
      - label
      - description
      title: GroupGetBase
    GroupUpdate:
      properties:
        label:
          anyOf:
          - type: string
            maxLength: 100
            minLength: 1
            pattern: ^[A-Za-z0-9 ._-]+$
          - type: 'null'
          title: Label
        description:
          anyOf:
          - type: string
            maxLength: 5000
            minLength: 3
          - type: 'null'
          title: Description
        thumbnail:
          anyOf:
          - type: string
            minLength: 1
            format: uri
          - type: 'null'
          title: Thumbnail
      type: object
      title: GroupUpdate
    GroupUserAdd:
      properties:
        uid:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Uid
        userName:
          anyOf:
          - type: string
            maxLength: 100
            minLength: 4
          - type: 'null'
          title: Username
        email:
          anyOf:
          - type: string
            format: email
          - type: 'null'
          title: Email
          description: Accessible only if the user has opted to share their email
            in privacy settings
      type: object
      title: GroupUserAdd
      description: "Identify the user with either `email` or `uid` \u2014 only one."
    GroupUserGet:
      properties:
        id:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Id
          description: the user's id
        userName:
          anyOf:
          - type: string
            maxLength: 100
            minLength: 4
          - type: 'null'
          title: Username
          description: None if private
        gid:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Gid
          description: the user primary gid
        login:
          anyOf:
          - type: string
            format: email
          - type: 'null'
          title: Login
          description: the user's email or None if private
        first_name:
          anyOf:
          - type: string
          - type: 'null'
          title: First Name
          description: None if private
        last_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Last Name
          description: None if private
        gravatar_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Gravatar Id
          description: the user gravatar id hash
          deprecated: true
        accessRights:
          anyOf:
          - $ref: '#/components/schemas/GroupAccessRights'
          - type: 'null'
          description: If group is standard, these are these are the access rights
            of the user to it.None if primary group.
      type: object
      title: GroupUserGet
      example:
        accessRights:
          delete: false
          read: true
          write: false
        first_name: Mr
        gid: '3'
        gravatar_id: a1af5c6ecc38e81f29695f01d6ceb540
        id: '1'
        last_name: Smith
        login: mr.smith@matrix.com
        userName: mrmith
    GroupUserUpdate:
      properties:
        accessRights:
          $ref: '#/components/schemas/GroupAccessRights'
      type: object
      required:
      - accessRights
      title: GroupUserUpdate
      example:
        accessRights:
          delete: false
          read: true
          write: false
    HardwareInfo:
      properties:
        aws_ec2_instances:
          items:
            type: string
          type: array
          title: Aws Ec2 Instances
      type: object
      required:
      - aws_ec2_instances
      title: HardwareInfo
    HealthInfoDict:
      properties:
        name:
          type: string
          title: Name
        version:
          type: string
          title: Version
        api_version:
          type: string
          title: Api Version
      type: object
      required:
      - name
      - version
      - api_version
      title: HealthInfoDict
    ImageResources:
      properties:
        image:
          type: string
          pattern: ^(?:([a-z0-9-]+(?:\.[a-z0-9-]+)+(?::\d+)?|[a-z0-9-]+:\d+)/)?((?:[a-z0-9][a-z0-9_.-]*/)*[a-z0-9-_]+[a-z0-9])(?::([\w][\w.-]{0,127}))?(\@sha256:[a-fA-F0-9]{32,64})?$
          title: Image
          description: Used by the frontend to provide a context for the users.Services
            with a docker-compose spec will have multiple entries.Using the `image:version`
            instead of the docker-compose spec is more helpful for the end user.
        resources:
          additionalProperties:
            $ref: '#/components/schemas/ResourceValue'
          type: object
          title: Resources
        boot_modes:
          items:
            $ref: '#/components/schemas/BootMode'
          type: array
          title: Boot Modes
          description: describe how a service shall be booted, using CPU, MPI, openMP
            or GPU
          default:
          - CPU
      type: object
      required:
      - image
      - resources
      title: ImageResources
      example:
        image: simcore/service/dynamic/pretty-intense:1.0.0
        resources:
          AIRAM:
            limit: 1
            reservation: 1
          ANY_resource:
            limit: some_value
            reservation: some_value
          CPU:
            limit: 4
            reservation: 0.1
          RAM:
            limit: 103079215104
            reservation: 536870912
          VRAM:
            limit: 1
            reservation: 1
    InvitationCheck:
      properties:
        invitation:
          type: string
          title: Invitation
          description: Invitation code
      additionalProperties: false
      type: object
      required:
      - invitation
      title: InvitationCheck
    InvitationGenerate:
      properties:
        guest:
          type: string
          format: email
          title: Guest
        trialAccountDays:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Trialaccountdays
          description: Expiration time in days for trial accounts; `null` means not
            a trial account
        extraCreditsInUsd:
          anyOf:
          - type: integer
            exclusiveMaximum: true
            minimum: 0
            maximum: 500
          - type: 'null'
          title: Extracreditsinusd
          description: Welcome credits in USD; `null` means no welcome credits
      type: object
      required:
      - guest
      title: InvitationGenerate
    InvitationGenerated:
      properties:
        productName:
          type: string
          title: Productname
        issuer:
          type: string
          title: Issuer
        guest:
          type: string
          format: email
          title: Guest
        trialAccountDays:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Trialaccountdays
        extraCreditsInUsd:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Extracreditsinusd
        created:
          type: string
          format: date-time
          title: Created
        invitationLink:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Invitationlink
      type: object
      required:
      - productName
      - issuer
      - guest
      - created
      - invitationLink
      title: InvitationGenerated
    InvitationInfo:
      properties:
        email:
          anyOf:
          - type: string
            format: email
          - type: 'null'
          title: Email
          description: Email associated to invitation or None
      additionalProperties: false
      type: object
      title: InvitationInfo
    JSONFunctionInputSchema:
      properties:
        schema_content:
          additionalProperties: true
          type: object
          title: JSON Schema
          description: JSON Schema
          default: {}
        schema_class:
          type: string
          const: application/schema+json
          title: Schema Class
          default: application/schema+json
      type: object
      title: JSONFunctionInputSchema
    JSONFunctionOutputSchema:
      properties:
        schema_content:
          additionalProperties: true
          type: object
          title: JSON Schema
          description: JSON Schema
          default: {}
        schema_class:
          type: string
          const: application/schema+json
          title: Schema Class
          default: application/schema+json
      type: object
      title: JSONFunctionOutputSchema
    LicensedItemPurchaseGet:
      properties:
        licensedItemPurchaseId:
          type: string
          format: uuid
          title: Licenseditempurchaseid
        productName:
          type: string
          title: Productname
        licensedItemId:
          type: string
          format: uuid
          title: Licenseditemid
        key:
          type: string
          title: Key
        version:
          type: string
          pattern: ^\d+\.\d+\.\d+$
          title: Version
        walletId:
          type: integer
          exclusiveMinimum: true
          title: Walletid
          minimum: 0
        pricingUnitCostId:
          type: integer
          exclusiveMinimum: true
          title: Pricingunitcostid
          minimum: 0
        pricingUnitCost:
          type: string
          title: Pricingunitcost
        startAt:
          type: string
          format: date-time
          title: Startat
        expireAt:
          type: string
          format: date-time
          title: Expireat
        numOfSeats:
          type: integer
          title: Numofseats
        purchasedByUser:
          type: integer
          exclusiveMinimum: true
          title: Purchasedbyuser
          minimum: 0
        userEmail:
          type: string
          format: email
          title: Useremail
        purchasedAt:
          type: string
          format: date-time
          title: Purchasedat
        modifiedAt:
          type: string
          format: date-time
          title: Modifiedat
      type: object
      required:
      - licensedItemPurchaseId
      - productName
      - licensedItemId
      - key
      - version
      - walletId
      - pricingUnitCostId
      - pricingUnitCost
      - startAt
      - expireAt
      - numOfSeats
      - purchasedByUser
      - userEmail
      - purchasedAt
      - modifiedAt
      title: LicensedItemPurchaseGet
    LicensedItemRestGet:
      properties:
        licensedItemId:
          type: string
          format: uuid
          title: Licenseditemid
        key:
          type: string
          title: Key
        version:
          type: string
          pattern: ^\d+\.\d+\.\d+$
          title: Version
        displayName:
          type: string
          title: Displayname
        licensedResourceType:
          $ref: '#/components/schemas/LicensedResourceType'
        licensedResources:
          items:
            $ref: '#/components/schemas/_ItisVipResourceRestData'
          type: array
          title: Licensedresources
        pricingPlanId:
          type: integer
          exclusiveMinimum: true
          title: Pricingplanid
          minimum: 0
        categoryId:
          type: string
          maxLength: 100
          minLength: 1
          title: Categoryid
        categoryDisplay:
          type: string
          title: Categorydisplay
        categoryIcon:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Categoryicon
        termsOfUseUrl:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Termsofuseurl
        createdAt:
          type: string
          format: date-time
          title: Createdat
        modifiedAt:
          type: string
          format: date-time
          title: Modifiedat
      type: object
      required:
      - licensedItemId
      - key
      - version
      - displayName
      - licensedResourceType
      - licensedResources
      - pricingPlanId
      - categoryId
      - categoryDisplay
      - createdAt
      - modifiedAt
      title: LicensedItemRestGet
    LicensedItemsBodyParams:
      properties:
        wallet_id:
          type: integer
          exclusiveMinimum: true
          title: Wallet Id
          minimum: 0
        pricing_plan_id:
          type: integer
          exclusiveMinimum: true
          title: Pricing Plan Id
          minimum: 0
        pricing_unit_id:
          type: integer
          exclusiveMinimum: true
          title: Pricing Unit Id
          minimum: 0
        num_of_seats:
          type: integer
          title: Num Of Seats
      additionalProperties: false
      type: object
      required:
      - wallet_id
      - pricing_plan_id
      - pricing_unit_id
      - num_of_seats
      title: LicensedItemsBodyParams
    LicensedResourceType:
      type: string
      enum:
      - VIP_MODEL
      title: LicensedResourceType
    Limits:
      properties:
        cpus:
          type: number
          exclusiveMinimum: true
          title: Cpus
          minimum: 0.0
        mem:
          type: number
          exclusiveMinimum: true
          title: Mem
          minimum: 0.0
      type: object
      required:
      - cpus
      - mem
      title: Limits
    LinkType:
      type: string
      enum:
      - PRESIGNED
      - S3
      title: LinkType
    Log:
      properties:
        level:
          anyOf:
          - $ref: '#/components/schemas/LogLevel'
          - type: 'null'
          description: log level
          default: INFO
        message:
          type: string
          title: Message
          description: log message. If logger is USER, then it MUST be human readable
        logger:
          anyOf:
          - type: string
          - type: 'null'
          title: Logger
          description: name of the logger receiving this message
      type: object
      required:
      - message
      title: Log
      example:
        level: INFO
        logger: user-logger
        message: Hi there, Mr user
    LogLevel:
      type: string
      enum:
      - DEBUG
      - INFO
      - WARNING
      - ERROR
      title: LogLevel
    LogMessageType:
      properties:
        message:
          type: string
          title: Message
        level:
          type: string
          title: Level
          default: INFO
        logger:
          type: string
          title: Logger
          default: user
      type: object
      required:
      - message
      title: LogMessageType
    LoginBody:
      properties:
        email:
          type: string
          format: email
          title: Email
        password:
          type: string
          format: password
          title: Password
          writeOnly: true
      additionalProperties: false
      type: object
      required:
      - email
      - password
      title: LoginBody
    LoginNextPage:
      properties:
        name:
          type: string
          title: Name
          description: Code name to the front-end page. Ideally a PageStr
        parameters:
          anyOf:
          - $ref: '#/components/schemas/CodePageParams'
          - type: 'null'
      type: object
      required:
      - name
      title: LoginNextPage
    LoginTwoFactorAuthBody:
      properties:
        email:
          type: string
          format: email
          title: Email
        code:
          type: string
          format: password
          title: Code
          writeOnly: true
      additionalProperties: false
      type: object
      required:
      - email
      - code
      title: LoginTwoFactorAuthBody
    LogoutBody:
      properties:
        client_session_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Client Session Id
      additionalProperties: false
      type: object
      title: LogoutBody
    MarkerUI:
      properties:
        color:
          type: string
          format: color
          title: Color
      additionalProperties: false
      type: object
      required:
      - color
      title: MarkerUI
    MyFunctionPermissionsGet:
      properties:
        readFunctions:
          type: boolean
          title: Readfunctions
        writeFunctions:
          type: boolean
          title: Writefunctions
      type: object
      required:
      - readFunctions
      - writeFunctions
      title: MyFunctionPermissionsGet
    MyGroupsGet:
      properties:
        me:
          $ref: '#/components/schemas/GroupGet'
        organizations:
          anyOf:
          - items:
              $ref: '#/components/schemas/GroupGet'
            type: array
          - type: 'null'
          title: Organizations
        all:
          $ref: '#/components/schemas/GroupGet'
        product:
          anyOf:
          - $ref: '#/components/schemas/GroupGet'
          - type: 'null'
        support:
          anyOf:
          - $ref: '#/components/schemas/GroupGetBase'
          - type: 'null'
          description: Group ID of the app support team or None if no support is defined
            for this product
        chatbot:
          anyOf:
          - $ref: '#/components/schemas/GroupGetBase'
          - type: 'null'
          description: Group ID of the support chatbot user or None if no chatbot
            is defined for this product
      type: object
      required:
      - me
      - all
      title: MyGroupsGet
      example:
        all:
          accessRights:
            delete: false
            read: true
            write: false
          description: Open to all users
          gid: 1
          label: All
        chatbot:
          description: The chatbot user of the application
          gid: '6'
          label: Chatbot User
          thumbnail: https://placekitten.com/15/15
        me:
          accessRights:
            delete: true
            read: true
            write: true
          description: A very special user
          gid: '27'
          label: A user
        organizations:
        - accessRights:
            delete: false
            read: true
            write: false
          description: The Foundation for Research on Information Technologies in
            Society
          gid: '15'
          label: ITIS Foundation
        - accessRights:
            delete: false
            read: true
            write: false
          description: Some foundation
          gid: '16'
          label: Blue Fundation
        support:
          description: The support team of the application
          gid: '2'
          label: Support Team
          thumbnail: https://placekitten.com/15/15
    MyPermissionGet:
      properties:
        name:
          type: string
          title: Name
        allowed:
          type: boolean
          title: Allowed
      type: object
      required:
      - name
      - allowed
      title: MyPermissionGet
    MyPhoneConfirm:
      properties:
        code:
          type: string
          pattern: ^[A-Za-z0-9]+$
          title: Code
          description: Alphanumeric confirmation code
      type: object
      required:
      - code
      title: MyPhoneConfirm
    MyPhoneRegister:
      properties:
        phone:
          type: string
          format: phone
          title: Phone
          description: Phone number to register
      type: object
      required:
      - phone
      title: MyPhoneRegister
    MyProfileAddressGet:
      properties:
        institution:
          anyOf:
          - type: string
          - type: 'null'
          title: Institution
        address:
          anyOf:
          - type: string
          - type: 'null'
          title: Address
        city:
          anyOf:
          - type: string
          - type: 'null'
          title: City
        state:
          anyOf:
          - type: string
          - type: 'null'
          title: State
          description: State, province, canton, ...
        postalCode:
          anyOf:
          - type: string
          - type: 'null'
          title: Postalcode
        country:
          anyOf:
          - type: string
          - type: 'null'
          title: Country
      type: object
      required:
      - institution
      - address
      - city
      - state
      - postalCode
      - country
      title: MyProfileAddressGet
      description: Details provided upon registration and used e.g. for invoicing
    MyProfilePrivacyGet:
      properties:
        hideUsername:
          type: boolean
          title: Hideusername
        hideFullname:
          type: boolean
          title: Hidefullname
        hideEmail:
          type: boolean
          title: Hideemail
      type: object
      required:
      - hideUsername
      - hideFullname
      - hideEmail
      title: MyProfilePrivacyGet
    MyProfilePrivacyPatch:
      properties:
        hideUsername:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Hideusername
        hideFullname:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Hidefullname
        hideEmail:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Hideemail
      type: object
      title: MyProfilePrivacyPatch
    MyProfileRestGet:
      properties:
        id:
          type: integer
          exclusiveMinimum: true
          title: Id
          minimum: 0
        userName:
          type: string
          maxLength: 100
          minLength: 1
          title: Username
          description: Unique username identifier
        first_name:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: First Name
        last_name:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Last Name
        login:
          type: string
          format: email
          title: Login
        phone:
          anyOf:
          - type: string
          - type: 'null'
          title: Phone
        role:
          type: string
          enum:
          - ANONYMOUS
          - GUEST
          - USER
          - TESTER
          - PRODUCT_OWNER
          - ADMIN
          title: Role
        groups:
          anyOf:
          - $ref: '#/components/schemas/MyGroupsGet'
          - type: 'null'
        gravatar_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Gravatar Id
          deprecated: true
        expirationDate:
          anyOf:
          - type: string
            format: date
          - type: 'null'
          title: Expirationdate
          description: If user has a trial account, it sets the expiration date, otherwise
            None
        privacy:
          $ref: '#/components/schemas/MyProfilePrivacyGet'
        preferences:
          additionalProperties:
            $ref: '#/components/schemas/Preference'
          type: object
          title: Preferences
        contact:
          anyOf:
          - $ref: '#/components/schemas/MyProfileAddressGet'
          - type: 'null'
      type: object
      required:
      - id
      - userName
      - login
      - role
      - privacy
      - preferences
      title: MyProfileRestGet
    MyProfileRestPatch:
      properties:
        first_name:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: First Name
        last_name:
          anyOf:
          - type: string
            maxLength: 255
          - type: 'null'
          title: Last Name
        userName:
          anyOf:
          - type: string
            maxLength: 100
            minLength: 4
          - type: 'null'
          title: Username
        privacy:
          anyOf:
          - $ref: '#/components/schemas/MyProfilePrivacyPatch'
          - type: 'null'
      type: object
      title: MyProfileRestPatch
    MyTokenCreate:
      properties:
        service:
          type: string
          maxLength: 100
          minLength: 1
          title: Service
          description: uniquely identifies the service where this token is used
        token_key:
          type: string
          maxLength: 100
          minLength: 1
          title: Token Key
        token_secret:
          type: string
          maxLength: 100
          minLength: 1
          title: Token Secret
      type: object
      required:
      - service
      - token_key
      - token_secret
      title: MyTokenCreate
    MyTokenGet:
      properties:
        service:
          type: string
          maxLength: 100
          minLength: 1
          title: Service
        token_key:
          type: string
          maxLength: 100
          minLength: 1
          title: Token Key
        token_secret:
          anyOf:
          - type: string
            maxLength: 100
            minLength: 1
          - type: 'null'
          title: Token Secret
          description: Will be removed
          deprecated: true
      type: object
      required:
      - service
      - token_key
      title: MyTokenGet
    Node-Input:
      properties:
        key:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Key
          description: distinctive name for the node based on the docker registry
            path
        version:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Version
          description: semantic version number of the node
        label:
          type: string
          title: Label
          description: The short name of the node
        progress:
          anyOf:
          - type: number
            maximum: 100.0
            minimum: 0.0
          - type: 'null'
          title: Progress
          description: the node progress value
          deprecated: true
        thumbnail:
          anyOf:
          - type: string
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Thumbnail
          description: url of the latest screenshot of the node
          deprecated: true
        runHash:
          anyOf:
          - type: string
          - type: 'null'
          title: Runhash
          description: the hex digest of the resolved inputs +outputs hash at the
            time when the last outputs were generated
        inputs:
          anyOf:
          - type: object
          - type: 'null'
          title: Inputs
          description: values of input properties
        inputsRequired:
          anyOf:
          - items:
              type: string
              pattern: ^[-_a-zA-Z0-9]+$
            type: array
          - type: 'null'
          title: Inputsrequired
          description: Defines inputs that are required in order to run the service
        inputsUnits:
          anyOf:
          - type: object
          - type: 'null'
          title: Inputsunits
          description: Overrides default unit (if any) defined in the service for
            each port
        inputAccess:
          anyOf:
          - type: object
          - type: 'null'
          title: Inputaccess
          description: map with key - access level pairs
        inputNodes:
          anyOf:
          - items:
              type: string
              format: uuid
            type: array
          - type: 'null'
          title: Inputnodes
          description: node IDs of where the node is connected to
        outputs:
          anyOf:
          - type: object
          - type: 'null'
          title: Outputs
          description: values of output properties
        outputNode:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Outputnode
          deprecated: true
        outputNodes:
          anyOf:
          - items:
              type: string
              format: uuid
            type: array
          - type: 'null'
          title: Outputnodes
          description: Used in group-nodes. Node IDs of those connected to the output
          deprecated: true
        parent:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Parent
          description: Parent's (group-nodes') node ID s. Used to group
          deprecated: true
        position:
          anyOf:
          - $ref: '#/components/schemas/Position'
          - type: 'null'
          description: Use projects_ui.WorkbenchUI.position instead
          deprecated: true
        state:
          anyOf:
          - $ref: '#/components/schemas/NodeState-Input'
          - type: 'null'
          description: The node's state object
        bootOptions:
          anyOf:
          - type: object
          - type: 'null'
          title: Bootoptions
          description: Some services provide alternative parameters to be injected
            at boot time. The user selection should be stored here, and it will overwrite
            the services's defaults.
      additionalProperties: false
      type: object
      required:
      - key
      - version
      - label
      title: Node
    Node-Output:
      properties:
        key:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Key
          description: distinctive name for the node based on the docker registry
            path
        version:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Version
          description: semantic version number of the node
        label:
          type: string
          title: Label
          description: The short name of the node
        progress:
          anyOf:
          - type: number
            maximum: 100.0
            minimum: 0.0
          - type: 'null'
          title: Progress
          description: the node progress value
          deprecated: true
        thumbnail:
          anyOf:
          - type: string
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Thumbnail
          description: url of the latest screenshot of the node
          deprecated: true
        runHash:
          anyOf:
          - type: string
          - type: 'null'
          title: Runhash
          description: the hex digest of the resolved inputs +outputs hash at the
            time when the last outputs were generated
        inputs:
          anyOf:
          - type: object
          - type: 'null'
          title: Inputs
          description: values of input properties
        inputsRequired:
          anyOf:
          - items:
              type: string
              pattern: ^[-_a-zA-Z0-9]+$
            type: array
          - type: 'null'
          title: Inputsrequired
          description: Defines inputs that are required in order to run the service
        inputsUnits:
          anyOf:
          - type: object
          - type: 'null'
          title: Inputsunits
          description: Overrides default unit (if any) defined in the service for
            each port
        inputAccess:
          anyOf:
          - type: object
          - type: 'null'
          title: Inputaccess
          description: map with key - access level pairs
        inputNodes:
          anyOf:
          - items:
              type: string
              format: uuid
            type: array
          - type: 'null'
          title: Inputnodes
          description: node IDs of where the node is connected to
        outputs:
          anyOf:
          - type: object
          - type: 'null'
          title: Outputs
          description: values of output properties
        outputNode:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Outputnode
          deprecated: true
        outputNodes:
          anyOf:
          - items:
              type: string
              format: uuid
            type: array
          - type: 'null'
          title: Outputnodes
          description: Used in group-nodes. Node IDs of those connected to the output
          deprecated: true
        parent:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Parent
          description: Parent's (group-nodes') node ID s. Used to group
          deprecated: true
        position:
          anyOf:
          - $ref: '#/components/schemas/Position'
          - type: 'null'
          description: Use projects_ui.WorkbenchUI.position instead
          deprecated: true
        state:
          anyOf:
          - $ref: '#/components/schemas/NodeState-Output'
          - type: 'null'
          description: The node's state object
        bootOptions:
          anyOf:
          - type: object
          - type: 'null'
          title: Bootoptions
          description: Some services provide alternative parameters to be injected
            at boot time. The user selection should be stored here, and it will overwrite
            the services's defaults.
      additionalProperties: false
      type: object
      required:
      - key
      - version
      - label
      title: Node
    NodeCreate:
      properties:
        service_key:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
        service_version:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
        service_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Service Id
      type: object
      required:
      - service_key
      - service_version
      title: NodeCreate
    NodeCreated:
      properties:
        nodeId:
          type: string
          format: uuid
          title: Nodeid
      type: object
      required:
      - nodeId
      title: NodeCreated
    NodeGet:
      properties:
        publishedPort:
          anyOf:
          - type: integer
            exclusiveMaximum: true
            exclusiveMinimum: true
            maximum: 65535
            minimum: 0
          - type: 'null'
          title: Publishedport
          description: The ports where the service provides its interface
        entryPoint:
          anyOf:
          - type: string
          - type: 'null'
          title: Entrypoint
          description: The entry point where the service provides its interface if
            specified
        serviceUuid:
          type: string
          title: Serviceuuid
          description: The UUID attached to this service
        serviceKey:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Servicekey
          description: distinctive name for the node based on the docker registry
            path
        serviceVersion:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Serviceversion
          description: semantic version number
        serviceHost:
          type: string
          title: Servicehost
          description: service host name within the network
        servicePort:
          type: integer
          exclusiveMaximum: true
          exclusiveMinimum: true
          title: Serviceport
          description: port to access the service within the network
          maximum: 65535
          minimum: 0
        serviceBasepath:
          anyOf:
          - type: string
          - type: 'null'
          title: Servicebasepath
          description: different base path where current service is mounted otherwise
            defaults to root
          default: ''
        serviceState:
          $ref: '#/components/schemas/ServiceState'
          description: 'the service state * ''pending'' - The service is waiting for
            resources to start * ''pulling'' - The service is being pulled from the
            registry * ''starting'' - The service is starting * ''running'' - The
            service is running * ''complete'' - The service completed * ''failed''
            - The service failed to start

            '
        serviceMessage:
          anyOf:
          - type: string
          - type: 'null'
          title: Servicemessage
          description: the service message
        userId:
          type: string
          title: Userid
          description: the user that started the service
      type: object
      required:
      - publishedPort
      - serviceUuid
      - serviceKey
      - serviceVersion
      - serviceHost
      - servicePort
      - serviceState
      - userId
      title: NodeGet
    NodeGetIdle:
      properties:
        serviceState:
          type: string
          const: idle
          title: Servicestate
        serviceUuid:
          type: string
          format: uuid
          title: Serviceuuid
      type: object
      required:
      - serviceState
      - serviceUuid
      title: NodeGetIdle
    NodeGetUnknown:
      properties:
        serviceState:
          type: string
          const: unknown
          title: Servicestate
        serviceUuid:
          type: string
          format: uuid
          title: Serviceuuid
      type: object
      required:
      - serviceState
      - serviceUuid
      title: NodeGetUnknown
      example:
        service_state: unknown
        service_uuid: 3fa85f64-5717-4562-b3fc-2c963f66afa6
    NodeOutputs:
      properties:
        outputs:
          additionalProperties: true
          type: object
          title: Outputs
      type: object
      required:
      - outputs
      title: NodeOutputs
    NodePatch:
      properties:
        key:
          anyOf:
          - type: string
            pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          - type: 'null'
          title: Key
        version:
          anyOf:
          - type: string
            pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          - type: 'null'
          title: Version
        label:
          anyOf:
          - type: string
          - type: 'null'
          title: Label
        inputs:
          type: object
          title: Inputs
          default: {}
        inputsRequired:
          anyOf:
          - items:
              type: string
              pattern: ^[-_a-zA-Z0-9]+$
            type: array
          - type: 'null'
          title: Inputsrequired
        inputNodes:
          anyOf:
          - items:
              type: string
              format: uuid
            type: array
          - type: 'null'
          title: Inputnodes
        progress:
          anyOf:
          - type: number
            maximum: 100.0
            minimum: 0.0
          - type: 'null'
          title: Progress
        bootOptions:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Bootoptions
        outputs:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Outputs
      type: object
      title: NodePatch
    NodeRetrieve:
      properties:
        port_keys:
          items:
            type: string
            pattern: ^[-_a-zA-Z0-9]+$
          type: array
          title: Port Keys
          default: []
      type: object
      title: NodeRetrieve
    NodeRetrieved:
      properties:
        sizeBytes:
          type: integer
          minimum: 0
          title: Sizebytes
          description: The amount of data transferred by the retrieve call
      type: object
      required:
      - sizeBytes
      title: NodeRetrieved
    NodeScreenshot:
      properties:
        thumbnail_url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Thumbnail Url
        file_url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: File Url
        mimetype:
          anyOf:
          - type: string
          - type: 'null'
          title: Mimetype
          description: File's media type or None if unknown. SEE https://www.iana.org/assignments/media-types/media-types.xhtml
      type: object
      required:
      - thumbnail_url
      - file_url
      title: NodeScreenshot
    NodeServiceGet:
      properties:
        key:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Key
        release:
          $ref: '#/components/schemas/ServiceRelease'
        owner:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Owner
          description: Service owner primary group id or None if ownership still not
            defined
        myAccessRights:
          $ref: '#/components/schemas/ExecutableAccessRights'
      type: object
      required:
      - key
      - release
      - owner
      - myAccessRights
      title: NodeServiceGet
    NodeShareState:
      properties:
        locked:
          type: boolean
          title: Locked
          description: True if the node is locked, False otherwise
        current_user_groupids:
          anyOf:
          - items:
              type: integer
              exclusiveMinimum: true
              minimum: 0
            type: array
          - type: 'null'
          title: Current User Groupids
          description: Group(s) that currently have access to the node (or locked
            it)
        status:
          anyOf:
          - $ref: '#/components/schemas/NodeShareStatus'
          - type: 'null'
          description: Reason why the node is locked, None if not locked
      additionalProperties: false
      type: object
      required:
      - locked
      title: NodeShareState
    NodeShareStatus:
      type: string
      enum:
      - OPENING
      - OPENED
      - CLOSING
      title: NodeShareStatus
    NodeState-Input:
      properties:
        modified:
          type: boolean
          title: Modified
          description: true if the node's outputs need to be re-computed
          default: true
        dependencies:
          items:
            type: string
            format: uuid
          type: array
          uniqueItems: true
          title: Dependencies
          description: contains the node inputs dependencies if they need to be computed
            first
        currentStatus:
          $ref: '#/components/schemas/RunningState'
          description: the node's current state
          default: NOT_STARTED
        progress:
          anyOf:
          - type: number
            maximum: 1.0
            minimum: 0.0
          - type: 'null'
          title: Progress
          description: current progress of the task if available (None if not started
            or not a computational task)
          default: 0
        lock_state:
          anyOf:
          - $ref: '#/components/schemas/NodeShareState'
          - type: 'null'
          description: the node's lock state
      additionalProperties: false
      type: object
      title: NodeState
    NodeState-Output:
      properties:
        modified:
          type: boolean
          title: Modified
          description: true if the node's outputs need to be re-computed
          default: true
        dependencies:
          items:
            type: string
            format: uuid
          type: array
          uniqueItems: true
          title: Dependencies
          description: contains the node inputs dependencies if they need to be computed
            first
        currentStatus:
          $ref: '#/components/schemas/RunningState'
          description: the node's current state
          default: NOT_STARTED
        progress:
          anyOf:
          - type: number
            maximum: 1.0
            minimum: 0.0
          - type: 'null'
          title: Progress
          description: current progress of the task if available (None if not started
            or not a computational task)
          default: 0
        lock_state:
          anyOf:
          - $ref: '#/components/schemas/NodeShareState'
          - type: 'null'
          description: the node's lock state
      additionalProperties: false
      type: object
      title: NodeState
    NotificationCategory:
      type: string
      enum:
      - NEW_ORGANIZATION
      - STUDY_SHARED
      - TEMPLATE_SHARED
      - CONVERSATION_NOTIFICATION
      - ANNOTATION_NOTE
      - WALLET_SHARED
      title: NotificationCategory
    OsparcCreditsAggregatedByServiceGet:
      properties:
        osparc_credits:
          type: string
          title: Osparc Credits
        service_key:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
        running_time_in_hours:
          type: string
          title: Running Time In Hours
      type: object
      required:
      - osparc_credits
      - service_key
      - running_time_in_hours
      title: OsparcCreditsAggregatedByServiceGet
    PageLinks:
      properties:
        self:
          type: string
          title: Self
        first:
          type: string
          title: First
        prev:
          anyOf:
          - type: string
          - type: 'null'
          title: Prev
        next:
          anyOf:
          - type: string
          - type: 'null'
          title: Next
        last:
          type: string
          title: Last
      additionalProperties: false
      type: object
      required:
      - self
      - first
      - prev
      - next
      - last
      title: PageLinks
    PageMetaInfoLimitOffset:
      properties:
        limit:
          type: integer
          exclusiveMinimum: true
          title: Limit
          default: 20
          minimum: 0
        total:
          type: integer
          minimum: 0
          title: Total
        offset:
          type: integer
          minimum: 0
          title: Offset
          default: 0
        count:
          type: integer
          minimum: 0
          title: Count
      additionalProperties: false
      type: object
      required:
      - total
      - count
      title: PageMetaInfoLimitOffset
    Page_CatalogLatestServiceGet_:
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          items:
            $ref: '#/components/schemas/CatalogLatestServiceGet'
          type: array
          title: Data
      additionalProperties: false
      type: object
      required:
      - _meta
      - _links
      - data
      title: Page[CatalogLatestServiceGet]
    Page_ComputationCollectionRunRestGet_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ComputationCollectionRunRestGet'
          type: array
          title: Items
        total:
          type: integer
          minimum: 0
          title: Total
        page:
          type: integer
          minimum: 1
          title: Page
        size:
          type: integer
          minimum: 1
          title: Size
        pages:
          type: integer
          minimum: 0
          title: Pages
      type: object
      required:
      - items
      - total
      - page
      - size
      - pages
      title: Page[ComputationCollectionRunRestGet]
    Page_ComputationCollectionRunTaskRestGet_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ComputationCollectionRunTaskRestGet'
          type: array
          title: Items
        total:
          type: integer
          minimum: 0
          title: Total
        page:
          type: integer
          minimum: 1
          title: Page
        size:
          type: integer
          minimum: 1
          title: Size
        pages:
          type: integer
          minimum: 0
          title: Pages
      type: object
      required:
      - items
      - total
      - page
      - size
      - pages
      title: Page[ComputationCollectionRunTaskRestGet]
    Page_ComputationRunRestGet_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ComputationRunRestGet'
          type: array
          title: Items
        total:
          type: integer
          minimum: 0
          title: Total
        page:
          type: integer
          minimum: 1
          title: Page
        size:
          type: integer
          minimum: 1
          title: Size
        pages:
          type: integer
          minimum: 0
          title: Pages
      type: object
      required:
      - items
      - total
      - page
      - size
      - pages
      title: Page[ComputationRunRestGet]
    Page_ComputationTaskRestGet_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/ComputationTaskRestGet'
          type: array
          title: Items
        total:
          type: integer
          minimum: 0
          title: Total
        page:
          type: integer
          minimum: 1
          title: Page
        size:
          type: integer
          minimum: 1
          title: Size
        pages:
          type: integer
          minimum: 0
          title: Pages
      type: object
      required:
      - items
      - total
      - page
      - size
      - pages
      title: Page[ComputationTaskRestGet]
    Page_ConversationMessageRestGet_:
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          items:
            $ref: '#/components/schemas/ConversationMessageRestGet'
          type: array
          title: Data
      additionalProperties: false
      type: object
      required:
      - _meta
      - _links
      - data
      title: Page[ConversationMessageRestGet]
    Page_ConversationRestGet_:
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          items:
            $ref: '#/components/schemas/ConversationRestGet'
          type: array
          title: Data
      additionalProperties: false
      type: object
      required:
      - _meta
      - _links
      - data
      title: Page[ConversationRestGet]
    Page_LicensedItemPurchaseGet_:
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          items:
            $ref: '#/components/schemas/LicensedItemPurchaseGet'
          type: array
          title: Data
      additionalProperties: false
      type: object
      required:
      - _meta
      - _links
      - data
      title: Page[LicensedItemPurchaseGet]
    Page_LicensedItemRestGet_:
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          items:
            $ref: '#/components/schemas/LicensedItemRestGet'
          type: array
          title: Data
      additionalProperties: false
      type: object
      required:
      - _meta
      - _links
      - data
      title: Page[LicensedItemRestGet]
    Page_OsparcCreditsAggregatedByServiceGet_:
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          items:
            $ref: '#/components/schemas/OsparcCreditsAggregatedByServiceGet'
          type: array
          title: Data
      additionalProperties: false
      type: object
      required:
      - _meta
      - _links
      - data
      title: Page[OsparcCreditsAggregatedByServiceGet]
    Page_PaymentTransaction_:
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          items:
            $ref: '#/components/schemas/PaymentTransaction'
          type: array
          title: Data
      additionalProperties: false
      type: object
      required:
      - _meta
      - _links
      - data
      title: Page[PaymentTransaction]
    Page_PricingPlanAdminGet_:
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          items:
            $ref: '#/components/schemas/PricingPlanAdminGet'
          type: array
          title: Data
      additionalProperties: false
      type: object
      required:
      - _meta
      - _links
      - data
      title: Page[PricingPlanAdminGet]
    Page_PricingPlanGet_:
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          items:
            $ref: '#/components/schemas/PricingPlanGet'
          type: array
          title: Data
      additionalProperties: false
      type: object
      required:
      - _meta
      - _links
      - data
      title: Page[PricingPlanGet]
    Page_ProjectListItem_:
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          items:
            $ref: '#/components/schemas/ProjectListItem'
          type: array
          title: Data
      additionalProperties: false
      type: object
      required:
      - _meta
      - _links
      - data
      title: Page[ProjectListItem]
    Page_ServiceRunGet_:
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          items:
            $ref: '#/components/schemas/ServiceRunGet'
          type: array
          title: Data
      additionalProperties: false
      type: object
      required:
      - _meta
      - _links
      - data
      title: Page[ServiceRunGet]
    Page_UserAccountGet_:
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          items:
            $ref: '#/components/schemas/UserAccountGet'
          type: array
          title: Data
      additionalProperties: false
      type: object
      required:
      - _meta
      - _links
      - data
      title: Page[UserAccountGet]
    PatchRequestBody:
      properties:
        value:
          title: Value
      type: object
      required:
      - value
      title: PatchRequestBody
    PathMetaDataGet:
      properties:
        path:
          type: string
          format: path
          title: Path
          description: the path to the current path
        display_path:
          type: string
          format: path
          title: Display Path
          description: the path to display with UUID replaced (URL Encoded by parts
            as names may contain '/')
        file_meta_data:
          anyOf:
          - $ref: '#/components/schemas/FileMetaDataGet'
          - type: 'null'
          description: if filled, this is the file meta data of the s3 object
      additionalProperties: false
      type: object
      required:
      - path
      - display_path
      title: PathMetaDataGet
    PaymentMethodGet:
      properties:
        idr:
          type: string
          maxLength: 100
          minLength: 1
          title: Idr
        walletId:
          type: integer
          exclusiveMinimum: true
          title: Walletid
          minimum: 0
        cardHolderName:
          anyOf:
          - type: string
          - type: 'null'
          title: Cardholdername
        cardNumberMasked:
          anyOf:
          - type: string
          - type: 'null'
          title: Cardnumbermasked
        cardType:
          anyOf:
          - type: string
          - type: 'null'
          title: Cardtype
        expirationMonth:
          anyOf:
          - type: integer
          - type: 'null'
          title: Expirationmonth
        expirationYear:
          anyOf:
          - type: integer
          - type: 'null'
          title: Expirationyear
        created:
          type: string
          format: date-time
          title: Created
        autoRecharge:
          type: boolean
          title: Autorecharge
          description: If true, this payment-method is used for auto-recharge
          default: false
      type: object
      required:
      - idr
      - walletId
      - created
      title: PaymentMethodGet
    PaymentMethodInitiated:
      properties:
        walletId:
          type: integer
          exclusiveMinimum: true
          title: Walletid
          minimum: 0
        paymentMethodId:
          type: string
          maxLength: 100
          minLength: 1
          title: Paymentmethodid
        paymentMethodFormUrl:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Paymentmethodformurl
          description: Link to external site that holds the payment submission form
      type: object
      required:
      - walletId
      - paymentMethodId
      - paymentMethodFormUrl
      title: PaymentMethodInitiated
    PaymentTransaction:
      properties:
        paymentId:
          type: string
          maxLength: 100
          minLength: 1
          title: Paymentid
        priceDollars:
          type: string
          title: Pricedollars
        walletId:
          type: integer
          exclusiveMinimum: true
          title: Walletid
          minimum: 0
        osparcCredits:
          type: string
          title: Osparccredits
        comment:
          anyOf:
          - type: string
          - type: 'null'
          title: Comment
        createdAt:
          type: string
          format: date-time
          title: Createdat
        completedAt:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Completedat
        completedStatus:
          type: string
          enum:
          - PENDING
          - SUCCESS
          - FAILED
          - CANCELED
          title: Completedstatus
        stateMessage:
          anyOf:
          - type: string
          - type: 'null'
          title: Statemessage
        invoiceUrl:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Invoiceurl
      type: object
      required:
      - paymentId
      - priceDollars
      - walletId
      - osparcCredits
      - createdAt
      - completedAt
      - completedStatus
      title: PaymentTransaction
    PhoneConfirmationBody:
      properties:
        email:
          type: string
          format: email
          title: Email
        phone:
          type: string
          title: Phone
          description: Phone number E.164, needed on the deployments with 2FA
        code:
          type: string
          format: password
          title: Code
          writeOnly: true
      additionalProperties: false
      type: object
      required:
      - email
      - phone
      - code
      title: PhoneConfirmationBody
    PipelineDetails:
      properties:
        adjacency_list:
          additionalProperties:
            items:
              type: string
              format: uuid
            type: array
          propertyNames:
            format: uuid
          type: object
          title: Adjacency List
          description: 'The adjacency list of the current pipeline in terms of {NodeID:
            [successor NodeID]}'
        progress:
          anyOf:
          - type: number
            maximum: 1.0
            minimum: 0.0
          - type: 'null'
          title: Progress
          description: the progress of the pipeline (None if there are no computational
            tasks)
        node_states:
          additionalProperties:
            $ref: '#/components/schemas/NodeState-Output'
          propertyNames:
            format: uuid
          type: object
          title: Node States
          description: The states of each of the computational nodes in the pipeline
      type: object
      required:
      - adjacency_list
      - progress
      - node_states
      title: PipelineDetails
    PortLink:
      properties:
        nodeUuid:
          type: string
          format: uuid
          title: Nodeuuid
          description: The node to get the port output from
        output:
          type: string
          pattern: ^[-_a-zA-Z0-9]+$
          title: Output
          description: The port key in the node given by nodeUuid
      additionalProperties: false
      type: object
      required:
      - nodeUuid
      - output
      title: PortLink
      description: I/O port type to reference to an output port of another node in
        the same project
    Position:
      properties:
        x:
          type: integer
          title: X
          description: The x position
        y:
          type: integer
          title: Y
          description: The y position
      additionalProperties: false
      type: object
      required:
      - x
      - y
      title: Position
    Preference:
      properties:
        defaultValue:
          title: Defaultvalue
          description: used by the frontend
        value:
          title: Value
          description: preference value
      type: object
      required:
      - defaultValue
      - value
      title: Preference
    PresignedLink:
      properties:
        link:
          type: string
          minLength: 1
          format: uri
          title: Link
      type: object
      required:
      - link
      title: PresignedLink
    PricingPlanAdminGet:
      properties:
        pricingPlanId:
          type: integer
          exclusiveMinimum: true
          title: Pricingplanid
          minimum: 0
        displayName:
          type: string
          title: Displayname
        description:
          type: string
          title: Description
        classification:
          $ref: '#/components/schemas/PricingPlanClassification'
        createdAt:
          type: string
          format: date-time
          title: Createdat
        pricingPlanKey:
          type: string
          title: Pricingplankey
        pricingUnits:
          anyOf:
          - items:
              $ref: '#/components/schemas/PricingUnitAdminGet'
            type: array
          - type: 'null'
          title: Pricingunits
        isActive:
          type: boolean
          title: Isactive
      type: object
      required:
      - pricingPlanId
      - displayName
      - description
      - classification
      - createdAt
      - pricingPlanKey
      - pricingUnits
      - isActive
      title: PricingPlanAdminGet
    PricingPlanClassification:
      type: string
      enum:
      - TIER
      - LICENSE
      title: PricingPlanClassification
    PricingPlanGet:
      properties:
        pricingPlanId:
          type: integer
          exclusiveMinimum: true
          title: Pricingplanid
          minimum: 0
        displayName:
          type: string
          title: Displayname
        description:
          type: string
          title: Description
        classification:
          $ref: '#/components/schemas/PricingPlanClassification'
        createdAt:
          type: string
          format: date-time
          title: Createdat
        pricingPlanKey:
          type: string
          title: Pricingplankey
        pricingUnits:
          anyOf:
          - items:
              $ref: '#/components/schemas/PricingUnitGet'
            type: array
          - type: 'null'
          title: Pricingunits
        isActive:
          type: boolean
          title: Isactive
      type: object
      required:
      - pricingPlanId
      - displayName
      - description
      - classification
      - createdAt
      - pricingPlanKey
      - pricingUnits
      - isActive
      title: PricingPlanGet
    PricingPlanToServiceAdminGet:
      properties:
        pricingPlanId:
          type: integer
          exclusiveMinimum: true
          title: Pricingplanid
          minimum: 0
        serviceKey:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Servicekey
        serviceVersion:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Serviceversion
        created:
          type: string
          format: date-time
          title: Created
      type: object
      required:
      - pricingPlanId
      - serviceKey
      - serviceVersion
      - created
      title: PricingPlanToServiceAdminGet
    PricingUnitAdminGet:
      properties:
        pricingUnitId:
          type: integer
          exclusiveMinimum: true
          title: Pricingunitid
          minimum: 0
        unitName:
          type: string
          title: Unitname
        unitExtraInfo:
          anyOf:
          - $ref: '#/components/schemas/UnitExtraInfoTier-Output'
          - $ref: '#/components/schemas/UnitExtraInfoLicense'
          title: Unitextrainfo
        currentCostPerUnit:
          type: string
          title: Currentcostperunit
        default:
          type: boolean
          title: Default
        specificInfo:
          $ref: '#/components/schemas/HardwareInfo'
      type: object
      required:
      - pricingUnitId
      - unitName
      - unitExtraInfo
      - currentCostPerUnit
      - default
      - specificInfo
      title: PricingUnitAdminGet
    PricingUnitCostUpdate:
      properties:
        cost_per_unit:
          anyOf:
          - type: number
          - type: string
          title: Cost Per Unit
        comment:
          type: string
          title: Comment
      type: object
      required:
      - cost_per_unit
      - comment
      title: PricingUnitCostUpdate
    PricingUnitGet:
      properties:
        pricingUnitId:
          type: integer
          exclusiveMinimum: true
          title: Pricingunitid
          minimum: 0
        unitName:
          type: string
          title: Unitname
        unitExtraInfo:
          anyOf:
          - $ref: '#/components/schemas/UnitExtraInfoTier-Output'
          - $ref: '#/components/schemas/UnitExtraInfoLicense'
          title: Unitextrainfo
        currentCostPerUnit:
          type: string
          title: Currentcostperunit
        default:
          type: boolean
          title: Default
      type: object
      required:
      - pricingUnitId
      - unitName
      - unitExtraInfo
      - currentCostPerUnit
      - default
      title: PricingUnitGet
    ProductGet:
      properties:
        name:
          type: string
          title: Name
        displayName:
          type: string
          title: Displayname
        shortName:
          anyOf:
          - type: string
          - type: 'null'
          title: Shortname
          description: Short display name for SMS
        vendor:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Vendor
          description: vendor attributes
        issues:
          anyOf:
          - items:
              additionalProperties: true
              type: object
            type: array
          - type: 'null'
          title: Issues
          description: Reference to issues tracker
        manuals:
          anyOf:
          - items:
              additionalProperties: true
              type: object
            type: array
          - type: 'null'
          title: Manuals
          description: List of manuals
        support:
          anyOf:
          - items:
              additionalProperties: true
              type: object
            type: array
          - type: 'null'
          title: Support
          description: List of support resources
        loginSettings:
          additionalProperties: true
          type: object
          title: Loginsettings
        maxOpenStudiesPerUser:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Maxopenstudiesperuser
        isPaymentEnabled:
          type: boolean
          title: Ispaymentenabled
        creditsPerUsd:
          anyOf:
          - type: string
          - type: 'null'
          title: Creditsperusd
        templates:
          items:
            $ref: '#/components/schemas/ProductTemplateGet'
          type: array
          title: Templates
          description: List of templates available to this product for communications
            (e.g. emails, sms, etc)
      type: object
      required:
      - name
      - displayName
      - loginSettings
      - maxOpenStudiesPerUser
      - isPaymentEnabled
      - creditsPerUsd
      title: ProductGet
    ProductTemplateGet:
      properties:
        id:
          type: string
          maxLength: 100
          minLength: 1
          title: Id
        content:
          type: string
          title: Content
      type: object
      required:
      - id
      - content
      title: ProductTemplateGet
    ProductUIGet:
      properties:
        productName:
          type: string
          title: Productname
        ui:
          additionalProperties: true
          type: object
          title: Ui
          description: Front-end owned ui product configuration
      type: object
      required:
      - productName
      - ui
      title: ProductUIGet
    ProjectCopyOverride:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        thumbnail:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Thumbnail
        prjOwner:
          type: string
          format: email
          title: Prjowner
      type: object
      required:
      - name
      - prjOwner
      title: ProjectCopyOverride
    ProjectCreateNew:
      properties:
        uuid:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Uuid
        name:
          type: string
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        thumbnail:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Thumbnail
        workbench:
          type: object
          title: Workbench
        accessRights:
          additionalProperties:
            $ref: '#/components/schemas/AccessRights'
          propertyNames:
            maxLength: 100
            minLength: 1
          type: object
          title: Accessrights
        tags:
          items:
            type: integer
          type: array
          title: Tags
        classifiers:
          items:
            type: string
          type: array
          title: Classifiers
        ui:
          anyOf:
          - $ref: '#/components/schemas/StudyUI-Input'
          - type: 'null'
        workspaceId:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Workspaceid
        folderId:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Folderid
      type: object
      required:
      - name
      - workbench
      - accessRights
      title: ProjectCreateNew
    ProjectFunctionToRegister:
      properties:
        functionClass:
          type: string
          const: PROJECT
          title: Functionclass
          default: PROJECT
        title:
          type: string
          title: Title
          default: ''
        description:
          type: string
          title: Description
          default: ''
        inputSchema:
          oneOf:
          - $ref: '#/components/schemas/JSONFunctionInputSchema'
          title: Inputschema
          discriminator:
            propertyName: schema_class
            mapping:
              application/schema+json: '#/components/schemas/JSONFunctionInputSchema'
        outputSchema:
          oneOf:
          - $ref: '#/components/schemas/JSONFunctionOutputSchema'
          title: Outputschema
          discriminator:
            propertyName: schema_class
            mapping:
              application/schema+json: '#/components/schemas/JSONFunctionOutputSchema'
        defaultInputs:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Defaultinputs
        projectId:
          type: string
          format: uuid
          title: Projectid
      type: object
      required:
      - inputSchema
      - outputSchema
      - defaultInputs
      - projectId
      title: ProjectFunctionToRegister
    ProjectGet:
      properties:
        uuid:
          type: string
          format: uuid
          title: Uuid
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        thumbnail:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: string
            const: ''
          title: Thumbnail
        type:
          $ref: '#/components/schemas/ProjectType'
        templateType:
          anyOf:
          - $ref: '#/components/schemas/ProjectTemplateType'
          - type: 'null'
        workbench:
          type: object
          title: Workbench
        prjOwner:
          type: string
          format: email
          title: Prjowner
        accessRights:
          additionalProperties:
            $ref: '#/components/schemas/AccessRights'
          propertyNames:
            maxLength: 100
            minLength: 1
          type: object
          title: Accessrights
        creationDate:
          type: string
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          title: Creationdate
        lastChangeDate:
          type: string
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          title: Lastchangedate
        state:
          anyOf:
          - $ref: '#/components/schemas/ProjectStateOutputSchema'
          - type: 'null'
        trashedAt:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Trashedat
        trashedBy:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Trashedby
          description: The primary gid of the user who trashed
        tags:
          items:
            type: integer
          type: array
          title: Tags
        classifiers:
          items:
            type: string
          type: array
          title: Classifiers
          default: []
        quality:
          additionalProperties: true
          type: object
          title: Quality
          default: {}
        ui:
          anyOf:
          - $ref: '#/components/schemas/EmptyModel'
          - $ref: '#/components/schemas/StudyUI-Output'
          - type: 'null'
          title: Ui
        dev:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Dev
        permalink:
          anyOf:
          - $ref: '#/components/schemas/ProjectPermalink'
          - type: 'null'
        workspaceId:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Workspaceid
        folderId:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Folderid
      type: object
      required:
      - uuid
      - name
      - description
      - thumbnail
      - type
      - templateType
      - workbench
      - prjOwner
      - accessRights
      - creationDate
      - lastChangeDate
      - trashedAt
      - tags
      - dev
      - workspaceId
      - folderId
      title: ProjectGet
    ProjectGroupGet:
      properties:
        gid:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
        read:
          type: boolean
          title: Read
        write:
          type: boolean
          title: Write
        delete:
          type: boolean
          title: Delete
        created:
          type: string
          format: date-time
          title: Created
        modified:
          type: string
          format: date-time
          title: Modified
      type: object
      required:
      - gid
      - read
      - write
      - delete
      - created
      - modified
      title: ProjectGroupGet
    ProjectInputGet:
      properties:
        key:
          type: string
          format: uuid
          title: Key
          description: Project port's unique identifer. Same as the UUID of the associated
            port node
        value:
          title: Value
          description: Value assigned to this i/o port
        label:
          type: string
          title: Label
      type: object
      required:
      - key
      - value
      - label
      title: ProjectInputGet
    ProjectInputUpdate:
      properties:
        key:
          type: string
          format: uuid
          title: Key
          description: Project port's unique identifer. Same as the UUID of the associated
            port node
        value:
          title: Value
          description: Value assigned to this i/o port
      type: object
      required:
      - key
      - value
      title: ProjectInputUpdate
    ProjectListItem:
      properties:
        uuid:
          type: string
          format: uuid
          title: Uuid
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
        thumbnail:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: string
            const: ''
          title: Thumbnail
        type:
          $ref: '#/components/schemas/ProjectType'
        templateType:
          anyOf:
          - $ref: '#/components/schemas/ProjectTemplateType'
          - type: 'null'
        workbench:
          type: object
          title: Workbench
        prjOwner:
          type: string
          format: email
          title: Prjowner
        accessRights:
          additionalProperties:
            $ref: '#/components/schemas/AccessRights'
          propertyNames:
            maxLength: 100
            minLength: 1
          type: object
          title: Accessrights
        creationDate:
          type: string
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          title: Creationdate
        lastChangeDate:
          type: string
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          title: Lastchangedate
        state:
          anyOf:
          - $ref: '#/components/schemas/ProjectStateOutputSchema'
          - type: 'null'
        trashedAt:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Trashedat
        trashedBy:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Trashedby
          description: The primary gid of the user who trashed
        tags:
          items:
            type: integer
          type: array
          title: Tags
        classifiers:
          items:
            type: string
          type: array
          title: Classifiers
          default: []
        quality:
          additionalProperties: true
          type: object
          title: Quality
          default: {}
        ui:
          anyOf:
          - $ref: '#/components/schemas/EmptyModel'
          - $ref: '#/components/schemas/StudyUI-Output'
          - type: 'null'
          title: Ui
        dev:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Dev
        permalink:
          anyOf:
          - $ref: '#/components/schemas/ProjectPermalink'
          - type: 'null'
        workspaceId:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Workspaceid
        folderId:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Folderid
      type: object
      required:
      - uuid
      - name
      - description
      - thumbnail
      - type
      - templateType
      - workbench
      - prjOwner
      - accessRights
      - creationDate
      - lastChangeDate
      - trashedAt
      - tags
      - dev
      - workspaceId
      - folderId
      title: ProjectListItem
    ProjectMetadataGet:
      properties:
        projectUuid:
          type: string
          format: uuid
          title: Projectuuid
        custom:
          additionalProperties:
            anyOf:
            - type: boolean
            - type: integer
            - type: number
            - type: string
          type: object
          title: Custom
          description: Custom key-value map
      type: object
      required:
      - projectUuid
      title: ProjectMetadataGet
    ProjectMetadataPortGet:
      properties:
        key:
          type: string
          format: uuid
          title: Key
          description: Project port's unique identifer. Same as the UUID of the associated
            port node
        kind:
          type: string
          enum:
          - input
          - output
          title: Kind
        content_schema:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Content Schema
          description: jsonschema for the port's value. SEE https://json-schema.org/understanding-json-schema/
      type: object
      required:
      - key
      - kind
      title: ProjectMetadataPortGet
    ProjectMetadataUpdate:
      properties:
        custom:
          additionalProperties:
            anyOf:
            - type: boolean
            - type: integer
            - type: number
            - type: string
          type: object
          title: Custom
      type: object
      required:
      - custom
      title: ProjectMetadataUpdate
    ProjectNodeServicesGet:
      properties:
        projectUuid:
          type: string
          format: uuid
          title: Projectuuid
        services:
          items:
            $ref: '#/components/schemas/NodeServiceGet'
          type: array
          title: Services
        missing:
          anyOf:
          - items:
              $ref: '#/components/schemas/ServiceKeyVersion'
            type: array
          - type: 'null'
          title: Missing
          description: List of services defined in the project but that were not found
            in the catalog
      type: object
      required:
      - projectUuid
      - services
      title: ProjectNodeServicesGet
    ProjectOutputGet:
      properties:
        key:
          type: string
          format: uuid
          title: Key
          description: Project port's unique identifer. Same as the UUID of the associated
            port node
        value:
          title: Value
          description: Value assigned to this i/o port
        label:
          type: string
          title: Label
      type: object
      required:
      - key
      - value
      - label
      title: ProjectOutputGet
    ProjectPatch:
      properties:
        name:
          anyOf:
          - type: string
          - type: 'null'
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        thumbnail:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Thumbnail
        accessRights:
          anyOf:
          - additionalProperties:
              $ref: '#/components/schemas/AccessRights'
            propertyNames:
              maxLength: 100
              minLength: 1
            type: object
          - type: 'null'
          title: Accessrights
        classifiers:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Classifiers
        dev:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Dev
        ui:
          anyOf:
          - $ref: '#/components/schemas/StudyUI-Input'
          - type: 'null'
        quality:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Quality
        templateType:
          anyOf:
          - $ref: '#/components/schemas/ProjectTemplateType'
          - type: 'null'
        hidden:
          anyOf:
          - type: boolean
          - type: 'null'
          title: Hidden
      type: object
      title: ProjectPatch
    ProjectPermalink:
      properties:
        url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Url
        is_public:
          type: boolean
          title: Is Public
      type: object
      required:
      - url
      - is_public
      title: ProjectPermalink
    ProjectRunningState:
      properties:
        value:
          $ref: '#/components/schemas/RunningState'
          description: The running state of the project
      additionalProperties: false
      type: object
      required:
      - value
      title: ProjectRunningState
    ProjectShare:
      properties:
        shareeEmail:
          type: string
          format: email
          title: Shareeemail
        sharerMessage:
          type: string
          maxLength: 500
          title: Sharermessage
          description: An optional message from sharer to sharee
          default: ''
        read:
          type: boolean
          title: Read
        write:
          type: boolean
          title: Write
        delete:
          type: boolean
          title: Delete
      type: object
      required:
      - shareeEmail
      - read
      - write
      - delete
      title: ProjectShare
    ProjectShareAccepted:
      properties:
        shareeEmail:
          type: string
          format: email
          title: Shareeemail
        confirmationLink:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Confirmationlink
      type: object
      required:
      - shareeEmail
      - confirmationLink
      title: ProjectShareAccepted
    ProjectShareStateOutputSchema:
      properties:
        status:
          $ref: '#/components/schemas/ProjectStatus'
          description: The status of the project
        locked:
          type: boolean
          title: Locked
          description: True if the project is locked
        currentUserGroupids:
          items:
            type: integer
            exclusiveMinimum: true
            minimum: 0
          type: array
          title: Currentusergroupids
          description: Current users in the project (if the project is locked, the
            list contains only the lock owner)
      type: object
      required:
      - status
      - locked
      - currentUserGroupids
      title: ProjectShareStateOutputSchema
    ProjectStateOutputSchema:
      properties:
        shareState:
          $ref: '#/components/schemas/ProjectShareStateOutputSchema'
        state:
          $ref: '#/components/schemas/ProjectRunningState'
          description: The project running state
      type: object
      required:
      - shareState
      - state
      title: ProjectStateOutputSchema
    ProjectStatus:
      type: string
      enum:
      - CLOSED
      - CLOSING
      - CLONING
      - EXPORTING
      - OPENING
      - OPENED
      - MAINTAINING
      title: ProjectStatus
    ProjectTemplateType:
      type: string
      enum:
      - TEMPLATE
      - TUTORIAL
      - HYPERTOOL
      title: ProjectTemplateType
    ProjectType:
      type: string
      enum:
      - TEMPLATE
      - STANDARD
      title: ProjectType
    ProjectTypeAPI:
      type: string
      enum:
      - all
      - template
      - user
      title: ProjectTypeAPI
    ProjectsCommentsAPI:
      properties:
        comment_id:
          type: integer
          exclusiveMinimum: true
          title: Comment Id
          description: Primary key, identifies the comment
          minimum: 0
        project_uuid:
          type: string
          format: uuid
          title: Project Uuid
          description: project reference for this table
        user_id:
          type: integer
          exclusiveMinimum: true
          title: User Id
          description: user reference for this table
          minimum: 0
        contents:
          type: string
          title: Contents
          description: Contents of the comment
        created:
          type: string
          format: date-time
          title: Created
          description: Timestamp on creation
        modified:
          type: string
          format: date-time
          title: Modified
          description: Timestamp with last update
      additionalProperties: false
      type: object
      required:
      - comment_id
      - project_uuid
      - user_id
      - contents
      - created
      - modified
      title: ProjectsCommentsAPI
    ProjectsGroupsBodyParams:
      properties:
        read:
          type: boolean
          title: Read
        write:
          type: boolean
          title: Write
        delete:
          type: boolean
          title: Delete
      type: object
      required:
      - read
      - write
      - delete
      title: ProjectsGroupsBodyParams
    PutWalletBodyParams:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        thumbnail:
          anyOf:
          - type: string
          - type: 'null'
          title: Thumbnail
        status:
          $ref: '#/components/schemas/WalletStatus'
      type: object
      required:
      - name
      - description
      - status
      title: PutWalletBodyParams
    RegisterBody:
      properties:
        email:
          type: string
          format: email
          title: Email
        password:
          type: string
          format: password
          title: Password
          writeOnly: true
        confirm:
          anyOf:
          - type: string
            format: password
            writeOnly: true
          - type: 'null'
          title: Confirm
          description: Password confirmation
        invitation:
          anyOf:
          - type: string
          - type: 'null'
          title: Invitation
          description: Invitation code
      additionalProperties: false
      type: object
      required:
      - email
      - password
      title: RegisterBody
    RegisterPhoneBody:
      properties:
        email:
          type: string
          format: email
          title: Email
        phone:
          type: string
          format: phone
          title: Phone
          description: Phone number E.164, needed on the deployments with 2FA
      additionalProperties: false
      type: object
      required:
      - email
      - phone
      title: RegisterPhoneBody
    RegisterPhoneNextPage:
      properties:
        name:
          type: string
          title: Name
          description: Code name to the front-end page. Ideally a PageStr
        parameters:
          anyOf:
          - $ref: '#/components/schemas/_PageParams'
          - type: 'null'
        logger:
          type: string
          title: Logger
          default: user
          deprecated: true
        level:
          type: string
          enum:
          - INFO
          - WARNING
          - ERROR
          title: Level
          default: INFO
        message:
          type: string
          title: Message
      type: object
      required:
      - name
      - message
      title: RegisterPhoneNextPage
    RegisteredFunctionUpdate:
      properties:
        title:
          anyOf:
          - type: string
          - type: 'null'
          title: Title
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
      type: object
      title: RegisteredFunctionUpdate
    RegisteredProjectFunctionGet:
      properties:
        functionClass:
          type: string
          const: PROJECT
          title: Functionclass
          default: PROJECT
        title:
          type: string
          title: Title
          default: ''
        description:
          type: string
          title: Description
          default: ''
        inputSchema:
          oneOf:
          - $ref: '#/components/schemas/JSONFunctionInputSchema'
          title: Inputschema
          discriminator:
            propertyName: schema_class
            mapping:
              application/schema+json: '#/components/schemas/JSONFunctionInputSchema'
        outputSchema:
          oneOf:
          - $ref: '#/components/schemas/JSONFunctionOutputSchema'
          title: Outputschema
          discriminator:
            propertyName: schema_class
            mapping:
              application/schema+json: '#/components/schemas/JSONFunctionOutputSchema'
        defaultInputs:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Defaultinputs
        uuid:
          type: string
          format: uuid
          title: Uuid
        creationDate:
          type: string
          format: date-time
          title: Creationdate
        lastChangeDate:
          type: string
          format: date-time
          title: Lastchangedate
        templateId:
          type: string
          format: uuid
          title: Templateid
        accessRights:
          additionalProperties:
            $ref: '#/components/schemas/FunctionGroupAccessRightsGet'
          type: object
          title: Accessrights
        thumbnail:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Thumbnail
      type: object
      required:
      - inputSchema
      - outputSchema
      - defaultInputs
      - uuid
      - creationDate
      - lastChangeDate
      - templateId
      - accessRights
      title: RegisteredProjectFunctionGet
    RegisteredSolverFunctionGet:
      properties:
        functionClass:
          type: string
          const: SOLVER
          title: Functionclass
          default: SOLVER
        title:
          type: string
          title: Title
          default: ''
        description:
          type: string
          title: Description
          default: ''
        inputSchema:
          oneOf:
          - $ref: '#/components/schemas/JSONFunctionInputSchema'
          title: Inputschema
          discriminator:
            propertyName: schema_class
            mapping:
              application/schema+json: '#/components/schemas/JSONFunctionInputSchema'
        outputSchema:
          oneOf:
          - $ref: '#/components/schemas/JSONFunctionOutputSchema'
          title: Outputschema
          discriminator:
            propertyName: schema_class
            mapping:
              application/schema+json: '#/components/schemas/JSONFunctionOutputSchema'
        defaultInputs:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Defaultinputs
        uuid:
          type: string
          format: uuid
          title: Uuid
        creationDate:
          type: string
          format: date-time
          title: Creationdate
        lastChangeDate:
          type: string
          format: date-time
          title: Lastchangedate
        solverKey:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Solverkey
        solverVersion:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Solverversion
        accessRights:
          additionalProperties:
            $ref: '#/components/schemas/FunctionGroupAccessRightsGet'
          type: object
          title: Accessrights
        thumbnail:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Thumbnail
      type: object
      required:
      - inputSchema
      - outputSchema
      - defaultInputs
      - uuid
      - creationDate
      - lastChangeDate
      - solverKey
      - solverVersion
      - accessRights
      title: RegisteredSolverFunctionGet
    ReplaceWalletAutoRecharge:
      properties:
        enabled:
          type: boolean
          title: Enabled
        paymentMethodId:
          type: string
          maxLength: 100
          minLength: 1
          title: Paymentmethodid
        topUpAmountInUsd:
          anyOf:
          - type: number
            minimum: 0.0
          - type: string
          title: Topupamountinusd
        monthlyLimitInUsd:
          anyOf:
          - type: number
            minimum: 0.0
          - type: string
          - type: 'null'
          title: Monthlylimitinusd
      type: object
      required:
      - enabled
      - paymentMethodId
      - topUpAmountInUsd
      - monthlyLimitInUsd
      title: ReplaceWalletAutoRecharge
    ResearchResource:
      properties:
        rrid:
          type: string
          pattern: ^(RRID:)([^_\s]{1,30})_(\S{1,30})$
          title: Rrid
          description: Unique identifier used as classifier, i.e. to tag studies and
            services
        name:
          type: string
          title: Name
        description:
          type: string
          title: Description
      type: object
      required:
      - rrid
      - name
      - description
      title: ResearchResource
    Resend2faBody:
      properties:
        email:
          type: string
          format: email
          title: Email
          description: User email (identifier)
        via:
          type: string
          enum:
          - SMS
          - Email
          title: Via
          default: SMS
      additionalProperties: false
      type: object
      required:
      - email
      title: Resend2faBody
    ResetPasswordBody:
      properties:
        email:
          type: string
          format: email
          title: Email
      additionalProperties: false
      type: object
      required:
      - email
      title: ResetPasswordBody
    ResetPasswordConfirmation:
      properties:
        password:
          type: string
          format: password
          title: Password
          writeOnly: true
        confirm:
          type: string
          format: password
          title: Confirm
          writeOnly: true
      additionalProperties: false
      type: object
      required:
      - password
      - confirm
      title: ResetPasswordConfirmation
    ResourceHit:
      properties:
        rid:
          type: string
          title: Rid
        name:
          type: string
          title: Name
      type: object
      required:
      - rid
      - name
      title: ResourceHit
    ResourceValue:
      properties:
        limit:
          anyOf:
          - type: integer
          - type: number
          - type: string
          title: Limit
        reservation:
          anyOf:
          - type: integer
          - type: number
          - type: string
          title: Reservation
      type: object
      required:
      - limit
      - reservation
      title: ResourceValue
    RunningDynamicServiceDetails:
      properties:
        service_key:
          type: string
          pattern: ^simcore/services/dynamic/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
          description: distinctive name for the node based on the docker registry
            path
        service_version:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
          description: semantic version number of the node
        user_id:
          type: integer
          exclusiveMinimum: true
          title: User Id
          minimum: 0
        project_id:
          type: string
          format: uuid
          title: Project Id
        service_uuid:
          type: string
          format: uuid
          title: Service Uuid
        service_basepath:
          anyOf:
          - type: string
            format: path
          - type: 'null'
          title: Service Basepath
          description: predefined path where the dynamic service should be served.
            If empty, the service shall use the root endpoint.
        boot_type:
          $ref: '#/components/schemas/ServiceBootType'
          description: Describes how the dynamic services was started (legacy=V0,
            modern=V2).Since legacy services do not have this label it defaults to
            V0.
          default: V0
        service_host:
          type: string
          title: Service Host
          description: the service swarm internal host name
        service_port:
          type: integer
          exclusiveMaximum: true
          exclusiveMinimum: true
          title: Service Port
          description: the service swarm internal port
          maximum: 65535
          minimum: 0
        published_port:
          anyOf:
          - type: integer
            exclusiveMaximum: true
            exclusiveMinimum: true
            maximum: 65535
            minimum: 0
          - type: 'null'
          title: Published Port
          description: the service swarm published port if any
          deprecated: true
        entry_point:
          anyOf:
          - type: string
          - type: 'null'
          title: Entry Point
          description: if empty the service entrypoint is on the root endpoint.
          deprecated: true
        service_state:
          $ref: '#/components/schemas/ServiceState'
          description: service current state
        service_message:
          anyOf:
          - type: string
          - type: 'null'
          title: Service Message
          description: additional information related to service state
        is_collaborative:
          type: boolean
          title: Is Collaborative
          description: True if service allows collaboration (multi-tenant access)
          default: false
      type: object
      required:
      - service_key
      - service_version
      - user_id
      - project_id
      - service_uuid
      - service_host
      - service_port
      - service_state
      title: RunningDynamicServiceDetails
    RunningState:
      type: string
      enum:
      - UNKNOWN
      - NOT_STARTED
      - PUBLISHED
      - PENDING
      - WAITING_FOR_CLUSTER
      - WAITING_FOR_RESOURCES
      - STARTED
      - SUCCESS
      - FAILED
      - ABORTED
      title: RunningState
      description: "State of execution of a project's computational workflow\n\nSEE\
        \ StateType for task state\n\n# Computational backend states explained:\n\
        - UNKNOWN - The backend doesn't know about the task anymore, it has disappeared\
        \ from the system or it was never created (eg. when we are asking for the\
        \ task)\n- NOT_STARTED - Default state when the task is created\n- PUBLISHED\
        \ - The task has been submitted to the computational backend (click on \"\
        Run\" button in the UI)\n- PENDING - Task has been transferred to the Dask\
        \ scheduler and is waiting for a worker to pick it up (director-v2 --> Dask\
        \ scheduler)\n   - But! it is also transition state (ex. PENDING -> WAITING_FOR_CLUSTER\
        \ -> PENDING -> WAITING_FOR_RESOURCES -> PENDING -> STARTED)\n- WAITING_FOR_CLUSTER\
        \ - No cluster (Dask scheduler) is available to run the task; waiting for\
        \ one to become available\n- WAITING_FOR_RESOURCES - No worker (Dask worker)\
        \ is available to run the task; waiting for one to become available\n- STARTED\
        \ - A worker has picked up the task and is executing it\n- SUCCESS - Task\
        \ finished successfully\n- FAILED - Task finished with an error\n- ABORTED\
        \ - Task was aborted before completion"
    SearchBodyParams:
      properties:
        filters:
          $ref: '#/components/schemas/SearchFilters'
      type: object
      required:
      - filters
      title: SearchBodyParams
    SearchFilters:
      properties:
        namePattern:
          type: string
          title: Namepattern
          description: Name pattern with wildcard support (*, ?). Minimum of 3 non-wildcard
            characters required.
        modifiedAt:
          anyOf:
          - $ref: '#/components/schemas/SearchTimerangeFilter'
          - type: 'null'
          description: Filter results based on modification date range
        projectId:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Projectid
          description: If provided, only files within this project are searched
      type: object
      required:
      - namePattern
      title: SearchFilters
    SearchTimerangeFilter:
      properties:
        from:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: From
          description: Filter results before this date
        until:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Until
          description: Filter results after this date
      type: object
      title: SearchTimerangeFilter
    SelectBox:
      properties:
        structure:
          items:
            $ref: '#/components/schemas/Structure'
          type: array
          minItems: 1
          title: Structure
      additionalProperties: false
      type: object
      required:
      - structure
      title: SelectBox
    ServiceBootType:
      type: string
      enum:
      - V0
      - V2
      title: ServiceBootType
    ServiceGet:
      properties:
        key:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Key
          description: Service key ID
        title:
          type: string
          title: Title
          description: Service name for display
        description:
          type: string
          title: Description
          description: Long description of the service
        thumbnail:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: Thumbnail
          description: Url to service thumbnail
        file_extensions:
          items:
            type: string
          type: array
          title: File Extensions
          description: File extensions that this service can process
        view_url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: View Url
          description: Redirection to open a service in osparc (see /view)
      type: object
      required:
      - key
      - title
      - description
      - thumbnail
      - view_url
      title: ServiceGet
      example:
        description: It is also sim4life for the web
        file_extensions:
        - smash
        - h5
        key: simcore/services/dynamic/sim4life
        thumbnail: https://via.placeholder.com/170x120.png
        title: Sim4Life Mattermost
        view_url: https://host.com/view?viewer_key=simcore/services/dynamic/raw-graphs&viewer_version=1.2.3
    ServiceGroupAccessRightsV2:
      properties:
        execute:
          type: boolean
          title: Execute
          default: false
        write:
          type: boolean
          title: Write
          default: false
      additionalProperties: false
      type: object
      title: ServiceGroupAccessRightsV2
    ServiceInputGet:
      properties:
        unitLong:
          anyOf:
          - type: string
          - type: 'null'
          title: Unitlong
          description: Long name of the unit for display (html-compatible), if available
        unitShort:
          anyOf:
          - type: string
          - type: 'null'
          title: Unitshort
          description: Short name for the unit for display (html-compatible), if available
        displayOrder:
          anyOf:
          - type: number
          - type: 'null'
          title: Displayorder
          description: 'DEPRECATED: new display order is taken from the item position.
            This will be removed.'
          deprecated: true
        label:
          type: string
          title: Label
          description: short name for the property
        description:
          type: string
          title: Description
          description: description of the property
        type:
          type: string
          pattern: ^(number|integer|boolean|string|ref_contentSchema|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$
          title: Type
          description: data type expected on this input glob matching for data type
            is allowed
        contentSchema:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Contentschema
          description: jsonschema of this input/output. Required when type='ref_contentSchema'
        fileToKeyMap:
          anyOf:
          - type: object
          - type: 'null'
          title: Filetokeymap
          description: Place the data associated with the named keys in files
        unit:
          anyOf:
          - type: string
          - type: 'null'
          title: Unit
          description: Units, when it refers to a physical quantity
          deprecated: true
        defaultValue:
          anyOf:
          - type: boolean
          - type: integer
          - type: number
          - type: string
          - type: 'null'
          title: Defaultvalue
          deprecated: true
        widget:
          anyOf:
          - $ref: '#/components/schemas/Widget'
          - type: 'null'
          description: custom widget to use instead of the default one determined
            from the data-type
        keyId:
          type: string
          pattern: ^[-_a-zA-Z0-9]+$
          title: Keyid
          description: Unique name identifier for this input
      additionalProperties: false
      type: object
      required:
      - label
      - description
      - type
      - keyId
      title: ServiceInputGet
      description: Extends fields of api_schemas_catalog.services.ServiceGet.outputs[*]
      example:
        defaultValue: 0
        description: Time to wait before completion
        displayOrder: 2
        keyId: input_2
        label: Sleep Time
        type: number
        unit: second
        unitLong: seconds
        unitShort: sec
        widget:
          details:
            minHeight: 1
          type: TextArea
    ServiceKeyVersion:
      properties:
        key:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Key
          description: distinctive name for the node based on the docker registry
            path
        version:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Version
          description: service version number
      type: object
      required:
      - key
      - version
      title: ServiceKeyVersion
      description: Service `key-version` pair uniquely identifies a service
    ServiceOutputGet:
      properties:
        unitLong:
          anyOf:
          - type: string
          - type: 'null'
          title: Unitlong
          description: Long name of the unit for display (html-compatible), if available
        unitShort:
          anyOf:
          - type: string
          - type: 'null'
          title: Unitshort
          description: Short name for the unit for display (html-compatible), if available
        displayOrder:
          anyOf:
          - type: number
          - type: 'null'
          title: Displayorder
          description: 'DEPRECATED: new display order is taken from the item position.
            This will be removed.'
          deprecated: true
        label:
          type: string
          title: Label
          description: short name for the property
        description:
          type: string
          title: Description
          description: description of the property
        type:
          type: string
          pattern: ^(number|integer|boolean|string|ref_contentSchema|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$
          title: Type
          description: data type expected on this input glob matching for data type
            is allowed
        contentSchema:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Contentschema
          description: jsonschema of this input/output. Required when type='ref_contentSchema'
        fileToKeyMap:
          anyOf:
          - type: object
          - type: 'null'
          title: Filetokeymap
          description: Place the data associated with the named keys in files
        unit:
          anyOf:
          - type: string
          - type: 'null'
          title: Unit
          description: Units, when it refers to a physical quantity
          deprecated: true
        widget:
          anyOf:
          - $ref: '#/components/schemas/Widget'
          - type: 'null'
          description: custom widget to use instead of the default one determined
            from the data-type
          deprecated: true
        keyId:
          type: string
          pattern: ^[-_a-zA-Z0-9]+$
          title: Keyid
          description: Unique name identifier for this input
      additionalProperties: false
      type: object
      required:
      - label
      - description
      - type
      - keyId
      title: ServiceOutputGet
      description: Extends fields of api_schemas_catalog.services.ServiceGet.outputs[*]
      example:
        description: Time the service waited before completion
        displayOrder: 2
        keyId: output_2
        label: Time Slept
        type: number
        unit: second
        unitLong: seconds
        unitShort: sec
    ServicePricingPlanGet:
      properties:
        pricingPlanId:
          type: integer
          exclusiveMinimum: true
          title: Pricingplanid
          minimum: 0
        displayName:
          type: string
          title: Displayname
        description:
          type: string
          title: Description
        classification:
          $ref: '#/components/schemas/PricingPlanClassification'
        createdAt:
          type: string
          format: date-time
          title: Createdat
        pricingPlanKey:
          type: string
          title: Pricingplankey
        pricingUnits:
          items:
            $ref: '#/components/schemas/PricingUnitGet'
          type: array
          title: Pricingunits
      type: object
      required:
      - pricingPlanId
      - displayName
      - description
      - classification
      - createdAt
      - pricingPlanKey
      - pricingUnits
      title: ServicePricingPlanGet
    ServiceRelease:
      properties:
        version:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Version
        versionDisplay:
          anyOf:
          - type: string
          - type: 'null'
          title: Versiondisplay
          description: If None, then display `version`
        released:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Released
          description: When provided, it indicates the release timestamp
        retired:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Retired
          description: whether this service is planned to be retired. If None, the
            service is still active. If now<retired then the service is deprecated.
            If retired<now then the service is retired and should not be used.
        compatibility:
          anyOf:
          - $ref: '#/components/schemas/Compatibility'
          - type: 'null'
          description: Compatibility with other releases at this moment
      type: object
      required:
      - version
      title: ServiceRelease
    ServiceRunGet:
      properties:
        service_run_id:
          type: string
          title: Service Run Id
        wallet_id:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Wallet Id
        wallet_name:
          anyOf:
          - type: string
          - type: 'null'
          title: Wallet Name
        user_id:
          type: integer
          exclusiveMinimum: true
          title: User Id
          minimum: 0
        user_email:
          type: string
          title: User Email
        project_id:
          type: string
          format: uuid
          title: Project Id
        project_name:
          type: string
          title: Project Name
        project_tags:
          items:
            type: string
          type: array
          title: Project Tags
        node_id:
          type: string
          format: uuid
          title: Node Id
        node_name:
          type: string
          title: Node Name
        root_parent_project_id:
          type: string
          format: uuid
          title: Root Parent Project Id
        root_parent_project_name:
          type: string
          title: Root Parent Project Name
        service_key:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
        service_version:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
        service_type:
          type: string
          title: Service Type
        started_at:
          type: string
          format: date-time
          title: Started At
        stopped_at:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Stopped At
        service_run_status:
          $ref: '#/components/schemas/ServiceRunStatus'
        credit_cost:
          anyOf:
          - type: string
          - type: 'null'
          title: Credit Cost
        transaction_status:
          anyOf:
          - $ref: '#/components/schemas/CreditTransactionStatus'
          - type: 'null'
      type: object
      required:
      - service_run_id
      - wallet_id
      - wallet_name
      - user_id
      - user_email
      - project_id
      - project_name
      - project_tags
      - node_id
      - node_name
      - root_parent_project_id
      - root_parent_project_name
      - service_key
      - service_version
      - service_type
      - started_at
      - stopped_at
      - service_run_status
      - credit_cost
      - transaction_status
      title: ServiceRunGet
    ServiceRunStatus:
      type: string
      enum:
      - RUNNING
      - SUCCESS
      - ERROR
      title: ServiceRunStatus
    ServiceState:
      type: string
      enum:
      - failed
      - pending
      - pulling
      - starting
      - running
      - stopping
      - complete
      - idle
      title: ServiceState
    ServiceType:
      type: string
      enum:
      - computational
      - dynamic
      - frontend
      - backend
      title: ServiceType
    ServicesAggregatedUsagesTimePeriod:
      type: integer
      enum:
      - 1
      - 7
      - 30
      title: ServicesAggregatedUsagesTimePeriod
    ServicesAggregatedUsagesType:
      type: string
      enum:
      - services
      title: ServicesAggregatedUsagesType
    SimCoreFileLink:
      properties:
        store:
          type: integer
          title: Store
          description: 'The store identifier: 0 for simcore S3, 1 for datcore'
        path:
          anyOf:
          - type: string
            pattern: ^(exports\/\d+\/[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}\.zip)|((api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$)
          - type: string
            pattern: ^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$
          title: Path
          description: The path to the file in the storage provider domain
        label:
          anyOf:
          - type: string
          - type: 'null'
          title: Label
          description: The real file name
        eTag:
          anyOf:
          - type: string
          - type: 'null'
          title: Etag
          description: Entity tag that uniquely represents the file. The method to
            generate the tag is not specified (black box).
        dataset:
          anyOf:
          - type: string
          - type: 'null'
          title: Dataset
          deprecated: true
      additionalProperties: false
      type: object
      required:
      - store
      - path
      title: SimCoreFileLink
      description: I/O port type to hold a link to a file in simcore S3 storage
    SlideshowUI:
      properties:
        position:
          type: integer
          title: Position
        instructions:
          anyOf:
          - type: string
          - type: 'null'
          title: Instructions
      type: object
      required:
      - position
      title: SlideshowUI
    SolverFunctionToRegister:
      properties:
        functionClass:
          type: string
          const: SOLVER
          title: Functionclass
          default: SOLVER
        title:
          type: string
          title: Title
          default: ''
        description:
          type: string
          title: Description
          default: ''
        inputSchema:
          oneOf:
          - $ref: '#/components/schemas/JSONFunctionInputSchema'
          title: Inputschema
          discriminator:
            propertyName: schema_class
            mapping:
              application/schema+json: '#/components/schemas/JSONFunctionInputSchema'
        outputSchema:
          oneOf:
          - $ref: '#/components/schemas/JSONFunctionOutputSchema'
          title: Outputschema
          discriminator:
            propertyName: schema_class
            mapping:
              application/schema+json: '#/components/schemas/JSONFunctionOutputSchema'
        defaultInputs:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Defaultinputs
        solverKey:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Solverkey
        solverVersion:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Solverversion
      type: object
      required:
      - inputSchema
      - outputSchema
      - defaultInputs
      - solverKey
      - solverVersion
      title: SolverFunctionToRegister
    SpecificInfo:
      properties:
        aws_ec2_instances:
          items:
            type: string
          type: array
          title: Aws Ec2 Instances
      type: object
      required:
      - aws_ec2_instances
      title: SpecificInfo
      description: 'Custom information that is not propagated to the frontend. For
        example can be used

        to store aws ec2 instance type.'
    StackInfoDict:
      properties:
        f_code:
          type: string
          title: F Code
        f_lineno:
          type: string
          title: F Lineno
      type: object
      required:
      - f_code
      - f_lineno
      title: StackInfoDict
    StaticFrontEndDict:
      properties:
        third_party_references:
          items:
            $ref: '#/components/schemas/ThirdPartyInfoDict'
          type: array
          title: Third Party References
        countries:
          items:
            $ref: '#/components/schemas/CountryInfoDict'
          type: array
          title: Countries
        issues:
          title: Issues
        vendor:
          title: Vendor
        manuals:
          title: Manuals
      type: object
      required:
      - third_party_references
      - countries
      title: StaticFrontEndDict
    Stats:
      properties:
        cpuUsage:
          type: number
          exclusiveMinimum: true
          title: Cpuusage
          minimum: 0.0
        memUsage:
          type: number
          exclusiveMinimum: true
          title: Memusage
          minimum: 0.0
      type: object
      required:
      - cpuUsage
      - memUsage
      title: Stats
    StatusDiagnosticsGet:
      properties:
        loop_tasks:
          items:
            $ref: '#/components/schemas/TaskInfoDict'
          type: array
          title: Loop Tasks
        top_tracemalloc:
          items:
            type: string
          type: array
          title: Top Tracemalloc
      type: object
      required:
      - loop_tasks
      - top_tracemalloc
      title: StatusDiagnosticsGet
    Structure:
      properties:
        key:
          anyOf:
          - type: string
          - type: boolean
          - type: number
          title: Key
        label:
          type: string
          title: Label
      additionalProperties: false
      type: object
      required:
      - key
      - label
      title: Structure
    StudyUI-Input:
      properties:
        icon:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Icon
        workbench:
          anyOf:
          - type: object
          - type: 'null'
          title: Workbench
        slideshow:
          anyOf:
          - type: object
          - type: 'null'
          title: Slideshow
        currentNodeId:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Currentnodeid
        annotations:
          anyOf:
          - type: object
          - type: 'null'
          title: Annotations
        templateType:
          anyOf:
          - type: string
            const: hypertool
          - type: 'null'
          title: Templatetype
        mode:
          anyOf:
          - type: string
            enum:
            - workbench
            - app
            - guided
            - standalone
            - pipeline
          - type: 'null'
          title: Mode
      additionalProperties: true
      type: object
      title: StudyUI
    StudyUI-Output:
      properties:
        icon:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Icon
        workbench:
          anyOf:
          - type: object
          - type: 'null'
          title: Workbench
        slideshow:
          anyOf:
          - type: object
          - type: 'null'
          title: Slideshow
        currentNodeId:
          anyOf:
          - type: string
            format: uuid
          - type: 'null'
          title: Currentnodeid
        annotations:
          anyOf:
          - type: object
          - type: 'null'
          title: Annotations
        templateType:
          anyOf:
          - type: string
            const: hypertool
          - type: 'null'
          title: Templatetype
        mode:
          anyOf:
          - type: string
            enum:
            - workbench
            - app
            - guided
            - standalone
            - pipeline
          - type: 'null'
          title: Mode
      additionalProperties: true
      type: object
      title: StudyUI
    TagAccessRights:
      properties:
        read:
          type: boolean
          title: Read
        write:
          type: boolean
          title: Write
        delete:
          type: boolean
          title: Delete
      type: object
      required:
      - read
      - write
      - delete
      title: TagAccessRights
    TagCreate:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 1
          pattern: ^[A-Za-z0-9 ._-]+$
          title: Name
        description:
          anyOf:
          - type: string
            maxLength: 5000
            minLength: 3
          - type: 'null'
          title: Description
        color:
          type: string
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          title: Color
        priority:
          anyOf:
          - type: integer
          - type: 'null'
          title: Priority
      type: object
      required:
      - name
      - color
      title: TagCreate
    TagGet:
      properties:
        id:
          type: integer
          exclusiveMinimum: true
          title: Id
          minimum: 0
        name:
          type: string
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        color:
          type: string
          title: Color
        accessRights:
          $ref: '#/components/schemas/TagAccessRights'
      type: object
      required:
      - id
      - name
      - color
      - accessRights
      title: TagGet
    TagGroupCreate:
      properties:
        read:
          type: boolean
          title: Read
        write:
          type: boolean
          title: Write
        delete:
          type: boolean
          title: Delete
      type: object
      required:
      - read
      - write
      - delete
      title: TagGroupCreate
    TagGroupGet:
      properties:
        gid:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
        read:
          type: boolean
          title: Read
        write:
          type: boolean
          title: Write
        delete:
          type: boolean
          title: Delete
      type: object
      required:
      - gid
      - read
      - write
      - delete
      title: TagGroupGet
    TagUpdate:
      properties:
        name:
          anyOf:
          - type: string
            maxLength: 100
            minLength: 1
            pattern: ^[A-Za-z0-9 ._-]+$
          - type: 'null'
          title: Name
        description:
          anyOf:
          - type: string
            maxLength: 5000
            minLength: 3
          - type: 'null'
          title: Description
        color:
          anyOf:
          - type: string
            pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          - type: 'null'
          title: Color
        priority:
          anyOf:
          - type: integer
          - type: 'null'
          title: Priority
      type: object
      title: TagUpdate
    TaskGet:
      properties:
        task_id:
          type: string
          title: Task Id
        task_name:
          type: string
          title: Task Name
        status_href:
          type: string
          title: Status Href
        abort_href:
          type: string
          title: Abort Href
        result_href:
          anyOf:
          - type: string
          - type: 'null'
          title: Result Href
        stream_href:
          anyOf:
          - type: string
          - type: 'null'
          title: Stream Href
      type: object
      required:
      - task_id
      - status_href
      - abort_href
      title: TaskGet
    TaskInfoDict:
      properties:
        txt:
          type: string
          title: Txt
        type:
          type: string
          title: Type
        done:
          type: boolean
          title: Done
        cancelled:
          type: boolean
          title: Cancelled
        stack:
          items:
            $ref: '#/components/schemas/StackInfoDict'
          type: array
          title: Stack
        exception:
          anyOf:
          - type: string
          - type: 'null'
          title: Exception
      type: object
      required:
      - txt
      - type
      - done
      - cancelled
      - stack
      - exception
      title: TaskInfoDict
    TaskProgress:
      properties:
        task_id:
          anyOf:
          - type: string
          - type: 'null'
          title: Task Id
        message:
          type: string
          title: Message
          default: ''
        percent:
          type: number
          maximum: 1.0
          minimum: 0.0
          title: Percent
          default: 0.0
      type: object
      title: TaskProgress
      description: 'Helps the user to keep track of the progress. Progress is expected
        to be

        defined as a float bound between 0.0 and 1.0'
    TaskStatus:
      properties:
        task_progress:
          $ref: '#/components/schemas/TaskProgress'
        done:
          type: boolean
          title: Done
        started:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Started
      type: object
      required:
      - task_progress
      - done
      - started
      title: TaskStatus
    TaskStreamResponse:
      properties:
        items:
          items:
            additionalProperties: true
            type: object
          type: array
          title: Items
        end:
          type: boolean
          title: End
      additionalProperties: false
      type: object
      required:
      - items
      - end
      title: TaskStreamResponse
    TestEmail:
      properties:
        from_:
          anyOf:
          - type: string
            format: email
          - type: 'null'
          title: From
          description: Email sender
        to:
          type: string
          format: email
          title: To
          description: Email receiver
        template_name:
          type: string
          enum:
          - change_email_email.jinja2
          - new_2fa_code.jinja2
          - registration_email.jinja2
          - reset_password_email.jinja2
          - service_submission.jinja2
          title: Template Name
          default: registration_email.jinja2
        template_context:
          additionalProperties: true
          type: object
          title: Template Context
          default: {}
      type: object
      required:
      - to
      title: TestEmail
    TextArea:
      properties:
        minHeight:
          type: integer
          exclusiveMinimum: true
          title: Minheight
          description: minimum Height of the textarea
          minimum: 0
      additionalProperties: false
      type: object
      required:
      - minHeight
      title: TextArea
    ThirdPartyInfoDict:
      properties:
        name:
          type: string
          title: Name
        version:
          type: string
          title: Version
        url:
          type: string
          title: Url
        thumbnail:
          type: string
          title: Thumbnail
      type: object
      required:
      - name
      - version
      - url
      - thumbnail
      title: ThirdPartyInfoDict
    UnitExtraInfoLicense:
      properties:
        num_of_seats:
          type: integer
          minimum: 0
          title: Num Of Seats
      additionalProperties: true
      type: object
      required:
      - num_of_seats
      title: UnitExtraInfoLicense
      description: Custom information that is propagated to the frontend. Defined
        fields are mandatory.
    UnitExtraInfoTier-Input:
      properties:
        CPU:
          type: integer
          minimum: 0
          title: Cpu
        RAM:
          anyOf:
          - type: string
            pattern: ^\s*(\d*\.?\d+)\s*(\w+)?
          - type: integer
            minimum: 0
          title: Ram
        VRAM:
          anyOf:
          - type: string
            pattern: ^\s*(\d*\.?\d+)\s*(\w+)?
          - type: integer
            minimum: 0
          title: Vram
      additionalProperties: true
      type: object
      required:
      - CPU
      - RAM
      - VRAM
      title: UnitExtraInfoTier
      description: Custom information that is propagated to the frontend. Defined
        fields are mandatory.
    UnitExtraInfoTier-Output:
      properties:
        CPU:
          type: integer
          minimum: 0
          title: Cpu
        RAM:
          type: integer
          minimum: 0
          title: Ram
        VRAM:
          type: integer
          minimum: 0
          title: Vram
      additionalProperties: true
      type: object
      required:
      - CPU
      - RAM
      - VRAM
      title: UnitExtraInfoTier
      description: Custom information that is propagated to the frontend. Defined
        fields are mandatory.
    UnregisterCheck:
      properties:
        email:
          type: string
          format: email
          title: Email
        password:
          type: string
          format: password
          title: Password
          writeOnly: true
      type: object
      required:
      - email
      - password
      title: UnregisterCheck
    UpdatePricingPlanBodyParams:
      properties:
        displayName:
          type: string
          title: Displayname
        description:
          type: string
          title: Description
        isActive:
          type: boolean
          title: Isactive
      type: object
      required:
      - displayName
      - description
      - isActive
      title: UpdatePricingPlanBodyParams
    UpdatePricingUnitBodyParams:
      properties:
        unitName:
          type: string
          title: Unitname
        unitExtraInfo:
          anyOf:
          - $ref: '#/components/schemas/UnitExtraInfoTier-Input'
          - $ref: '#/components/schemas/UnitExtraInfoLicense'
          title: Unitextrainfo
        default:
          type: boolean
          title: Default
        specificInfo:
          $ref: '#/components/schemas/SpecificInfo'
        pricingUnitCostUpdate:
          anyOf:
          - $ref: '#/components/schemas/PricingUnitCostUpdate'
          - type: 'null'
      type: object
      required:
      - unitName
      - unitExtraInfo
      - default
      - specificInfo
      title: UpdatePricingUnitBodyParams
    UploadedPart:
      properties:
        number:
          type: integer
          exclusiveMinimum: true
          title: Number
          minimum: 0
        e_tag:
          type: string
          title: E Tag
      type: object
      required:
      - number
      - e_tag
      title: UploadedPart
    UserAccountApprove:
      properties:
        email:
          type: string
          format: email
          title: Email
        invitation:
          anyOf:
          - $ref: '#/components/schemas/_InvitationDetails'
          - type: 'null'
      type: object
      required:
      - email
      title: UserAccountApprove
    UserAccountGet:
      properties:
        firstName:
          anyOf:
          - type: string
          - type: 'null'
          title: Firstname
        lastName:
          anyOf:
          - type: string
          - type: 'null'
          title: Lastname
        email:
          type: string
          format: email
          title: Email
        institution:
          anyOf:
          - type: string
          - type: 'null'
          title: Institution
        phone:
          anyOf:
          - type: string
          - type: 'null'
          title: Phone
        address:
          anyOf:
          - type: string
          - type: 'null'
          title: Address
        city:
          anyOf:
          - type: string
          - type: 'null'
          title: City
        state:
          anyOf:
          - type: string
          - type: 'null'
          title: State
          description: State, province, canton, ...
        postalCode:
          anyOf:
          - type: string
          - type: 'null'
          title: Postalcode
        country:
          anyOf:
          - type: string
          - type: 'null'
          title: Country
        extras:
          additionalProperties: true
          type: object
          title: Extras
          description: Keeps extra information provided in the request form
        preRegistrationId:
          anyOf:
          - type: integer
          - type: 'null'
          title: Preregistrationid
        preRegistrationCreated:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Preregistrationcreated
        invitedBy:
          anyOf:
          - type: string
            maxLength: 100
            minLength: 4
          - type: 'null'
          title: Invitedby
        accountRequestStatus:
          anyOf:
          - $ref: '#/components/schemas/AccountRequestStatus'
          - type: 'null'
        accountRequestReviewedBy:
          anyOf:
          - type: string
            maxLength: 100
            minLength: 4
          - type: 'null'
          title: Accountrequestreviewedby
        accountRequestReviewedAt:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Accountrequestreviewedat
        registered:
          type: boolean
          title: Registered
        status:
          anyOf:
          - $ref: '#/components/schemas/UserStatus'
          - type: 'null'
        products:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          title: Products
          description: List of products this users is included or None if fields is
            unset
        userId:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Userid
          description: Unique identifier of the user if an account was created
        userName:
          anyOf:
          - type: string
            maxLength: 100
            minLength: 4
          - type: 'null'
          title: Username
          description: Username of the user if an account was created
        groupId:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 1
          - type: 'null'
          title: Groupid
          description: Primary group ID of the user if an account was created
      type: object
      required:
      - firstName
      - lastName
      - email
      - institution
      - phone
      - address
      - city
      - state
      - postalCode
      - country
      - preRegistrationId
      - preRegistrationCreated
      - accountRequestStatus
      - registered
      title: UserAccountGet
    UserAccountReject:
      properties:
        email:
          type: string
          format: email
          title: Email
      type: object
      required:
      - email
      title: UserAccountReject
    UserAccountRestPreRegister:
      properties:
        firstName:
          type: string
          title: Firstname
        lastName:
          type: string
          title: Lastname
        email:
          type: string
          format: email
          title: Email
        institution:
          anyOf:
          - type: string
          - type: 'null'
          title: Institution
          description: company, university, ...
        phone:
          anyOf:
          - type: string
            format: phone
          - type: 'null'
          title: Phone
        address:
          type: string
          title: Address
        city:
          type: string
          title: City
        state:
          anyOf:
          - type: string
          - type: 'null'
          title: State
        postalCode:
          type: string
          title: Postalcode
        country:
          type: string
          title: Country
        extras:
          additionalProperties: true
          type: object
          title: Extras
          description: Keeps extra information provided in the request form.
      type: object
      required:
      - firstName
      - lastName
      - email
      - phone
      - address
      - city
      - postalCode
      - country
      title: UserAccountRestPreRegister
    UserGet:
      properties:
        userId:
          type: integer
          exclusiveMinimum: true
          title: Userid
          minimum: 0
        groupId:
          type: integer
          exclusiveMinimum: true
          title: Groupid
          minimum: 0
        userName:
          anyOf:
          - type: string
            maxLength: 100
            minLength: 4
          - type: 'null'
          title: Username
        firstName:
          anyOf:
          - type: string
          - type: 'null'
          title: Firstname
        lastName:
          anyOf:
          - type: string
          - type: 'null'
          title: Lastname
        email:
          anyOf:
          - type: string
            format: email
          - type: 'null'
          title: Email
      type: object
      required:
      - userId
      - groupId
      title: UserGet
    UserNotification:
      properties:
        user_id:
          type: integer
          exclusiveMinimum: true
          title: User Id
          minimum: 0
        category:
          $ref: '#/components/schemas/NotificationCategory'
        actionable_path:
          type: string
          title: Actionable Path
        title:
          type: string
          title: Title
        text:
          type: string
          title: Text
        date:
          type: string
          format: date-time
          title: Date
        product:
          anyOf:
          - type: string
            const: UNDEFINED
          - type: string
          title: Product
          default: UNDEFINED
        resource_id:
          anyOf:
          - type: string
            const: ''
          - type: string
          title: Resource Id
          default: ''
        user_from_id:
          anyOf:
          - type: 'null'
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          title: User From Id
        id:
          type: string
          title: Id
        read:
          type: boolean
          title: Read
      type: object
      required:
      - user_id
      - category
      - actionable_path
      - title
      - text
      - date
      - id
      - read
      title: UserNotification
    UserNotificationCreate:
      properties:
        user_id:
          type: integer
          exclusiveMinimum: true
          title: User Id
          minimum: 0
        category:
          $ref: '#/components/schemas/NotificationCategory'
        actionable_path:
          type: string
          title: Actionable Path
        title:
          type: string
          title: Title
        text:
          type: string
          title: Text
        date:
          type: string
          format: date-time
          title: Date
        product:
          anyOf:
          - type: string
            const: UNDEFINED
          - type: string
          title: Product
          default: UNDEFINED
        resource_id:
          anyOf:
          - type: string
            const: ''
          - type: string
          title: Resource Id
          default: ''
        user_from_id:
          anyOf:
          - type: 'null'
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          title: User From Id
      type: object
      required:
      - user_id
      - category
      - actionable_path
      - title
      - text
      - date
      title: UserNotificationCreate
    UserNotificationPatch:
      properties:
        read:
          type: boolean
          title: Read
      type: object
      required:
      - read
      title: UserNotificationPatch
    UserStatus:
      type: string
      enum:
      - CONFIRMATION_PENDING
      - ACTIVE
      - EXPIRED
      - BANNED
      - DELETED
      title: UserStatus
    UsersSearch:
      properties:
        match:
          type: string
          maxLength: 200
          minLength: 1
          pattern: ^[A-Za-z0-9 ._@-]*$
          title: Match
          description: Search string to match with usernames and public profiles (e.g.
            emails, first/last name)
        limit:
          type: integer
          maximum: 50
          minimum: 1
          title: Limit
          default: 10
      type: object
      required:
      - match
      title: UsersSearch
    Viewer:
      properties:
        title:
          type: string
          title: Title
          description: Short formatted label with name and version of the viewer
        file_type:
          type: string
          title: File Type
          description: Identifier for the file type
        view_url:
          type: string
          maxLength: 2083
          minLength: 1
          format: uri
          title: View Url
          description: Base url to execute viewer. Needs appending file_size,[file_name]
            and download_link as query parameters
      type: object
      required:
      - title
      - file_type
      - view_url
      title: Viewer
      description: "API model for a viewer resource\n\nA viewer is a service with\
        \ an associated filetype.\nYou can think of it as a tuple (filetype, service)\n\
        \nThe service could consume other filetypes BUT at this\ninterface this is\
        \ represented in yet another viewer resource\n\nFor instance, the same service\
        \ can be in two different viewer resources\n  - viewer1=(JPEG, RawGraph service)\n\
        \  - viewer2=(CSV, RawGraph service)\n\nA viewer can be dispatched using the\
        \ view_url and appending the"
    WalletGet:
      properties:
        walletId:
          type: integer
          exclusiveMinimum: true
          title: Walletid
          minimum: 0
        name:
          type: string
          maxLength: 100
          minLength: 1
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        owner:
          type: integer
          exclusiveMinimum: true
          title: Owner
          minimum: 0
        thumbnail:
          anyOf:
          - type: string
          - type: 'null'
          title: Thumbnail
        status:
          $ref: '#/components/schemas/WalletStatus'
        created:
          type: string
          format: date-time
          title: Created
        modified:
          type: string
          format: date-time
          title: Modified
      type: object
      required:
      - walletId
      - name
      - owner
      - status
      - created
      - modified
      title: WalletGet
    WalletGetWithAvailableCredits:
      properties:
        walletId:
          type: integer
          exclusiveMinimum: true
          title: Walletid
          minimum: 0
        name:
          type: string
          maxLength: 100
          minLength: 1
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        owner:
          type: integer
          exclusiveMinimum: true
          title: Owner
          minimum: 0
        thumbnail:
          anyOf:
          - type: string
          - type: 'null'
          title: Thumbnail
        status:
          $ref: '#/components/schemas/WalletStatus'
        created:
          type: string
          format: date-time
          title: Created
        modified:
          type: string
          format: date-time
          title: Modified
        availableCredits:
          type: string
          title: Availablecredits
      type: object
      required:
      - walletId
      - name
      - owner
      - status
      - created
      - modified
      - availableCredits
      title: WalletGetWithAvailableCredits
    WalletGroupGet:
      properties:
        gid:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
        read:
          type: boolean
          title: Read
        write:
          type: boolean
          title: Write
        delete:
          type: boolean
          title: Delete
        created:
          type: string
          format: date-time
          title: Created
        modified:
          type: string
          format: date-time
          title: Modified
      type: object
      required:
      - gid
      - read
      - write
      - delete
      - created
      - modified
      title: WalletGroupGet
    WalletPaymentInitiated:
      properties:
        paymentId:
          type: string
          maxLength: 100
          minLength: 1
          title: Paymentid
        paymentFormUrl:
          anyOf:
          - type: string
            maxLength: 2083
            minLength: 1
            format: uri
          - type: 'null'
          title: Paymentformurl
          description: Link to external site that holds the payment submission form.None
            if no prompt step is required (e.g. pre-selected credit card)
      type: object
      required:
      - paymentId
      title: WalletPaymentInitiated
    WalletStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
      title: WalletStatus
    Widget:
      properties:
        type:
          $ref: '#/components/schemas/WidgetType'
          description: type of the property
        details:
          anyOf:
          - $ref: '#/components/schemas/TextArea'
          - $ref: '#/components/schemas/SelectBox'
          title: Details
      additionalProperties: false
      type: object
      required:
      - type
      - details
      title: Widget
    WidgetType:
      type: string
      enum:
      - TextArea
      - SelectBox
      title: WidgetType
    WorkbenchUI:
      properties:
        position:
          $ref: '#/components/schemas/Position'
          description: The node position in the workbench
        marker:
          anyOf:
          - $ref: '#/components/schemas/MarkerUI'
          - type: 'null'
      additionalProperties: false
      type: object
      required:
      - position
      title: WorkbenchUI
    WorkspaceCreateBodyParams:
      properties:
        name:
          type: string
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        thumbnail:
          anyOf:
          - type: string
          - type: 'null'
          title: Thumbnail
      additionalProperties: false
      type: object
      required:
      - name
      title: WorkspaceCreateBodyParams
    WorkspaceGet:
      properties:
        workspaceId:
          type: integer
          exclusiveMinimum: true
          title: Workspaceid
          minimum: 0
        name:
          type: string
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        thumbnail:
          anyOf:
          - type: string
          - type: 'null'
          title: Thumbnail
        createdAt:
          type: string
          format: date-time
          title: Createdat
        modifiedAt:
          type: string
          format: date-time
          title: Modifiedat
        trashedAt:
          anyOf:
          - type: string
            format: date-time
          - type: 'null'
          title: Trashedat
        trashedBy:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Trashedby
          description: The primary gid of the user who trashed
        myAccessRights:
          $ref: '#/components/schemas/AccessRights'
        accessRights:
          additionalProperties:
            $ref: '#/components/schemas/AccessRights'
          type: object
          title: Accessrights
      type: object
      required:
      - workspaceId
      - name
      - description
      - thumbnail
      - createdAt
      - modifiedAt
      - trashedAt
      - trashedBy
      - myAccessRights
      - accessRights
      title: WorkspaceGet
    WorkspaceGroupGet:
      properties:
        gid:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
        read:
          type: boolean
          title: Read
        write:
          type: boolean
          title: Write
        delete:
          type: boolean
          title: Delete
        created:
          type: string
          format: date-time
          title: Created
        modified:
          type: string
          format: date-time
          title: Modified
      type: object
      required:
      - gid
      - read
      - write
      - delete
      - created
      - modified
      title: WorkspaceGroupGet
    WorkspaceReplaceBodyParams:
      properties:
        name:
          type: string
          maxLength: 100
          minLength: 1
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          title: Description
        thumbnail:
          anyOf:
          - type: string
          - type: 'null'
          title: Thumbnail
      additionalProperties: false
      type: object
      required:
      - name
      title: WorkspaceReplaceBodyParams
    WorkspacesGroupsBodyParams:
      properties:
        read:
          type: boolean
          title: Read
        write:
          type: boolean
          title: Write
        delete:
          type: boolean
          title: Delete
      additionalProperties: false
      type: object
      required:
      - read
      - write
      - delete
      title: WorkspacesGroupsBodyParams
    _ConversationMessageCreateBodyParams:
      properties:
        content:
          type: string
          title: Content
        type:
          $ref: '#/components/schemas/ConversationMessageType'
      additionalProperties: false
      type: object
      required:
      - content
      - type
      title: _ConversationMessageCreateBodyParams
    _ConversationsCreateBodyParams:
      properties:
        name:
          type: string
          title: Name
        type:
          $ref: '#/components/schemas/ConversationType'
        extraContext:
          anyOf:
          - additionalProperties: true
            type: object
          - type: 'null'
          title: Extracontext
      type: object
      required:
      - name
      - type
      title: _ConversationsCreateBodyParams
    _InvitationDetails:
      properties:
        trialAccountDays:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Trialaccountdays
          description: Expiration time in days for trial accounts; `null` means not
            a trial account
        extraCreditsInUsd:
          anyOf:
          - type: integer
            exclusiveMaximum: true
            minimum: 0
            maximum: 500
          - type: 'null'
          title: Extracreditsinusd
          description: Welcome credits in USD; `null` means no welcome credits
      type: object
      title: _InvitationDetails
    _ItisVipResourceRestData:
      properties:
        source:
          $ref: '#/components/schemas/_ItisVipRestData'
      type: object
      required:
      - source
      title: _ItisVipResourceRestData
    _ItisVipRestData:
      properties:
        id:
          type: integer
          title: Id
        description:
          type: string
          title: Description
        thumbnail:
          type: string
          title: Thumbnail
        features:
          $ref: '#/components/schemas/FeaturesDict'
        doi:
          anyOf:
          - type: string
          - type: 'null'
          title: Doi
        licenseVersion:
          type: string
          title: Licenseversion
      type: object
      required:
      - id
      - description
      - thumbnail
      - features
      - doi
      - licenseVersion
      title: _ItisVipRestData
    _PageParams:
      properties:
        expiration_2fa:
          anyOf:
          - type: integer
            exclusiveMinimum: true
            minimum: 0
          - type: 'null'
          title: Expiration 2Fa
      type: object
      title: _PageParams
    _ProjectCommentsBodyParams:
      properties:
        contents:
          type: string
          title: Contents
      additionalProperties: false
      type: object
      required:
      - contents
      title: _ProjectCommentsBodyParams
    _ProjectConversationMessagesCreateBodyParams:
      properties:
        content:
          type: string
          title: Content
        type:
          $ref: '#/components/schemas/ConversationMessageType'
      additionalProperties: false
      type: object
      required:
      - content
      - type
      title: _ProjectConversationMessagesCreateBodyParams
    _ProjectConversationMessagesPutBodyParams:
      properties:
        content:
          type: string
          title: Content
      additionalProperties: false
      type: object
      required:
      - content
      title: _ProjectConversationMessagesPutBodyParams
    _ProjectConversationsCreateBodyParams:
      properties:
        name:
          type: string
          title: Name
        type:
          $ref: '#/components/schemas/ConversationType'
      type: object
      required:
      - name
      - type
      title: _ProjectConversationsCreateBodyParams
    _ProjectConversationsPutBodyParams:
      properties:
        name:
          type: string
          title: Name
      type: object
      required:
      - name
      title: _ProjectConversationsPutBodyParams
    _ProjectGroupAccess:
      properties:
        gid:
          type: integer
          exclusiveMinimum: true
          title: Gid
          minimum: 0
        accessible:
          type: boolean
          title: Accessible
        inaccessible_services:
          anyOf:
          - items:
              $ref: '#/components/schemas/ServiceKeyVersion'
            type: array
          - type: 'null'
          title: Inaccessible Services
      type: object
      required:
      - gid
      - accessible
      title: _ProjectGroupAccess
    _ProjectNodePreview:
      properties:
        project_id:
          type: string
          format: uuid
          title: Project Id
        node_id:
          type: string
          format: uuid
          title: Node Id
        screenshots:
          items:
            $ref: '#/components/schemas/NodeScreenshot'
          type: array
          title: Screenshots
      type: object
      required:
      - project_id
      - node_id
      title: _ProjectNodePreview
    _WalletsGroupsBodyParams:
      properties:
        read:
          type: boolean
          title: Read
        write:
          type: boolean
          title: Write
        delete:
          type: boolean
          title: Delete
      additionalProperties: false
      type: object
      required:
      - read
      - write
      - delete
      title: _WalletsGroupsBodyParams
