openapi: 3.0.2
info:
  title: simcore-service-webserver
  description: Main service with an interface (http-API & websockets) to the web front-end
  version: 0.40.4
servers:
- url: ''
  description: webserver
- url: http://{host}:{port}
  description: development server
  variables:
    host:
      default: localhost
    port:
      default: '8001'
paths:
  /v0/activity/status:
    get:
      tags:
      - tasks
      summary: Get Activity Status
      operationId: get_activity_status
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_uuid.UUID__models_library.api_schemas_webserver.activity.Activity__'
  /v0/email:test:
    post:
      tags:
      - admin
      summary: Test Email
      operationId: test_email
      parameters:
      - required: false
        schema:
          title: X-Simcore-Products-Name
          type: string
        name: x-simcore-products-name
        in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestEmail'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Union_EmailTestFailed__EmailTestPassed__'
  /v0/announcements:
    get:
      tags:
      - announcements
      summary: List Announcements
      operationId: list_announcements
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.announcements._models.Announcement__'
  /v0/auth/request-account:
    post:
      tags:
      - auth
      summary: Request Product Account
      operationId: request_product_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountRequestInfo'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/auth/register/invitations:check:
    post:
      tags:
      - auth
      summary: Check Registration Invitation
      description: Check invitation and returns associated email or None
      operationId: auth_check_registration_invitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationCheck'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_InvitationInfo_'
  /v0/auth/register:
    post:
      tags:
      - auth
      summary: Register
      description: User registration
      operationId: auth_register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
  /v0/auth/unregister:
    post:
      tags:
      - auth
      summary: Unregister Account
      operationId: unregister_account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnregisterCheck'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /v0/auth/verify-phone-number:
    post:
      tags:
      - auth
      summary: Register Phone
      description: user tries to verify phone number for 2 Factor Authentication when
        registering
      operationId: auth_register_phone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPhoneBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_RegisterPhoneNextPage_'
  /v0/auth/validate-code-register:
    post:
      tags:
      - auth
      summary: Phone Confirmation
      description: user enters 2 Factor Authentication code when registering
      operationId: auth_phone_confirmation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneConfirmationBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
  /v0/auth/login:
    post:
      tags:
      - auth
      summary: Login
      description: user logs in
      operationId: auth_login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginBody'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_LoginNextPage_'
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /v0/auth/validate-code-login:
    post:
      tags:
      - auth
      summary: Login 2Fa
      description: user enters 2 Factor Authentication code when login in
      operationId: auth_login_2fa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginTwoFactorAuthBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /v0/auth/two_factor:resend:
    post:
      tags:
      - auth
      summary: Resend 2Fa Code
      description: Resends 2FA either via email or sms
      operationId: auth_resend_2fa_code
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resend2faBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /v0/auth/logout:
    post:
      tags:
      - auth
      summary: Logout
      description: user logout
      operationId: auth_logout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
  /v0/auth/reset-password:
    post:
      tags:
      - auth
      summary: Reset Password
      description: a non logged-in user requests a password reset
      operationId: auth_reset_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /v0/auth/reset-password/{code}:
    post:
      tags:
      - auth
      summary: Reset Password Allowed
      description: changes password using a token code without being logged in
      operationId: auth_reset_password_allowed
      parameters:
      - required: true
        schema:
          title: Code
          type: string
        name: code
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordConfirmation'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /v0/auth/change-password:
    post:
      tags:
      - auth
      summary: Change Password
      description: logged in user changes password
      operationId: auth_change_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '401':
          description: unauthorized user. Login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
        '409':
          description: mismatch between new and confirmation passwords
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
        '422':
          description: current password is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /v0/auth/confirmation/{code}:
    get:
      tags:
      - auth
      summary: Email Confirmation
      description: email link sent to user to confirm an action
      operationId: auth_confirmation
      parameters:
      - required: true
        schema:
          title: Code
          type: string
        name: code
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        3XX:
          description: redirection to specific ui application page
  /v0/auth/api-keys:
    get:
      tags:
      - auth
      summary: List Api Keys
      description: lists display names of API keys by this user
      operationId: list_api_keys
      responses:
        '200':
          description: returns the display names of API keys
          content:
            application/json:
              schema:
                title: Response 200 List Api Keys
                type: array
                items:
                  type: string
        '400':
          description: key name requested is invalid
        '401':
          description: requires login to  list keys
        '403':
          description: not enough permissions to list keys
    post:
      tags:
      - auth
      summary: Create Api Key
      description: creates API keys to access public API
      operationId: create_api_key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyCreate'
        required: true
      responses:
        '200':
          description: Authorization granted returning API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyGet'
        '400':
          description: key name requested is invalid
        '401':
          description: requires login to  list keys
        '403':
          description: not enough permissions to list keys
    delete:
      tags:
      - auth
      summary: Delete Api Key
      description: deletes API key by name
      operationId: delete_api_key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyCreate'
        required: true
      responses:
        '204':
          description: api key successfully deleted
        '401':
          description: requires login to  delete a key
        '403':
          description: not enough permissions to delete a key
  /v0/auth/captcha:
    get:
      tags:
      - auth
      summary: Request Captcha
      operationId: request_captcha
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
            image/png: {}
  /v0/dev/catalog/services/-/latest:
    get:
      tags:
      - catalog
      summary: Dev List Services Latest
      operationId: dev_list_services_latest
      parameters:
      - required: false
        schema:
          title: Limit
          exclusiveMaximum: true
          minimum: 1
          type: integer
          default: 20
          maximum: 50
        name: limit
        in: query
      - required: false
        schema:
          title: Offset
          minimum: 0
          type: integer
          default: 0
        name: offset
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_webserver.catalog.DEVServiceGet__'
  /v0/dev/catalog/services/{service_key}/{service_version}:
    get:
      tags:
      - catalog
      summary: Dev Get Service
      operationId: dev_get_service
      parameters:
      - required: true
        schema:
          title: Service Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
        name: service_key
        in: path
      - required: true
        schema:
          title: Service Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
        name: service_version
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_DEVServiceGet_'
    patch:
      tags:
      - catalog
      summary: Dev Update Service
      operationId: dev_update_service
      parameters:
      - required: true
        schema:
          title: Service Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
        name: service_key
        in: path
      - required: true
        schema:
          title: Service Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
        name: service_version
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_DEVServiceGet_'
  /v0/catalog/services:
    get:
      tags:
      - catalog
      summary: List Services
      operationId: list_services
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_webserver.catalog.ServiceGet__'
  /v0/catalog/services/{service_key}/{service_version}:
    get:
      tags:
      - catalog
      summary: Get Service
      operationId: get_service
      parameters:
      - required: true
        schema:
          title: Service Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
        name: service_key
        in: path
      - required: true
        schema:
          title: Service Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
        name: service_version
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ServiceGet_'
    patch:
      tags:
      - catalog
      summary: Update Service
      operationId: update_service
      parameters:
      - required: true
        schema:
          title: Service Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
        name: service_key
        in: path
      - required: true
        schema:
          title: Service Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
        name: service_version
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ServiceGet_'
  /v0/catalog/services/{service_key}/{service_version}/inputs:
    get:
      tags:
      - catalog
      summary: List Service Inputs
      operationId: list_service_inputs
      parameters:
      - required: true
        schema:
          title: Service Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
        name: service_key
        in: path
      - required: true
        schema:
          title: Service Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
        name: service_version
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_webserver.catalog.ServiceInputGet__'
  /v0/catalog/services/{service_key}/{service_version}/inputs/{input_key}:
    get:
      tags:
      - catalog
      summary: Get Service Input
      operationId: get_service_input
      parameters:
      - required: true
        schema:
          title: Service Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
        name: service_key
        in: path
      - required: true
        schema:
          title: Service Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
        name: service_version
        in: path
      - required: true
        schema:
          title: Input Key
          pattern: ^[-_a-zA-Z0-9]+$
          type: string
        name: input_key
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ServiceInputGet_'
  /v0/catalog/services/{service_key}/{service_version}/inputs:match:
    get:
      tags:
      - catalog
      summary: Get Compatible Inputs Given Source Output
      operationId: get_compatible_inputs_given_source_output
      parameters:
      - required: true
        schema:
          title: Service Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
        name: service_key
        in: path
      - required: true
        schema:
          title: Service Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
        name: service_version
        in: path
      - required: true
        schema:
          title: Fromservice
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
        name: fromService
        in: query
      - required: true
        schema:
          title: Fromversion
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
        name: fromVersion
        in: query
      - required: true
        schema:
          title: Fromoutput
          pattern: ^[-_a-zA-Z0-9]+$
          type: string
        name: fromOutput
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.services_types.ServicePortKey__'
  /v0/catalog/services/{service_key}/{service_version}/outputs:
    get:
      tags:
      - catalog
      summary: List Service Outputs
      operationId: list_service_outputs
      parameters:
      - required: true
        schema:
          title: Service Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
        name: service_key
        in: path
      - required: true
        schema:
          title: Service Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
        name: service_version
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.services_types.ServicePortKey__'
  /v0/catalog/services/{service_key}/{service_version}/outputs/{output_key}:
    get:
      tags:
      - catalog
      summary: Get Service Output
      operationId: get_service_output
      parameters:
      - required: true
        schema:
          title: Service Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
        name: service_key
        in: path
      - required: true
        schema:
          title: Service Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
        name: service_version
        in: path
      - required: true
        schema:
          title: Output Key
          pattern: ^[-_a-zA-Z0-9]+$
          type: string
        name: output_key
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_webserver.catalog.ServiceOutputGet__'
  /v0/catalog/services/{service_key}/{service_version}/outputs:match:
    get:
      tags:
      - catalog
      summary: Get Compatible Outputs Given Target Input
      operationId: get_compatible_outputs_given_target_input
      parameters:
      - required: true
        schema:
          title: Service Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
        name: service_key
        in: path
      - required: true
        schema:
          title: Service Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
        name: service_version
        in: path
      - required: true
        schema:
          title: Toservice
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
        name: toService
        in: query
      - required: true
        schema:
          title: Toversion
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
        name: toVersion
        in: query
      - required: true
        schema:
          title: Toinput
          pattern: ^[-_a-zA-Z0-9]+$
          type: string
        name: toInput
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.services_types.ServicePortKey__'
  /v0/catalog/services/{service_key}/{service_version}/resources:
    get:
      tags:
      - catalog
      summary: Get Service Resources
      operationId: get_service_resources
      parameters:
      - required: true
        schema:
          title: Service Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
        name: service_key
        in: path
      - required: true
        schema:
          title: Service Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
        name: service_version
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Service Resources
                type: object
  /v0/catalog/services/{service_key}/{service_version}/pricing-plan:
    get:
      tags:
      - catalog
      - pricing-plans
      summary: Retrieve default pricing plan for provided service
      operationId: get_service_pricing_plan
      parameters:
      - required: true
        schema:
          title: Service Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
        name: service_key
        in: path
      - required: true
        schema:
          title: Service Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
        name: service_version
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ServicePricingPlanGet_'
  /v0/clusters:
    get:
      tags:
      - clusters
      summary: List Clusters
      operationId: list_clusters
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_webserver.clusters.ClusterGet__'
    post:
      tags:
      - clusters
      summary: Create Cluster
      operationId: create_cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ClusterGet_'
  /v0/clusters:ping:
    post:
      tags:
      - clusters
      summary: Ping Cluster
      description: Test connectivity with cluster
      operationId: ping_cluster
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterPing'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/clusters/{cluster_id}:
    get:
      tags:
      - clusters
      summary: Get Cluster
      operationId: get_cluster
      parameters:
      - required: true
        schema:
          title: Cluster Id
          minimum: 0
          type: integer
        name: cluster_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ClusterGet_'
    delete:
      tags:
      - clusters
      summary: Delete Cluster
      operationId: delete_cluster
      parameters:
      - required: true
        schema:
          title: Cluster Id
          minimum: 0
          type: integer
        name: cluster_id
        in: path
      responses:
        '204':
          description: Successful Response
    patch:
      tags:
      - clusters
      summary: Update Cluster
      operationId: update_cluster
      parameters:
      - required: true
        schema:
          title: Cluster Id
          minimum: 0
          type: integer
        name: cluster_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClusterPatch'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ClusterGet_'
  /v0/clusters/{cluster_id}/details:
    get:
      tags:
      - clusters
      summary: Get Cluster Details
      operationId: get_cluster_details
      parameters:
      - required: true
        schema:
          title: Cluster Id
          minimum: 0
          type: integer
        name: cluster_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ClusterDetails_'
  /v0/clusters/{cluster_id}:ping:
    post:
      tags:
      - clusters
      summary: Ping Cluster Cluster Id
      description: Tests connectivity with cluster
      operationId: ping_cluster_cluster_id
      parameters:
      - required: true
        schema:
          title: Cluster Id
          minimum: 0
          type: integer
        name: cluster_id
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/computations/{project_id}:
    get:
      tags:
      - computations
      - projects
      summary: Get Computation
      operationId: get_computation
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ComputationTaskGet_'
  /v0/computations/{project_id}:start:
    post:
      tags:
      - computations
      - projects
      summary: Start Computation
      operationId: start_computation
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComputationStart'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope__ComputationStarted_'
        '404':
          description: Project/wallet/pricing details not found
        '402':
          description: Payment required
        '406':
          description: Cluster not found
        '503':
          description: Service not available
        '422':
          description: Configuration error
        '409':
          description: Project already started
  /v0/computations/{project_id}:stop:
    post:
      tags:
      - computations
      - projects
      summary: Stop Computation
      operationId: stop_computation
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/:
    get:
      tags:
      - maintenance
      summary: Healthcheck Readiness Probe
      description: 'Readiness probe: check if the container is ready to receive traffic'
      operationId: healthcheck_readiness_probe
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_HealthInfoDict_'
  /v0/health:
    get:
      tags:
      - maintenance
      summary: Healthcheck Liveness Probe
      description: 'Liveness probe: check if the container is alive'
      operationId: healthcheck_liveness_probe
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_str__Any__'
  /v0/config:
    get:
      tags:
      - maintenance
      summary: Front end runtime configuration
      description: Returns app and products configs
      operationId: get_config
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_str__Any__'
  /v0/scheduled_maintenance:
    get:
      tags:
      - maintenance
      summary: Get Scheduled Maintenance
      operationId: get_scheduled_maintenance
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_str_'
  /v0/status:
    get:
      tags:
      - maintenance
      summary: checks status of self and connected services
      operationId: get_app_status
      responses:
        '200':
          description: Returns app status check
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_AppStatusCheck_'
  /v0/status/diagnostics:
    get:
      tags:
      - maintenance
      summary: Get App Diagnostics
      operationId: get_app_diagnostics
      parameters:
      - required: false
        schema:
          title: Top Tracemalloc
          type: integer
        name: top_tracemalloc
        in: query
      responses:
        '200':
          description: Returns app diagnostics report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_StatusDiagnosticsGet_'
  /v0/status/{service_name}:
    get:
      tags:
      - maintenance
      summary: Get Service Status
      operationId: get_service_status
      parameters:
      - required: true
        schema:
          title: Service Name
          type: string
        name: service_name
        in: path
      responses:
        '200':
          description: Returns app status check
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_AppStatusCheck_'
  /v0/projects/{project_id}:xport:
    post:
      tags:
      - projects
      - exporter
      summary: Export Project
      description: creates an archive of the project and downloads it
      operationId: export_project
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
  /v0/groups:
    get:
      tags:
      - groups
      summary: List Groups
      operationId: list_groups
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_AllUsersGroups_'
    post:
      tags:
      - groups
      summary: Create Group
      operationId: create_group
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_UsersGroup_'
  /v0/groups/{gid}:
    get:
      tags:
      - groups
      summary: Get Group
      operationId: get_group
      parameters:
      - required: true
        schema:
          title: Gid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: gid
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_UsersGroup_'
    delete:
      tags:
      - groups
      summary: Delete Group
      operationId: delete_group
      parameters:
      - required: true
        schema:
          title: Gid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: gid
        in: path
      responses:
        '204':
          description: Successful Response
    patch:
      tags:
      - groups
      summary: Update Group
      operationId: update_group
      parameters:
      - required: true
        schema:
          title: Gid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: gid
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersGroup'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_UsersGroup_'
  /v0/groups/{gid}/users:
    get:
      tags:
      - groups
      summary: Get Group Users
      operationId: get_group_users
      parameters:
      - required: true
        schema:
          title: Gid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: gid
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_webserver.groups.GroupUserGet__'
    post:
      tags:
      - groups
      summary: Add Group User
      operationId: add_group_user
      parameters:
      - required: true
        schema:
          title: Gid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: gid
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUserGet'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/groups/{gid}/users/{uid}:
    get:
      tags:
      - groups
      summary: Get Group User
      operationId: get_group_user
      parameters:
      - required: true
        schema:
          title: Gid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: gid
        in: path
      - required: true
        schema:
          title: Uid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: uid
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_GroupUserGet_'
    delete:
      tags:
      - groups
      summary: Delete Group User
      operationId: delete_group_user
      parameters:
      - required: true
        schema:
          title: Gid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: gid
        in: path
      - required: true
        schema:
          title: Uid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: uid
        in: path
      responses:
        '204':
          description: Successful Response
    patch:
      tags:
      - groups
      summary: Update Group User
      operationId: update_group_user
      parameters:
      - required: true
        schema:
          title: Gid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: gid
        in: path
      - required: true
        schema:
          title: Uid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: uid
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUserGet'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_GroupUserGet_'
  /v0/groups/{gid}/classifiers:
    get:
      tags:
      - groups
      summary: Get Group Classifiers
      operationId: get_group_classifiers
      parameters:
      - required: true
        schema:
          title: Gid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: gid
        in: path
      - required: false
        schema:
          title: Tree View
          enum:
          - std
          type: string
          default: std
        name: tree_view
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_str__Any__'
  /v0/groups/sparc/classifiers/scicrunch-resources/{rrid}:
    get:
      tags:
      - groups
      summary: Get Scicrunch Resource
      operationId: get_scicrunch_resource
      parameters:
      - required: true
        schema:
          title: Rrid
          type: string
        name: rrid
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ResearchResource_'
    post:
      tags:
      - groups
      summary: Add Scicrunch Resource
      operationId: add_scicrunch_resource
      parameters:
      - required: true
        schema:
          title: Rrid
          type: string
        name: rrid
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ResearchResource_'
  /v0/groups/sparc/classifiers/scicrunch-resources:search:
    get:
      tags:
      - groups
      summary: Search Scicrunch Resources
      operationId: search_scicrunch_resources
      parameters:
      - required: true
        schema:
          title: Guess Name
          type: string
        name: guess_name
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.scicrunch.models.ResourceHit__'
  /v0/tasks:
    get:
      tags:
      - long-running-tasks
      summary: List Tasks
      operationId: list_tasks
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_long_running_tasks.tasks.TaskGet__'
  /v0/tasks/{task_id}:
    get:
      tags:
      - long-running-tasks
      summary: Get Task Status
      operationId: get_task_status
      parameters:
      - required: true
        schema:
          title: Task Id
          type: string
        name: task_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskStatus_'
    delete:
      tags:
      - long-running-tasks
      summary: Cancel And Delete Task
      operationId: cancel_and_delete_task
      parameters:
      - required: true
        schema:
          title: Task Id
          type: string
        name: task_id
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/tasks/{task_id}/result:
    get:
      tags:
      - long-running-tasks
      summary: Get Task Result
      operationId: get_task_result
      parameters:
      - required: true
        schema:
          title: Task Id
          type: string
        name: task_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /v0/projects/{project_uuid}/checkpoint/{ref_id}/iterations:
    get:
      tags:
      - projects
      - metamodeling
      summary: List Project Iterations
      operationId: list_project_iterations
      parameters:
      - required: true
        schema:
          title: Project Uuid
          type: string
          format: uuid
        name: project_uuid
        in: path
      - required: true
        schema:
          title: Ref Id
          type: integer
        name: ref_id
        in: path
      - required: false
        schema:
          title: Limit
          exclusiveMaximum: true
          minimum: 1
          type: integer
          default: 20
          maximum: 50
        name: limit
        in: query
      - required: false
        schema:
          title: Offset
          minimum: 0
          type: integer
          default: 0
        name: offset
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ProjectIterationItem_'
  /v0/projects/{project_uuid}/checkpoint/{ref_id}/iterations/-/results:
    get:
      tags:
      - projects
      - metamodeling
      summary: List Project Iterations Results
      operationId: list_project_iterations_results
      parameters:
      - required: true
        schema:
          title: Project Uuid
          type: string
          format: uuid
        name: project_uuid
        in: path
      - required: true
        schema:
          title: Ref Id
          type: integer
        name: ref_id
        in: path
      - required: false
        schema:
          title: Limit
          exclusiveMaximum: true
          minimum: 1
          type: integer
          default: 20
          maximum: 50
        name: limit
        in: query
      - required: false
        schema:
          title: Offset
          minimum: 0
          type: integer
          default: 0
        name: offset
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ProjectIterationResultItem_'
  /view:
    get:
      tags:
      - nih-sparc
      summary: Get Redirection To Viewer
      description: Opens a viewer in osparc for data in the NIH-sparc portal
      operationId: get_redirection_to_viewer
      parameters:
      - required: true
        schema:
          title: File Type
          type: string
        name: file_type
        in: query
      - required: true
        schema:
          title: Viewer Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
        name: viewer_key
        in: query
      - required: true
        schema:
          title: File Size
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: file_size
        in: query
      - required: true
        schema:
          title: Download Link
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
        name: download_link
        in: query
      - required: false
        schema:
          title: File Name
          type: string
          default: unknown
        name: file_name
        in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceKeyVersion'
        required: true
      responses:
        '302':
          description: Opens osparc and starts viewer for selected data
  /study/{id}:
    get:
      tags:
      - nih-sparc
      summary: Get Redirection To Study Page
      description: Opens a study published in osparc
      operationId: get_redirection_to_study_page
      parameters:
      - required: true
        schema:
          title: Id
          type: string
          format: uuid
        name: id
        in: path
      responses:
        '302':
          description: Opens osparc and opens a copy of publised study
  /v0/services:
    get:
      tags:
      - nih-sparc
      summary: List Latest Services
      description: Returns a list latest version of services
      operationId: list_latest_services
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.studies_dispatcher._rest_handlers.ServiceGet__'
  /v0/viewers:
    get:
      tags:
      - nih-sparc
      summary: List Viewers
      description: 'Lists all publically available viewers


        Notice that this might contain multiple services for the same filetype


        If file_type is provided, then it filters viewer for that filetype'
      operationId: list_viewers
      parameters:
      - required: false
        schema:
          title: File Type
          type: string
        name: file_type
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.studies_dispatcher._rest_handlers.Viewer__'
  /v0/viewers/default:
    get:
      tags:
      - nih-sparc
      summary: List Default Viewers
      description: 'Lists the default viewer for each supported filetype


        This was interfaced as a subcollection of viewers because it is a very common
        use-case


        Only publicaly available viewers


        If file_type is provided, then it filters viewer for that filetype'
      operationId: list_default_viewers
      parameters:
      - required: false
        schema:
          title: File Type
          type: string
        name: file_type
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.studies_dispatcher._rest_handlers.Viewer__'
  /v0/credits-price:
    get:
      tags:
      - products
      summary: Get Current Product Price
      operationId: get_current_product_price
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_GetCreditPrice_'
  /v0/products/{product_name}:
    get:
      tags:
      - products
      - po
      summary: Get Product
      operationId: get_product
      parameters:
      - required: true
        schema:
          title: Product Name
          anyOf:
          - maxLength: 100
            minLength: 1
            type: string
          - enum:
            - current
            type: string
        name: product_name
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_GetProduct_'
  /v0/products/{product_name}/templates/{template_id}:
    put:
      tags:
      - products
      - po
      summary: Update Product Template
      operationId: update_product_template
      parameters:
      - required: true
        schema:
          title: Product Name
          anyOf:
          - maxLength: 100
            minLength: 1
            type: string
          - enum:
            - current
            type: string
        name: product_name
        in: path
      - required: true
        schema:
          title: Template Id
          maxLength: 100
          minLength: 1
          type: string
        name: template_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProductTemplate'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/invitation:generate:
    post:
      tags:
      - products
      - po
      summary: Generate Invitation
      operationId: generate_invitation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateInvitation'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_InvitationGenerated_'
  /v0/projects/{project_id}/nodes/{node_id}/pricing-unit:
    get:
      tags:
      - projects
      summary: Get currently connected pricing unit to the project node.
      operationId: get_project_node_pricing_unit
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      - required: true
        schema:
          title: Node Id
          type: string
          format: uuid
        name: node_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Union_PricingUnitGet__NoneType__'
  /v0/projects/{project_id}/nodes/{node_id}/pricing-plan/{pricing_plan_id}/pricing-unit/{pricing_unit_id}:
    put:
      tags:
      - projects
      summary: Connect pricing unit to the project node (Project node can have only
        one pricing unit)
      operationId: connect_pricing_unit_to_project_node
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      - required: true
        schema:
          title: Node Id
          type: string
          format: uuid
        name: node_id
        in: path
      - required: true
        schema:
          title: Pricing Plan Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: pricing_plan_id
        in: path
      - required: true
        schema:
          title: Pricing Unit Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: pricing_unit_id
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/projects/{project_uuid}/comments:
    get:
      tags:
      - projects
      - comments
      summary: Retrieve all comments for a specific project.
      operationId: list_project_comments
      parameters:
      - required: true
        schema:
          title: Project Uuid
          type: string
          format: uuid
        name: project_uuid
        in: path
      - required: false
        schema:
          title: Limit
          type: integer
          default: 20
        name: limit
        in: query
      - required: false
        schema:
          title: Offset
          minimum: 0
          type: integer
          default: 0
        name: offset
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.projects_comments.ProjectsCommentsAPI__'
    post:
      tags:
      - projects
      - comments
      summary: Create a new comment for a specific project. The request body should
        contain the comment contents and user information.
      operationId: create_project_comment
      parameters:
      - required: true
        schema:
          title: Project Uuid
          type: string
          format: uuid
        name: project_uuid
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_ProjectCommentsBodyParams'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_Literal__comment_id____pydantic.types.PositiveInt__'
  /v0/projects/{project_uuid}/comments/{comment_id}:
    get:
      tags:
      - projects
      - comments
      summary: Retrieve a specific comment by its ID within a project.
      operationId: get_project_comment
      parameters:
      - required: true
        schema:
          title: Project Uuid
          type: string
          format: uuid
        name: project_uuid
        in: path
      - required: true
        schema:
          title: Comment Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: comment_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectsCommentsAPI_'
    put:
      tags:
      - projects
      - comments
      summary: Update the contents of a specific comment for a project. The request
        body should contain the updated comment contents.
      operationId: update_project_comment
      parameters:
      - required: true
        schema:
          title: Project Uuid
          type: string
          format: uuid
        name: project_uuid
        in: path
      - required: true
        schema:
          title: Comment Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: comment_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_ProjectCommentsBodyParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectsCommentsAPI_'
    delete:
      tags:
      - projects
      - comments
      summary: Delete a specific comment associated with a project.
      operationId: delete_project_comment
      parameters:
      - required: true
        schema:
          title: Project Uuid
          type: string
          format: uuid
        name: project_uuid
        in: path
      - required: true
        schema:
          title: Comment Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: comment_id
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/projects:
    get:
      tags:
      - projects
      summary: List Projects
      operationId: list_projects
      parameters:
      - description: Order by field (type|uuid|name|description|prj_owner|creation_date|last_change_date)
          and direction (asc|desc). The default sorting order is ascending.
        required: false
        schema:
          title: Order By
          description: Order by field (type|uuid|name|description|prj_owner|creation_date|last_change_date)
            and direction (asc|desc). The default sorting order is ascending.
          default: '{"field": "last_change_date", "direction": "desc"}'
        example: '{"field": "last_change_date", "direction": "desc"}'
        name: order_by
        in: query
      - required: false
        schema:
          title: Limit
          exclusiveMaximum: true
          minimum: 1
          type: integer
          default: 20
          maximum: 50
        name: limit
        in: query
      - required: false
        schema:
          title: Offset
          minimum: 0
          type: integer
          default: 0
        name: offset
        in: query
      - required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ProjectTypeAPI'
          default: all
        name: type
        in: query
      - required: false
        schema:
          title: Show Hidden
          type: boolean
          default: false
        name: show_hidden
        in: query
      - required: false
        schema:
          title: Search
          maxLength: 100
          type: string
        name: search
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ProjectListItem_'
    post:
      tags:
      - projects
      summary: Creates a new project or copies an existing one
      operationId: create_project
      parameters:
      - required: false
        schema:
          title: From Study
          type: string
          format: uuid
        name: from_study
        in: query
      - required: false
        schema:
          title: As Template
          type: boolean
          default: false
        name: as_template
        in: query
      - required: false
        schema:
          title: Copy Data
          type: boolean
          default: true
        name: copy_data
        in: query
      - required: false
        schema:
          title: Hidden
          type: boolean
          default: false
        name: hidden
        in: query
      - required: false
        schema:
          title: X-Simcore-User-Agent
          type: string
          default: undefined
        name: x-simcore-user-agent
        in: header
      - description: Optionally sets a parent project UUID (both project and node
          must be set)
        required: false
        schema:
          title: X-Simcore-Parent-Project-Uuid
          type: string
          description: Optionally sets a parent project UUID (both project and node
            must be set)
          format: uuid
        name: x-simcore-parent-project-uuid
        in: header
      - description: Optionally sets a parent node ID (both project and node must
          be set)
        required: false
        schema:
          title: X-Simcore-Parent-Node-Id
          type: string
          description: Optionally sets a parent node ID (both project and node must
            be set)
          format: uuid
        name: x-simcore-parent-node-id
        in: header
      requestBody:
        content:
          application/json:
            schema:
              title: ' Create'
              anyOf:
              - $ref: '#/components/schemas/ProjectCreateNew'
              - $ref: '#/components/schemas/ProjectCopyOverride'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskGet_'
  /v0/projects/active:
    get:
      tags:
      - projects
      summary: Get Active Project
      operationId: get_active_project
      parameters:
      - required: true
        schema:
          title: Client Session Id
          type: string
        name: client_session_id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
  /v0/projects/{project_id}:
    get:
      tags:
      - projects
      summary: Get Project
      operationId: get_project
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
    put:
      tags:
      - projects
      summary: Replace Project
      description: Replaces (i.e. full update) a project resource
      operationId: replace_project
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectReplace'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
    delete:
      tags:
      - projects
      summary: Delete Project
      operationId: delete_project
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      responses:
        '204':
          description: Successful Response
    patch:
      tags:
      - projects
      summary: Patch Project
      operationId: patch_project
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPatch'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/projects/{project_id}:clone:
    post:
      tags:
      - projects
      summary: Clone Project
      operationId: clone_project
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskGet_'
  /v0/projects/{project_id}/inactivity:
    get:
      tags:
      - projects
      summary: Get Project Inactivity
      operationId: get_project_inactivity
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_GetProjectInactivityResponse_'
  /v0/projects/{project_id}/metadata:
    get:
      tags:
      - projects
      - metadata
      summary: Get Project Metadata
      operationId: get_project_metadata
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectMetadataGet_'
    patch:
      tags:
      - projects
      - metadata
      summary: Update Project Metadata
      operationId: update_project_metadata
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectMetadataUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectMetadataGet_'
  /v0/projects/{project_id}/nodes:
    post:
      tags:
      - projects
      - nodes
      summary: Create Node
      operationId: create_node
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
        name: project_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_NodeCreated_'
  /v0/projects/{project_id}/nodes/{node_id}:
    get:
      tags:
      - projects
      - nodes
      summary: Get Node
      operationId: get_node
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
        name: project_id
        in: path
      - required: true
        schema:
          title: Node Id
          type: string
        name: node_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Union_NodeGetIdle__NodeGetUnknown__RunningDynamicServiceDetails__NodeGet__'
    delete:
      tags:
      - projects
      - nodes
      summary: Delete Node
      operationId: delete_node
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
        name: project_id
        in: path
      - required: true
        schema:
          title: Node Id
          type: string
        name: node_id
        in: path
      responses:
        '204':
          description: Successful Response
    patch:
      tags:
      - projects
      - nodes
      summary: Patch Project Node
      operationId: patch_project_node
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      - required: true
        schema:
          title: Node Id
          type: string
        name: node_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodePatch'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/projects/{project_id}/nodes/{node_id}:retrieve:
    post:
      tags:
      - projects
      - nodes
      summary: Retrieve Node
      operationId: retrieve_node
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
        name: project_id
        in: path
      - required: true
        schema:
          title: Node Id
          type: string
        name: node_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeRetrieve'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_NodeRetrieved_'
  /v0/projects/{project_id}/nodes/{node_id}:start:
    post:
      tags:
      - projects
      - nodes
      summary: Start Node
      operationId: start_node
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
        name: project_id
        in: path
      - required: true
        schema:
          title: Node Id
          type: string
        name: node_id
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/projects/{project_id}/nodes/{node_id}:stop:
    post:
      tags:
      - projects
      - nodes
      summary: Stop Node
      operationId: stop_node
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
        name: project_id
        in: path
      - required: true
        schema:
          title: Node Id
          type: string
        name: node_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskGet_'
  /v0/projects/{project_id}/nodes/{node_id}:restart:
    post:
      tags:
      - projects
      - nodes
      summary: Restart Node
      description: Note that it has only effect on nodes associated to dynamic services
      operationId: restart_node
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
        name: project_id
        in: path
      - required: true
        schema:
          title: Node Id
          type: string
        name: node_id
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/projects/{project_id}/nodes/{node_id}/outputs:
    patch:
      tags:
      - projects
      - nodes
      summary: Update Node Outputs
      operationId: update_node_outputs
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
        name: project_id
        in: path
      - required: true
        schema:
          title: Node Id
          type: string
        name: node_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NodeOutputs'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/projects/{project_id}/nodes/{node_id}/resources:
    get:
      tags:
      - projects
      - nodes
      summary: Get Node Resources
      operationId: get_node_resources
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
        name: project_id
        in: path
      - required: true
        schema:
          title: Node Id
          type: string
        name: node_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_models_library.docker.DockerGenericTag__models_library.services_resources.ImageResources__'
    put:
      tags:
      - projects
      - nodes
      summary: Replace Node Resources
      operationId: replace_node_resources
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
        name: project_id
        in: path
      - required: true
        schema:
          title: Node Id
          type: string
        name: node_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              title: ' New'
              type: object
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_models_library.docker.DockerGenericTag__models_library.services_resources.ImageResources__'
  /v0/projects/{project_id}/nodes/-/services:access:
    get:
      tags:
      - projects
      - nodes
      summary: Check whether provided group has access to the project services
      operationId: get_project_services_access_for_gid
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      - required: true
        schema:
          title: For Gid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: for_gid
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope__ProjectGroupAccess_'
  /v0/projects/{project_id}/nodes/-/preview:
    get:
      tags:
      - projects
      - nodes
      summary: Lists all previews in the node's project
      operationId: list_project_nodes_previews
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.projects._nodes_handlers._ProjectNodePreview__'
  /v0/projects/{project_id}/nodes/{node_id}/preview:
    get:
      tags:
      - projects
      - nodes
      summary: Gets a give node's preview
      operationId: get_project_node_preview
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      - required: true
        schema:
          title: Node Id
          type: string
          format: uuid
        name: node_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope__ProjectNodePreview_'
        '404':
          description: Node has no preview
  /v0/projects/{project_id}/inputs:
    get:
      tags:
      - projects
      - ports
      summary: Get Project Inputs
      description: New in version *0.10*
      operationId: get_project_inputs
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_uuid.UUID__models_library.api_schemas_webserver.projects_ports.ProjectInputGet__'
    patch:
      tags:
      - projects
      - ports
      summary: Update Project Inputs
      description: New in version *0.10*
      operationId: update_project_inputs
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              title: ' Updates'
              type: array
              items:
                $ref: '#/components/schemas/ProjectInputUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_uuid.UUID__models_library.api_schemas_webserver.projects_ports.ProjectInputGet__'
  /v0/projects/{project_id}/outputs:
    get:
      tags:
      - projects
      - ports
      summary: Get Project Outputs
      description: New in version *0.10*
      operationId: get_project_outputs
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_dict_uuid.UUID__models_library.api_schemas_webserver.projects_ports.ProjectOutputGet__'
  /v0/projects/{project_id}/metadata/ports:
    get:
      tags:
      - projects
      - ports
      summary: List Project Metadata Ports
      description: New in version *0.12*
      operationId: list_project_metadata_ports
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.projects._ports_handlers.ProjectMetadataPortGet__'
  /v0/projects/{project_id}:open:
    post:
      tags:
      - projects
      summary: Open Project
      operationId: open_project
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      - required: false
        schema:
          title: Disable Service Auto Start
          type: boolean
          default: false
        name: disable_service_auto_start
        in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Client Session Id
              type: string
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
        '400':
          description: ValidationError
        '402':
          description: WalletNotEnoughCreditsError
        '403':
          description: ProjectInvalidRightsError
        '404':
          description: UserDefaultWalletNotFoundError, ProjectNotFoundError
        '409':
          description: ProjectTooManyProjectOpenedError
        '422':
          description: ValidationError
        '503':
          description: DirectorServiceError
  /v0/projects/{project_id}:close:
    post:
      tags:
      - projects
      summary: Close Project
      operationId: close_project
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              title: Client Session Id
              type: string
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/projects/{project_id}/state:
    get:
      tags:
      - projects
      summary: Get Project State
      operationId: get_project_state
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectState_'
  /v0/projects/{project_uuid}/tags/{tag_id}:
    put:
      tags:
      - projects
      - tags
      summary: Add Tag
      description: Links an existing label with an existing study
      operationId: add_tag
      parameters:
      - required: true
        schema:
          title: Project Uuid
          type: string
          format: uuid
        name: project_uuid
        in: path
      - required: true
        schema:
          title: Tag Id
          type: integer
        name: tag_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
    delete:
      tags:
      - projects
      - tags
      summary: Remove Tag
      description: Removes an existing link between a label and a study
      operationId: remove_tag
      parameters:
      - required: true
        schema:
          title: Project Uuid
          type: string
          format: uuid
        name: project_uuid
        in: path
      - required: true
        schema:
          title: Tag Id
          type: integer
        name: tag_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
  /v0/projects/{project_id}/wallet:
    get:
      tags:
      - projects
      summary: Get current connected wallet to the project.
      operationId: get_project_wallet
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Union_WalletGet__NoneType__'
  /v0/projects/{project_id}/wallet/{wallet_id}:
    put:
      tags:
      - projects
      summary: Connect wallet to the project (Project can have only one wallet)
      operationId: connect_wallet_to_project
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      - required: true
        schema:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: wallet_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletGet_'
  /v0/publications/service-submission:
    post:
      tags:
      - publication
      summary: Service Submission
      description: Submits files with new service candidate
      operationId: service_submission
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_service_submission'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/services/-/resource-usages:
    get:
      tags:
      - usage
      summary: Retrieve finished and currently running user services (user and product
        are taken from context, optionally wallet_id parameter might be provided).
      operationId: list_resource_usage_services
      parameters:
      - description: Order by field (wallet_id|wallet_name|user_id|project_id|project_name|node_id|node_name|service_key|service_version|service_type|started_at|stopped_at|service_run_status|credit_cost|transaction_status)
          and direction (asc|desc). The default sorting order is ascending.
        required: false
        schema:
          title: Order By
          description: Order by field (wallet_id|wallet_name|user_id|project_id|project_name|node_id|node_name|service_key|service_version|service_type|started_at|stopped_at|service_run_status|credit_cost|transaction_status)
            and direction (asc|desc). The default sorting order is ascending.
          default: '{"field": "started_at", "direction": "desc"}'
        example: '{"field": "started_at", "direction": "desc"}'
        name: order_by
        in: query
      - description: Filters to process on the resource usages list, encoded as JSON.
          Currently supports the filtering of 'started_at' field with 'from' and 'until'
          parameters in <yyyy-mm-dd> ISO 8601 format. The date range specified is
          inclusive.
        required: false
        schema:
          title: Filters
          type: string
          description: Filters to process on the resource usages list, encoded as
            JSON. Currently supports the filtering of 'started_at' field with 'from'
            and 'until' parameters in <yyyy-mm-dd> ISO 8601 format. The date range
            specified is inclusive.
          format: json-string
        example: '{"started_at": {"from": "yyyy-mm-dd", "until": "yyyy-mm-dd"}}'
        name: filters
        in: query
      - required: false
        schema:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: wallet_id
        in: query
      - required: false
        schema:
          title: Limit
          type: integer
          default: 20
        name: limit
        in: query
      - required: false
        schema:
          title: Offset
          minimum: 0
          type: integer
          default: 0
        name: offset
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_webserver.resource_usage.ServiceRunGet__'
  /v0/services/-/usage-report:
    get:
      tags:
      - usage
      summary: Redirects to download CSV link. CSV obtains finished and currently
        running user services (user and product are taken from context, optionally
        wallet_id parameter might be provided).
      operationId: export_resource_usage_services
      parameters:
      - required: false
        schema:
          title: Order By
          default: '{"field": "started_at", "direction": "desc"}'
        example: '{"field": "started_at", "direction": "desc"}'
        name: order_by
        in: query
      - description: Order by field (wallet_id|wallet_name|user_id|project_id|project_name|node_id|node_name|service_key|service_version|service_type|started_at|stopped_at|service_run_status|credit_cost|transaction_status)
          and direction (asc|desc). The default sorting order is ascending.
        required: false
        schema:
          title: Filters
          type: string
          description: Order by field (wallet_id|wallet_name|user_id|project_id|project_name|node_id|node_name|service_key|service_version|service_type|started_at|stopped_at|service_run_status|credit_cost|transaction_status)
            and direction (asc|desc). The default sorting order is ascending.
          format: json-string
        example: '{"started_at": {"from": "yyyy-mm-dd", "until": "yyyy-mm-dd"}}'
        name: filters
        in: query
      - required: false
        schema:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: wallet_id
        in: query
      responses:
        '302':
          description: redirection to download link
          content:
            application/json:
              schema: {}
  /v0/pricing-plans/{pricing_plan_id}/pricing-units/{pricing_unit_id}:
    get:
      tags:
      - pricing-plans
      summary: Retrieve detail information about pricing unit
      operationId: get_pricing_plan_unit
      parameters:
      - required: true
        schema:
          title: Pricing Plan Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: pricing_plan_id
        in: path
      - required: true
        schema:
          title: Pricing Unit Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: pricing_unit_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PricingUnitGet_'
  /v0/admin/pricing-plans:
    get:
      tags:
      - admin
      summary: List pricing plans
      description: To keep the listing lightweight, the pricingUnits field is None.
      operationId: list_pricing_plans
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_webserver.resource_usage.PricingPlanAdminGet__'
    post:
      tags:
      - admin
      summary: Create pricing plan
      operationId: create_pricing_plan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePricingPlanBodyParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PricingPlanAdminGet_'
  /v0/admin/pricing-plans/{pricing_plan_id}:
    get:
      tags:
      - admin
      summary: Retrieve detail information about pricing plan
      operationId: get_pricing_plan
      parameters:
      - required: true
        schema:
          title: Pricing Plan Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: pricing_plan_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PricingPlanAdminGet_'
    put:
      tags:
      - admin
      summary: Update detail information about pricing plan
      operationId: update_pricing_plan
      parameters:
      - required: true
        schema:
          title: Pricing Plan Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: pricing_plan_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePricingPlanBodyParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PricingPlanAdminGet_'
  /v0/admin/pricing-plans/{pricing_plan_id}/pricing-units/{pricing_unit_id}:
    get:
      tags:
      - admin
      summary: Retrieve detail information about pricing unit
      operationId: get_pricing_unit
      parameters:
      - required: true
        schema:
          title: Pricing Plan Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: pricing_plan_id
        in: path
      - required: true
        schema:
          title: Pricing Unit Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: pricing_unit_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PricingUnitAdminGet_'
    put:
      tags:
      - admin
      summary: Update detail information about pricing plan
      operationId: update_pricing_unit
      parameters:
      - required: true
        schema:
          title: Pricing Plan Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: pricing_plan_id
        in: path
      - required: true
        schema:
          title: Pricing Unit Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: pricing_unit_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePricingUnitBodyParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PricingUnitAdminGet_'
  /v0/admin/pricing-plans/{pricing_plan_id}/pricing-units:
    post:
      tags:
      - admin
      summary: Create pricing unit
      operationId: create_pricing_unit
      parameters:
      - required: true
        schema:
          title: Pricing Plan Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: pricing_plan_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePricingUnitBodyParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PricingUnitAdminGet_'
  /v0/admin/pricing-plans/{pricing_plan_id}/billable-services:
    get:
      tags:
      - admin
      summary: List services that are connected to the provided pricing plan
      operationId: list_connected_services_to_pricing_plan
      parameters:
      - required: true
        schema:
          title: Pricing Plan Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: pricing_plan_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_webserver.resource_usage.PricingPlanToServiceAdminGet__'
    post:
      tags:
      - admin
      summary: Connect service with pricing plan
      operationId: connect_service_to_pricing_plan
      parameters:
      - required: true
        schema:
          title: Pricing Plan Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: pricing_plan_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectServiceToPricingPlanBodyParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PricingPlanToServiceAdminGet_'
  /:
    get:
      tags:
      - statics
      summary: Get Cached Frontend Index
      operationId: get_cached_frontend_index
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                type: string
  /static-frontend-data.json:
    get:
      tags:
      - statics
      summary: Static Frontend Data
      description: Generic static info on the product's app
      operationId: static_frontend_data
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StaticFrontEndDict'
  /v0/storage/locations:
    get:
      tags:
      - storage
      summary: Get available storage locations
      description: Returns the list of available storage locations
      operationId: get_storage_locations
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Storage Locations
                type: array
                items:
                  $ref: '#/components/schemas/DatasetMetaData'
  /v0/storage/locations/{location_id}:sync:
    post:
      tags:
      - storage
      summary: Manually triggers the synchronisation of the file meta data table in
        the database
      description: Returns an object containing added, changed and removed paths
      operationId: synchronise_meta_data_table
      parameters:
      - required: true
        schema:
          title: Location Id
          type: integer
        name: location_id
        in: path
      - required: false
        schema:
          title: Dry Run
          type: boolean
          default: false
        name: dry_run
        in: query
      - required: false
        schema:
          title: Fire And Forget
          type: boolean
          default: false
        name: fire_and_forget
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TableSynchronisation_'
  /v0/storage/locations/{location_id}/datasets:
    get:
      tags:
      - storage
      summary: Get datasets metadata
      description: returns all the top level datasets a user has access to
      operationId: get_datasets_metadata
      parameters:
      - required: true
        schema:
          title: Location Id
          type: integer
        name: location_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.storage.schemas.DatasetMetaData__'
  /v0/storage/locations/{location_id}/files/metadata:
    get:
      tags:
      - storage
      summary: Get datasets metadata
      description: returns all the file meta data a user has access to (uuid_filter
        may be used)
      operationId: get_files_metadata
      parameters:
      - required: true
        schema:
          title: Location Id
          type: integer
        name: location_id
        in: path
      - required: false
        schema:
          title: Uuid Filter
          type: string
          default: ''
        name: uuid_filter
        in: query
      - description: Automatic directory expansion. This will be replaced by pagination
          the future
        required: false
        schema:
          title: Expand Dirs
          type: boolean
          description: Automatic directory expansion. This will be replaced by pagination
            the future
          default: true
        name: expand_dirs
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.storage.schemas.DatasetMetaData__'
  /v0/storage/locations/{location_id}/datasets/{dataset_id}/metadata:
    get:
      tags:
      - storage
      summary: Get Files Metadata
      description: returns all the file meta data inside dataset with dataset_id
      operationId: get_files_metadata_dataset
      parameters:
      - required: true
        schema:
          title: Location Id
          type: integer
        name: location_id
        in: path
      - required: true
        schema:
          title: Dataset Id
          type: string
        name: dataset_id
        in: path
      - description: Automatic directory expansion. This will be replaced by pagination
          the future
        required: false
        schema:
          title: Expand Dirs
          type: boolean
          description: Automatic directory expansion. This will be replaced by pagination
            the future
          default: true
        name: expand_dirs
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_storage.FileMetaDataGet__'
  /v0/storage/locations/{location_id}/files/{file_id}/metadata:
    get:
      tags:
      - storage
      summary: Get File Metadata
      description: returns the file meta data of file_id if user_id has the rights
        to
      operationId: get_file_metadata
      parameters:
      - required: true
        schema:
          title: Location Id
          type: integer
        name: location_id
        in: path
      - required: true
        schema:
          title: File Id
          type: string
        name: file_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get File Metadata
                anyOf:
                - $ref: '#/components/schemas/FileMetaData'
                - $ref: '#/components/schemas/Envelope_FileMetaDataGet_'
  /v0/storage/locations/{location_id}/files/{file_id}:
    get:
      tags:
      - storage
      summary: Returns download link for requested file
      description: creates a download file link if user has the rights to
      operationId: download_file
      parameters:
      - required: true
        schema:
          title: Location Id
          type: integer
        name: location_id
        in: path
      - required: true
        schema:
          title: File Id
          type: string
        name: file_id
        in: path
      - required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/LinkType'
          default: PRESIGNED
        name: link_type
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PresignedLink_'
    put:
      tags:
      - storage
      summary: Returns upload link
      description: creates one or more upload file links if user has the rights to,
        expects the client to complete/abort upload
      operationId: upload_file
      parameters:
      - required: true
        schema:
          title: Location Id
          type: integer
        name: location_id
        in: path
      - required: true
        schema:
          title: File Id
          type: string
        name: file_id
        in: path
      - required: true
        schema:
          title: File Size
          type: integer
        name: file_size
        in: query
      - required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/LinkType'
          default: PRESIGNED
        name: link_type
        in: query
      - required: false
        schema:
          title: Is Directory
          type: boolean
          default: false
        name: is_directory
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Upload File
                anyOf:
                - $ref: '#/components/schemas/Envelope_FileUploadSchema_'
                - $ref: '#/components/schemas/Envelope_AnyUrl_'
    delete:
      tags:
      - storage
      summary: Deletes File
      description: deletes file if user has the rights to
      operationId: delete_file
      parameters:
      - required: true
        schema:
          title: Location Id
          type: integer
        name: location_id
        in: path
      - required: true
        schema:
          title: File Id
          type: string
        name: file_id
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/storage/locations/{location_id}/files/{file_id}:abort:
    post:
      tags:
      - storage
      summary: Abort Upload File
      description: 'aborts an upload if user has the rights to, and reverts

        to the latest version if available, else will delete the file'
      operationId: abort_upload_file
      parameters:
      - required: true
        schema:
          title: Location Id
          type: integer
        name: location_id
        in: path
      - required: true
        schema:
          title: File Id
          type: string
        name: file_id
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/storage/locations/{location_id}/files/{file_id}:complete:
    post:
      tags:
      - storage
      summary: Complete Upload File
      description: completes an upload if the user has the rights to
      operationId: complete_upload_file
      parameters:
      - required: true
        schema:
          title: Location Id
          type: integer
        name: location_id
        in: path
      - required: true
        schema:
          title: File Id
          type: string
        name: file_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Envelope_FileUploadCompletionBody_'
        required: true
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_FileUploadCompleteResponse_'
  /v0/storage/locations/{location_id}/files/{file_id}:complete/futures/{future_id}:
    post:
      tags:
      - storage
      summary: Check for upload completion
      description: Returns state of upload completion
      operationId: is_completed_upload_file
      parameters:
      - required: true
        schema:
          title: Location Id
          type: integer
        name: location_id
        in: path
      - required: true
        schema:
          title: File Id
          type: string
        name: file_id
        in: path
      - required: true
        schema:
          title: Future Id
          type: string
        name: future_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_FileUploadCompleteFutureResponse_'
  /v0/tags:
    get:
      tags:
      - tags
      summary: List Tags
      operationId: list_tags
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.tags._handlers.TagGet__'
    post:
      tags:
      - tags
      summary: Create Tag
      operationId: create_tag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TagGet_'
  /v0/tags/{tag_id}:
    delete:
      tags:
      - tags
      summary: Delete Tag
      operationId: delete_tag
      parameters:
      - required: true
        schema:
          title: Tag Id
          type: integer
        name: tag_id
        in: path
      responses:
        '204':
          description: Successful Response
    patch:
      tags:
      - tags
      summary: Update Tag
      operationId: update_tag
      parameters:
      - required: true
        schema:
          title: Tag Id
          type: integer
        name: tag_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TagGet_'
  /v0/me:
    get:
      tags:
      - user
      summary: Get My Profile
      operationId: get_my_profile
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProfileGet_'
    put:
      tags:
      - user
      summary: Update My Profile
      operationId: update_my_profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdate'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/me/preferences/{preference_id}:
    patch:
      tags:
      - user
      summary: Set Frontend Preference
      operationId: set_frontend_preference
      parameters:
      - required: true
        schema:
          title: Preference Id
          type: string
        name: preference_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchRequestBody'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/me/tokens:
    get:
      tags:
      - user
      summary: List Tokens
      operationId: list_tokens
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.users.schemas.ThirdPartyToken__'
    post:
      tags:
      - user
      summary: Create Token
      operationId: create_token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ThirdPartyToken_'
  /v0/me/tokens/{service}:
    get:
      tags:
      - user
      summary: Get Token
      operationId: get_token
      parameters:
      - required: true
        schema:
          title: Service
          type: string
        name: service
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ThirdPartyToken_'
    delete:
      tags:
      - user
      summary: Delete Token
      operationId: delete_token
      parameters:
      - required: true
        schema:
          title: Service
          type: string
        name: service
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/me/notifications:
    get:
      tags:
      - user
      summary: List User Notifications
      operationId: list_user_notifications
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.users._notifications.UserNotification__'
    post:
      tags:
      - user
      summary: Create User Notification
      operationId: create_user_notification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotificationCreate'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/me/notifications/{notification_id}:
    patch:
      tags:
      - user
      summary: Mark Notification As Read
      operationId: mark_notification_as_read
      parameters:
      - required: true
        schema:
          title: Notification Id
          type: string
        name: notification_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotificationPatch'
        required: true
      responses:
        '204':
          description: Successful Response
  /v0/me/permissions:
    get:
      tags:
      - user
      summary: List User Permissions
      operationId: list_user_permissions
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.users.schemas.PermissionGet__'
  /v0/users:search:
    get:
      tags:
      - user
      - po
      summary: Search Users
      operationId: search_users
      parameters:
      - required: true
        schema:
          title: Email
          maxLength: 200
          minLength: 3
          type: string
        name: email
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.users._schemas.UserProfile__'
  /v0/users:pre-register:
    post:
      tags:
      - user
      - po
      summary: Pre Register User
      operationId: pre_register_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreUserProfile'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_UserProfile_'
  /v0/repos/projects:
    get:
      tags:
      - repository
      summary: List Repos
      operationId: list_repos
      parameters:
      - required: false
        schema:
          title: Limit
          exclusiveMaximum: true
          minimum: 1
          type: integer
          default: 20
          maximum: 50
        name: limit
        in: query
      - required: false
        schema:
          title: Offset
          minimum: 0
          type: integer
          default: 0
        name: offset
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_RepoApiModel_'
  /v0/repos/projects/{project_uuid}/checkpoints:
    get:
      tags:
      - repository
      summary: List Checkpoints
      operationId: list_checkpoints
      parameters:
      - required: true
        schema:
          title: Project Uuid
          type: string
          format: uuid
        name: project_uuid
        in: path
      - required: false
        schema:
          title: Limit
          exclusiveMaximum: true
          minimum: 1
          type: integer
          default: 20
          maximum: 50
        name: limit
        in: query
      - required: false
        schema:
          title: Offset
          minimum: 0
          type: integer
          default: 0
        name: offset
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_CheckpointApiModel_'
    post:
      tags:
      - repository
      summary: Create Checkpoint
      operationId: create_checkpoint
      parameters:
      - required: true
        schema:
          title: Project Uuid
          type: string
          format: uuid
        name: project_uuid
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckpointNew'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_CheckpointApiModel_'
  /v0/repos/projects/{project_uuid}/checkpoints/{ref_id}:
    get:
      tags:
      - repository
      summary: Get Checkpoint
      operationId: get_checkpoint
      parameters:
      - required: true
        schema:
          title: Ref Id
          anyOf:
          - type: integer
          - type: string
          - enum:
            - HEAD
            type: string
        name: ref_id
        in: path
      - required: true
        schema:
          title: Project Uuid
          type: string
          format: uuid
        name: project_uuid
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_CheckpointApiModel_'
    patch:
      tags:
      - repository
      summary: Update Checkpoint
      description: Update Checkpoint Annotations
      operationId: update_checkpoint
      parameters:
      - required: true
        schema:
          title: Ref Id
          anyOf:
          - type: integer
          - type: string
        name: ref_id
        in: path
      - required: true
        schema:
          title: Project Uuid
          type: string
          format: uuid
        name: project_uuid
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckpointAnnotations'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_CheckpointApiModel_'
  /v0/repos/projects/{project_uuid}/checkpoints/{ref_id}/workbench/view:
    get:
      tags:
      - repository
      summary: View Project Workbench
      operationId: view_project_workbench
      parameters:
      - required: true
        schema:
          title: Ref Id
          anyOf:
          - type: integer
          - type: string
        name: ref_id
        in: path
      - required: true
        schema:
          title: Project Uuid
          type: string
          format: uuid
        name: project_uuid
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WorkbenchViewApiModel_'
  /v0/repos/projects/{project_uuid}/checkpoints/{ref_id}:checkout:
    post:
      tags:
      - repository
      summary: Checkout
      operationId: checkout
      parameters:
      - required: true
        schema:
          title: Ref Id
          anyOf:
          - type: integer
          - type: string
        name: ref_id
        in: path
      - required: true
        schema:
          title: Project Uuid
          type: string
          format: uuid
        name: project_uuid
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_CheckpointApiModel_'
  /v0/wallets:
    get:
      tags:
      - wallets
      summary: List Wallets
      operationId: list_wallets
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_webserver.wallets.WalletGetWithAvailableCredits__'
    post:
      tags:
      - wallets
      summary: Create Wallet
      operationId: create_wallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWalletBodyParams'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletGet_'
  /v0/wallets/default:
    get:
      tags:
      - wallets
      summary: Get Default Wallet
      operationId: get_default_wallet
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletGetWithAvailableCredits_'
  /v0/wallets/{wallet_id}:
    get:
      tags:
      - wallets
      summary: Get Wallet
      operationId: get_wallet
      parameters:
      - required: true
        schema:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: wallet_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletGetWithAvailableCredits_'
    put:
      tags:
      - wallets
      summary: Update Wallet
      operationId: update_wallet
      parameters:
      - required: true
        schema:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: wallet_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutWalletBodyParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletGet_'
  /v0/wallets/{wallet_id}/payments:
    post:
      tags:
      - wallets
      summary: Create Payment
      description: Creates payment to wallet `wallet_id`
      operationId: create_payment
      parameters:
      - required: true
        schema:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: wallet_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWalletPayment'
        required: true
      responses:
        '202':
          description: Payment initialized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletPaymentInitiated_'
  /v0/wallets/-/payments:
    get:
      tags:
      - wallets
      summary: List All Payments
      description: Lists all user payments to his/her wallets (only the ones he/she
        created)
      operationId: list_all_payments
      parameters:
      - required: false
        schema:
          title: Limit
          exclusiveMaximum: true
          minimum: 1
          type: integer
          default: 20
          maximum: 50
        name: limit
        in: query
      - required: false
        schema:
          title: Offset
          minimum: 0
          type: integer
          default: 0
        name: offset
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_PaymentTransaction_'
  /v0/wallets/{wallet_id}/payments/{payment_id}/invoice-link:
    get:
      tags:
      - wallets
      summary: Get Payment Invoice Link
      operationId: get_payment_invoice_link
      parameters:
      - required: true
        schema:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: wallet_id
        in: path
      - required: true
        schema:
          title: Payment Id
          maxLength: 100
          minLength: 1
          type: string
        name: payment_id
        in: path
      responses:
        '302':
          description: redirection to invoice download link
          content:
            application/json:
              schema: {}
  /v0/wallets/{wallet_id}/payments/{payment_id}:cancel:
    post:
      tags:
      - wallets
      summary: Cancel Payment
      operationId: cancel_payment
      parameters:
      - required: true
        schema:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: wallet_id
        in: path
      - required: true
        schema:
          title: Payment Id
          maxLength: 100
          minLength: 1
          type: string
        name: payment_id
        in: path
      responses:
        '204':
          description: Successfully cancelled
  /v0/wallets/{wallet_id}/payments-methods:init:
    post:
      tags:
      - wallets
      summary: Init Creation Of Payment Method
      operationId: init_creation_of_payment_method
      parameters:
      - required: true
        schema:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: wallet_id
        in: path
      responses:
        '202':
          description: Successfully initialized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PaymentMethodInitiated_'
  /v0/wallets/{wallet_id}/payments-methods/{payment_method_id}:cancel:
    post:
      tags:
      - wallets
      summary: Cancel Creation Of Payment Method
      operationId: cancel_creation_of_payment_method
      parameters:
      - required: true
        schema:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: wallet_id
        in: path
      - required: true
        schema:
          title: Payment Method Id
          maxLength: 100
          minLength: 1
          type: string
        name: payment_method_id
        in: path
      responses:
        '204':
          description: Successfully cancelled
  /v0/wallets/{wallet_id}/payments-methods:
    get:
      tags:
      - wallets
      summary: List Payments Methods
      description: Lists all payments method associated to `wallet_id`
      operationId: list_payments_methods
      parameters:
      - required: true
        schema:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: wallet_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_webserver.wallets.PaymentMethodGet__'
  /v0/wallets/{wallet_id}/payments-methods/{payment_method_id}:
    get:
      tags:
      - wallets
      summary: Get Payment Method
      operationId: get_payment_method
      parameters:
      - required: true
        schema:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: wallet_id
        in: path
      - required: true
        schema:
          title: Payment Method Id
          maxLength: 100
          minLength: 1
          type: string
        name: payment_method_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PaymentMethodGet_'
    delete:
      tags:
      - wallets
      summary: Delete Payment Method
      operationId: delete_payment_method
      parameters:
      - required: true
        schema:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: wallet_id
        in: path
      - required: true
        schema:
          title: Payment Method Id
          maxLength: 100
          minLength: 1
          type: string
        name: payment_method_id
        in: path
      responses:
        '204':
          description: Successfully deleted
  /v0/wallets/{wallet_id}/payments-methods/{payment_method_id}:pay:
    post:
      tags:
      - wallets
      summary: Pay With Payment Method
      operationId: pay_with_payment_method
      parameters:
      - required: true
        schema:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: wallet_id
        in: path
      - required: true
        schema:
          title: Payment Method Id
          maxLength: 100
          minLength: 1
          type: string
        name: payment_method_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWalletPayment'
        required: true
      responses:
        '202':
          description: Pay with payment-method
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletPaymentInitiated_'
  /v0/wallets/{wallet_id}/auto-recharge:
    get:
      tags:
      - wallets
      summary: Get Wallet Autorecharge
      operationId: get_wallet_autorecharge
      parameters:
      - required: true
        schema:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: wallet_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_GetWalletAutoRecharge_'
    put:
      tags:
      - wallets
      summary: Replace Wallet Autorecharge
      operationId: replace_wallet_autorecharge
      parameters:
      - required: true
        schema:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: wallet_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceWalletAutoRecharge'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_GetWalletAutoRecharge_'
  /v0/wallets/{wallet_id}/groups/{group_id}:
    put:
      tags:
      - wallets
      summary: Update Wallet Group
      operationId: update_wallet_group
      parameters:
      - required: true
        schema:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: wallet_id
        in: path
      - required: true
        schema:
          title: Group Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: group_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_WalletsGroupsBodyParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletGroupGet_'
    post:
      tags:
      - wallets
      summary: Create Wallet Group
      operationId: create_wallet_group
      parameters:
      - required: true
        schema:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: wallet_id
        in: path
      - required: true
        schema:
          title: Group Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: group_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_WalletsGroupsBodyParams'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_WalletGroupGet_'
    delete:
      tags:
      - wallets
      summary: Delete Wallet Group
      operationId: delete_wallet_group
      parameters:
      - required: true
        schema:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: wallet_id
        in: path
      - required: true
        schema:
          title: Group Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: group_id
        in: path
      responses:
        '204':
          description: Successful Response
  /v0/wallets/{wallet_id}/groups:
    get:
      tags:
      - wallets
      summary: List Wallet Groups
      operationId: list_wallet_groups
      parameters:
      - required: true
        schema:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: wallet_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.wallets._groups_api.WalletGroupGet__'
components:
  schemas:
    AccessEnum:
      title: AccessEnum
      enum:
      - ReadAndWrite
      - Invisible
      - ReadOnly
      type: string
      description: An enumeration.
    AccessRights:
      title: AccessRights
      required:
      - read
      - write
      - delete
      type: object
      properties:
        read:
          title: Read
          type: boolean
          description: has read access
        write:
          title: Write
          type: boolean
          description: has write access
        delete:
          title: Delete
          type: boolean
          description: has deletion rights
      additionalProperties: false
    AccountRequestInfo:
      title: AccountRequestInfo
      required:
      - form
      - captcha
      type: object
      properties:
        form:
          title: Form
          type: object
        captcha:
          title: Captcha
          type: string
      example:
        form:
          firstName: James
          lastName: Maxwel
          email: maxwel@email.com
          phone: +1 123456789
          company: EM Com
          address: Infinite Loop
          city: Washington
          postalCode: '98001'
          country: USA
          application: Antenna_Design
          description: Description of something
          hear: Search_Engine
          privacyPolicy: true
          eula: true
        captcha: A12B34
    Activity:
      title: Activity
      required:
      - stats
      - limits
      type: object
      properties:
        stats:
          $ref: '#/components/schemas/Stats'
        limits:
          $ref: '#/components/schemas/Limits'
        queued:
          title: Queued
          type: boolean
    AllUsersGroups:
      title: AllUsersGroups
      type: object
      properties:
        me:
          $ref: '#/components/schemas/UsersGroup'
        organizations:
          title: Organizations
          type: array
          items:
            $ref: '#/components/schemas/UsersGroup'
        all:
          $ref: '#/components/schemas/UsersGroup'
        product:
          $ref: '#/components/schemas/UsersGroup'
      example:
        me:
          gid: '27'
          label: A user
          description: A very special user
          accessRights:
            read: true
            write: true
            delete: true
        organizations:
        - gid: '15'
          label: ITIS Foundation
          description: The Foundation for Research on Information Technologies in
            Society
          accessRights:
            read: true
            write: false
            delete: false
        - gid: '16'
          label: Blue Fundation
          description: Some foundation
          accessRights:
            read: true
            write: false
            delete: false
        all:
          gid: '0'
          label: All
          description: Open to all users
          accessRights:
            read: true
            write: false
            delete: false
    Annotation:
      title: Annotation
      required:
      - type
      - color
      - attributes
      type: object
      properties:
        type:
          title: Type
          enum:
          - note
          - rect
          - text
          type: string
        color:
          title: Color
          type: string
          format: color
        attributes:
          title: Attributes
          type: object
          description: svg attributes
      additionalProperties: false
    Announcement:
      title: Announcement
      required:
      - id
      - products
      - start
      - end
      - title
      - description
      - link
      - widgets
      type: object
      properties:
        id:
          title: Id
          type: string
        products:
          title: Products
          type: array
          items:
            type: string
        start:
          title: Start
          type: string
          format: date-time
        end:
          title: End
          type: string
          format: date-time
        title:
          title: Title
          type: string
        description:
          title: Description
          type: string
        link:
          title: Link
          type: string
        widgets:
          title: Widgets
          type: array
          items:
            enum:
            - login
            - ribbon
            - user-menu
            type: string
    ApiKeyCreate:
      title: ApiKeyCreate
      required:
      - display_name
      type: object
      properties:
        display_name:
          title: Display Name
          minLength: 3
          type: string
        expiration:
          title: Expiration
          type: number
          description: Time delta from creation time to expiration. If None, then
            it does not expire.
          format: time-delta
    ApiKeyGet:
      title: ApiKeyGet
      required:
      - display_name
      - api_key
      - api_secret
      type: object
      properties:
        display_name:
          title: Display Name
          minLength: 3
          type: string
        api_key:
          title: Api Key
          type: string
        api_secret:
          title: Api Secret
          type: string
    AppStatusCheck:
      title: AppStatusCheck
      required:
      - app_name
      - version
      type: object
      properties:
        app_name:
          title: App Name
          type: string
          description: Application name
        version:
          title: Version
          type: string
          description: Application's version
        services:
          title: Services
          type: object
          description: Other backend services connected from this service
          default: {}
        sessions:
          title: Sessions
          type: object
          description: Client sessions info. If single session per app, then is denoted
            as main
          default: {}
        url:
          title: Url
          maxLength: 65536
          minLength: 1
          type: string
          description: Link to current resource
          format: uri
        diagnostics_url:
          title: Diagnostics Url
          maxLength: 65536
          minLength: 1
          type: string
          description: Link to diagnostics report sub-resource. This MIGHT take some
            time to compute
          format: uri
    Author:
      title: Author
      required:
      - name
      - email
      type: object
      properties:
        name:
          title: Name
          type: string
          description: Name of the author
          example: Jim Knopf
        email:
          title: Email
          type: string
          description: Email address
          format: email
        affiliation:
          title: Affiliation
          type: string
          description: Affiliation of the author
    Badge:
      title: Badge
      required:
      - name
      - image
      - url
      type: object
      properties:
        name:
          title: Name
          type: string
          description: Name of the subject
        image:
          title: Image
          maxLength: 2083
          minLength: 1
          type: string
          description: Url to the badge
          format: uri
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          description: Link to the status
          format: uri
    Body_service_submission:
      title: Body_service_submission
      required:
      - _file
      type: object
      properties:
        _file:
          title: ' File'
          type: string
          description: metadata.json submission file
          format: binary
    BootChoice:
      title: BootChoice
      required:
      - label
      - description
      type: object
      properties:
        label:
          title: Label
          type: string
        description:
          title: Description
          type: string
    BootMode:
      title: BootMode
      enum:
      - CPU
      - GPU
      - MPI
      type: string
      description: An enumeration.
    BootOption:
      title: BootOption
      required:
      - label
      - description
      - default
      - items
      type: object
      properties:
        label:
          title: Label
          type: string
        description:
          title: Description
          type: string
        default:
          title: Default
          type: string
        items:
          title: Items
          type: object
          additionalProperties:
            $ref: '#/components/schemas/BootChoice'
    ChangePasswordBody:
      title: ChangePasswordBody
      required:
      - current
      - new
      - confirm
      type: object
      properties:
        current:
          title: Current
          type: string
          format: password
          writeOnly: true
        new:
          title: New
          type: string
          format: password
          writeOnly: true
        confirm:
          title: Confirm
          type: string
          format: password
          writeOnly: true
      additionalProperties: false
    CheckpointAnnotations:
      title: CheckpointAnnotations
      type: object
      properties:
        tag:
          title: Tag
          type: string
        message:
          title: Message
          type: string
    CheckpointApiModel:
      title: CheckpointApiModel
      required:
      - id
      - checksum
      - created_at
      - tags
      - url
      type: object
      properties:
        id:
          title: Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        checksum:
          title: Checksum
          pattern: ^[a-fA-F0-9]{40}$
          type: string
        created_at:
          title: Created At
          type: string
          format: date-time
        tags:
          title: Tags
          type: array
          items:
            type: string
        message:
          title: Message
          type: string
        parents_ids:
          title: Parents Ids
          type: array
          items:
            exclusiveMinimum: true
            type: integer
            minimum: 0
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
    CheckpointNew:
      title: CheckpointNew
      required:
      - tag
      type: object
      properties:
        tag:
          title: Tag
          type: string
        message:
          title: Message
          type: string
    ClusterAccessRights:
      title: ClusterAccessRights
      required:
      - read
      - write
      - delete
      type: object
      properties:
        read:
          title: Read
          type: boolean
          description: allows to run pipelines on that cluster
        write:
          title: Write
          type: boolean
          description: allows to modify the cluster
        delete:
          title: Delete
          type: boolean
          description: allows to delete a cluster
      additionalProperties: false
    ClusterCreate:
      title: ClusterCreate
      required:
      - name
      - type
      - endpoint
      - authentication
      type: object
      properties:
        name:
          title: Name
          type: string
          description: The human readable name of the cluster
        description:
          title: Description
          type: string
        type:
          $ref: '#/components/schemas/ClusterTypeInModel'
        owner:
          title: Owner
          exclusiveMinimum: true
          type: integer
          minimum: 0
        thumbnail:
          title: Thumbnail
          maxLength: 2083
          minLength: 1
          type: string
          description: url to the image describing this cluster
          format: uri
        endpoint:
          title: Endpoint
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        authentication:
          title: Authentication
          anyOf:
          - $ref: '#/components/schemas/SimpleAuthentication'
          - $ref: '#/components/schemas/KerberosAuthentication'
          - $ref: '#/components/schemas/JupyterHubTokenAuthentication'
        accessRights:
          title: Accessrights
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ClusterAccessRights'
    ClusterDetails:
      title: ClusterDetails
      required:
      - scheduler
      - dashboardLink
      type: object
      properties:
        scheduler:
          title: Scheduler
          allOf:
          - $ref: '#/components/schemas/Scheduler'
          description: This contains dask scheduler information given by the underlying
            dask library
        dashboardLink:
          title: Dashboardlink
          maxLength: 65536
          minLength: 1
          type: string
          description: Link to this scheduler's dashboard
          format: uri
    ClusterGet:
      title: ClusterGet
      required:
      - name
      - type
      - owner
      - endpoint
      - authentication
      - id
      type: object
      properties:
        name:
          title: Name
          type: string
          description: The human readable name of the cluster
        description:
          title: Description
          type: string
        type:
          $ref: '#/components/schemas/ClusterTypeInModel'
        owner:
          title: Owner
          exclusiveMinimum: true
          type: integer
          minimum: 0
        thumbnail:
          title: Thumbnail
          maxLength: 2083
          minLength: 1
          type: string
          description: url to the image describing this cluster
          format: uri
        endpoint:
          title: Endpoint
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        authentication:
          title: Authentication
          anyOf:
          - $ref: '#/components/schemas/SimpleAuthentication'
          - $ref: '#/components/schemas/KerberosAuthentication'
          - $ref: '#/components/schemas/JupyterHubTokenAuthentication'
          - $ref: '#/components/schemas/NoAuthentication'
          - $ref: '#/components/schemas/TLSAuthentication'
          description: Dask gateway authentication
        accessRights:
          title: Accessrights
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ClusterAccessRights'
        id:
          title: Id
          minimum: 0
          type: integer
          description: The cluster ID
    ClusterPatch:
      title: ClusterPatch
      type: object
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        type:
          $ref: '#/components/schemas/ClusterTypeInModel'
        owner:
          title: Owner
          exclusiveMinimum: true
          type: integer
          minimum: 0
        thumbnail:
          title: Thumbnail
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
        endpoint:
          title: Endpoint
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        authentication:
          title: Authentication
          anyOf:
          - $ref: '#/components/schemas/SimpleAuthentication'
          - $ref: '#/components/schemas/KerberosAuthentication'
          - $ref: '#/components/schemas/JupyterHubTokenAuthentication'
        accessRights:
          title: Accessrights
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ClusterAccessRights'
    ClusterPing:
      title: ClusterPing
      required:
      - endpoint
      - authentication
      type: object
      properties:
        endpoint:
          title: Endpoint
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        authentication:
          title: Authentication
          anyOf:
          - $ref: '#/components/schemas/SimpleAuthentication'
          - $ref: '#/components/schemas/KerberosAuthentication'
          - $ref: '#/components/schemas/JupyterHubTokenAuthentication'
          - $ref: '#/components/schemas/NoAuthentication'
          - $ref: '#/components/schemas/TLSAuthentication'
          description: Dask gateway authentication
    ClusterTypeInModel:
      title: ClusterTypeInModel
      enum:
      - AWS
      - ON_PREMISE
      - ON_DEMAND
      type: string
      description: An enumeration.
    CodePageParams:
      title: CodePageParams
      required:
      - message
      type: object
      properties:
        message:
          title: Message
          type: string
        expiration_2fa:
          title: Expiration 2Fa
          exclusiveMinimum: true
          type: integer
          minimum: 0
        next_url:
          title: Next Url
          type: string
    Compatibility:
      title: Compatibility
      required:
      - can_update_to
      type: object
      properties:
        can_update_to:
          title: Can Update To
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
          description: Latest compatible version at this moment.Current service can
            update to this version and still work
    ComputationStart:
      title: ComputationStart
      type: object
      properties:
        force_restart:
          title: Force Restart
          type: boolean
          default: false
        cluster_id:
          title: Cluster Id
          minimum: 0
          type: integer
          default: 0
        subgraph:
          title: Subgraph
          uniqueItems: true
          type: array
          items:
            type: string
          default: []
    ComputationTaskGet:
      title: ComputationTaskGet
      type: object
      properties:
        cluster_id:
          title: Cluster Id
          minimum: 0
          type: integer
    ConnectServiceToPricingPlanBodyParams:
      title: ConnectServiceToPricingPlanBodyParams
      required:
      - serviceKey
      - serviceVersion
      type: object
      properties:
        serviceKey:
          title: Servicekey
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
        serviceVersion:
          title: Serviceversion
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
    CountryInfoDict:
      title: CountryInfoDict
      required:
      - name
      - alpha2
      type: object
      properties:
        name:
          title: Name
          type: string
        alpha2:
          title: Alpha2
          type: string
    CreatePricingPlanBodyParams:
      title: CreatePricingPlanBodyParams
      required:
      - displayName
      - description
      - classification
      - pricingPlanKey
      type: object
      properties:
        displayName:
          title: Displayname
          type: string
        description:
          title: Description
          type: string
        classification:
          $ref: '#/components/schemas/PricingPlanClassification'
        pricingPlanKey:
          title: Pricingplankey
          type: string
    CreatePricingUnitBodyParams:
      title: CreatePricingUnitBodyParams
      required:
      - unitName
      - unitExtraInfo
      - default
      - specificInfo
      - costPerUnit
      - comment
      type: object
      properties:
        unitName:
          title: Unitname
          type: string
        unitExtraInfo:
          $ref: '#/components/schemas/UnitExtraInfo'
        default:
          title: Default
          type: boolean
        specificInfo:
          $ref: '#/components/schemas/SpecificInfo'
        costPerUnit:
          title: Costperunit
          type: number
        comment:
          title: Comment
          type: string
    CreateWalletBodyParams:
      title: CreateWalletBodyParams
      required:
      - name
      type: object
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        thumbnail:
          title: Thumbnail
          type: string
    CreateWalletPayment:
      title: CreateWalletPayment
      required:
      - priceDollars
      type: object
      properties:
        priceDollars:
          title: Pricedollars
          exclusiveMaximum: true
          exclusiveMinimum: true
          type: number
          maximum: 1000000.0
          minimum: 0.0
        comment:
          title: Comment
          maxLength: 100
          type: string
    DEVServiceGet:
      title: DEVServiceGet
      required:
      - name
      - description
      - key
      - version
      - type
      - authors
      - contact
      - inputs
      - outputs
      type: object
      properties:
        name:
          title: Name
          type: string
          description: 'Display name: short, human readable name for the node'
          example: Fast Counter
        thumbnail:
          title: Thumbnail
          maxLength: 2083
          minLength: 1
          type: string
          description: url to the thumbnail
          format: uri
        description:
          title: Description
          type: string
          description: human readable description of the purpose of the node
        deprecated:
          title: Deprecated
          type: string
          description: If filled with a date, then the service is to be deprecated
            at that date (e.g. cannot start anymore)
          format: date-time
        classifiers:
          title: Classifiers
          type: array
          items:
            type: string
        quality:
          title: Quality
          type: object
          default: {}
        accessRights:
          title: Accessrights
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ServiceGroupAccessRights'
          description: service access rights per group id
        key:
          title: Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
          description: distinctive name for the node based on the docker registry
            path
        version:
          title: Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
          description: service version number
        versionDisplay:
          title: Versiondisplay
          type: string
          description: A user-friendly or marketing name for the release. This can
            be used to reference the release in a more readable and recognizable format,
            such as 'Matterhorn Release,' 'Spring Update,' or 'Holiday Edition.' This
            name is not used for version comparison but is useful for communication
            and documentation purposes.
        releaseDate:
          title: Releasedate
          type: string
          description: "A timestamp when the specific version of the service was released.\
            \ This field helps in tracking the timeline of releases and understanding\
            \ the sequence of updates. A timestamp string should be formatted as YYYY-MM-DD[T]HH:MM[:SS[.ffffff]][Z\
            \ or [\xB1]HH[:]MM]"
          format: date-time
        integration-version:
          title: Integration-Version
          pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
          type: string
          description: This version is used to maintain backward compatibility when
            there are changes in the way a service is integrated into the framework
        type:
          allOf:
          - $ref: '#/components/schemas/ServiceType'
          description: service type
        badges:
          title: Badges
          type: array
          items:
            $ref: '#/components/schemas/Badge'
        authors:
          title: Authors
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Author'
        contact:
          title: Contact
          type: string
          description: email to correspond to the authors about the node
          format: email
        inputs:
          title: Inputs
          type: object
          description: inputs with extended information
        outputs:
          title: Outputs
          type: object
          description: outputs with extended information
        boot-options:
          title: Boot-Options
          type: object
          description: Service defined boot options. These get injected in the service
            as env variables.
        min-visible-inputs:
          title: Min-Visible-Inputs
          minimum: 0
          type: integer
          description: The number of 'data type inputs' displayed by default in the
            UI. When None all 'data type inputs' are displayed.
        progress_regexp:
          title: Progress Regexp
          type: string
          description: regexp pattern for detecting computational service's progress
        owner:
          title: Owner
          type: string
          format: email
        history:
          title: History
          type: array
          items:
            $ref: '#/components/schemas/ServiceRelease'
          description: history of releases for this service at this point in time,
            starting from the newest to the oldest. It includes current release.
          default: []
      description: 'Service metadata at publication time


        - read-only (can only be changed overwriting the image labels in the registry)

        - base metaddata

        - injected in the image labels


        NOTE: This model is serialized in .osparc/metadata.yml and in the labels of
        the docker image'
      example:
        name: File Picker
        description: description
        classifiers: []
        quality: {}
        accessRights:
          '1':
            execute_access: true
            write_access: false
          '4':
            execute_access: true
            write_access: true
        key: simcore/services/frontend/file-picker
        version: 1.0.0
        type: dynamic
        authors:
        - name: Red Pandas
          email: redpandas@wonderland.com
        contact: redpandas@wonderland.com
        inputs:
          input0:
            label: Acceleration
            description: acceleration with units
            type: ref_contentSchema
            contentSchema:
              title: Acceleration
              type: number
              x_unit: m/s**2
            keyId: input_1
            unitLong: meter/second<sup>3</sup>
            unitShort: m/s<sup>3</sup>
        outputs:
          outFile:
            displayOrder: 2
            label: Time Slept
            description: Time the service waited before completion
            type: number
            unit: second
            unitLong: seconds
            unitShort: sec
            keyId: output_2
        owner: redpandas@wonderland.com
        history:
        - version: 1.0.5
          version_display: Summer Release
          release_date: '2024-07-20T15:00:00'
        - version: 1.0.0
          compatibility:
            can_update_to: 1.0.5
        - version: 0.9.11
        - version: 0.9.10
        - version: 0.9.8
          compatibility:
            can_update_to: 0.9.10
        - version: 0.9.1
          version_display: Matterhorn
          release_date: '2024-01-20T18:49:17'
          compatibility:
            can_update_to: 0.9.10
        - version: 0.9.0
        - version: 0.8.0
        - version: 0.1.0
    DatCoreFileLink:
      title: DatCoreFileLink
      required:
      - store
      - path
      - label
      - dataset
      type: object
      properties:
        store:
          title: Store
          type: integer
          description: 'The store identifier: 0 for simcore S3, 1 for datcore'
        path:
          title: Path
          anyOf:
          - pattern: ^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$
            type: string
          - pattern: ^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$
            type: string
          description: The path to the file in the storage provider domain
        label:
          title: Label
          type: string
          description: The real file name
        eTag:
          title: Etag
          type: string
          description: Entity tag that uniquely represents the file. The method to
            generate the tag is not specified (black box).
        dataset:
          title: Dataset
          type: string
          description: Unique identifier to access the dataset on datcore (REQUIRED
            for datcore)
      additionalProperties: false
      description: I/O port type to hold a link to a file in DATCORE storage
    DatasetMetaData:
      title: DatasetMetaData
      type: object
      properties:
        dataset_id:
          title: Dataset Id
          type: string
        display_name:
          title: Display Name
          type: string
      example:
        dataset_id: N:id-aaaa
        display_name: simcore-testing
    DictModel_str__PositiveFloat_:
      title: DictModel[str, PositiveFloat]
      type: object
      additionalProperties:
        exclusiveMinimum: true
        type: number
        minimum: 0.0
    DownloadLink:
      title: DownloadLink
      required:
      - downloadLink
      type: object
      properties:
        downloadLink:
          title: Downloadlink
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        label:
          title: Label
          type: string
          description: Display name
      additionalProperties: false
      description: I/O port type to hold a generic download link to a file (e.g. S3
        pre-signed link, etc)
    EmailTestFailed:
      title: EmailTestFailed
      required:
      - test_name
      - error_type
      - error_message
      - traceback
      type: object
      properties:
        test_name:
          title: Test Name
          type: string
        error_type:
          title: Error Type
          type: string
        error_message:
          title: Error Message
          type: string
        traceback:
          title: Traceback
          type: string
    EmailTestPassed:
      title: EmailTestPassed
      required:
      - fixtures
      - info
      type: object
      properties:
        fixtures:
          title: Fixtures
          type: object
        info:
          title: Info
          type: object
    EmptyModel:
      title: EmptyModel
      type: object
      properties: {}
      additionalProperties: false
    Envelope_AllUsersGroups_:
      title: Envelope[AllUsersGroups]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AllUsersGroups'
        error:
          title: Error
    Envelope_AnyUrl_:
      title: Envelope[AnyUrl]
      type: object
      properties:
        data:
          title: Data
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        error:
          title: Error
    Envelope_AppStatusCheck_:
      title: Envelope[AppStatusCheck]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AppStatusCheck'
        error:
          title: Error
    Envelope_CheckpointApiModel_:
      title: Envelope[CheckpointApiModel]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CheckpointApiModel'
        error:
          title: Error
    Envelope_ClusterDetails_:
      title: Envelope[ClusterDetails]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClusterDetails'
        error:
          title: Error
    Envelope_ClusterGet_:
      title: Envelope[ClusterGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ClusterGet'
        error:
          title: Error
    Envelope_ComputationTaskGet_:
      title: Envelope[ComputationTaskGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ComputationTaskGet'
        error:
          title: Error
    Envelope_DEVServiceGet_:
      title: Envelope[DEVServiceGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/DEVServiceGet'
        error:
          title: Error
    Envelope_Error_:
      title: Envelope[Error]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Error'
        error:
          title: Error
    Envelope_FileMetaDataGet_:
      title: Envelope[FileMetaDataGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FileMetaDataGet'
        error:
          title: Error
    Envelope_FileUploadCompleteFutureResponse_:
      title: Envelope[FileUploadCompleteFutureResponse]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FileUploadCompleteFutureResponse'
        error:
          title: Error
    Envelope_FileUploadCompleteResponse_:
      title: Envelope[FileUploadCompleteResponse]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FileUploadCompleteResponse'
        error:
          title: Error
    Envelope_FileUploadCompletionBody_:
      title: Envelope[FileUploadCompletionBody]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FileUploadCompletionBody'
        error:
          title: Error
    Envelope_FileUploadSchema_:
      title: Envelope[FileUploadSchema]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FileUploadSchema'
        error:
          title: Error
    Envelope_GetCreditPrice_:
      title: Envelope[GetCreditPrice]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetCreditPrice'
        error:
          title: Error
    Envelope_GetProduct_:
      title: Envelope[GetProduct]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetProduct'
        error:
          title: Error
    Envelope_GetProjectInactivityResponse_:
      title: Envelope[GetProjectInactivityResponse]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetProjectInactivityResponse'
        error:
          title: Error
    Envelope_GetWalletAutoRecharge_:
      title: Envelope[GetWalletAutoRecharge]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetWalletAutoRecharge'
        error:
          title: Error
    Envelope_GroupUserGet_:
      title: Envelope[GroupUserGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GroupUserGet'
        error:
          title: Error
    Envelope_HealthInfoDict_:
      title: Envelope[HealthInfoDict]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/HealthInfoDict'
        error:
          title: Error
    Envelope_InvitationGenerated_:
      title: Envelope[InvitationGenerated]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/InvitationGenerated'
        error:
          title: Error
    Envelope_InvitationInfo_:
      title: Envelope[InvitationInfo]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/InvitationInfo'
        error:
          title: Error
    Envelope_Log_:
      title: Envelope[Log]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Log'
        error:
          title: Error
    Envelope_LoginNextPage_:
      title: Envelope[LoginNextPage]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/LoginNextPage'
        error:
          title: Error
    Envelope_NodeCreated_:
      title: Envelope[NodeCreated]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/NodeCreated'
        error:
          title: Error
    Envelope_NodeRetrieved_:
      title: Envelope[NodeRetrieved]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/NodeRetrieved'
        error:
          title: Error
    Envelope_PaymentMethodGet_:
      title: Envelope[PaymentMethodGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PaymentMethodGet'
        error:
          title: Error
    Envelope_PaymentMethodInitiated_:
      title: Envelope[PaymentMethodInitiated]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PaymentMethodInitiated'
        error:
          title: Error
    Envelope_PresignedLink_:
      title: Envelope[PresignedLink]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PresignedLink'
        error:
          title: Error
    Envelope_PricingPlanAdminGet_:
      title: Envelope[PricingPlanAdminGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PricingPlanAdminGet'
        error:
          title: Error
    Envelope_PricingPlanToServiceAdminGet_:
      title: Envelope[PricingPlanToServiceAdminGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PricingPlanToServiceAdminGet'
        error:
          title: Error
    Envelope_PricingUnitAdminGet_:
      title: Envelope[PricingUnitAdminGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PricingUnitAdminGet'
        error:
          title: Error
    Envelope_PricingUnitGet_:
      title: Envelope[PricingUnitGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PricingUnitGet'
        error:
          title: Error
    Envelope_ProfileGet_:
      title: Envelope[ProfileGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProfileGet'
        error:
          title: Error
    Envelope_ProjectGet_:
      title: Envelope[ProjectGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectGet'
        error:
          title: Error
    Envelope_ProjectMetadataGet_:
      title: Envelope[ProjectMetadataGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectMetadataGet'
        error:
          title: Error
    Envelope_ProjectState_:
      title: Envelope[ProjectState]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectState'
        error:
          title: Error
    Envelope_ProjectsCommentsAPI_:
      title: Envelope[ProjectsCommentsAPI]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectsCommentsAPI'
        error:
          title: Error
    Envelope_RegisterPhoneNextPage_:
      title: Envelope[RegisterPhoneNextPage]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RegisterPhoneNextPage'
        error:
          title: Error
    Envelope_ResearchResource_:
      title: Envelope[ResearchResource]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ResearchResource'
        error:
          title: Error
    Envelope_ServiceGet_:
      title: Envelope[ServiceGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/models_library__api_schemas_webserver__catalog__ServiceGet'
        error:
          title: Error
    Envelope_ServiceInputGet_:
      title: Envelope[ServiceInputGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ServiceInputGet'
        error:
          title: Error
    Envelope_ServicePricingPlanGet_:
      title: Envelope[ServicePricingPlanGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ServicePricingPlanGet'
        error:
          title: Error
    Envelope_StatusDiagnosticsGet_:
      title: Envelope[StatusDiagnosticsGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/StatusDiagnosticsGet'
        error:
          title: Error
    Envelope_TableSynchronisation_:
      title: Envelope[TableSynchronisation]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TableSynchronisation'
        error:
          title: Error
    Envelope_TagGet_:
      title: Envelope[TagGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TagGet'
        error:
          title: Error
    Envelope_TaskGet_:
      title: Envelope[TaskGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskGet'
        error:
          title: Error
    Envelope_TaskStatus_:
      title: Envelope[TaskStatus]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskStatus'
        error:
          title: Error
    Envelope_ThirdPartyToken_:
      title: Envelope[ThirdPartyToken]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ThirdPartyToken'
        error:
          title: Error
    Envelope_Union_EmailTestFailed__EmailTestPassed__:
      title: Envelope[Union[EmailTestFailed, EmailTestPassed]]
      type: object
      properties:
        data:
          title: Data
          anyOf:
          - $ref: '#/components/schemas/EmailTestFailed'
          - $ref: '#/components/schemas/EmailTestPassed'
        error:
          title: Error
    Envelope_Union_NodeGetIdle__NodeGetUnknown__RunningDynamicServiceDetails__NodeGet__:
      title: Envelope[Union[NodeGetIdle, NodeGetUnknown, RunningDynamicServiceDetails,
        NodeGet]]
      type: object
      properties:
        data:
          title: Data
          anyOf:
          - $ref: '#/components/schemas/NodeGetIdle'
          - $ref: '#/components/schemas/NodeGetUnknown'
          - $ref: '#/components/schemas/RunningDynamicServiceDetails'
          - $ref: '#/components/schemas/NodeGet'
        error:
          title: Error
    Envelope_Union_PricingUnitGet__NoneType__:
      title: Envelope[Union[PricingUnitGet, NoneType]]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PricingUnitGet'
        error:
          title: Error
    Envelope_Union_WalletGet__NoneType__:
      title: Envelope[Union[WalletGet, NoneType]]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WalletGet'
        error:
          title: Error
    Envelope_UserProfile_:
      title: Envelope[UserProfile]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserProfile'
        error:
          title: Error
    Envelope_UsersGroup_:
      title: Envelope[UsersGroup]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UsersGroup'
        error:
          title: Error
    Envelope_WalletGetWithAvailableCredits_:
      title: Envelope[WalletGetWithAvailableCredits]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WalletGetWithAvailableCredits'
        error:
          title: Error
    Envelope_WalletGet_:
      title: Envelope[WalletGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WalletGet'
        error:
          title: Error
    Envelope_WalletGroupGet_:
      title: Envelope[WalletGroupGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WalletGroupGet'
        error:
          title: Error
    Envelope_WalletPaymentInitiated_:
      title: Envelope[WalletPaymentInitiated]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WalletPaymentInitiated'
        error:
          title: Error
    Envelope_WorkbenchViewApiModel_:
      title: Envelope[WorkbenchViewApiModel]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WorkbenchViewApiModel'
        error:
          title: Error
    Envelope__ComputationStarted_:
      title: Envelope[_ComputationStarted]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/_ComputationStarted'
        error:
          title: Error
    Envelope__ProjectGroupAccess_:
      title: Envelope[_ProjectGroupAccess]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/_ProjectGroupAccess'
        error:
          title: Error
    Envelope__ProjectNodePreview_:
      title: Envelope[_ProjectNodePreview]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/_ProjectNodePreview'
        error:
          title: Error
    Envelope_dict_Literal__comment_id____pydantic.types.PositiveInt__:
      title: Envelope[dict[Literal['comment_id'], pydantic.types.PositiveInt]]
      type: object
      properties:
        data:
          title: Data
          type: object
          additionalProperties:
            exclusiveMinimum: true
            type: integer
            minimum: 0
        error:
          title: Error
    Envelope_dict_models_library.docker.DockerGenericTag__models_library.services_resources.ImageResources__:
      title: Envelope[dict[models_library.docker.DockerGenericTag, models_library.services_resources.ImageResources]]
      type: object
      properties:
        data:
          title: Data
          type: object
        error:
          title: Error
    Envelope_dict_str__Any__:
      title: Envelope[dict[str, Any]]
      type: object
      properties:
        data:
          title: Data
          type: object
        error:
          title: Error
    Envelope_dict_uuid.UUID__models_library.api_schemas_webserver.activity.Activity__:
      title: Envelope[dict[uuid.UUID, models_library.api_schemas_webserver.activity.Activity]]
      type: object
      properties:
        data:
          title: Data
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Activity'
        error:
          title: Error
    Envelope_dict_uuid.UUID__models_library.api_schemas_webserver.projects_ports.ProjectInputGet__:
      title: Envelope[dict[uuid.UUID, models_library.api_schemas_webserver.projects_ports.ProjectInputGet]]
      type: object
      properties:
        data:
          title: Data
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProjectInputGet'
        error:
          title: Error
    Envelope_dict_uuid.UUID__models_library.api_schemas_webserver.projects_ports.ProjectOutputGet__:
      title: Envelope[dict[uuid.UUID, models_library.api_schemas_webserver.projects_ports.ProjectOutputGet]]
      type: object
      properties:
        data:
          title: Data
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ProjectOutputGet'
        error:
          title: Error
    Envelope_list_models_library.api_schemas_long_running_tasks.tasks.TaskGet__:
      title: Envelope[list[models_library.api_schemas_long_running_tasks.tasks.TaskGet]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/TaskGet'
        error:
          title: Error
    Envelope_list_models_library.api_schemas_storage.FileMetaDataGet__:
      title: Envelope[list[models_library.api_schemas_storage.FileMetaDataGet]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/FileMetaDataGet'
        error:
          title: Error
    Envelope_list_models_library.api_schemas_webserver.catalog.DEVServiceGet__:
      title: Envelope[list[models_library.api_schemas_webserver.catalog.DEVServiceGet]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/DEVServiceGet'
        error:
          title: Error
    Envelope_list_models_library.api_schemas_webserver.catalog.ServiceGet__:
      title: Envelope[list[models_library.api_schemas_webserver.catalog.ServiceGet]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/models_library__api_schemas_webserver__catalog__ServiceGet'
        error:
          title: Error
    Envelope_list_models_library.api_schemas_webserver.catalog.ServiceInputGet__:
      title: Envelope[list[models_library.api_schemas_webserver.catalog.ServiceInputGet]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/ServiceInputGet'
        error:
          title: Error
    Envelope_list_models_library.api_schemas_webserver.catalog.ServiceOutputGet__:
      title: Envelope[list[models_library.api_schemas_webserver.catalog.ServiceOutputGet]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/ServiceOutputGet'
        error:
          title: Error
    Envelope_list_models_library.api_schemas_webserver.clusters.ClusterGet__:
      title: Envelope[list[models_library.api_schemas_webserver.clusters.ClusterGet]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/ClusterGet'
        error:
          title: Error
    Envelope_list_models_library.api_schemas_webserver.groups.GroupUserGet__:
      title: Envelope[list[models_library.api_schemas_webserver.groups.GroupUserGet]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/GroupUserGet'
        error:
          title: Error
    Envelope_list_models_library.api_schemas_webserver.resource_usage.PricingPlanAdminGet__:
      title: Envelope[list[models_library.api_schemas_webserver.resource_usage.PricingPlanAdminGet]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/PricingPlanAdminGet'
        error:
          title: Error
    Envelope_list_models_library.api_schemas_webserver.resource_usage.PricingPlanToServiceAdminGet__:
      title: Envelope[list[models_library.api_schemas_webserver.resource_usage.PricingPlanToServiceAdminGet]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/PricingPlanToServiceAdminGet'
        error:
          title: Error
    Envelope_list_models_library.api_schemas_webserver.resource_usage.ServiceRunGet__:
      title: Envelope[list[models_library.api_schemas_webserver.resource_usage.ServiceRunGet]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/ServiceRunGet'
        error:
          title: Error
    Envelope_list_models_library.api_schemas_webserver.wallets.PaymentMethodGet__:
      title: Envelope[list[models_library.api_schemas_webserver.wallets.PaymentMethodGet]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethodGet'
        error:
          title: Error
    Envelope_list_models_library.api_schemas_webserver.wallets.WalletGetWithAvailableCredits__:
      title: Envelope[list[models_library.api_schemas_webserver.wallets.WalletGetWithAvailableCredits]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/WalletGetWithAvailableCredits'
        error:
          title: Error
    Envelope_list_models_library.projects_comments.ProjectsCommentsAPI__:
      title: Envelope[list[models_library.projects_comments.ProjectsCommentsAPI]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/ProjectsCommentsAPI'
        error:
          title: Error
    Envelope_list_models_library.services_types.ServicePortKey__:
      title: Envelope[list[models_library.services_types.ServicePortKey]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            pattern: ^[-_a-zA-Z0-9]+$
            type: string
        error:
          title: Error
    Envelope_list_simcore_service_webserver.announcements._models.Announcement__:
      title: Envelope[list[simcore_service_webserver.announcements._models.Announcement]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/Announcement'
        error:
          title: Error
    Envelope_list_simcore_service_webserver.projects._nodes_handlers._ProjectNodePreview__:
      title: Envelope[list[simcore_service_webserver.projects._nodes_handlers._ProjectNodePreview]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/_ProjectNodePreview'
        error:
          title: Error
    Envelope_list_simcore_service_webserver.projects._ports_handlers.ProjectMetadataPortGet__:
      title: Envelope[list[simcore_service_webserver.projects._ports_handlers.ProjectMetadataPortGet]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/ProjectMetadataPortGet'
        error:
          title: Error
    Envelope_list_simcore_service_webserver.scicrunch.models.ResourceHit__:
      title: Envelope[list[simcore_service_webserver.scicrunch.models.ResourceHit]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/ResourceHit'
        error:
          title: Error
    Envelope_list_simcore_service_webserver.storage.schemas.DatasetMetaData__:
      title: Envelope[list[simcore_service_webserver.storage.schemas.DatasetMetaData]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/DatasetMetaData'
        error:
          title: Error
    Envelope_list_simcore_service_webserver.studies_dispatcher._rest_handlers.ServiceGet__:
      title: Envelope[list[simcore_service_webserver.studies_dispatcher._rest_handlers.ServiceGet]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/simcore_service_webserver__studies_dispatcher___rest_handlers__ServiceGet'
        error:
          title: Error
    Envelope_list_simcore_service_webserver.studies_dispatcher._rest_handlers.Viewer__:
      title: Envelope[list[simcore_service_webserver.studies_dispatcher._rest_handlers.Viewer]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/Viewer'
        error:
          title: Error
    Envelope_list_simcore_service_webserver.tags._handlers.TagGet__:
      title: Envelope[list[simcore_service_webserver.tags._handlers.TagGet]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/TagGet'
        error:
          title: Error
    Envelope_list_simcore_service_webserver.users._notifications.UserNotification__:
      title: Envelope[list[simcore_service_webserver.users._notifications.UserNotification]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/UserNotification'
        error:
          title: Error
    Envelope_list_simcore_service_webserver.users._schemas.UserProfile__:
      title: Envelope[list[simcore_service_webserver.users._schemas.UserProfile]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/UserProfile'
        error:
          title: Error
    Envelope_list_simcore_service_webserver.users.schemas.PermissionGet__:
      title: Envelope[list[simcore_service_webserver.users.schemas.PermissionGet]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/PermissionGet'
        error:
          title: Error
    Envelope_list_simcore_service_webserver.users.schemas.ThirdPartyToken__:
      title: Envelope[list[simcore_service_webserver.users.schemas.ThirdPartyToken]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/ThirdPartyToken'
        error:
          title: Error
    Envelope_list_simcore_service_webserver.wallets._groups_api.WalletGroupGet__:
      title: Envelope[list[simcore_service_webserver.wallets._groups_api.WalletGroupGet]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/WalletGroupGet'
        error:
          title: Error
    Envelope_str_:
      title: Envelope[str]
      type: object
      properties:
        data:
          title: Data
          type: string
        error:
          title: Error
    Error:
      title: Error
      type: object
      properties:
        logs:
          title: Logs
          type: array
          items:
            $ref: '#/components/schemas/Log'
          description: log messages
        errors:
          title: Errors
          type: array
          items:
            $ref: '#/components/schemas/ErrorItem'
          description: errors metadata
        status:
          title: Status
          type: integer
          description: HTTP error code
    ErrorItem:
      title: ErrorItem
      required:
      - code
      - message
      type: object
      properties:
        code:
          title: Code
          type: string
          description: Typically the name of the exception that produced it otherwise
            some known error code
        message:
          title: Message
          type: string
          description: Error message specific to this item
        resource:
          title: Resource
          type: string
          description: API resource affected by this error
        field:
          title: Field
          type: string
          description: Specific field within the resource
    ExtractedResults:
      title: ExtractedResults
      required:
      - progress
      - labels
      - values
      type: object
      properties:
        progress:
          title: Progress
          type: object
          description: Progress in each computational node
        labels:
          title: Labels
          type: object
          description: Maps captured node with a label
        values:
          title: Values
          type: object
          description: Captured outputs per node
      example:
        progress:
          4c08265a-427b-4ac3-9eab-1d11c822ada4: 0
          e33c6880-1b1d-4419-82d7-270197738aa9: 100
        labels:
          0f1e38c9-dcb7-443c-a745-91b97ac28ccc: Integer iterator
          2d0ce8b9-c9c3-43ce-ad2f-ad493898de37: Probe Sensor - Integer
          445b44d1-59b3-425c-ac48-7c13e0f2ea5b: Probe Sensor - Integer_2
          d76fca06-f050-4790-88a8-0aac10c87b39: Boolean Parameter
        values:
          0f1e38c9-dcb7-443c-a745-91b97ac28ccc:
            out_1: 1
            out_2:
            - 3
            - 4
          2d0ce8b9-c9c3-43ce-ad2f-ad493898de37:
            in_1: 7
          445b44d1-59b3-425c-ac48-7c13e0f2ea5b:
            in_1: 1
          d76fca06-f050-4790-88a8-0aac10c87b39:
            out_1: true
    FileMetaData:
      title: FileMetaData
      type: object
      properties:
        file_uuid:
          title: File Uuid
          type: string
        location_id:
          title: Location Id
          type: string
        project_name:
          title: Project Name
          type: string
        node_name:
          title: Node Name
          type: string
        file_name:
          title: File Name
          type: string
        file_id:
          title: File Id
          type: string
        created_at:
          title: Created At
          type: string
        last_modified:
          title: Last Modified
          type: string
        file_size:
          title: File Size
          type: integer
        entity_tag:
          title: Entity Tag
          type: string
        is_directory:
          title: Is Directory
          type: boolean
      example:
        file_uuid: simcore-testing/105/1000/3
        location_id: '0'
        project_name: futurology
        node_name: alpha
        file_name: example.txt
        file_id: N:package:e263da07-2d89-45a6-8b0f-61061b913873
        created_at: '2019-06-19T12:29:03.308611Z'
        last_modified: '2019-06-19T12:29:03.78852Z'
        file_size: 73
        entity_tag: a87ff679a2f3e71d9181a67b7542122c
        is_directory: false
    FileMetaDataGet:
      title: FileMetaDataGet
      required:
      - file_uuid
      - location_id
      - file_name
      - file_id
      - created_at
      - last_modified
      type: object
      properties:
        file_uuid:
          title: File Uuid
          type: string
          description: NOT a unique ID, like (api|uuid)/uuid/file_name or DATCORE
            folder structure
        location_id:
          title: Location Id
          type: integer
          description: Storage location
        project_name:
          title: Project Name
          type: string
          description: optional project name, used by frontend to display path
        node_name:
          title: Node Name
          type: string
          description: optional node name, used by frontend to display path
        file_name:
          title: File Name
          type: string
          description: Display name for a file
        file_id:
          title: File Id
          anyOf:
          - pattern: ^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$
            type: string
          - pattern: ^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$
            type: string
          description: THIS IS the unique ID for the file. either (api|project_id)/node_id/file_name.ext
            for S3 and N:package:UUID for datcore
        created_at:
          title: Created At
          type: string
          format: date-time
        last_modified:
          title: Last Modified
          type: string
          format: date-time
        file_size:
          title: File Size
          anyOf:
          - type: integer
          - type: integer
          description: File size in bytes (-1 means invalid)
          default: -1
        entity_tag:
          title: Entity Tag
          type: string
          description: Entity tag (or ETag), represents a specific version of the
            file, None if invalid upload or datcore
        is_soft_link:
          title: Is Soft Link
          type: boolean
          description: If true, this file is a soft link.i.e. is another entry with
            the same object_name
          default: false
        is_directory:
          title: Is Directory
          type: boolean
          description: if True this is a directory
          default: false
        sha256_checksum:
          title: Sha256 Checksum
          pattern: ^[a-fA-F0-9]{64}$
          type: string
          description: 'SHA256 message digest of the file content. Main purpose: cheap
            lookup.'
      additionalProperties: false
    FileUploadCompleteFutureResponse:
      title: FileUploadCompleteFutureResponse
      required:
      - state
      type: object
      properties:
        state:
          $ref: '#/components/schemas/FileUploadCompleteState'
        e_tag:
          title: E Tag
          type: string
    FileUploadCompleteLinks:
      title: FileUploadCompleteLinks
      required:
      - state
      type: object
      properties:
        state:
          title: State
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
    FileUploadCompleteResponse:
      title: FileUploadCompleteResponse
      required:
      - links
      type: object
      properties:
        links:
          $ref: '#/components/schemas/FileUploadCompleteLinks'
    FileUploadCompleteState:
      title: FileUploadCompleteState
      enum:
      - ok
      - nok
      description: An enumeration.
    FileUploadCompletionBody:
      title: FileUploadCompletionBody
      required:
      - parts
      type: object
      properties:
        parts:
          title: Parts
          type: array
          items:
            $ref: '#/components/schemas/UploadedPart'
    FileUploadLinks:
      title: FileUploadLinks
      required:
      - abort_upload
      - complete_upload
      type: object
      properties:
        abort_upload:
          title: Abort Upload
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        complete_upload:
          title: Complete Upload
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
    FileUploadSchema:
      title: FileUploadSchema
      required:
      - chunk_size
      - urls
      - links
      type: object
      properties:
        chunk_size:
          title: Chunk Size
          type: integer
        urls:
          title: Urls
          type: array
          items:
            maxLength: 65536
            minLength: 1
            type: string
            format: uri
        links:
          $ref: '#/components/schemas/FileUploadLinks'
    GenerateInvitation:
      title: GenerateInvitation
      required:
      - guest
      type: object
      properties:
        guest:
          title: Guest
          type: string
          format: email
        trialAccountDays:
          title: Trialaccountdays
          exclusiveMinimum: true
          type: integer
          minimum: 0
        extraCreditsInUsd:
          title: Extracreditsinusd
          exclusiveMaximum: true
          minimum: 0
          type: integer
          maximum: 500
    GetCreditPrice:
      title: GetCreditPrice
      required:
      - productName
      - usdPerCredit
      - minPaymentAmountUsd
      type: object
      properties:
        productName:
          title: Productname
          type: string
        usdPerCredit:
          title: Usdpercredit
          minimum: 0.0
          type: number
          description: Price of a credit in USD. If None, then this product's price
            is UNDEFINED
        minPaymentAmountUsd:
          title: Minpaymentamountusd
          minimum: 0
          type: integer
          description: Minimum amount (included) in USD that can be paid for this
            productCan be None if this product's price is UNDEFINED
    GetProduct:
      title: GetProduct
      required:
      - name
      - displayName
      - loginSettings
      - isPaymentEnabled
      type: object
      properties:
        name:
          title: Name
          type: string
        displayName:
          title: Displayname
          type: string
        shortName:
          title: Shortname
          type: string
          description: Short display name for SMS
        vendor:
          title: Vendor
          type: object
          description: vendor attributes
        issues:
          title: Issues
          type: array
          items:
            type: object
          description: Reference to issues tracker
        manuals:
          title: Manuals
          type: array
          items:
            type: object
          description: List of manuals
        support:
          title: Support
          type: array
          items:
            type: object
          description: List of support resources
        loginSettings:
          title: Loginsettings
          type: object
        maxOpenStudiesPerUser:
          title: Maxopenstudiesperuser
          exclusiveMinimum: true
          type: integer
          minimum: 0
        isPaymentEnabled:
          title: Ispaymentenabled
          type: boolean
        creditsPerUsd:
          title: Creditsperusd
          minimum: 0.0
          type: number
        templates:
          title: Templates
          type: array
          items:
            $ref: '#/components/schemas/GetProductTemplate'
          description: List of templates available to this product for communications
            (e.g. emails, sms, etc)
    GetProductTemplate:
      title: GetProductTemplate
      required:
      - id
      - content
      type: object
      properties:
        id:
          title: Id
          maxLength: 100
          minLength: 1
          type: string
        content:
          title: Content
          type: string
    GetProjectInactivityResponse:
      title: GetProjectInactivityResponse
      required:
      - is_inactive
      type: object
      properties:
        is_inactive:
          title: Is Inactive
          type: boolean
    GetWalletAutoRecharge:
      title: GetWalletAutoRecharge
      required:
      - paymentMethodId
      - minBalanceInCredits
      - topUpAmountInUsd
      - monthlyLimitInUsd
      type: object
      properties:
        enabled:
          title: Enabled
          type: boolean
          description: Enables/disables auto-recharge trigger in this wallet
          default: false
        paymentMethodId:
          title: Paymentmethodid
          maxLength: 100
          minLength: 1
          type: string
          description: Payment method in the wallet used to perform the auto-recharge
            payments or None if still undefined
        minBalanceInCredits:
          title: Minbalanceincredits
          minimum: 0.0
          type: number
          description: Minimum balance in credits that triggers an auto-recharge [Read
            only]
        topUpAmountInUsd:
          title: Topupamountinusd
          minimum: 0.0
          type: number
          description: Amount in USD payed when auto-recharge condition is satisfied
        monthlyLimitInUsd:
          title: Monthlylimitinusd
          minimum: 0.0
          type: number
          description: Maximum amount in USD charged within a natural month.None indicates
            no limit.
    GroupAccessRights:
      title: GroupAccessRights
      required:
      - read
      - write
      - delete
      type: object
      properties:
        read:
          title: Read
          type: boolean
        write:
          title: Write
          type: boolean
        delete:
          title: Delete
          type: boolean
      description: defines acesss rights for the user
    GroupUserGet:
      title: GroupUserGet
      required:
      - accessRights
      type: object
      properties:
        id:
          title: Id
          type: string
          description: the user id
        login:
          title: Login
          type: string
          description: the user login email
          format: email
        first_name:
          title: First Name
          type: string
          description: the user first name
        last_name:
          title: Last Name
          type: string
          description: the user last name
        gravatar_id:
          title: Gravatar Id
          type: string
          description: the user gravatar id hash
        gid:
          title: Gid
          type: string
          description: the user primary gid
        accessRights:
          $ref: '#/components/schemas/GroupAccessRights'
      example:
        id: '1'
        login: mr.smith@matrix.com
        first_name: Mr
        last_name: Smith
        gravatar_id: a1af5c6ecc38e81f29695f01d6ceb540
        gid: '3'
        accessRights:
          read: true
          write: false
          delete: false
    HardwareInfo:
      title: HardwareInfo
      required:
      - aws_ec2_instances
      type: object
      properties:
        aws_ec2_instances:
          title: Aws Ec2 Instances
          type: array
          items:
            type: string
    HealthInfoDict:
      title: HealthInfoDict
      required:
      - name
      - version
      - api_version
      type: object
      properties:
        name:
          title: Name
          type: string
        version:
          title: Version
          type: string
        api_version:
          title: Api Version
          type: string
    ImageResources:
      title: ImageResources
      required:
      - image
      - resources
      type: object
      properties:
        image:
          title: Image
          pattern: ^(?:([a-z0-9-]+(?:\.[a-z0-9-]+)+(?::\d+)?|[a-z0-9-]+:\d+)/)?((?:[a-z0-9][a-z0-9_.-]*/)*[a-z0-9-_]+[a-z0-9])(?::([\w][\w.-]{0,127}))?(\@sha256:[a-fA-F0-9]{32,64})?$
          type: string
          description: Used by the frontend to provide a context for the users.Services
            with a docker-compose spec will have multiple entries.Using the `image:version`
            instead of the docker-compose spec is more helpful for the end user.
        resources:
          title: Resources
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ResourceValue'
        boot_modes:
          type: array
          items:
            $ref: '#/components/schemas/BootMode'
          description: describe how a service shall be booted, using CPU, MPI, openMP
            or GPU
          default:
          - CPU
      example:
        image: simcore/service/dynamic/pretty-intense:1.0.0
        resources:
          CPU:
            limit: 4
            reservation: 0.1
          RAM:
            limit: 103079215104
            reservation: 536870912
          VRAM:
            limit: 1
            reservation: 1
          AIRAM:
            limit: 1
            reservation: 1
          ANY_resource:
            limit: some_value
            reservation: some_value
    InvitationCheck:
      title: InvitationCheck
      required:
      - invitation
      type: object
      properties:
        invitation:
          title: Invitation
          type: string
          description: Invitation code
      additionalProperties: false
    InvitationGenerated:
      title: InvitationGenerated
      required:
      - productName
      - issuer
      - guest
      - created
      - invitationLink
      type: object
      properties:
        productName:
          title: Productname
          type: string
        issuer:
          title: Issuer
          type: string
          format: email
        guest:
          title: Guest
          type: string
          format: email
        trialAccountDays:
          title: Trialaccountdays
          exclusiveMinimum: true
          type: integer
          minimum: 0
        extraCreditsInUsd:
          title: Extracreditsinusd
          exclusiveMinimum: true
          type: integer
          minimum: 0
        created:
          title: Created
          type: string
          format: date-time
        invitationLink:
          title: Invitationlink
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
    InvitationInfo:
      title: InvitationInfo
      type: object
      properties:
        email:
          title: Email
          type: string
          description: Email associated to invitation or None
          format: email
      additionalProperties: false
    JupyterHubTokenAuthentication:
      title: JupyterHubTokenAuthentication
      required:
      - api_token
      type: object
      properties:
        type:
          title: Type
          enum:
          - jupyterhub
          type: string
          default: jupyterhub
        api_token:
          title: Api Token
          type: string
      additionalProperties: false
    KerberosAuthentication:
      title: KerberosAuthentication
      type: object
      properties:
        type:
          title: Type
          enum:
          - kerberos
          type: string
          default: kerberos
      additionalProperties: false
    Limits:
      title: Limits
      required:
      - cpus
      - mem
      type: object
      properties:
        cpus:
          title: Cpus
          exclusiveMinimum: true
          type: number
          minimum: 0.0
        mem:
          title: Mem
          exclusiveMinimum: true
          type: number
          minimum: 0.0
    LinkType:
      title: LinkType
      enum:
      - PRESIGNED
      - S3
      type: string
      description: An enumeration.
    Log:
      title: Log
      required:
      - message
      type: object
      properties:
        level:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          description: log level
          default: INFO
        message:
          title: Message
          type: string
          description: log message. If logger is USER, then it MUST be human readable
        logger:
          title: Logger
          type: string
          description: name of the logger receiving this message
      example:
        message: Hi there, Mr user
        level: INFO
        logger: user-logger
    LogLevel:
      title: LogLevel
      enum:
      - DEBUG
      - INFO
      - WARNING
      - ERROR
      type: string
      description: An enumeration.
    LoginBody:
      title: LoginBody
      required:
      - email
      - password
      type: object
      properties:
        email:
          title: Email
          type: string
          format: email
        password:
          title: Password
          type: string
          format: password
          writeOnly: true
      additionalProperties: false
    LoginNextPage:
      title: LoginNextPage
      required:
      - name
      type: object
      properties:
        name:
          title: Name
          type: string
          description: Code name to the front-end page. Ideally a PageStr
        parameters:
          $ref: '#/components/schemas/CodePageParams'
      description: 'This is the body of a 2XX response to pass the front-end

        what kind of page shall be display next and some information about it


        An analogous structure is used in the redirects (see create_redirect_response)
        but

        using a path+query in the fragment of the URL'
    LoginTwoFactorAuthBody:
      title: LoginTwoFactorAuthBody
      required:
      - email
      - code
      type: object
      properties:
        email:
          title: Email
          type: string
          format: email
        code:
          title: Code
          type: string
          format: password
          writeOnly: true
      additionalProperties: false
    LogoutBody:
      title: LogoutBody
      type: object
      properties:
        client_session_id:
          title: Client Session Id
          type: string
          example: 5ac57685-c40f-448f-8711-70be1936fd63
      additionalProperties: false
    Marker:
      title: Marker
      required:
      - color
      type: object
      properties:
        color:
          title: Color
          type: string
          format: color
      additionalProperties: false
    NoAuthentication:
      title: NoAuthentication
      type: object
      properties:
        type:
          title: Type
          enum:
          - none
          type: string
          default: none
      additionalProperties: false
    Node:
      title: Node
      required:
      - key
      - version
      - label
      type: object
      properties:
        key:
          title: Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
          description: distinctive name for the node based on the docker registry
            path
        version:
          title: Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
          description: semantic version number of the node
        label:
          title: Label
          type: string
          description: The short name of the node
        progress:
          title: Progress
          maximum: 100.0
          minimum: 0.0
          type: number
          description: the node progress value (deprecated in DB, still used for API
            only)
          deprecated: true
        thumbnail:
          title: Thumbnail
          maxLength: 2083
          minLength: 0
          type: string
          description: url of the latest screenshot of the node
          format: uri
        runHash:
          title: Runhash
          type: string
          description: the hex digest of the resolved inputs +outputs hash at the
            time when the last outputs were generated
          nullable: true
        inputs:
          title: Inputs
          type: object
          description: values of input properties
        inputsRequired:
          title: Inputsrequired
          type: array
          items:
            pattern: ^[-_a-zA-Z0-9]+$
            type: string
          description: Defines inputs that are required in order to run the service
        inputsUnits:
          title: Inputsunits
          type: object
          description: Overrides default unit (if any) defined in the service for
            each port
        inputAccess:
          type: object
          description: map with key - access level pairs
        inputNodes:
          title: Inputnodes
          type: array
          items:
            type: string
            format: uuid
          description: node IDs of where the node is connected to
        outputs:
          title: Outputs
          type: object
          description: values of output properties
        outputNode:
          title: Outputnode
          type: boolean
          deprecated: true
        outputNodes:
          title: Outputnodes
          type: array
          items:
            type: string
            format: uuid
          description: Used in group-nodes. Node IDs of those connected to the output
        parent:
          title: Parent
          type: string
          description: Parent's (group-nodes') node ID s. Used to group
          format: uuid
          nullable: true
        position:
          title: Position
          allOf:
          - $ref: '#/components/schemas/Position'
          description: Use projects_ui.WorkbenchUI.position instead
          deprecated: true
        state:
          title: State
          allOf:
          - $ref: '#/components/schemas/NodeState'
          description: The node's state object
        bootOptions:
          title: Bootoptions
          type: object
          description: Some services provide alternative parameters to be injected
            at boot time. The user selection should be stored here, and it will overwrite
            the services's defaults.
      additionalProperties: false
    NodeCreate:
      title: NodeCreate
      required:
      - service_key
      - service_version
      type: object
      properties:
        service_key:
          title: Service Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
        service_version:
          title: Service Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
        service_id:
          title: Service Id
          type: string
    NodeCreated:
      title: NodeCreated
      required:
      - nodeId
      type: object
      properties:
        nodeId:
          title: Nodeid
          type: string
          format: uuid
    NodeGet:
      title: NodeGet
      required:
      - publishedPort
      - serviceUuid
      - serviceKey
      - serviceVersion
      - serviceHost
      - servicePort
      - serviceState
      - userId
      type: object
      properties:
        publishedPort:
          title: Publishedport
          exclusiveMaximum: true
          exclusiveMinimum: true
          type: integer
          description: The ports where the service provides its interface
          maximum: 65535
          minimum: 0
        entryPoint:
          title: Entrypoint
          type: string
          description: The entry point where the service provides its interface if
            specified
        serviceUuid:
          title: Serviceuuid
          type: string
          description: The UUID attached to this service
        serviceKey:
          title: Servicekey
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
          description: distinctive name for the node based on the docker registry
            path
          example:
          - simcore/services/comp/itis/sleeper
          - simcore/services/dynamic/3dviewer
        serviceVersion:
          title: Serviceversion
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
          description: semantic version number
          example:
          - 1.0.0
          - 0.0.1
        serviceHost:
          title: Servicehost
          type: string
          description: service host name within the network
        servicePort:
          title: Serviceport
          exclusiveMaximum: true
          exclusiveMinimum: true
          type: integer
          description: port to access the service within the network
          maximum: 65535
          minimum: 0
        serviceBasepath:
          title: Servicebasepath
          type: string
          description: different base path where current service is mounted otherwise
            defaults to root
          default: ''
        serviceState:
          allOf:
          - $ref: '#/components/schemas/ServiceState'
          description: 'the service state * ''pending'' - The service is waiting for
            resources to start * ''pulling'' - The service is being pulled from the
            registry * ''starting'' - The service is starting * ''running'' - The
            service is running * ''complete'' - The service completed * ''failed''
            - The service failed to start

            '
        serviceMessage:
          title: Servicemessage
          type: string
          description: the service message
        userId:
          title: Userid
          type: string
          description: the user that started the service
      example:
        published_port: 30000
        entrypoint: /the/entry/point/is/here
        service_uuid: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        service_key: simcore/services/comp/itis/sleeper
        service_version: 1.2.3
        service_host: jupyter_E1O2E-LAH
        service_port: 8081
        service_basepath: /x/E1O2E-LAH
        service_state: pending
        service_message: no suitable node (insufficient resources on 1 node)
        user_id: 123
    NodeGetIdle:
      title: NodeGetIdle
      required:
      - serviceState
      - serviceUuid
      type: object
      properties:
        serviceState:
          title: Servicestate
          enum:
          - idle
          type: string
        serviceUuid:
          title: Serviceuuid
          type: string
          format: uuid
      example:
        service_uuid: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        service_state: idle
    NodeGetUnknown:
      title: NodeGetUnknown
      required:
      - serviceState
      - serviceUuid
      type: object
      properties:
        serviceState:
          title: Servicestate
          enum:
          - unknown
          type: string
        serviceUuid:
          title: Serviceuuid
          type: string
          format: uuid
      example:
        service_uuid: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        service_state: unknown
    NodeOutputs:
      title: NodeOutputs
      required:
      - outputs
      type: object
      properties:
        outputs:
          title: Outputs
          type: object
    NodePatch:
      title: NodePatch
      type: object
      properties:
        version:
          title: Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
        label:
          title: Label
          type: string
        inputs:
          title: Inputs
          type: object
        inputsRequired:
          title: Inputsrequired
          type: array
          items:
            pattern: ^[-_a-zA-Z0-9]+$
            type: string
        inputNodes:
          title: Inputnodes
          type: array
          items:
            type: string
            format: uuid
        progress:
          title: Progress
          maximum: 100.0
          minimum: 0.0
          type: number
        bootOptions:
          title: Bootoptions
          type: object
    NodeRetrieve:
      title: NodeRetrieve
      type: object
      properties:
        port_keys:
          title: Port Keys
          type: array
          items:
            pattern: ^[-_a-zA-Z0-9]+$
            type: string
          default: []
    NodeRetrieved:
      title: NodeRetrieved
      required:
      - sizeBytes
      type: object
      properties:
        sizeBytes:
          title: Sizebytes
          type: integer
          description: The amount of data transferred by the retrieve call
    NodeScreenshot:
      title: NodeScreenshot
      required:
      - thumbnail_url
      - file_url
      type: object
      properties:
        thumbnail_url:
          title: Thumbnail Url
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
        file_url:
          title: File Url
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
        mimetype:
          title: Mimetype
          type: string
          description: File's media type or None if unknown. SEE https://www.iana.org/assignments/media-types/media-types.xhtml
          example: image/jpeg
    NodeState:
      title: NodeState
      type: object
      properties:
        modified:
          title: Modified
          type: boolean
          description: true if the node's outputs need to be re-computed
          default: true
        dependencies:
          title: Dependencies
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
          description: contains the node inputs dependencies if they need to be computed
            first
        currentStatus:
          allOf:
          - $ref: '#/components/schemas/RunningState'
          description: the node's current state
          default: NOT_STARTED
        progress:
          title: Progress
          maximum: 1.0
          minimum: 0.0
          type: number
          description: current progress of the task if available (None if not started
            or not a computational task)
          default: 0
      additionalProperties: false
    NotificationCategory:
      title: NotificationCategory
      enum:
      - NEW_ORGANIZATION
      - STUDY_SHARED
      - TEMPLATE_SHARED
      - ANNOTATION_NOTE
      - WALLET_SHARED
      type: string
      description: An enumeration.
    Owner:
      title: Owner
      required:
      - user_id
      - first_name
      - last_name
      type: object
      properties:
        user_id:
          title: User Id
          type: integer
          description: Owner's user id
        first_name:
          title: First Name
          maxLength: 255
          type: string
          description: Owner's first name
        last_name:
          title: Last Name
          maxLength: 255
          type: string
          description: Owner's last name
      additionalProperties: false
    PageLinks:
      title: PageLinks
      required:
      - self
      - first
      - last
      type: object
      properties:
        self:
          title: Self
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        first:
          title: First
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        prev:
          title: Prev
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        next:
          title: Next
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        last:
          title: Last
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
      additionalProperties: false
    PageMetaInfoLimitOffset:
      title: PageMetaInfoLimitOffset
      required:
      - total
      - count
      type: object
      properties:
        limit:
          title: Limit
          exclusiveMinimum: true
          type: integer
          default: 20
          minimum: 0
        total:
          title: Total
          minimum: 0
          type: integer
        offset:
          title: Offset
          minimum: 0
          type: integer
          default: 0
        count:
          title: Count
          minimum: 0
          type: integer
      additionalProperties: false
    Page_CheckpointApiModel_:
      title: Page[CheckpointApiModel]
      required:
      - _meta
      - _links
      - data
      type: object
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/CheckpointApiModel'
      additionalProperties: false
      description: Paginated response model of ItemTs
    Page_PaymentTransaction_:
      title: Page[PaymentTransaction]
      required:
      - _meta
      - _links
      - data
      type: object
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransaction'
      additionalProperties: false
      description: Paginated response model of ItemTs
    Page_ProjectIterationItem_:
      title: Page[ProjectIterationItem]
      required:
      - _meta
      - _links
      - data
      type: object
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/ProjectIterationItem'
      additionalProperties: false
      description: Paginated response model of ItemTs
    Page_ProjectIterationResultItem_:
      title: Page[ProjectIterationResultItem]
      required:
      - _meta
      - _links
      - data
      type: object
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/ProjectIterationResultItem'
      additionalProperties: false
      description: Paginated response model of ItemTs
    Page_ProjectListItem_:
      title: Page[ProjectListItem]
      required:
      - _meta
      - _links
      - data
      type: object
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/ProjectListItem'
      additionalProperties: false
      description: Paginated response model of ItemTs
    Page_RepoApiModel_:
      title: Page[RepoApiModel]
      required:
      - _meta
      - _links
      - data
      type: object
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/RepoApiModel'
      additionalProperties: false
      description: Paginated response model of ItemTs
    ParentMetaProjectRef:
      title: ParentMetaProjectRef
      required:
      - project_id
      - ref_id
      type: object
      properties:
        project_id:
          title: Project Id
          type: string
          format: uuid
        ref_id:
          title: Ref Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
    PatchRequestBody:
      title: PatchRequestBody
      type: object
      properties:
        value:
          title: Value
    PaymentMethodGet:
      title: PaymentMethodGet
      required:
      - idr
      - walletId
      - created
      type: object
      properties:
        idr:
          title: Idr
          maxLength: 100
          minLength: 1
          type: string
        walletId:
          title: Walletid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        cardHolderName:
          title: Cardholdername
          type: string
        cardNumberMasked:
          title: Cardnumbermasked
          type: string
        cardType:
          title: Cardtype
          type: string
        expirationMonth:
          title: Expirationmonth
          type: integer
        expirationYear:
          title: Expirationyear
          type: integer
        created:
          title: Created
          type: string
          format: date-time
        autoRecharge:
          title: Autorecharge
          type: boolean
          description: If true, this payment-method is used for auto-recharge
          default: false
    PaymentMethodInitiated:
      title: PaymentMethodInitiated
      required:
      - walletId
      - paymentMethodId
      - paymentMethodFormUrl
      type: object
      properties:
        walletId:
          title: Walletid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        paymentMethodId:
          title: Paymentmethodid
          maxLength: 100
          minLength: 1
          type: string
        paymentMethodFormUrl:
          title: Paymentmethodformurl
          maxLength: 2083
          minLength: 1
          type: string
          description: Link to external site that holds the payment submission form
          format: uri
    PaymentTransaction:
      title: PaymentTransaction
      required:
      - paymentId
      - priceDollars
      - walletId
      - osparcCredits
      - createdAt
      - completedStatus
      type: object
      properties:
        paymentId:
          title: Paymentid
          maxLength: 100
          minLength: 1
          type: string
        priceDollars:
          title: Pricedollars
          type: number
        walletId:
          title: Walletid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        osparcCredits:
          title: Osparccredits
          type: number
        comment:
          title: Comment
          type: string
        createdAt:
          title: Createdat
          type: string
          format: date-time
        completedAt:
          title: Completedat
          type: string
          format: date-time
        completedStatus:
          title: Completedstatus
          enum:
          - PENDING
          - SUCCESS
          - FAILED
          - CANCELED
          type: string
        stateMessage:
          title: Statemessage
          type: string
        invoiceUrl:
          title: Invoiceurl
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
    PermissionGet:
      title: PermissionGet
      required:
      - name
      - allowed
      type: object
      properties:
        name:
          title: Name
          type: string
        allowed:
          title: Allowed
          type: boolean
    PhoneConfirmationBody:
      title: PhoneConfirmationBody
      required:
      - email
      - phone
      - code
      type: object
      properties:
        email:
          title: Email
          type: string
          format: email
        phone:
          title: Phone
          type: string
          description: Phone number E.164, needed on the deployments with 2FA
        code:
          title: Code
          type: string
          format: password
          writeOnly: true
      additionalProperties: false
    PortLink:
      title: PortLink
      required:
      - nodeUuid
      - output
      type: object
      properties:
        nodeUuid:
          title: Nodeuuid
          type: string
          description: The node to get the port output from
          format: uuid
        output:
          title: Output
          pattern: ^[-_a-zA-Z0-9]+$
          type: string
          description: The port key in the node given by nodeUuid
      additionalProperties: false
      description: I/O port type to reference to an output port of another node in
        the same project
    Position:
      title: Position
      required:
      - x
      - y
      type: object
      properties:
        x:
          title: X
          type: integer
          description: The x position
          example:
          - '12'
        y:
          title: Y
          type: integer
          description: The y position
          example:
          - '15'
      additionalProperties: false
    PreUserProfile:
      title: PreUserProfile
      required:
      - firstName
      - lastName
      - email
      - address
      - city
      - postalCode
      - country
      type: object
      properties:
        firstName:
          title: Firstname
          type: string
        lastName:
          title: Lastname
          type: string
        email:
          title: Email
          type: string
          format: email
        institution:
          title: Institution
          type: string
          description: company, university, ...
        phone:
          title: Phone
          type: string
        address:
          title: Address
          type: string
        city:
          title: City
          type: string
        state:
          title: State
          type: string
        postalCode:
          title: Postalcode
          type: string
        country:
          title: Country
          type: string
        extras:
          title: Extras
          type: object
          description: Keeps extra information provided in the request form. At most
            MAX_NUM_EXTRAS fields
    Preference:
      title: Preference
      required:
      - defaultValue
      - value
      type: object
      properties:
        defaultValue:
          title: Defaultvalue
          description: used by the frontend
        value:
          title: Value
          description: preference value
    PresignedLink:
      title: PresignedLink
      required:
      - link
      type: object
      properties:
        link:
          title: Link
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
    PricingPlanAdminGet:
      title: PricingPlanAdminGet
      required:
      - pricingPlanId
      - displayName
      - description
      - classification
      - createdAt
      - pricingPlanKey
      - isActive
      type: object
      properties:
        pricingPlanId:
          title: Pricingplanid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        displayName:
          title: Displayname
          type: string
        description:
          title: Description
          type: string
        classification:
          $ref: '#/components/schemas/PricingPlanClassification'
        createdAt:
          title: Createdat
          type: string
          format: date-time
        pricingPlanKey:
          title: Pricingplankey
          type: string
        pricingUnits:
          title: Pricingunits
          type: array
          items:
            $ref: '#/components/schemas/PricingUnitGet'
        isActive:
          title: Isactive
          type: boolean
    PricingPlanClassification:
      title: PricingPlanClassification
      enum:
      - TIER
      type: string
      description: An enumeration.
    PricingPlanToServiceAdminGet:
      title: PricingPlanToServiceAdminGet
      required:
      - pricingPlanId
      - serviceKey
      - serviceVersion
      - created
      type: object
      properties:
        pricingPlanId:
          title: Pricingplanid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        serviceKey:
          title: Servicekey
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
        serviceVersion:
          title: Serviceversion
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
        created:
          title: Created
          type: string
          format: date-time
    PricingUnitAdminGet:
      title: PricingUnitAdminGet
      required:
      - pricingUnitId
      - unitName
      - unitExtraInfo
      - currentCostPerUnit
      - default
      - specificInfo
      type: object
      properties:
        pricingUnitId:
          title: Pricingunitid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        unitName:
          title: Unitname
          type: string
        unitExtraInfo:
          title: Unitextrainfo
          type: object
        currentCostPerUnit:
          title: Currentcostperunit
          type: number
        default:
          title: Default
          type: boolean
        specificInfo:
          $ref: '#/components/schemas/HardwareInfo'
    PricingUnitCostUpdate:
      title: PricingUnitCostUpdate
      required:
      - cost_per_unit
      - comment
      type: object
      properties:
        cost_per_unit:
          title: Cost Per Unit
          type: number
        comment:
          title: Comment
          type: string
    PricingUnitGet:
      title: PricingUnitGet
      required:
      - pricingUnitId
      - unitName
      - unitExtraInfo
      - currentCostPerUnit
      - default
      type: object
      properties:
        pricingUnitId:
          title: Pricingunitid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        unitName:
          title: Unitname
          type: string
        unitExtraInfo:
          title: Unitextrainfo
          type: object
        currentCostPerUnit:
          title: Currentcostperunit
          type: number
        default:
          title: Default
          type: boolean
    ProfileGet:
      title: ProfileGet
      required:
      - id
      - login
      - role
      - preferences
      type: object
      properties:
        id:
          title: Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        first_name:
          title: First Name
          maxLength: 255
          type: string
        last_name:
          title: Last Name
          maxLength: 255
          type: string
        login:
          title: Login
          type: string
          format: email
        role:
          title: Role
          enum:
          - ANONYMOUS
          - GUEST
          - USER
          - TESTER
          - PRODUCT_OWNER
          - ADMIN
          type: string
        groups:
          $ref: '#/components/schemas/AllUsersGroups'
        gravatar_id:
          title: Gravatar Id
          type: string
        expirationDate:
          title: Expirationdate
          type: string
          description: If user has a trial account, it sets the expiration date, otherwise
            None
          format: date
        preferences:
          title: Preferences
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Preference'
    ProfileUpdate:
      title: ProfileUpdate
      type: object
      properties:
        first_name:
          title: First Name
          maxLength: 255
          type: string
        last_name:
          title: Last Name
          maxLength: 255
          type: string
      example:
        first_name: Pedro
        last_name: Crespo
    ProjectCopyOverride:
      title: ProjectCopyOverride
      required:
      - name
      - prjOwner
      type: object
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        thumbnail:
          title: Thumbnail
          maxLength: 2083
          minLength: 0
          type: string
          format: uri
        prjOwner:
          title: Prjowner
          type: string
          format: email
    ProjectCreateNew:
      title: ProjectCreateNew
      required:
      - name
      - workbench
      - accessRights
      type: object
      properties:
        uuid:
          title: Uuid
          type: string
          format: uuid
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        thumbnail:
          title: Thumbnail
          maxLength: 2083
          minLength: 0
          type: string
          format: uri
        workbench:
          title: Workbench
          type: object
        accessRights:
          title: Accessrights
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AccessRights'
        tags:
          title: Tags
          type: array
          items:
            type: integer
        classifiers:
          title: Classifiers
          type: array
          items:
            type: string
        ui:
          $ref: '#/components/schemas/StudyUI'
    ProjectGet:
      title: ProjectGet
      required:
      - uuid
      - name
      - description
      - thumbnail
      - creationDate
      - lastChangeDate
      - workbench
      - prjOwner
      - accessRights
      - tags
      type: object
      properties:
        uuid:
          title: Uuid
          type: string
          format: uuid
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        thumbnail:
          title: Thumbnail
          anyOf:
          - maxLength: 2083
            minLength: 0
            type: string
            format: uri
          - enum:
            - ''
            type: string
        creationDate:
          title: Creationdate
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          type: string
        lastChangeDate:
          title: Lastchangedate
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          type: string
        workbench:
          title: Workbench
          type: object
        prjOwner:
          title: Prjowner
          type: string
          format: email
        accessRights:
          title: Accessrights
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AccessRights'
        tags:
          title: Tags
          type: array
          items:
            type: integer
        classifiers:
          title: Classifiers
          type: array
          items:
            type: string
          default: []
        state:
          $ref: '#/components/schemas/ProjectState'
        ui:
          title: Ui
          anyOf:
          - $ref: '#/components/schemas/EmptyModel'
          - $ref: '#/components/schemas/StudyUI'
        quality:
          title: Quality
          type: object
          default: {}
        dev:
          title: Dev
          type: object
        permalink:
          $ref: '#/components/schemas/ProjectPermalink'
    ProjectInputGet:
      title: ProjectInputGet
      required:
      - key
      - value
      - label
      type: object
      properties:
        key:
          title: Key
          type: string
          description: Project port's unique identifer. Same as the UUID of the associated
            port node
          format: uuid
        value:
          title: Value
          description: Value assigned to this i/o port
        label:
          title: Label
          type: string
    ProjectInputUpdate:
      title: ProjectInputUpdate
      required:
      - key
      - value
      type: object
      properties:
        key:
          title: Key
          type: string
          description: Project port's unique identifer. Same as the UUID of the associated
            port node
          format: uuid
        value:
          title: Value
          description: Value assigned to this i/o port
    ProjectIterationItem:
      title: ProjectIterationItem
      required:
      - name
      - parent
      - iteration_index
      - workcopy_project_id
      - workcopy_project_url
      type: object
      properties:
        name:
          title: Name
          type: string
          description: Iteration's resource API name
        parent:
          title: Parent
          allOf:
          - $ref: '#/components/schemas/ParentMetaProjectRef'
          description: Reference to the the meta-project that created this iteration
        iteration_index:
          title: Iteration Index
          exclusiveMinimum: true
          type: integer
          minimum: 0
        workcopy_project_id:
          title: Workcopy Project Id
          type: string
          description: ID to this iteration's working copy.A working copy is a real
            project where this iteration is run
          format: uuid
        workcopy_project_url:
          title: Workcopy Project Url
          maxLength: 2083
          minLength: 1
          type: string
          description: reference to a working copy project
          format: uri
    ProjectIterationResultItem:
      title: ProjectIterationResultItem
      required:
      - name
      - parent
      - iteration_index
      - workcopy_project_id
      - workcopy_project_url
      - results
      type: object
      properties:
        name:
          title: Name
          type: string
          description: Iteration's resource API name
        parent:
          title: Parent
          allOf:
          - $ref: '#/components/schemas/ParentMetaProjectRef'
          description: Reference to the the meta-project that created this iteration
        iteration_index:
          title: Iteration Index
          exclusiveMinimum: true
          type: integer
          minimum: 0
        workcopy_project_id:
          title: Workcopy Project Id
          type: string
          description: ID to this iteration's working copy.A working copy is a real
            project where this iteration is run
          format: uuid
        workcopy_project_url:
          title: Workcopy Project Url
          maxLength: 2083
          minLength: 1
          type: string
          description: reference to a working copy project
          format: uri
        results:
          $ref: '#/components/schemas/ExtractedResults'
    ProjectListItem:
      title: ProjectListItem
      required:
      - uuid
      - name
      - description
      - thumbnail
      - creationDate
      - lastChangeDate
      - workbench
      - prjOwner
      - accessRights
      - tags
      type: object
      properties:
        uuid:
          title: Uuid
          type: string
          format: uuid
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        thumbnail:
          title: Thumbnail
          anyOf:
          - maxLength: 2083
            minLength: 0
            type: string
            format: uri
          - enum:
            - ''
            type: string
        creationDate:
          title: Creationdate
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          type: string
        lastChangeDate:
          title: Lastchangedate
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          type: string
        workbench:
          title: Workbench
          type: object
        prjOwner:
          title: Prjowner
          type: string
          format: email
        accessRights:
          title: Accessrights
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AccessRights'
        tags:
          title: Tags
          type: array
          items:
            type: integer
        classifiers:
          title: Classifiers
          type: array
          items:
            type: string
          default: []
        state:
          $ref: '#/components/schemas/ProjectState'
        ui:
          title: Ui
          anyOf:
          - $ref: '#/components/schemas/EmptyModel'
          - $ref: '#/components/schemas/StudyUI'
        quality:
          title: Quality
          type: object
          default: {}
        dev:
          title: Dev
          type: object
        permalink:
          $ref: '#/components/schemas/ProjectPermalink'
    ProjectLocked:
      title: ProjectLocked
      required:
      - value
      - status
      type: object
      properties:
        value:
          title: Value
          type: boolean
          description: True if the project is locked
        owner:
          title: Owner
          allOf:
          - $ref: '#/components/schemas/Owner'
          description: If locked, the user that owns the lock
        status:
          allOf:
          - $ref: '#/components/schemas/ProjectStatus'
          description: The status of the project
      additionalProperties: false
    ProjectMetadataGet:
      title: ProjectMetadataGet
      required:
      - projectUuid
      type: object
      properties:
        projectUuid:
          title: Projectuuid
          type: string
          format: uuid
        custom:
          title: Custom
          type: object
          additionalProperties:
            anyOf:
            - type: boolean
            - type: integer
            - type: number
            - type: string
          description: Custom key-value map
    ProjectMetadataPortGet:
      title: ProjectMetadataPortGet
      required:
      - key
      - kind
      type: object
      properties:
        key:
          title: Key
          type: string
          description: Project port's unique identifer. Same as the UUID of the associated
            port node
          format: uuid
        kind:
          title: Kind
          enum:
          - input
          - output
          type: string
        content_schema:
          title: Content Schema
          type: object
          description: jsonschema for the port's value. SEE https://json-schema.org/understanding-json-schema/
    ProjectMetadataUpdate:
      title: ProjectMetadataUpdate
      required:
      - custom
      type: object
      properties:
        custom:
          title: Custom
          type: object
          additionalProperties:
            anyOf:
            - type: boolean
            - type: integer
            - type: number
            - type: string
    ProjectOutputGet:
      title: ProjectOutputGet
      required:
      - key
      - value
      - label
      type: object
      properties:
        key:
          title: Key
          type: string
          description: Project port's unique identifer. Same as the UUID of the associated
            port node
          format: uuid
        value:
          title: Value
          description: Value assigned to this i/o port
        label:
          title: Label
          type: string
    ProjectPatch:
      title: ProjectPatch
      type: object
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        thumbnail:
          title: Thumbnail
          maxLength: 2083
          minLength: 0
          type: string
          format: uri
        accessRights:
          title: Accessrights
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AccessRights'
        classifiers:
          title: Classifiers
          type: array
          items:
            type: string
        dev:
          title: Dev
          type: object
        ui:
          $ref: '#/components/schemas/StudyUI'
        quality:
          title: Quality
          type: object
    ProjectPermalink:
      title: ProjectPermalink
      required:
      - url
      - is_public
      type: object
      properties:
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
        is_public:
          title: Is Public
          type: boolean
    ProjectReplace:
      title: ProjectReplace
      required:
      - uuid
      - name
      - description
      - creationDate
      - lastChangeDate
      - workbench
      - accessRights
      type: object
      properties:
        uuid:
          title: Uuid
          type: string
          format: uuid
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        thumbnail:
          title: Thumbnail
          maxLength: 2083
          minLength: 0
          type: string
          format: uri
        creationDate:
          title: Creationdate
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          type: string
        lastChangeDate:
          title: Lastchangedate
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          type: string
        workbench:
          title: Workbench
          type: object
        accessRights:
          title: Accessrights
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AccessRights'
        tags:
          title: Tags
          type: array
          items:
            type: integer
          default: []
        classifiers:
          title: Classifiers
          type: array
          items:
            type: string
        ui:
          $ref: '#/components/schemas/StudyUI'
        quality:
          title: Quality
          type: object
    ProjectRunningState:
      title: ProjectRunningState
      required:
      - value
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/RunningState'
          description: The running state of the project
      additionalProperties: false
    ProjectState:
      title: ProjectState
      required:
      - locked
      - state
      type: object
      properties:
        locked:
          title: Locked
          allOf:
          - $ref: '#/components/schemas/ProjectLocked'
          description: The project lock state
        state:
          title: State
          allOf:
          - $ref: '#/components/schemas/ProjectRunningState'
          description: The project running state
      additionalProperties: false
    ProjectStatus:
      title: ProjectStatus
      enum:
      - CLOSED
      - CLOSING
      - CLONING
      - EXPORTING
      - OPENING
      - OPENED
      type: string
      description: An enumeration.
    ProjectTypeAPI:
      title: ProjectTypeAPI
      enum:
      - all
      - template
      - user
      type: string
      description: An enumeration.
    ProjectsCommentsAPI:
      title: ProjectsCommentsAPI
      required:
      - comment_id
      - project_uuid
      - user_id
      - contents
      - created
      - modified
      type: object
      properties:
        comment_id:
          title: Comment Id
          exclusiveMinimum: true
          type: integer
          description: Primary key, identifies the comment
          minimum: 0
        project_uuid:
          title: Project Uuid
          type: string
          description: project reference for this table
          format: uuid
        user_id:
          title: User Id
          exclusiveMinimum: true
          type: integer
          description: user reference for this table
          minimum: 0
        contents:
          title: Contents
          type: string
          description: Contents of the comment
        created:
          title: Created
          type: string
          description: Timestamp on creation
          format: date-time
        modified:
          title: Modified
          type: string
          description: Timestamp with last update
          format: date-time
      additionalProperties: false
    PutWalletBodyParams:
      title: PutWalletBodyParams
      required:
      - name
      - status
      type: object
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        thumbnail:
          title: Thumbnail
          type: string
        status:
          $ref: '#/components/schemas/WalletStatus'
    RegisterBody:
      title: RegisterBody
      required:
      - email
      - password
      type: object
      properties:
        email:
          title: Email
          type: string
          format: email
        password:
          title: Password
          type: string
          format: password
          writeOnly: true
        confirm:
          title: Confirm
          type: string
          description: Password confirmation
          format: password
          writeOnly: true
        invitation:
          title: Invitation
          type: string
          description: Invitation code
      additionalProperties: false
    RegisterPhoneBody:
      title: RegisterPhoneBody
      required:
      - email
      - phone
      type: object
      properties:
        email:
          title: Email
          type: string
          format: email
        phone:
          title: Phone
          type: string
          description: Phone number E.164, needed on the deployments with 2FA
      additionalProperties: false
    RegisterPhoneNextPage:
      title: RegisterPhoneNextPage
      required:
      - name
      - message
      type: object
      properties:
        name:
          title: Name
          type: string
          description: Code name to the front-end page. Ideally a PageStr
        parameters:
          $ref: '#/components/schemas/_PageParams'
        logger:
          title: Logger
          type: string
          default: user
          deprecated: true
        level:
          title: Level
          enum:
          - INFO
          - WARNING
          - ERROR
          type: string
          default: INFO
        message:
          title: Message
          type: string
      description: 'This is the body of a 2XX response to pass the front-end

        what kind of page shall be display next and some information about it


        An analogous structure is used in the redirects (see create_redirect_response)
        but

        using a path+query in the fragment of the URL'
    ReplaceWalletAutoRecharge:
      title: ReplaceWalletAutoRecharge
      required:
      - enabled
      - paymentMethodId
      - topUpAmountInUsd
      type: object
      properties:
        enabled:
          title: Enabled
          type: boolean
        paymentMethodId:
          title: Paymentmethodid
          maxLength: 100
          minLength: 1
          type: string
        topUpAmountInUsd:
          title: Topupamountinusd
          minimum: 0.0
          type: number
        monthlyLimitInUsd:
          title: Monthlylimitinusd
          minimum: 0.0
          type: number
    RepoApiModel:
      title: RepoApiModel
      required:
      - project_uuid
      - url
      type: object
      properties:
        project_uuid:
          title: Project Uuid
          type: string
          format: uuid
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
    ResearchResource:
      title: ResearchResource
      required:
      - rrid
      - name
      - description
      type: object
      properties:
        rrid:
          title: Rrid
          pattern: ^(RRID:)([^_\s]{1,30})_(\S{1,30})$
          type: string
          description: Unique identifier used as classifier, i.e. to tag studies and
            services
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
    Resend2faBody:
      title: Resend2faBody
      required:
      - email
      type: object
      properties:
        email:
          title: Email
          type: string
          description: User email (identifier)
          format: email
        via:
          title: Via
          enum:
          - SMS
          - Email
          type: string
          default: SMS
      additionalProperties: false
    ResetPasswordBody:
      title: ResetPasswordBody
      required:
      - email
      type: object
      properties:
        email:
          title: Email
          type: string
      additionalProperties: false
    ResetPasswordConfirmation:
      title: ResetPasswordConfirmation
      required:
      - password
      - confirm
      type: object
      properties:
        password:
          title: Password
          type: string
          format: password
          writeOnly: true
        confirm:
          title: Confirm
          type: string
          format: password
          writeOnly: true
      additionalProperties: false
    ResourceHit:
      title: ResourceHit
      required:
      - rid
      - name
      type: object
      properties:
        rid:
          title: Rid
          type: string
        name:
          title: Name
          type: string
    ResourceValue:
      title: ResourceValue
      required:
      - limit
      - reservation
      type: object
      properties:
        limit:
          title: Limit
          anyOf:
          - type: integer
          - type: number
          - type: string
        reservation:
          title: Reservation
          anyOf:
          - type: integer
          - type: number
          - type: string
    RunningDynamicServiceDetails:
      title: RunningDynamicServiceDetails
      required:
      - service_key
      - service_version
      - user_id
      - project_id
      - service_uuid
      - service_host
      - service_port
      - service_state
      type: object
      properties:
        service_key:
          title: Service Key
          pattern: ^simcore/services/dynamic/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
          description: distinctive name for the node based on the docker registry
            path
        service_version:
          title: Service Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
          description: semantic version number of the node
        user_id:
          title: User Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        project_id:
          title: Project Id
          type: string
          format: uuid
        service_uuid:
          title: Service Uuid
          type: string
          format: uuid
        service_basepath:
          title: Service Basepath
          type: string
          description: predefined path where the dynamic service should be served.
            If empty, the service shall use the root endpoint.
          format: path
        boot_type:
          allOf:
          - $ref: '#/components/schemas/ServiceBootType'
          description: Describes how the dynamic services was started (legacy=V0,
            modern=V2).Since legacy services do not have this label it defaults to
            V0.
          default: V0
        service_host:
          title: Service Host
          type: string
          description: the service swarm internal host name
        service_port:
          title: Service Port
          exclusiveMaximum: true
          exclusiveMinimum: true
          type: integer
          description: the service swarm internal port
          maximum: 65535
          minimum: 0
        published_port:
          title: Published Port
          exclusiveMaximum: true
          exclusiveMinimum: true
          type: integer
          description: the service swarm published port if any
          deprecated: true
          maximum: 65535
          minimum: 0
        entry_point:
          title: Entry Point
          type: string
          description: if empty the service entrypoint is on the root endpoint.
          deprecated: true
        service_state:
          allOf:
          - $ref: '#/components/schemas/ServiceState'
          description: service current state
        service_message:
          title: Service Message
          type: string
          description: additional information related to service state
    RunningState:
      title: RunningState
      enum:
      - UNKNOWN
      - PUBLISHED
      - NOT_STARTED
      - PENDING
      - WAITING_FOR_RESOURCES
      - STARTED
      - SUCCESS
      - FAILED
      - ABORTED
      - WAITING_FOR_CLUSTER
      type: string
      description: 'State of execution of a project''s computational workflow


        SEE StateType for task state'
    Scheduler:
      title: Scheduler
      required:
      - status
      type: object
      properties:
        status:
          title: Status
          type: string
          description: The running status of the scheduler
        workers:
          title: Workers
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Worker'
    SelectBox:
      title: SelectBox
      required:
      - structure
      type: object
      properties:
        structure:
          title: Structure
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Structure'
      additionalProperties: false
    ServiceBootType:
      title: ServiceBootType
      enum:
      - V0
      - V2
      type: string
      description: An enumeration.
    ServiceGroupAccessRights:
      title: ServiceGroupAccessRights
      type: object
      properties:
        execute_access:
          title: Execute Access
          type: boolean
          description: defines whether the group can execute the service
          default: false
        write_access:
          title: Write Access
          type: boolean
          description: defines whether the group can modify the service
          default: false
    ServiceInputGet:
      title: ServiceInputGet
      required:
      - label
      - description
      - type
      - keyId
      type: object
      properties:
        unitLong:
          title: Unitlong
          type: string
          description: Long name of the unit for display (html-compatible), if available
        unitShort:
          title: Unitshort
          type: string
          description: Short name for the unit for display (html-compatible), if available
        displayOrder:
          title: Displayorder
          type: number
          description: 'DEPRECATED: new display order is taken from the item position.
            This will be removed.'
          deprecated: true
        label:
          title: Label
          type: string
          description: short name for the property
          example: Age
        description:
          title: Description
          type: string
          description: description of the property
          example: Age in seconds since 1970
        type:
          title: Type
          pattern: ^(number|integer|boolean|string|ref_contentSchema|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$
          type: string
          description: data type expected on this input glob matching for data type
            is allowed
        contentSchema:
          title: Contentschema
          type: object
          description: jsonschema of this input/output. Required when type='ref_contentSchema'
        fileToKeyMap:
          title: Filetokeymap
          type: object
          description: Place the data associated with the named keys in files
        unit:
          title: Unit
          type: string
          description: Units, when it refers to a physical quantity
          deprecated: true
        defaultValue:
          title: Defaultvalue
          anyOf:
          - type: boolean
          - type: integer
          - type: number
          - type: string
          deprecated: true
        widget:
          title: Widget
          allOf:
          - $ref: '#/components/schemas/Widget'
          description: custom widget to use instead of the default one determined
            from the data-type
        keyId:
          title: Keyid
          pattern: ^[-_a-zA-Z0-9]+$
          type: string
          description: Unique name identifier for this input
      additionalProperties: false
      description: Extends fields of api_schemas_catalog.services.ServiceGet.outputs[*]
      example:
        displayOrder: 2
        label: Sleep Time
        description: Time to wait before completion
        type: number
        defaultValue: 0
        unit: second
        widget:
          type: TextArea
          details:
            minHeight: 1
        keyId: input_2
        unitLong: seconds
        unitShort: sec
    ServiceKeyVersion:
      title: ServiceKeyVersion
      required:
      - key
      - version
      type: object
      properties:
        key:
          title: Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
          description: distinctive name for the node based on the docker registry
            path
        version:
          title: Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
          description: service version number
      description: This pair uniquely identifies a services
    ServiceOutputGet:
      title: ServiceOutputGet
      required:
      - label
      - description
      - type
      - keyId
      type: object
      properties:
        unitLong:
          title: Unitlong
          type: string
          description: Long name of the unit for display (html-compatible), if available
        unitShort:
          title: Unitshort
          type: string
          description: Short name for the unit for display (html-compatible), if available
        displayOrder:
          title: Displayorder
          type: number
          description: 'DEPRECATED: new display order is taken from the item position.
            This will be removed.'
          deprecated: true
        label:
          title: Label
          type: string
          description: short name for the property
          example: Age
        description:
          title: Description
          type: string
          description: description of the property
          example: Age in seconds since 1970
        type:
          title: Type
          pattern: ^(number|integer|boolean|string|ref_contentSchema|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$
          type: string
          description: data type expected on this input glob matching for data type
            is allowed
        contentSchema:
          title: Contentschema
          type: object
          description: jsonschema of this input/output. Required when type='ref_contentSchema'
        fileToKeyMap:
          title: Filetokeymap
          type: object
          description: Place the data associated with the named keys in files
        unit:
          title: Unit
          type: string
          description: Units, when it refers to a physical quantity
          deprecated: true
        widget:
          title: Widget
          allOf:
          - $ref: '#/components/schemas/Widget'
          description: custom widget to use instead of the default one determined
            from the data-type
          deprecated: true
        keyId:
          title: Keyid
          pattern: ^[-_a-zA-Z0-9]+$
          type: string
          description: Unique name identifier for this input
      additionalProperties: false
      description: Extends fields of api_schemas_catalog.services.ServiceGet.outputs[*]
      example:
        displayOrder: 2
        label: Time Slept
        description: Time the service waited before completion
        type: number
        unit: second
        unitLong: seconds
        unitShort: sec
        keyId: output_2
    ServicePricingPlanGet:
      title: ServicePricingPlanGet
      required:
      - pricingPlanId
      - displayName
      - description
      - classification
      - createdAt
      - pricingPlanKey
      - pricingUnits
      type: object
      properties:
        pricingPlanId:
          title: Pricingplanid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        displayName:
          title: Displayname
          type: string
        description:
          title: Description
          type: string
        classification:
          $ref: '#/components/schemas/PricingPlanClassification'
        createdAt:
          title: Createdat
          type: string
          format: date-time
        pricingPlanKey:
          title: Pricingplankey
          type: string
        pricingUnits:
          title: Pricingunits
          type: array
          items:
            $ref: '#/components/schemas/PricingUnitGet'
    ServiceRelease:
      title: ServiceRelease
      required:
      - version
      type: object
      properties:
        version:
          title: Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
        version_display:
          title: Version Display
          type: string
        release_date:
          title: Release Date
          type: string
          format: date-time
        compatibility:
          $ref: '#/components/schemas/Compatibility'
    ServiceRunGet:
      title: ServiceRunGet
      required:
      - service_run_id
      - user_id
      - project_id
      - project_name
      - node_id
      - node_name
      - root_parent_project_id
      - root_parent_project_name
      - service_key
      - service_version
      - service_type
      - started_at
      - service_run_status
      type: object
      properties:
        service_run_id:
          title: Service Run Id
          type: string
        wallet_id:
          title: Wallet Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        wallet_name:
          title: Wallet Name
          type: string
        user_id:
          title: User Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        project_id:
          title: Project Id
          type: string
          format: uuid
        project_name:
          title: Project Name
          type: string
        node_id:
          title: Node Id
          type: string
          format: uuid
        node_name:
          title: Node Name
          type: string
        root_parent_project_id:
          title: Root Parent Project Id
          type: string
          format: uuid
        root_parent_project_name:
          title: Root Parent Project Name
          type: string
        service_key:
          title: Service Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
        service_version:
          title: Service Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
        service_type:
          title: Service Type
          type: string
        started_at:
          title: Started At
          type: string
          format: date-time
        stopped_at:
          title: Stopped At
          type: string
          format: date-time
        service_run_status:
          $ref: '#/components/schemas/ServiceRunStatus'
    ServiceRunStatus:
      title: ServiceRunStatus
      enum:
      - RUNNING
      - SUCCESS
      - ERROR
      type: string
      description: An enumeration.
    ServiceState:
      title: ServiceState
      enum:
      - pending
      - pulling
      - starting
      - running
      - complete
      - failed
      - stopping
      description: An enumeration.
    ServiceType:
      title: ServiceType
      enum:
      - computational
      - dynamic
      - frontend
      - backend
      type: string
      description: An enumeration.
    ServiceUpdate:
      title: ServiceUpdate
      type: object
      properties:
        accessRights:
          title: Accessrights
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ServiceGroupAccessRights'
          description: service access rights per group id
        name:
          title: Name
          type: string
        thumbnail:
          title: Thumbnail
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
        description:
          title: Description
          type: string
        deprecated:
          title: Deprecated
          type: string
          description: If filled with a date, then the service is to be deprecated
            at that date (e.g. cannot start anymore)
          format: date-time
        classifiers:
          title: Classifiers
          type: array
          items:
            type: string
        quality:
          title: Quality
          type: object
          default: {}
      example:
        accessRights:
          1:
            execute_access: false
            write_access: false
          2:
            execute_access: true
            write_access: true
          44:
            execute_access: false
            write_access: false
        name: My Human Readable Service Name
        description: An interesting service that does something
        classifiers:
        - RRID:SCR_018997
        - RRID:SCR_019001
        quality:
          tsr:
            r01:
              level: 3
              references: ''
            r02:
              level: 2
              references: ''
            r03:
              level: 0
              references: ''
            r04:
              level: 0
              references: ''
            r05:
              level: 2
              references: ''
            r06:
              level: 0
              references: ''
            r07:
              level: 0
              references: ''
            r08:
              level: 1
              references: ''
            r09:
              level: 0
              references: ''
            r10:
              level: 0
              references: ''
          enabled: true
          annotations:
            vandv: ''
            purpose: ''
            standards: ''
            limitations: ''
            documentation: ''
            certificationLink: ''
            certificationStatus: Uncertified
    SimCoreFileLink:
      title: SimCoreFileLink
      required:
      - store
      - path
      type: object
      properties:
        store:
          title: Store
          type: integer
          description: 'The store identifier: 0 for simcore S3, 1 for datcore'
        path:
          title: Path
          anyOf:
          - pattern: ^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$
            type: string
          - pattern: ^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$
            type: string
          description: The path to the file in the storage provider domain
        label:
          title: Label
          type: string
          description: The real file name
        eTag:
          title: Etag
          type: string
          description: Entity tag that uniquely represents the file. The method to
            generate the tag is not specified (black box).
        dataset:
          title: Dataset
          type: string
          deprecated: true
      additionalProperties: false
      description: I/O port type to hold a link to a file in simcore S3 storage
    SimpleAuthentication:
      title: SimpleAuthentication
      required:
      - username
      - password
      type: object
      properties:
        type:
          title: Type
          enum:
          - simple
          type: string
          default: simple
        username:
          title: Username
          type: string
        password:
          title: Password
          type: string
          format: password
          writeOnly: true
      additionalProperties: false
    Slideshow:
      title: Slideshow
      required:
      - position
      type: object
      properties:
        position:
          title: Position
          type: integer
        instructions:
          title: Instructions
          type: string
    SpecificInfo:
      title: SpecificInfo
      required:
      - aws_ec2_instances
      type: object
      properties:
        aws_ec2_instances:
          title: Aws Ec2 Instances
          type: array
          items:
            type: string
      description: 'Custom information that is not propagated to the frontend. For
        example can be used

        to store aws ec2 instance type.'
    StackInfoDict:
      title: StackInfoDict
      required:
      - f_code
      - f_lineno
      type: object
      properties:
        f_code:
          title: F Code
          type: string
        f_lineno:
          title: F Lineno
          type: string
    StaticFrontEndDict:
      title: StaticFrontEndDict
      required:
      - third_party_references
      - countries
      type: object
      properties:
        third_party_references:
          title: Third Party References
          type: array
          items:
            $ref: '#/components/schemas/ThirdPartyInfoDict'
        countries:
          title: Countries
          type: array
          items:
            $ref: '#/components/schemas/CountryInfoDict'
        issues:
          title: Issues
        vendor:
          title: Vendor
        manuals:
          title: Manuals
    Stats:
      title: Stats
      required:
      - cpuUsage
      - memUsage
      type: object
      properties:
        cpuUsage:
          title: Cpuusage
          exclusiveMinimum: true
          type: number
          minimum: 0.0
        memUsage:
          title: Memusage
          exclusiveMinimum: true
          type: number
          minimum: 0.0
    StatusDiagnosticsGet:
      title: StatusDiagnosticsGet
      required:
      - loop_tasks
      - top_tracemalloc
      type: object
      properties:
        loop_tasks:
          title: Loop Tasks
          type: array
          items:
            $ref: '#/components/schemas/TaskInfoDict'
        top_tracemalloc:
          title: Top Tracemalloc
          type: array
          items:
            type: string
    Structure:
      title: Structure
      required:
      - key
      - label
      type: object
      properties:
        key:
          title: Key
          anyOf:
          - type: string
          - type: boolean
          - type: number
        label:
          title: Label
          type: string
      additionalProperties: false
    StudyUI:
      title: StudyUI
      type: object
      properties:
        workbench:
          title: Workbench
          type: object
        slideshow:
          title: Slideshow
          type: object
        currentNodeId:
          title: Currentnodeid
          type: string
          format: uuid
        annotations:
          title: Annotations
          type: object
    TLSAuthentication:
      title: TLSAuthentication
      required:
      - tls_ca_file
      - tls_client_cert
      - tls_client_key
      type: object
      properties:
        type:
          title: Type
          enum:
          - tls
          type: string
          default: tls
        tls_ca_file:
          title: Tls Ca File
          type: string
          format: path
        tls_client_cert:
          title: Tls Client Cert
          type: string
          format: path
        tls_client_key:
          title: Tls Client Key
          type: string
          format: path
      additionalProperties: false
    TableSynchronisation:
      title: TableSynchronisation
      required:
      - removed
      type: object
      properties:
        dry_run:
          title: Dry Run
          type: boolean
        fire_and_forget:
          title: Fire And Forget
          type: boolean
        removed:
          title: Removed
          type: array
          items:
            type: string
    TagAccessRights:
      title: TagAccessRights
      required:
      - read
      - write
      - delete
      type: object
      properties:
        read:
          title: Read
          type: boolean
        write:
          title: Write
          type: boolean
        delete:
          title: Delete
          type: boolean
    TagCreate:
      title: TagCreate
      required:
      - name
      - color
      type: object
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        color:
          title: Color
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
      additionalProperties: false
    TagGet:
      title: TagGet
      required:
      - id
      - name
      - color
      - accessRights
      type: object
      properties:
        id:
          title: Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        color:
          title: Color
          type: string
        accessRights:
          $ref: '#/components/schemas/TagAccessRights'
    TagUpdate:
      title: TagUpdate
      type: object
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        color:
          title: Color
          pattern: ^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$
          type: string
      additionalProperties: false
    TaskCounts:
      title: TaskCounts
      type: object
      properties:
        error:
          title: Error
          type: integer
          default: 0
        memory:
          title: Memory
          type: integer
          default: 0
        executing:
          title: Executing
          type: integer
          default: 0
    TaskGet:
      title: TaskGet
      required:
      - task_id
      - task_name
      - status_href
      - result_href
      - abort_href
      type: object
      properties:
        task_id:
          title: Task Id
          type: string
        task_name:
          title: Task Name
          type: string
        status_href:
          title: Status Href
          type: string
        result_href:
          title: Result Href
          type: string
        abort_href:
          title: Abort Href
          type: string
    TaskInfoDict:
      title: TaskInfoDict
      required:
      - txt
      - type
      - done
      - cancelled
      - stack
      - exception
      type: object
      properties:
        txt:
          title: Txt
          type: string
        type:
          title: Type
          type: string
        done:
          title: Done
          type: boolean
        cancelled:
          title: Cancelled
          type: boolean
        stack:
          title: Stack
          type: array
          items:
            $ref: '#/components/schemas/StackInfoDict'
        exception:
          title: Exception
          type: string
    TaskProgress:
      title: TaskProgress
      type: object
      properties:
        task_id:
          title: Task Id
          type: string
        message:
          title: Message
          type: string
          default: ''
        percent:
          title: Percent
          maximum: 1.0
          minimum: 0.0
          type: number
          default: 0.0
      description: 'Helps the user to keep track of the progress. Progress is expected
        to be

        defined as a float bound between 0.0 and 1.0'
    TaskStatus:
      title: TaskStatus
      required:
      - task_progress
      - done
      - started
      type: object
      properties:
        task_progress:
          $ref: '#/components/schemas/TaskProgress'
        done:
          title: Done
          type: boolean
        started:
          title: Started
          type: string
          format: date-time
    TestEmail:
      title: TestEmail
      required:
      - to
      type: object
      properties:
        from_:
          title: 'From '
          type: string
          description: Email sender
          format: email
        to:
          title: To
          type: string
          description: Email receiver
          format: email
        template_name:
          title: Template Name
          enum:
          - change_email_email.jinja2
          - new_2fa_code.jinja2
          - registration_email.jinja2
          - reset_password_email_failed.jinja2
          - reset_password_email.jinja2
          - service_submission.jinja2
          type: string
          default: registration_email.jinja2
        template_context:
          title: Template Context
          type: object
          default: {}
    TextArea:
      title: TextArea
      required:
      - minHeight
      type: object
      properties:
        minHeight:
          title: Minheight
          exclusiveMinimum: true
          type: integer
          description: minimum Height of the textarea
          minimum: 0
      additionalProperties: false
    ThirdPartyInfoDict:
      title: ThirdPartyInfoDict
      required:
      - name
      - version
      - url
      - thumbnail
      type: object
      properties:
        name:
          title: Name
          type: string
        version:
          title: Version
          type: string
        url:
          title: Url
          type: string
        thumbnail:
          title: Thumbnail
          type: string
    ThirdPartyToken:
      title: ThirdPartyToken
      required:
      - service
      - token_key
      type: object
      properties:
        service:
          title: Service
          type: string
          description: uniquely identifies the service where this token is used
        token_key:
          title: Token Key
          type: string
          description: basic token key
          format: uuid
        token_secret:
          title: Token Secret
          type: string
          format: uuid
      description: Tokens used to access third-party services connected to osparc
        (e.g. pennsieve, scicrunch, etc)
      example:
        service: github-api-v1
        token_key: 5f21abf5-c596-47b7-bfd1-c0e436ef1107
    TokenCreate:
      title: TokenCreate
      required:
      - service
      - token_key
      type: object
      properties:
        service:
          title: Service
          type: string
          description: uniquely identifies the service where this token is used
        token_key:
          title: Token Key
          type: string
          description: basic token key
          format: uuid
        token_secret:
          title: Token Secret
          type: string
          format: uuid
      description: Tokens used to access third-party services connected to osparc
        (e.g. pennsieve, scicrunch, etc)
      example:
        service: github-api-v1
        token_key: 5f21abf5-c596-47b7-bfd1-c0e436ef1107
    UnitExtraInfo:
      title: UnitExtraInfo
      required:
      - CPU
      - RAM
      - VRAM
      type: object
      properties:
        CPU:
          title: Cpu
          minimum: 0
          type: integer
        RAM:
          title: Ram
          type: integer
        VRAM:
          title: Vram
          type: integer
      description: Custom information that is propagated to the frontend. Defined
        fields are mandatory.
    UnregisterCheck:
      title: UnregisterCheck
      required:
      - email
      - password
      type: object
      properties:
        email:
          title: Email
          type: string
          format: email
        password:
          title: Password
          type: string
          format: password
          writeOnly: true
    UpdatePricingPlanBodyParams:
      title: UpdatePricingPlanBodyParams
      required:
      - displayName
      - description
      - isActive
      type: object
      properties:
        displayName:
          title: Displayname
          type: string
        description:
          title: Description
          type: string
        isActive:
          title: Isactive
          type: boolean
    UpdatePricingUnitBodyParams:
      title: UpdatePricingUnitBodyParams
      required:
      - unitName
      - unitExtraInfo
      - default
      - specificInfo
      type: object
      properties:
        unitName:
          title: Unitname
          type: string
        unitExtraInfo:
          $ref: '#/components/schemas/UnitExtraInfo'
        default:
          title: Default
          type: boolean
        specificInfo:
          $ref: '#/components/schemas/SpecificInfo'
        pricingUnitCostUpdate:
          $ref: '#/components/schemas/PricingUnitCostUpdate'
    UpdateProductTemplate:
      title: UpdateProductTemplate
      required:
      - content
      type: object
      properties:
        content:
          title: Content
          type: string
    UploadedPart:
      title: UploadedPart
      required:
      - number
      - e_tag
      type: object
      properties:
        number:
          title: Number
          exclusiveMinimum: true
          type: integer
          minimum: 0
        e_tag:
          title: E Tag
          type: string
    UsedResources:
      title: UsedResources
      type: object
      additionalProperties:
        minimum: 0.0
        type: number
    UserNotification:
      title: UserNotification
      required:
      - user_id
      - category
      - actionable_path
      - title
      - text
      - date
      - id
      - read
      type: object
      properties:
        user_id:
          title: User Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        category:
          $ref: '#/components/schemas/NotificationCategory'
        actionable_path:
          title: Actionable Path
          type: string
        title:
          title: Title
          type: string
        text:
          title: Text
          type: string
        date:
          title: Date
          type: string
          format: date-time
        product:
          title: Product
          anyOf:
          - enum:
            - UNDEFINED
            type: string
          - type: string
          default: UNDEFINED
        id:
          title: Id
          type: string
        read:
          title: Read
          type: boolean
    UserNotificationCreate:
      title: UserNotificationCreate
      required:
      - user_id
      - category
      - actionable_path
      - title
      - text
      - date
      type: object
      properties:
        user_id:
          title: User Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        category:
          $ref: '#/components/schemas/NotificationCategory'
        actionable_path:
          title: Actionable Path
          type: string
        title:
          title: Title
          type: string
        text:
          title: Text
          type: string
        date:
          title: Date
          type: string
          format: date-time
        product:
          title: Product
          anyOf:
          - enum:
            - UNDEFINED
            type: string
          - type: string
          default: UNDEFINED
    UserNotificationPatch:
      title: UserNotificationPatch
      required:
      - read
      type: object
      properties:
        read:
          title: Read
          type: boolean
    UserProfile:
      title: UserProfile
      required:
      - email
      - registered
      type: object
      properties:
        firstName:
          title: Firstname
          type: string
        lastName:
          title: Lastname
          type: string
        email:
          title: Email
          type: string
          format: email
        institution:
          title: Institution
          type: string
        phone:
          title: Phone
          type: string
        address:
          title: Address
          type: string
        city:
          title: City
          type: string
        state:
          title: State
          type: string
          description: State, province, canton, ...
        postalCode:
          title: Postalcode
          type: string
        country:
          title: Country
          type: string
        extras:
          title: Extras
          type: object
          description: Keeps extra information provided in the request form
        invitedBy:
          title: Invitedby
          type: string
        registered:
          title: Registered
          type: boolean
        status:
          $ref: '#/components/schemas/UserStatus'
        products:
          title: Products
          type: array
          items:
            type: string
          description: List of products this users is included or None if fields is
            unset
    UserStatus:
      title: UserStatus
      enum:
      - CONFIRMATION_PENDING
      - ACTIVE
      - EXPIRED
      - BANNED
      - DELETED
      type: string
      description: An enumeration.
    UsersGroup:
      title: UsersGroup
      required:
      - gid
      - label
      - description
      - accessRights
      type: object
      properties:
        gid:
          title: Gid
          type: integer
          description: the group ID
        label:
          title: Label
          type: string
          description: the group name
        description:
          title: Description
          type: string
          description: the group description
        thumbnail:
          title: Thumbnail
          maxLength: 65536
          minLength: 1
          type: string
          description: url to the group thumbnail
          format: uri
        accessRights:
          $ref: '#/components/schemas/GroupAccessRights'
        inclusionRules:
          title: Inclusionrules
          type: object
          additionalProperties:
            type: string
          description: Maps user's column and regular expression
    Viewer:
      title: Viewer
      required:
      - title
      - file_type
      - view_url
      type: object
      properties:
        title:
          title: Title
          type: string
          description: Short formatted label with name and version of the viewer
        file_type:
          title: File Type
          type: string
          description: Identifier for the file type
        view_url:
          title: View Url
          maxLength: 2083
          minLength: 1
          type: string
          description: Base url to execute viewer. Needs appending file_size,[file_name]
            and download_link as query parameters
          format: uri
      description: "API model for a viewer resource\n\nA viewer is a service with\
        \ an associated filetype.\nYou can think of it as a tuple (filetype, service)\n\
        \nThe service could consume other filetypes BUT at this\ninterface this is\
        \ represented in yet another viewer resource\n\nFor instance, the same service\
        \ can be in two different viewer resources\n  - viewer1=(JPEG, RawGraph service)\n\
        \  - viewer2=(CSV, RawGraph service)\n\nA viewer can be dispatched using the\
        \ view_url and appending the"
    WalletGet:
      title: WalletGet
      required:
      - walletId
      - name
      - owner
      - status
      - created
      - modified
      type: object
      properties:
        walletId:
          title: Walletid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        owner:
          title: Owner
          exclusiveMinimum: true
          type: integer
          minimum: 0
        thumbnail:
          title: Thumbnail
          type: string
        status:
          $ref: '#/components/schemas/WalletStatus'
        created:
          title: Created
          type: string
          format: date-time
        modified:
          title: Modified
          type: string
          format: date-time
    WalletGetWithAvailableCredits:
      title: WalletGetWithAvailableCredits
      required:
      - walletId
      - name
      - owner
      - status
      - created
      - modified
      - availableCredits
      type: object
      properties:
        walletId:
          title: Walletid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        owner:
          title: Owner
          exclusiveMinimum: true
          type: integer
          minimum: 0
        thumbnail:
          title: Thumbnail
          type: string
        status:
          $ref: '#/components/schemas/WalletStatus'
        created:
          title: Created
          type: string
          format: date-time
        modified:
          title: Modified
          type: string
          format: date-time
        availableCredits:
          title: Availablecredits
          type: number
    WalletGroupGet:
      title: WalletGroupGet
      required:
      - gid
      - read
      - write
      - delete
      - created
      - modified
      type: object
      properties:
        gid:
          title: Gid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        read:
          title: Read
          type: boolean
        write:
          title: Write
          type: boolean
        delete:
          title: Delete
          type: boolean
        created:
          title: Created
          type: string
          format: date-time
        modified:
          title: Modified
          type: string
          format: date-time
    WalletPaymentInitiated:
      title: WalletPaymentInitiated
      required:
      - paymentId
      type: object
      properties:
        paymentId:
          title: Paymentid
          maxLength: 100
          minLength: 1
          type: string
        paymentFormUrl:
          title: Paymentformurl
          maxLength: 2083
          minLength: 1
          type: string
          description: Link to external site that holds the payment submission form.None
            if no prompt step is required (e.g. pre-selected credit card)
          format: uri
    WalletStatus:
      title: WalletStatus
      enum:
      - ACTIVE
      - INACTIVE
      type: string
      description: An enumeration.
    Widget:
      title: Widget
      required:
      - type
      - details
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/WidgetType'
          description: type of the property
        details:
          title: Details
          anyOf:
          - $ref: '#/components/schemas/TextArea'
          - $ref: '#/components/schemas/SelectBox'
      additionalProperties: false
    WidgetType:
      title: WidgetType
      enum:
      - TextArea
      - SelectBox
      type: string
      description: An enumeration.
    WorkbenchUI:
      title: WorkbenchUI
      required:
      - position
      type: object
      properties:
        position:
          title: Position
          allOf:
          - $ref: '#/components/schemas/Position'
          description: The node position in the workbench
        marker:
          $ref: '#/components/schemas/Marker'
      additionalProperties: false
    WorkbenchViewApiModel:
      title: WorkbenchViewApiModel
      required:
      - workbench
      - url
      - checkpoint_url
      type: object
      properties:
        workbench:
          title: Workbench
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Node'
        ui:
          title: Ui
          type: object
          default: {}
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
        checkpoint_url:
          title: Checkpoint Url
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
      description: A view (i.e. read-only and visual) of the project's workbench
    Worker:
      title: Worker
      required:
      - id
      - name
      - resources
      - used_resources
      - memory_limit
      - metrics
      type: object
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        resources:
          $ref: '#/components/schemas/DictModel_str__PositiveFloat_'
        used_resources:
          $ref: '#/components/schemas/UsedResources'
        memory_limit:
          title: Memory Limit
          type: integer
        metrics:
          $ref: '#/components/schemas/WorkerMetrics'
    WorkerMetrics:
      title: WorkerMetrics
      required:
      - cpu
      - memory
      - num_fds
      - task_counts
      type: object
      properties:
        cpu:
          title: Cpu
          type: number
          description: consumed % of cpus
        memory:
          title: Memory
          type: integer
          description: consumed memory
        num_fds:
          title: Num Fds
          type: integer
          description: consumed file descriptors
        task_counts:
          title: Task Counts
          allOf:
          - $ref: '#/components/schemas/TaskCounts'
          description: task details
    _ComputationStarted:
      title: _ComputationStarted
      required:
      - pipeline_id
      type: object
      properties:
        pipeline_id:
          title: Pipeline Id
          type: string
          description: ID for created pipeline (=project identifier)
          format: uuid
        ref_ids:
          title: Ref Ids
          type: array
          items:
            type: integer
          description: Checkpoints IDs for created pipeline
    _PageParams:
      title: _PageParams
      type: object
      properties:
        expiration_2fa:
          title: Expiration 2Fa
          exclusiveMinimum: true
          type: integer
          minimum: 0
    _ProjectCommentsBodyParams:
      title: _ProjectCommentsBodyParams
      required:
      - contents
      type: object
      properties:
        contents:
          title: Contents
          type: string
      additionalProperties: false
    _ProjectGroupAccess:
      title: _ProjectGroupAccess
      required:
      - gid
      - accessible
      type: object
      properties:
        gid:
          title: Gid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        accessible:
          title: Accessible
          type: boolean
        inaccessible_services:
          title: Inaccessible Services
          type: array
          items:
            $ref: '#/components/schemas/ServiceKeyVersion'
    _ProjectNodePreview:
      title: _ProjectNodePreview
      required:
      - project_id
      - node_id
      type: object
      properties:
        project_id:
          title: Project Id
          type: string
          format: uuid
        node_id:
          title: Node Id
          type: string
          format: uuid
        screenshots:
          title: Screenshots
          type: array
          items:
            $ref: '#/components/schemas/NodeScreenshot'
    _WalletsGroupsBodyParams:
      title: _WalletsGroupsBodyParams
      required:
      - read
      - write
      - delete
      type: object
      properties:
        read:
          title: Read
          type: boolean
        write:
          title: Write
          type: boolean
        delete:
          title: Delete
          type: boolean
      additionalProperties: false
    models_library__api_schemas_webserver__catalog__ServiceGet:
      title: ServiceGet
      required:
      - name
      - description
      - key
      - version
      - type
      - authors
      - contact
      - inputs
      - outputs
      type: object
      properties:
        name:
          title: Name
          type: string
          description: 'Display name: short, human readable name for the node'
          example: Fast Counter
        thumbnail:
          title: Thumbnail
          maxLength: 2083
          minLength: 1
          type: string
          description: url to the thumbnail
          format: uri
        description:
          title: Description
          type: string
          description: human readable description of the purpose of the node
        deprecated:
          title: Deprecated
          type: string
          description: If filled with a date, then the service is to be deprecated
            at that date (e.g. cannot start anymore)
          format: date-time
        classifiers:
          title: Classifiers
          type: array
          items:
            type: string
        quality:
          title: Quality
          type: object
          default: {}
        accessRights:
          title: Accessrights
          type: object
          additionalProperties:
            $ref: '#/components/schemas/ServiceGroupAccessRights'
          description: service access rights per group id
        key:
          title: Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
          description: distinctive name for the node based on the docker registry
            path
        version:
          title: Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
          description: service version number
        versionDisplay:
          title: Versiondisplay
          type: string
          description: A user-friendly or marketing name for the release. This can
            be used to reference the release in a more readable and recognizable format,
            such as 'Matterhorn Release,' 'Spring Update,' or 'Holiday Edition.' This
            name is not used for version comparison but is useful for communication
            and documentation purposes.
        releaseDate:
          title: Releasedate
          type: string
          description: "A timestamp when the specific version of the service was released.\
            \ This field helps in tracking the timeline of releases and understanding\
            \ the sequence of updates. A timestamp string should be formatted as YYYY-MM-DD[T]HH:MM[:SS[.ffffff]][Z\
            \ or [\xB1]HH[:]MM]"
          format: date-time
        integration-version:
          title: Integration-Version
          pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
          type: string
          description: This version is used to maintain backward compatibility when
            there are changes in the way a service is integrated into the framework
        type:
          allOf:
          - $ref: '#/components/schemas/ServiceType'
          description: service type
        badges:
          title: Badges
          type: array
          items:
            $ref: '#/components/schemas/Badge'
        authors:
          title: Authors
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Author'
        contact:
          title: Contact
          type: string
          description: email to correspond to the authors about the node
          format: email
        inputs:
          title: Inputs
          type: object
          description: inputs with extended information
        outputs:
          title: Outputs
          type: object
          description: outputs with extended information
        boot-options:
          title: Boot-Options
          type: object
          description: Service defined boot options. These get injected in the service
            as env variables.
        min-visible-inputs:
          title: Min-Visible-Inputs
          minimum: 0
          type: integer
          description: The number of 'data type inputs' displayed by default in the
            UI. When None all 'data type inputs' are displayed.
        progress_regexp:
          title: Progress Regexp
          type: string
          description: regexp pattern for detecting computational service's progress
        owner:
          title: Owner
          type: string
          format: email
      description: 'Service metadata at publication time


        - read-only (can only be changed overwriting the image labels in the registry)

        - base metaddata

        - injected in the image labels


        NOTE: This model is serialized in .osparc/metadata.yml and in the labels of
        the docker image'
      example:
        name: File Picker
        description: description
        classifiers: []
        quality: {}
        accessRights:
          '1':
            execute_access: true
            write_access: false
          '4':
            execute_access: true
            write_access: true
        key: simcore/services/frontend/file-picker
        version: 1.0.0
        type: dynamic
        authors:
        - name: Red Pandas
          email: redpandas@wonderland.com
        contact: redpandas@wonderland.com
        inputs:
          input0:
            label: Acceleration
            description: acceleration with units
            type: ref_contentSchema
            contentSchema:
              title: Acceleration
              type: number
              x_unit: m/s**2
            keyId: input_1
            unitLong: meter/second<sup>3</sup>
            unitShort: m/s<sup>3</sup>
        outputs:
          outFile:
            displayOrder: 2
            label: Time Slept
            description: Time the service waited before completion
            type: number
            unit: second
            unitLong: seconds
            unitShort: sec
            keyId: output_2
        owner: redpandas@wonderland.com
    simcore_service_webserver__studies_dispatcher___rest_handlers__ServiceGet:
      title: ServiceGet
      required:
      - key
      - title
      - description
      - thumbnail
      - view_url
      type: object
      properties:
        key:
          title: Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
          description: Service key ID
        title:
          title: Title
          type: string
          description: Service name for display
        description:
          title: Description
          type: string
          description: Long description of the service
        thumbnail:
          title: Thumbnail
          maxLength: 2083
          minLength: 1
          type: string
          description: Url to service thumbnail
          format: uri
        file_extensions:
          title: File Extensions
          type: array
          items:
            type: string
          description: File extensions that this service can process
        view_url:
          title: View Url
          maxLength: 2083
          minLength: 1
          type: string
          description: Redirection to open a service in osparc (see /view)
          format: uri
      example:
        key: simcore/services/dynamic/sim4life
        title: Sim4Life Mattermost
        description: It is also sim4life for the web
        thumbnail: https://via.placeholder.com/170x120.png
        file_extensions:
        - smash
        - h5
        view_url: https://host.com/view?viewer_key=simcore/services/dynamic/raw-graphs&viewer_version=1.2.3
