components:
  requestBodies:
    FileMetaDataBody:
      content:
        application/json:
          schema:
            example:
              bucket_name: simcore-testing
              file_id: '3'
              file_name: example.txt
              file_uuid: simcore.s3/simcore-testing/105/1000/3
              location_id: '0'
              location_name: simcore.s3
              node_id: '10000'
              node_name: alpha
              object_name: 105/10000/3
              project_id: '105'
              project_name: futurology
              user_id: '12'
              user_name: dennis
            properties:
              bucket_name:
                type: string
              file_id:
                type: string
              file_name:
                type: string
              file_uuid:
                type: string
              location:
                type: string
              location_id:
                type: string
              node_id:
                type: string
              node_name:
                type: string
              object_name:
                type: string
              project_id:
                type: string
              project_name:
                type: string
              user_id:
                type: string
              user_name:
                type: string
            type: object
  responses:
    DefaultErrorResponse:
      content:
        application/json:
          schema:
            properties:
              data:
                default: null
                nullable: true
              error:
                example:
                  BadRequestError:
                    errors:
                    - code: InvalidEmail
                      field: email
                      message: Email is malformed
                    - code: UnsavePassword
                      field: pasword
                      message: Password is not secure
                    logs:
                    - level: ERROR
                      message: Requested information is incomplete or malformed
                    - level: ERROR
                      logger: USER
                      message: Invalid email and password
                    status: 400
                properties:
                  errors:
                    description: errors metadata
                    items:
                      properties:
                        code:
                          description: Typically the name of the exception that produced
                            it otherwise some known error code
                          type: string
                        field:
                          description: Specific field within the resource
                          type: string
                        message:
                          description: Error message specific to this item
                          type: string
                        resource:
                          description: API resource affected by this error
                          type: string
                      required:
                      - code
                      - message
                      type: object
                    type: array
                  logs:
                    description: log messages
                    items:
                      example:
                        level: INFO
                        logger: user-logger
                        message: Hi there, Mr user
                      properties:
                        level:
                          default: INFO
                          description: log level
                          enum:
                          - DEBUG
                          - WARNING
                          - INFO
                          - ERROR
                          type: string
                        logger:
                          description: name of the logger receiving this message
                          type: string
                        message:
                          description: log message. If logger is USER, then it MUST
                            be human readable
                          type: string
                      required:
                      - message
                      type: object
                    type: array
                  status:
                    description: HTTP error code
                    type: integer
                type: object
            required:
            - data
            - error
            type: object
      description: Unexpected error
    FileMetaData_200:
      content:
        application/json:
          schema:
            example:
              bucket_name: simcore-testing
              file_id: '3'
              file_name: example.txt
              file_uuid: simcore.s3/simcore-testing/105/1000/3
              location_id: '0'
              location_name: simcore.s3
              node_id: '10000'
              node_name: alpha
              object_name: 105/10000/3
              project_id: '105'
              project_name: futurology
              user_id: '12'
              user_name: dennis
            properties:
              bucket_name:
                type: string
              file_id:
                type: string
              file_name:
                type: string
              file_uuid:
                type: string
              location:
                type: string
              location_id:
                type: string
              node_id:
                type: string
              node_name:
                type: string
              object_name:
                type: string
              project_id:
                type: string
              project_name:
                type: string
              user_id:
                type: string
              user_name:
                type: string
            type: object
      description: Returns file metadata
    OK_NoContent_204:
      description: everything is OK, but there is no content to return
    PresignedLink_200:
      content:
        application/json:
          schema:
            example:
              link: example_link
            properties:
              link:
                type: string
            type: object
      description: Returns presigned link
info:
  contact:
    email: support@simcore.io
    name: IT'IS Foundation
  description: API definition for simcore-service-storage service
  license:
    name: MIT
    url: https://github.com/ITISFoundation/osparc-simcore/blob/master/LICENSE
  title: simcore-service-storage API
  version: 0.1.0
openapi: 3.0.0
paths:
  /:
    get:
      description: Some general information on the API and state of the service behind
      operationId: health_check
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    example:
                      api_version: 0.1.0-dev+NJuzzD9S
                      name: simcore-director-service
                      status: SERVICE_RUNNING
                      version: 0.1.0-dev+N127Mfv9H
                    properties:
                      api_version:
                        type: string
                      name:
                        type: string
                      status:
                        type: string
                      version:
                        type: string
                    type: object
                  error:
                    example:
                      BadRequestError:
                        errors:
                        - code: InvalidEmail
                          field: email
                          message: Email is malformed
                        - code: UnsavePassword
                          field: pasword
                          message: Password is not secure
                        logs:
                        - level: ERROR
                          message: Requested information is incomplete or malformed
                        - level: ERROR
                          logger: USER
                          message: Invalid email and password
                        status: 400
                    properties:
                      errors:
                        description: errors metadata
                        items:
                          properties:
                            code:
                              description: Typically the name of the exception that
                                produced it otherwise some known error code
                              type: string
                            field:
                              description: Specific field within the resource
                              type: string
                            message:
                              description: Error message specific to this item
                              type: string
                            resource:
                              description: API resource affected by this error
                              type: string
                          required:
                          - code
                          - message
                          type: object
                        type: array
                      logs:
                        description: log messages
                        items:
                          example:
                            level: INFO
                            logger: user-logger
                            message: Hi there, Mr user
                          properties:
                            level:
                              default: INFO
                              description: log level
                              enum:
                              - DEBUG
                              - WARNING
                              - INFO
                              - ERROR
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                            message:
                              description: log message. If logger is USER, then it
                                MUST be human readable
                              type: string
                          required:
                          - message
                          type: object
                        type: array
                      status:
                        description: HTTP error code
                        type: integer
                    type: object
                required:
                - data
                - error
                type: object
          description: Service information
        default:
          content:
            application/json:
              schema:
                properties:
                  data:
                    default: null
                    nullable: true
                  error:
                    example:
                      BadRequestError:
                        errors:
                        - code: InvalidEmail
                          field: email
                          message: Email is malformed
                        - code: UnsavePassword
                          field: pasword
                          message: Password is not secure
                        logs:
                        - level: ERROR
                          message: Requested information is incomplete or malformed
                        - level: ERROR
                          logger: USER
                          message: Invalid email and password
                        status: 400
                    properties:
                      errors:
                        description: errors metadata
                        items:
                          properties:
                            code:
                              description: Typically the name of the exception that
                                produced it otherwise some known error code
                              type: string
                            field:
                              description: Specific field within the resource
                              type: string
                            message:
                              description: Error message specific to this item
                              type: string
                            resource:
                              description: API resource affected by this error
                              type: string
                          required:
                          - code
                          - message
                          type: object
                        type: array
                      logs:
                        description: log messages
                        items:
                          example:
                            level: INFO
                            logger: user-logger
                            message: Hi there, Mr user
                          properties:
                            level:
                              default: INFO
                              description: log level
                              enum:
                              - DEBUG
                              - WARNING
                              - INFO
                              - ERROR
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                            message:
                              description: log message. If logger is USER, then it
                                MUST be human readable
                              type: string
                          required:
                          - message
                          type: object
                        type: array
                      status:
                        description: HTTP error code
                        type: integer
                    type: object
                required:
                - data
                - error
                type: object
          description: Unexpected error
      summary: Service health-check endpoint
      tags:
      - users
  /check/{action}:
    post:
      parameters:
      - in: query
        name: data
        schema:
          type: string
      - in: path
        name: action
        schema:
          default: echo
          enum:
          - fail
          - echo
          type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                body_value:
                  key1: value1
                  key2: value2
                path_value: foo
                query_value: bar
              properties:
                body_value:
                  additionalProperties:
                    type: string
                  type: object
                path_value:
                  type: string
                query_value:
                  type: string
              required:
              - path_value
              - query_value
              - body_value
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  data:
                    example:
                      body_value:
                        key1: value1
                        key2: value2
                      path_value: foo
                      query_value: bar
                    properties:
                      body_value:
                        additionalProperties:
                          type: string
                        type: object
                      path_value:
                        type: string
                      query_value:
                        type: string
                    required:
                    - path_value
                    - query_value
                    - body_value
                    type: object
                  error:
                    example:
                      BadRequestError:
                        errors:
                        - code: InvalidEmail
                          field: email
                          message: Email is malformed
                        - code: UnsavePassword
                          field: pasword
                          message: Password is not secure
                        logs:
                        - level: ERROR
                          message: Requested information is incomplete or malformed
                        - level: ERROR
                          logger: USER
                          message: Invalid email and password
                        status: 400
                    properties:
                      errors:
                        description: errors metadata
                        items:
                          properties:
                            code:
                              description: Typically the name of the exception that
                                produced it otherwise some known error code
                              type: string
                            field:
                              description: Specific field within the resource
                              type: string
                            message:
                              description: Error message specific to this item
                              type: string
                            resource:
                              description: API resource affected by this error
                              type: string
                          required:
                          - code
                          - message
                          type: object
                        type: array
                      logs:
                        description: log messages
                        items:
                          example:
                            level: INFO
                            logger: user-logger
                            message: Hi there, Mr user
                          properties:
                            level:
                              default: INFO
                              description: log level
                              enum:
                              - DEBUG
                              - WARNING
                              - INFO
                              - ERROR
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                            message:
                              description: log message. If logger is USER, then it
                                MUST be human readable
                              type: string
                          required:
                          - message
                          type: object
                        type: array
                      status:
                        description: HTTP error code
                        type: integer
                    type: object
                required:
                - data
                - error
                type: object
          description: Echoes response based on action
        default:
          content:
            application/json:
              schema:
                properties:
                  data:
                    default: null
                    nullable: true
                  error:
                    example:
                      BadRequestError:
                        errors:
                        - code: InvalidEmail
                          field: email
                          message: Email is malformed
                        - code: UnsavePassword
                          field: pasword
                          message: Password is not secure
                        logs:
                        - level: ERROR
                          message: Requested information is incomplete or malformed
                        - level: ERROR
                          logger: USER
                          message: Invalid email and password
                        status: 400
                    properties:
                      errors:
                        description: errors metadata
                        items:
                          properties:
                            code:
                              description: Typically the name of the exception that
                                produced it otherwise some known error code
                              type: string
                            field:
                              description: Specific field within the resource
                              type: string
                            message:
                              description: Error message specific to this item
                              type: string
                            resource:
                              description: API resource affected by this error
                              type: string
                          required:
                          - code
                          - message
                          type: object
                        type: array
                      logs:
                        description: log messages
                        items:
                          example:
                            level: INFO
                            logger: user-logger
                            message: Hi there, Mr user
                          properties:
                            level:
                              default: INFO
                              description: log level
                              enum:
                              - DEBUG
                              - WARNING
                              - INFO
                              - ERROR
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                            message:
                              description: log message. If logger is USER, then it
                                MUST be human readable
                              type: string
                          required:
                          - message
                          type: object
                        type: array
                      status:
                        description: HTTP error code
                        type: integer
                    type: object
                required:
                - data
                - error
                type: object
          description: Unexpected error
      summary: Test checkpoint to ask server to fail or echo back the transmitted
        data
      tags:
      - tests
  /locations:
    get:
      operationId: get_storage_locations
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  example:
                    filename: simcore.s3
                    id: 0
                  properties:
                    id:
                      type: number
                    name:
                      type: string
                  type: object
                type: array
          description: List of availabe storage locations
        default:
          content:
            application/json:
              schema:
                properties:
                  data:
                    default: null
                    nullable: true
                  error:
                    example:
                      BadRequestError:
                        errors:
                        - code: InvalidEmail
                          field: email
                          message: Email is malformed
                        - code: UnsavePassword
                          field: pasword
                          message: Password is not secure
                        logs:
                        - level: ERROR
                          message: Requested information is incomplete or malformed
                        - level: ERROR
                          logger: USER
                          message: Invalid email and password
                        status: 400
                    properties:
                      errors:
                        description: errors metadata
                        items:
                          properties:
                            code:
                              description: Typically the name of the exception that
                                produced it otherwise some known error code
                              type: string
                            field:
                              description: Specific field within the resource
                              type: string
                            message:
                              description: Error message specific to this item
                              type: string
                            resource:
                              description: API resource affected by this error
                              type: string
                          required:
                          - code
                          - message
                          type: object
                        type: array
                      logs:
                        description: log messages
                        items:
                          example:
                            level: INFO
                            logger: user-logger
                            message: Hi there, Mr user
                          properties:
                            level:
                              default: INFO
                              description: log level
                              enum:
                              - DEBUG
                              - WARNING
                              - INFO
                              - ERROR
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                            message:
                              description: log message. If logger is USER, then it
                                MUST be human readable
                              type: string
                          required:
                          - message
                          type: object
                        type: array
                      status:
                        description: HTTP error code
                        type: integer
                    type: object
                required:
                - data
                - error
                type: object
          description: Unexpected error
      summary: Get available storage locations
  /locations/{location_id}/files/metadata:
    get:
      operationId: get_files_metadata
      parameters:
      - in: path
        name: location_id
        required: true
        schema:
          type: string
      - in: query
        name: user_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  example:
                    bucket_name: simcore-testing
                    file_id: '3'
                    file_name: example.txt
                    file_uuid: simcore.s3/simcore-testing/105/1000/3
                    location_id: '0'
                    location_name: simcore.s3
                    node_id: '10000'
                    node_name: alpha
                    object_name: 105/10000/3
                    project_id: '105'
                    project_name: futurology
                    user_id: '12'
                    user_name: dennis
                  properties:
                    bucket_name:
                      type: string
                    file_id:
                      type: string
                    file_name:
                      type: string
                    file_uuid:
                      type: string
                    location:
                      type: string
                    location_id:
                      type: string
                    node_id:
                      type: string
                    node_name:
                      type: string
                    object_name:
                      type: string
                    project_id:
                      type: string
                    project_name:
                      type: string
                    user_id:
                      type: string
                    user_name:
                      type: string
                  type: object
                type: array
          description: list of file meta-datas
        default:
          content:
            application/json:
              schema:
                properties:
                  data:
                    default: null
                    nullable: true
                  error:
                    example:
                      BadRequestError:
                        errors:
                        - code: InvalidEmail
                          field: email
                          message: Email is malformed
                        - code: UnsavePassword
                          field: pasword
                          message: Password is not secure
                        logs:
                        - level: ERROR
                          message: Requested information is incomplete or malformed
                        - level: ERROR
                          logger: USER
                          message: Invalid email and password
                        status: 400
                    properties:
                      errors:
                        description: errors metadata
                        items:
                          properties:
                            code:
                              description: Typically the name of the exception that
                                produced it otherwise some known error code
                              type: string
                            field:
                              description: Specific field within the resource
                              type: string
                            message:
                              description: Error message specific to this item
                              type: string
                            resource:
                              description: API resource affected by this error
                              type: string
                          required:
                          - code
                          - message
                          type: object
                        type: array
                      logs:
                        description: log messages
                        items:
                          example:
                            level: INFO
                            logger: user-logger
                            message: Hi there, Mr user
                          properties:
                            level:
                              default: INFO
                              description: log level
                              enum:
                              - DEBUG
                              - WARNING
                              - INFO
                              - ERROR
                              type: string
                            logger:
                              description: name of the logger receiving this message
                              type: string
                            message:
                              description: log message. If logger is USER, then it
                                MUST be human readable
                              type: string
                          required:
                          - message
                          type: object
                        type: array
                      status:
                        description: HTTP error code
                        type: integer
                    type: object
                required:
                - data
                - error
                type: object
          description: Unexpected error
      summary: Get Files Metadata
  /locations/{location_id}/files/{fileId}:
    delete:
      operationId: delete_file
      parameters:
      - in: path
        name: fileId
        required: true
        schema:
          type: string
      - in: path
        name: location_id
        required: true
        schema:
          type: string
      - in: query
        name: user_id
        required: true
        schema:
          type: string
      responses:
        '204':
          description: ''
      summary: Deletes File
    get:
      operationId: download_file
      parameters:
      - in: path
        name: fileId
        required: true
        schema:
          type: string
      - in: path
        name: location_id
        required: true
        schema:
          type: string
      - in: query
        name: user_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  link: example_link
                properties:
                  link:
                    type: string
                type: object
          description: Returns presigned link
      summary: Returns download link for requested file
    put:
      operationId: upload_file
      parameters:
      - in: path
        name: fileId
        required: true
        schema:
          type: string
      - in: path
        name: location_id
        required: true
        schema:
          type: string
      - in: query
        name: user_id
        required: true
        schema:
          type: string
      - in: query
        name: extra_source
        required: false
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  link: example_link
                properties:
                  link:
                    type: string
                type: object
          description: Returns presigned link
      summary: Returns upload link or performs copy operation to datcore
  /locations/{location_id}/files/{fileId}/metadata:
    get:
      operationId: get_file_metadata
      parameters:
      - in: path
        name: fileId
        required: true
        schema:
          type: string
      - in: path
        name: location_id
        required: true
        schema:
          type: string
      - in: query
        name: user_id
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  bucket_name: simcore-testing
                  file_id: '3'
                  file_name: example.txt
                  file_uuid: simcore.s3/simcore-testing/105/1000/3
                  location_id: '0'
                  location_name: simcore.s3
                  node_id: '10000'
                  node_name: alpha
                  object_name: 105/10000/3
                  project_id: '105'
                  project_name: futurology
                  user_id: '12'
                  user_name: dennis
                properties:
                  bucket_name:
                    type: string
                  file_id:
                    type: string
                  file_name:
                    type: string
                  file_uuid:
                    type: string
                  location:
                    type: string
                  location_id:
                    type: string
                  node_id:
                    type: string
                  node_name:
                    type: string
                  object_name:
                    type: string
                  project_id:
                    type: string
                  project_name:
                    type: string
                  user_id:
                    type: string
                  user_name:
                    type: string
                type: object
          description: Returns file metadata
      summary: Get File Metadata
    patch:
      operationId: update_file_meta_data
      parameters:
      - in: path
        name: fileId
        required: true
        schema:
          type: string
      - in: path
        name: location_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              example:
                bucket_name: simcore-testing
                file_id: '3'
                file_name: example.txt
                file_uuid: simcore.s3/simcore-testing/105/1000/3
                location_id: '0'
                location_name: simcore.s3
                node_id: '10000'
                node_name: alpha
                object_name: 105/10000/3
                project_id: '105'
                project_name: futurology
                user_id: '12'
                user_name: dennis
              properties:
                bucket_name:
                  type: string
                file_id:
                  type: string
                file_name:
                  type: string
                file_uuid:
                  type: string
                location:
                  type: string
                location_id:
                  type: string
                node_id:
                  type: string
                node_name:
                  type: string
                object_name:
                  type: string
                project_id:
                  type: string
                project_name:
                  type: string
                user_id:
                  type: string
                user_name:
                  type: string
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  bucket_name: simcore-testing
                  file_id: '3'
                  file_name: example.txt
                  file_uuid: simcore.s3/simcore-testing/105/1000/3
                  location_id: '0'
                  location_name: simcore.s3
                  node_id: '10000'
                  node_name: alpha
                  object_name: 105/10000/3
                  project_id: '105'
                  project_name: futurology
                  user_id: '12'
                  user_name: dennis
                properties:
                  bucket_name:
                    type: string
                  file_id:
                    type: string
                  file_name:
                    type: string
                  file_uuid:
                    type: string
                  location:
                    type: string
                  location_id:
                    type: string
                  node_id:
                    type: string
                  node_name:
                    type: string
                  object_name:
                    type: string
                  project_id:
                    type: string
                  project_name:
                    type: string
                  user_id:
                    type: string
                  user_name:
                    type: string
                type: object
          description: Returns file metadata
      summary: Update File Metadata
servers:
- description: Development server
  url: http://{host}:{port}/v0
  variables:
    host:
      default: localhost
    port:
      default: '8001'
- description: Production server
  url: https://storage:{port}/v0'
  variables:
    port:
      default: '8080'
tags:
- description: Secured Admin-only calls
  name: admins
- description: Operations available for testing
  name: tests
- description: Operations available to regular users
  name: users
