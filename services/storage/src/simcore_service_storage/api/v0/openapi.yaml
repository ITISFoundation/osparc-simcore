openapi: 3.0.0
info:
  description: API definition for simcore-service-storage service
  version: 0.2.1
  title: simcore-service-storage API
  contact:
    name: IT'IS Foundation
    email: support@simcore.io
  license:
    name: MIT
    url: 'https://github.com/ITISFoundation/osparc-simcore/blob/master/LICENSE'
servers:
  - description: API server
    url: /v0
  - description: Development server
    url: 'http://{host}:{port}/{basePath}'
    variables:
      host:
        default: localhost
      port:
        default: '8080'
      basePath:
        enum:
          - v0
        default: v0
paths:
  /:
    get:
      summary: Service health-check endpoint
      description: Some general information on the API and state of the service behind
      operationId: health_check
      responses:
        '200':
          description: Service information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  /status:
    get:
      summary: checks status of self and connected services
      operationId: get_status
      responses:
        '200':
          description: returns app status check
  '/check/{action}':
    post:
      summary: Test checkpoint to ask server to fail or echo back the transmitted data
      parameters:
        - in: path
          required: true
          name: action
          schema:
            type: string
            default: echo
            enum:
              - fail
              - echo
        - in: query
          name: data
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Fake'
      responses:
        '200':
          description: Echoes response based on action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FakeEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  /locations:
    get:
      summary: Lists available storage locations
      operationId: get_storage_locations
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of available storage locations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileLocationArrayEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/locations/{location_id}/datasets':
    get:
      summary: Lists all dataset's metadata
      operationId: get_datasets_metadata
      parameters:
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: list of dataset meta-datas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetMetaDataArrayEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/locations/{location_id}/files/metadata':
    get:
      summary: Lists all file's metadata
      operationId: get_files_metadata
      parameters:
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
        - name: uuid_filter
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: list of file meta-datas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetaDataArrayEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/locations/{location_id}/datasets/{dataset_id}/metadata':
    get:
      summary: Get dataset metadata
      operationId: get_files_metadata_dataset
      parameters:
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: dataset_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: list of file meta-datas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetaDataArrayEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/locations/{location_id}/files/{fileId}/metadata':
    get:
      summary: Get file metadata
      operationId: get_file_metadata
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns file metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetaDataEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    patch:
      summary: Update file metadata
      operationId: update_file_meta_data
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileMetaData'
      responses:
        '200':
          description: Returns file metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetaDataEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/locations/{location_id}/files/{fileId}':
    get:
      summary: Gets download link for file at location
      operationId: download_file
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns presigned link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresignedLinkEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    put:
      summary: Returns upload link or performs copy operation to datcore
      operationId: upload_file
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
        - name: extra_location
          in: query
          required: false
          schema:
            type: string
        - name: extra_source
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns presigned link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresignedLinkEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    delete:
      summary: Deletes file
      operationId: delete_file
      parameters:
        - name: fileId
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 'everything is OK, but there is no content to return'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/simcore-s3/files/metadata:search':
    post:
      summary: Returns metadata for all files matching a pattern
      operationId: search_files_starting_with
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
        - name: startswith
          description: matches starting string of the file_uuid
          in: query
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: list of matching files found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetaDataArrayEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  /simcore-s3/folders:
    post:
      summary: Deep copies of all data from source to destination project in s3
      operationId: copy_folders_from_project
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                source:
                  $ref: '#/components/schemas/Project'
                destination:
                  $ref: '#/components/schemas/Project'
                nodes_map:
                  type: object
                  description: maps source and destination node uuids
                  additionalProperties:
                    type: string
      responses:
        '201':
          description: Data from destination project copied and returns project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/simcore-s3/folders/{folder_id}':
    delete:
      summary: Deletes all objects within a node_id or within a project_id if node_id is omitted
      operationId: delete_folders_of_project
      parameters:
        - name: folder_id
          in: path
          required: true
          schema:
            type: string
        - name: node_id
          in: query
          required: false
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: folder has been successfully deleted
components:
  schemas:
    HealthCheckEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/HealthCheck'
        error:
          nullable: true
          default: null
    HealthCheck:
      type: object
      properties:
        name:
          type: string
        status:
          type: string
        api_version:
          type: string
        version:
          type: string
      example:
        name: simcore-director-service
        status: SERVICE_RUNNING
        api_version: 0.1.0-dev+NJuzzD9S
        version: 0.1.0-dev+N127Mfv9H
    ErrorEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          nullable: true
          default: null
        error:
          $ref: '#/components/schemas/Error'
    Error:
      type: object
      properties:
        logs:
          description: log messages
          type: array
          items:
            $ref: '#/components/schemas/LogMessage'
        errors:
          description: errors metadata
          type: array
          items:
            $ref: '#/components/schemas/ErrorItem'
        status:
          description: HTTP error code
          type: integer
      example:
        BadRequestError:
          logs:
            - message: Requested information is incomplete or malformed
              level: ERROR
            - message: Invalid email and password
              level: ERROR
              logger: USER
          errors:
            - code: InvalidEmail
              message: Email is malformed
              field: email
            - code: UnsavePassword
              message: Password is not secure
              field: pasword
          status: 400
    ErrorItem:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Typically the name of the exception that produced it otherwise some known error code
        message:
          type: string
          description: Error message specific to this item
        resource:
          type: string
          description: API resource affected by this error
        field:
          type: string
          description: Specific field within the resource
    LogMessageEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/LogMessage'
        error:
          nullable: true
          default: null
    LogMessage:
      type: object
      properties:
        level:
          description: log level
          type: string
          default: INFO
          enum:
            - DEBUG
            - WARNING
            - INFO
            - ERROR
        message:
          description: 'log message. If logger is USER, then it MUST be human readable'
          type: string
        logger:
          description: name of the logger receiving this message
          type: string
      required:
        - message
      example:
        message: 'Hi there, Mr user'
        level: INFO
        logger: user-logger
    FakeEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/Fake'
        error:
          nullable: true
          default: null
    Fake:
      type: object
      required:
        - path_value
        - query_value
        - body_value
      properties:
        path_value:
          type: string
        query_value:
          type: string
        body_value:
          type: object
          additionalProperties: true
      example:
        path_value: foo
        query_value: bar
        body_value:
          key1: value1
          key2: value2
    FileLocationArrayEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/FileLocationArray'
        error:
          nullable: true
          default: null
    FileLocationArray:
      type: array
      items:
        $ref: '#/components/schemas/FileLocation'
    FileLocationEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/FileLocation'
        error:
          nullable: true
          default: null
    FileLocation:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
      example:
        filename: simcore.s3
        id: 0
    DatasetMetaDataArrayEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/DatasetMetaDataArray'
        error:
          nullable: true
          default: null
    DatasetMetaDataEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/DatasetMetaData'
        error:
          nullable: true
          default: null
    DatasetMetaData:
      type: object
      properties:
        dataset_id:
          type: string
        display_name:
          type: string
      example:
        dataset_uuid: 'N:id-aaaa'
        display_name: simcore-testing
    DatasetMetaDataArray:
      type: array
      items:
        $ref: '#/components/schemas/DatasetMetaData'
    FileMetaDataEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/FileMetaData'
        error:
          nullable: true
          default: null
    FileMetaData:
      type: object
      properties:
        file_uuid:
          type: string
        location_id:
          type: string
        location:
          type: string
        bucket_name:
          type: string
        object_name:
          type: string
        project_id:
          type: string
        project_name:
          type: string
        node_id:
          type: string
        node_name:
          type: string
        file_name:
          type: string
        user_id:
          type: string
        user_name:
          type: string
        file_id:
          type: string
        raw_file_path:
          type: string
        display_file_path:
          type: string
        created_at:
          type: string
        last_modified:
          type: string
        file_size:
          type: integer
        parent_id:
          type: string
        entity_tag:
          type: string
    FileMetaDataArrayEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/FileMetaDataArray'
        error:
          nullable: true
          default: null
    FileMetaDataArray:
      type: array
      items:
        $ref: '#/components/schemas/FileMetaData'
    PresignedLinkEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/PresignedLink'
        error:
          nullable: true
          default: null
    PresignedLink:
      type: object
      required:
        - link
      properties:
        link:
          type: string
      example:
        link: example_link
    Project:
      title: simcore project
      description: Description of a simcore project
      type: object
      additionalProperties: false
      required:
        - uuid
        - name
        - description
        - prjOwner
        - accessRights
        - creationDate
        - lastChangeDate
        - thumbnail
        - workbench
      properties:
        uuid:
          type: string
          format: uuid
          description: project unique identifier
          example: 07640335-a91f-468c-ab69-a374fa82078d
        name:
          type: string
          description: project name
          example: Temporal Distortion Simulator
        description:
          type: string
          description: longer one-line description about the project
          example: Dabbling in temporal transitions ...
        prjOwner:
          type: string
          format: email
          description: user email
        accessRights:
          type: object
          description: object containing the GroupID as key and read/write/execution permissions as value
          x-patternProperties:
            ^\S+$:
              type: object
              description: the group id
              additionalProperties: false
              required:
                - read
                - write
                - delete
              properties:
                read:
                  type: boolean
                  description: gives read access
                write:
                  type: boolean
                  description: gives write access
                delete:
                  type: boolean
                  description: gives deletion rights
          additionalProperties: true
        creationDate:
          type: string
          description: project creation date
          pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
          example: '2018-07-01T11:13:43Z'
        lastChangeDate:
          type: string
          description: last save date
          pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
          example: '2018-07-01T11:13:43Z'
        thumbnail:
          type: string
          minLength: 0
          maxLength: 2083
          format: uri
          description: url of the latest screenshot of the project
          example: 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
        workbench:
          type: object
          x-patternProperties:
            '^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?4[0-9a-fA-F]{3}-?[89abAB][0-9a-fA-F]{3}-?[0-9a-fA-F]{12}$':
              type: object
              additionalProperties: false
              required:
                - key
                - version
                - label
              properties:
                key:
                  type: string
                  description: distinctive name for the node based on the docker registry path
                  pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
                  example:
                    - simcore/services/comp/sleeper
                    - simcore/services/dynamic/3dviewer
                    - simcore/services/frontend/file-picker
                version:
                  type: string
                  description: semantic version number of the node
                  pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                  example:
                    - 1.0.0
                    - 0.0.1
                label:
                  type: string
                  description: The short name of the node
                  example:
                    - JupyterLab
                progress:
                  type: number
                  maximum: 100
                  minimum: 0
                  description: the node progress value
                thumbnail:
                  minLength: 0
                  maxLength: 2083
                  format: uri
                  type: string
                  description: url of the latest screenshot of the node
                  example:
                    - 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                runHash:
                  description: the hex digest of the resolved inputs +outputs hash at the time when the last outputs were generated
                  type:
                    - string
                    - 'null'
                  example:
                    - a4337bc45a8fc544c03f52dc550cd6e1e87021bc896588bd79e901e2
                inputs:
                  type: object
                  description: values of input properties
                  patternProperties:
                    '^[-_a-zA-Z0-9]+$':
                      oneOf:
                        - type:
                            - integer
                            - boolean
                            - string
                            - number
                            - 'null'
                        - type: object
                          additionalProperties: false
                          required:
                            - nodeUuid
                            - output
                          properties:
                            nodeUuid:
                              type: string
                              format: uuid
                            output:
                              type: string
                              pattern: '^[-_a-zA-Z0-9]+$'
                        - type: object
                          additionalProperties: false
                          required:
                            - store
                            - path
                          properties:
                            store:
                              type:
                                - string
                                - integer
                            dataset:
                              type: string
                            path:
                              type: string
                            label:
                              type: string
                            eTag:
                              type: string
                        - type: object
                          additionalProperties: false
                          required:
                            - downloadLink
                          properties:
                            downloadLink:
                              minLength: 1
                              maxLength: 65536
                              type: string
                              format: uri
                            label:
                              type: string
                inputAccess:
                  description: map with key - access level pairs
                  type: object
                  patternProperties:
                    '^[-_a-zA-Z0-9]+$':
                      type: string
                      enum:
                        - Invisible
                        - ReadOnly
                        - ReadAndWrite
                      default: ReadAndWrite
                      example:
                        - ReadOnly
                inputNodes:
                  type: array
                  items:
                    type: string
                    format: uuid
                  description: node IDs of where the node is connected to
                  example:
                    - nodeUuid1
                    - nodeUuid2
                outputs:
                  default: {}
                  type: object
                  patternProperties:
                    '^[-_a-zA-Z0-9]+$':
                      oneOf:
                        - type:
                            - integer
                            - boolean
                            - string
                            - number
                            - 'null'
                        - type: object
                          additionalProperties: false
                          required:
                            - store
                            - path
                          properties:
                            store:
                              type:
                                - string
                                - integer
                            dataset:
                              type: string
                            path:
                              type: string
                            label:
                              type: string
                            eTag:
                              type: string
                        - type: object
                          additionalProperties: false
                          required:
                            - downloadLink
                          properties:
                            downloadLink:
                              minLength: 1
                              maxLength: 65536
                              type: string
                              format: uri
                            label:
                              type: string
                outputNode:
                  type: boolean
                  deprecated: true
                outputNodes:
                  type: array
                  items:
                    type: string
                    format: uuid
                  description: Used in group-nodes. Node IDs of those connected to the output
                  example:
                    - nodeUuid1
                    - nodeUuid2
                parent:
                  type:
                    - 'null'
                    - string
                  format: uuid
                  description: Parent's (group-nodes') node ID s.
                  example:
                    - nodeUuid1
                    - nodeUuid2
                position:
                  type: object
                  additionalProperties: false
                  required:
                    - x
                    - 'y'
                  properties:
                    x:
                      type: integer
                      description: The x position
                      example:
                        - '12'
                    'y':
                      type: integer
                      description: The y position
                      example:
                        - '15'
                  deprecated: true
                state:
                  title: NodeState
                  type: object
                  properties:
                    modified:
                      title: Modified
                      description: true if the node's outputs need to be re-computed
                      default: true
                      type: boolean
                    dependencies:
                      title: Dependencies
                      description: contains the node inputs dependencies if they need to be computed first
                      type: array
                      uniqueItems: true
                      items:
                        type: string
                        format: uuid
                    currentStatus:
                      description: the node's current state
                      default: NOT_STARTED
                      example:
                        - RUNNING
                        - FAILED
                      enum:
                        - UNKNOWN
                        - PUBLISHED
                        - NOT_STARTED
                        - PENDING
                        - STARTED
                        - RETRY
                        - SUCCESS
                        - FAILED
                        - ABORTED
                      type: string
                  additionalProperties: false
          additionalProperties: true
        ui:
          type: object
          additionalProperties: true
          properties:
            workbench:
              type: object
              x-patternProperties:
                '^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?4[0-9a-fA-F]{3}-?[89abAB][0-9a-fA-F]{3}-?[0-9a-fA-F]{12}$':
                  type: object
                  additionalProperties: false
                  required:
                    - position
                  properties:
                    position:
                      type: object
                      additionalProperties: false
                      required:
                        - x
                        - 'y'
                      properties:
                        x:
                          type: integer
                          description: The x position
                          example:
                            - '12'
                        'y':
                          type: integer
                          description: The y position
                          example:
                            - '15'
              additionalProperties: true
            slideshow:
              type: object
              x-patternProperties:
                '^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?4[0-9a-fA-F]{3}-?[89abAB][0-9a-fA-F]{3}-?[0-9a-fA-F]{12}$':
                  type: object
                  additionalProperties: false
                  required:
                    - position
                  properties:
                    position:
                      type: integer
                      description: Slide's position
                      example:
                        - 0
                        - 2
              additionalProperties: true
            currentNodeId:
              type: string
              format: uuid
        tags:
          type: array
          items:
            type: integer
        classifiers:
          type: array
          description: Contains the reference to the project classifiers
          items:
            type: string
          example: 'some:id:to:a:classifier'
        dev:
          type: object
          description: object used for development purposes only
        state:
          title: State
          description: Project state
          anyOf:
            - nullable: true
            - title: ProjectState
              type: object
              additionalProperties: false
              properties:
                locked:
                  title: Locked
                  description: The project lock state
                  allOf:
                    - title: ProjectLocked
                      type: object
                      additionalProperties: false
                      properties:
                        value:
                          title: Value
                          description: True if the project is locked by another user
                          type: boolean
                        owner:
                          title: Owner
                          description: The user that owns the lock
                          allOf:
                            - title: Owner
                              type: object
                              additionalProperties: false
                              properties:
                                user_id:
                                  title: User Id
                                  type: integer
                                  description: Owner's identifier when registered in the user's database table
                                  example:
                                    - 2
                                first_name:
                                  title: First Name
                                  description: Owner first name
                                  example:
                                    - John
                                  type: string
                                last_name:
                                  title: Last Name
                                  description: Owner last name
                                  example:
                                    - Smith
                                  type: string
                              required:
                                - user_id
                                - first_name
                                - last_name
                      required:
                        - value
                state:
                  title: State
                  description: The project running state
                  allOf:
                    - title: ProjectRunningState
                      type: object
                      additionalProperties: false
                      properties:
                        value:
                          title: RunningState
                          description: An enumeration.
                          enum:
                            - UNKNOWN
                            - NOT_STARTED
                            - PUBLISHED
                            - PENDING
                            - STARTED
                            - RETRY
                            - SUCCESS
                            - FAILED
                            - ABORTED
                          type: string
                      required:
                        - value
              required:
                - locked
                - state
        quality:
          type: object
          title: Quality
          description: Object containing Quality Assessment related data
  responses:
    DefaultErrorResponse:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorEnveloped'
