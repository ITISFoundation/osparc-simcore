openapi: 3.0.2
info:
  title: simcore-service-storage API
  description: API definition for simcore-service-storage service
  contact:
    name: IT'IS Foundation
    email: support@simcore.io
  license:
    name: MIT
    url: 'https://github.com/ITISFoundation/osparc-simcore/blob/master/LICENSE'
  version: 0.3.0
servers:
  - url: /v0
    description: 'Default server: requests directed to serving url'
  - url: 'http://{host}:{port}/v0'
    description: 'Development server: can configure any base url'
    variables:
      host:
        default: 127.0.0.1
      port:
        default: '8000'
paths:
  '/v0/locations/{location_id}/datasets':
    get:
      tags:
        - datasets
      summary: Get datasets metadata
      description: returns all the top level datasets a user has access to
      operationId: get_datasets_metadata
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: true
          schema:
            title: User Id
            exclusiveMinimum: true
            type: integer
            minimum: 0
          name: user_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_storage.models.DatasetMetaData__'
  '/v0/locations/{location_id}/datasets/{dataset_id}/metadata':
    get:
      tags:
        - datasets
      summary: Get Files Metadata
      description: returns all the file meta data inside dataset with dataset_id
      operationId: get_files_metadata_dataset
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: true
          schema:
            title: Dataset Id
            type: string
          name: dataset_id
          in: path
        - required: true
          schema:
            title: User Id
            exclusiveMinimum: true
            type: integer
            minimum: 0
          name: user_id
          in: query
        - description: Automatic directory expansion. This will be replaced by pagination the future
          required: false
          schema:
            title: Expand Dirs
            type: boolean
            description: Automatic directory expansion. This will be replaced by pagination the future
            default: true
          name: expand_dirs
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_storage.FileMetaDataGet__'
  /v0/locations:
    get:
      tags:
        - locations
      summary: Get available storage locations
      description: Returns the list of available storage locations
      operationId: get_storage_locations
      parameters:
        - required: true
          schema:
            title: User Id
            exclusiveMinimum: true
            type: integer
            minimum: 0
          name: user_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Storage Locations
                type: array
                items:
                  $ref: '#/components/schemas/DatasetMetaData'
  '/v0/locations/{location_id}:sync':
    post:
      tags:
        - locations
      summary: Manually triggers the synchronisation of the file meta data table in the database
      description: 'Returns an object containing added, changed and removed paths'
      operationId: synchronise_meta_data_table
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: false
          schema:
            title: Dry Run
            type: boolean
            default: false
          name: dry_run
          in: query
        - required: false
          schema:
            title: Fire And Forget
            type: boolean
            default: false
          name: fire_and_forget
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TableSynchronisation_'
  '/v0/locations/{location_id}/files/metadata':
    get:
      tags:
        - files
      summary: Get datasets metadata
      description: returns all the file meta data a user has access to (uuid_filter may be used)
      operationId: get_files_metadata
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: false
          schema:
            title: Uuid Filter
            type: string
            default: ''
          name: uuid_filter
          in: query
        - description: Automatic directory expansion. This will be replaced by pagination the future
          required: false
          schema:
            title: Expand Dirs
            type: boolean
            description: Automatic directory expansion. This will be replaced by pagination the future
            default: true
          name: expand_dirs
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_storage.models.DatasetMetaData__'
  '/v0/locations/{location_id}/files/{file_id}/metadata':
    get:
      tags:
        - files
      summary: Get File Metadata
      description: returns the file meta data of file_id if user_id has the rights to
      operationId: get_file_metadata
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: true
          schema:
            title: File Id
            anyOf:
              - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                type: string
              - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                type: string
          name: file_id
          in: path
        - required: true
          schema:
            title: User Id
            exclusiveMinimum: true
            type: integer
            minimum: 0
          name: user_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get File Metadata
                anyOf:
                  - $ref: '#/components/schemas/FileMetaData'
                  - $ref: '#/components/schemas/Envelope_FileMetaDataGet_'
  '/v0/locations/{location_id}/files/{file_id}':
    get:
      tags:
        - files
      summary: Returns download link for requested file
      description: creates a download file link if user has the rights to
      operationId: download_file
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: true
          schema:
            title: File Id
            anyOf:
              - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                type: string
              - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                type: string
          name: file_id
          in: path
        - required: true
          schema:
            title: User Id
            exclusiveMinimum: true
            type: integer
            minimum: 0
          name: user_id
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/LinkType'
            default: PRESIGNED
          name: link_type
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_PresignedLink_'
    put:
      tags:
        - files
      summary: Returns upload link
      description: 'creates one or more upload file links if user has the rights to, expects the client to complete/abort upload'
      operationId: upload_file
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: true
          schema:
            title: File Id
            anyOf:
              - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                type: string
              - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                type: string
          name: file_id
          in: path
        - required: true
          schema:
            title: File Size
            type: integer
          name: file_size
          in: query
        - required: false
          schema:
            allOf:
              - $ref: '#/components/schemas/LinkType'
            default: PRESIGNED
          name: link_type
          in: query
        - required: false
          schema:
            title: Is Directory
            type: boolean
            default: false
          name: is_directory
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Upload File
                anyOf:
                  - $ref: '#/components/schemas/Envelope_FileUploadSchema_'
                  - $ref: '#/components/schemas/Envelope_AnyUrl_'
    delete:
      tags:
        - files
      summary: Deletes File
      description: deletes file if user has the rights to
      operationId: delete_file
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: true
          schema:
            title: File Id
            anyOf:
              - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                type: string
              - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                type: string
          name: file_id
          in: path
        - required: true
          schema:
            title: User Id
            exclusiveMinimum: true
            type: integer
            minimum: 0
          name: user_id
          in: query
      responses:
        '204':
          description: Successful Response
  '/v0/locations/{location_id}/files/{file_id}:abort':
    post:
      tags:
        - files
      summary: Abort Upload File
      description: |-
        aborts an upload if user has the rights to, and reverts
        to the latest version if available, else will delete the file
      operationId: abort_upload_file
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: true
          schema:
            title: File Id
            anyOf:
              - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                type: string
              - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                type: string
          name: file_id
          in: path
        - required: true
          schema:
            title: User Id
            exclusiveMinimum: true
            type: integer
            minimum: 0
          name: user_id
          in: query
      responses:
        '204':
          description: Successful Response
  '/v0/locations/{location_id}/files/{file_id}:complete':
    post:
      tags:
        - files
      summary: Complete Upload File
      description: completes an upload if the user has the rights to
      operationId: complete_upload_file
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: true
          schema:
            title: File Id
            anyOf:
              - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                type: string
              - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                type: string
          name: file_id
          in: path
        - required: true
          schema:
            title: User Id
            exclusiveMinimum: true
            type: integer
            minimum: 0
          name: user_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Envelope_FileUploadCompletionBody_'
        required: true
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_FileUploadCompleteResponse_'
  '/v0/locations/{location_id}/files/{file_id}:complete/futures/{future_id}':
    post:
      tags:
        - files
      summary: Check for upload completion
      description: Returns state of upload completion
      operationId: is_completed_upload_file
      parameters:
        - required: true
          schema:
            title: Location Id
            type: integer
          name: location_id
          in: path
        - required: true
          schema:
            title: File Id
            anyOf:
              - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                type: string
              - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                type: string
          name: file_id
          in: path
        - required: true
          schema:
            title: Future Id
            type: string
          name: future_id
          in: path
        - required: true
          schema:
            title: User Id
            exclusiveMinimum: true
            type: integer
            minimum: 0
          name: user_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_FileUploadCompleteFutureResponse_'
  /v0/:
    get:
      tags:
        - health
      summary: health check endpoint
      description: Current service health
      operationId: health_check
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_HealthCheck_'
  /v0/status:
    get:
      tags:
        - health
      summary: returns the status of the services inside
      description: returns the status of all the external dependencies
      operationId: get_status
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_AppStatusCheck_'
  '/v0/files/{file_id}:soft-copy':
    post:
      tags:
        - files
      summary: copy file as soft link
      description: creates and returns a soft link
      operationId: copy_as_soft_link
      parameters:
        - required: true
          schema:
            title: File Id
            anyOf:
              - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                type: string
              - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                type: string
          name: file_id
          in: path
        - required: true
          schema:
            title: User Id
            exclusiveMinimum: true
            type: integer
            minimum: 0
          name: user_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SoftCopyBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetaDataGet'
  '/v0/simcore-s3:access':
    post:
      tags:
        - simcore-s3
      summary: gets or creates the a temporary access
      description: returns a set of S3 credentials
      operationId: get_or_create_temporary_s3_access
      parameters:
        - required: true
          schema:
            title: User Id
            exclusiveMinimum: true
            type: integer
            minimum: 0
          name: user_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_S3Settings_'
  /v0/simcore-s3/folders:
    post:
      tags:
        - simcore-s3
      summary: copies folders from project
      description: copies folders from project
      operationId: copy_folders_from_project
      parameters:
        - required: true
          schema:
            title: User Id
            exclusiveMinimum: true
            type: integer
            minimum: 0
          name: user_id
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FoldersBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskGet_'
  '/v0/simcore-s3/folders/{folder_id}':
    delete:
      tags:
        - simcore-s3
      summary: delete folders from project
      description: removes folders from a project
      operationId: delete_folders_of_project
      parameters:
        - required: true
          schema:
            title: Folder Id
            type: string
          name: folder_id
          in: path
        - required: true
          schema:
            title: User Id
            exclusiveMinimum: true
            type: integer
            minimum: 0
          name: user_id
          in: query
        - required: false
          schema:
            title: Node Id
            type: string
            format: uuid
          name: node_id
          in: query
      responses:
        '204':
          description: Successful Response
  '/v0/simcore-s3/files/metadata:search':
    post:
      tags:
        - simcore-s3
      summary: search for files starting with
      description: search for files starting with `startswith` in the file_meta_data table
      operationId: search_files_starting_with
      parameters:
        - required: true
          schema:
            title: User Id
            exclusiveMinimum: true
            type: integer
            minimum: 0
          name: user_id
          in: query
        - required: false
          schema:
            title: Startswith
            type: string
            default: ''
          name: startswith
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_FileMetaDataGet_'
  /:
    get:
      tags:
        - tasks
      summary: list current long running tasks
      description: list current long running tasks
      operationId: list_tasks
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskGet_'
  '/{task_id}':
    get:
      tags:
        - tasks
      summary: gets the status of the task
      description: gets the status of the task
      operationId: get_task_status
      parameters:
        - required: true
          schema:
            title: Task Id
            type: string
          name: task_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskStatus_'
    delete:
      tags:
        - tasks
      summary: cancels and removes the task
      description: cancels and removes the task
      operationId: cancel_and_delete_task
      parameters:
        - required: true
          schema:
            title: Task Id
            type: string
          name: task_id
          in: path
      responses:
        '204':
          description: Successful Response
  '/{task_id}/result':
    get:
      tags:
        - tasks
      summary: get result of the task
      description: get result of the task
      operationId: get_task_result
      parameters:
        - required: true
          schema:
            title: Task Id
            type: string
          name: task_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Task Result
components:
  schemas:
    AppStatusCheck:
      title: AppStatusCheck
      required:
        - app_name
        - version
      type: object
      properties:
        app_name:
          title: App Name
          type: string
          description: Application name
        version:
          title: Version
          type: string
          description: Application's version
        services:
          title: Services
          type: object
          description: Other backend services connected from this service
          default: {}
        sessions:
          title: Sessions
          type: object
          description: 'Client sessions info. If single session per app, then is denoted as main'
          default: {}
        url:
          title: Url
          maxLength: 65536
          minLength: 1
          type: string
          description: Link to current resource
          format: uri
        diagnostics_url:
          title: Diagnostics Url
          maxLength: 65536
          minLength: 1
          type: string
          description: Link to diagnostics report sub-resource. This MIGHT take some time to compute
          format: uri
    DatasetMetaData:
      title: DatasetMetaData
      required:
        - dataset_id
        - display_name
      type: object
      properties:
        dataset_id:
          title: Dataset Id
          anyOf:
            - type: string
              format: uuid
            - pattern: '^N:dataset:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
              type: string
        display_name:
          title: Display Name
          type: string
      additionalProperties: false
    Envelope_AnyUrl_:
      title: 'Envelope[AnyUrl]'
      type: object
      properties:
        data:
          title: Data
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        error:
          title: Error
    Envelope_AppStatusCheck_:
      title: 'Envelope[AppStatusCheck]'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/AppStatusCheck'
        error:
          title: Error
    Envelope_FileMetaDataGet_:
      title: 'Envelope[FileMetaDataGet]'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FileMetaDataGet'
        error:
          title: Error
    Envelope_FileUploadCompleteFutureResponse_:
      title: 'Envelope[FileUploadCompleteFutureResponse]'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FileUploadCompleteFutureResponse'
        error:
          title: Error
    Envelope_FileUploadCompleteResponse_:
      title: 'Envelope[FileUploadCompleteResponse]'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FileUploadCompleteResponse'
        error:
          title: Error
    Envelope_FileUploadCompletionBody_:
      title: 'Envelope[FileUploadCompletionBody]'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FileUploadCompletionBody'
        error:
          title: Error
    Envelope_FileUploadSchema_:
      title: 'Envelope[FileUploadSchema]'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/FileUploadSchema'
        error:
          title: Error
    Envelope_HealthCheck_:
      title: 'Envelope[HealthCheck]'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/HealthCheck'
        error:
          title: Error
    Envelope_PresignedLink_:
      title: 'Envelope[PresignedLink]'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/PresignedLink'
        error:
          title: Error
    Envelope_S3Settings_:
      title: 'Envelope[S3Settings]'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/S3Settings'
        error:
          title: Error
    Envelope_TableSynchronisation_:
      title: 'Envelope[TableSynchronisation]'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TableSynchronisation'
        error:
          title: Error
    Envelope_TaskGet_:
      title: 'Envelope[TaskGet]'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskGet'
        error:
          title: Error
    Envelope_TaskStatus_:
      title: 'Envelope[TaskStatus]'
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskStatus'
        error:
          title: Error
    Envelope_list_models_library.api_schemas_storage.FileMetaDataGet__:
      title: 'Envelope[list[models_library.api_schemas_storage.FileMetaDataGet]]'
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/FileMetaDataGet'
        error:
          title: Error
    Envelope_list_simcore_service_storage.models.DatasetMetaData__:
      title: 'Envelope[list[simcore_service_storage.models.DatasetMetaData]]'
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/DatasetMetaData'
        error:
          title: Error
    FileMetaData:
      title: FileMetaData
      required:
        - file_uuid
        - location_id
        - file_name
        - file_id
        - created_at
        - last_modified
        - location
        - bucket_name
        - object_name
      type: object
      properties:
        file_uuid:
          title: File Uuid
          type: string
          description: 'NOT a unique ID, like (api|uuid)/uuid/file_name or DATCORE folder structure'
        location_id:
          title: Location Id
          type: integer
          description: Storage location
        project_name:
          title: Project Name
          type: string
          description: 'optional project name, used by frontend to display path'
        node_name:
          title: Node Name
          type: string
          description: 'optional node name, used by frontend to display path'
        file_name:
          title: File Name
          type: string
          description: Display name for a file
        file_id:
          title: File Id
          anyOf:
            - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
              type: string
            - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
              type: string
          description: 'THIS IS the unique ID for the file. either (api|project_id)/node_id/file_name.ext for S3 and N:package:UUID for datcore'
        created_at:
          title: Created At
          type: string
          format: date-time
        last_modified:
          title: Last Modified
          type: string
          format: date-time
        file_size:
          title: File Size
          type: integer
          description: File size in bytes (-1 means invalid)
          default: -1
        entity_tag:
          title: Entity Tag
          type: string
          description: 'Entity tag (or ETag), represents a specific version of the file, None if invalid upload or datcore'
        is_soft_link:
          title: Is Soft Link
          type: boolean
          description: 'If true, this file is a soft link.i.e. is another entry with the same object_name'
          default: false
        is_directory:
          title: Is Directory
          type: boolean
          description: if True this is a directory
          default: false
        upload_id:
          title: Upload Id
          type: string
        upload_expires_at:
          title: Upload Expires At
          type: string
          format: date-time
        location:
          title: Location
          type: string
        bucket_name:
          title: Bucket Name
          type: string
        object_name:
          title: Object Name
          type: string
        project_id:
          title: Project Id
          type: string
          format: uuid
        node_id:
          title: Node Id
          type: string
          format: uuid
        user_id:
          title: User Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
      additionalProperties: false
    FileMetaDataGet:
      title: FileMetaDataGet
      required:
        - file_uuid
        - location_id
        - file_name
        - file_id
        - created_at
        - last_modified
      type: object
      properties:
        file_uuid:
          title: File Uuid
          type: string
          description: 'NOT a unique ID, like (api|uuid)/uuid/file_name or DATCORE folder structure'
        location_id:
          title: Location Id
          type: integer
          description: Storage location
        project_name:
          title: Project Name
          type: string
          description: 'optional project name, used by frontend to display path'
        node_name:
          title: Node Name
          type: string
          description: 'optional node name, used by frontend to display path'
        file_name:
          title: File Name
          type: string
          description: Display name for a file
        file_id:
          title: File Id
          anyOf:
            - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
              type: string
            - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
              type: string
          description: 'THIS IS the unique ID for the file. either (api|project_id)/node_id/file_name.ext for S3 and N:package:UUID for datcore'
        created_at:
          title: Created At
          type: string
          format: date-time
        last_modified:
          title: Last Modified
          type: string
          format: date-time
        file_size:
          title: File Size
          type: integer
          description: File size in bytes (-1 means invalid)
          default: -1
        entity_tag:
          title: Entity Tag
          type: string
          description: 'Entity tag (or ETag), represents a specific version of the file, None if invalid upload or datcore'
        is_soft_link:
          title: Is Soft Link
          type: boolean
          description: 'If true, this file is a soft link.i.e. is another entry with the same object_name'
          default: false
        is_directory:
          title: Is Directory
          type: boolean
          description: if True this is a directory
          default: false
      additionalProperties: false
    FileUploadCompleteFutureResponse:
      title: FileUploadCompleteFutureResponse
      required:
        - state
      type: object
      properties:
        state:
          $ref: '#/components/schemas/FileUploadCompleteState'
        e_tag:
          title: E Tag
          type: string
    FileUploadCompleteLinks:
      title: FileUploadCompleteLinks
      required:
        - state
      type: object
      properties:
        state:
          title: State
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
    FileUploadCompleteResponse:
      title: FileUploadCompleteResponse
      required:
        - links
      type: object
      properties:
        links:
          $ref: '#/components/schemas/FileUploadCompleteLinks'
    FileUploadCompleteState:
      title: FileUploadCompleteState
      enum:
        - ok
        - nok
      description: An enumeration.
    FileUploadCompletionBody:
      title: FileUploadCompletionBody
      required:
        - parts
      type: object
      properties:
        parts:
          title: Parts
          type: array
          items:
            $ref: '#/components/schemas/UploadedPart'
    FileUploadLinks:
      title: FileUploadLinks
      required:
        - abort_upload
        - complete_upload
      type: object
      properties:
        abort_upload:
          title: Abort Upload
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        complete_upload:
          title: Complete Upload
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
    FileUploadSchema:
      title: FileUploadSchema
      required:
        - chunk_size
        - urls
        - links
      type: object
      properties:
        chunk_size:
          title: Chunk Size
          type: integer
        urls:
          title: Urls
          type: array
          items:
            maxLength: 65536
            minLength: 1
            type: string
            format: uri
        links:
          $ref: '#/components/schemas/FileUploadLinks'
    FoldersBody:
      title: FoldersBody
      type: object
      properties:
        source:
          title: Source
          type: object
        destination:
          title: Destination
          type: object
        nodes_map:
          title: Nodes Map
          type: object
          additionalProperties:
            type: string
            format: uuid
    HealthCheck:
      title: HealthCheck
      type: object
      properties:
        name:
          title: Name
          type: string
        status:
          title: Status
          type: string
        api_version:
          title: Api Version
          type: string
        version:
          title: Version
          type: string
    LinkType:
      title: LinkType
      enum:
        - PRESIGNED
        - S3
      type: string
      description: An enumeration.
    PresignedLink:
      title: PresignedLink
      required:
        - link
      type: object
      properties:
        link:
          title: Link
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
    S3Settings:
      title: S3Settings
      required:
        - S3_ENDPOINT
        - S3_ACCESS_KEY
        - S3_SECRET_KEY
        - S3_BUCKET_NAME
      type: object
      properties:
        S3_SECURE:
          title: S3 Secure
          type: boolean
          default: false
        S3_ENDPOINT:
          title: S3 Endpoint
          type: string
        S3_ACCESS_KEY:
          title: S3 Access Key
          type: string
        S3_SECRET_KEY:
          title: S3 Secret Key
          type: string
        S3_ACCESS_TOKEN:
          title: S3 Access Token
          type: string
        S3_BUCKET_NAME:
          title: S3 Bucket Name
          type: string
        S3_REGION:
          title: S3 Region
          type: string
          default: us-east-1
      additionalProperties: false
      description: |-
        - Customized configuration for all settings
        - If a field is a BaseCustomSettings subclass, it allows creating a default from env vars setting the Field
          option 'auto_default_from_env=True'.

        SEE tests for details.
    SoftCopyBody:
      title: SoftCopyBody
      required:
        - link_id
      type: object
      properties:
        link_id:
          title: Link Id
          pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
          type: string
    TableSynchronisation:
      title: TableSynchronisation
      required:
        - removed
      type: object
      properties:
        dry_run:
          title: Dry Run
          type: boolean
        fire_and_forget:
          title: Fire And Forget
          type: boolean
        removed:
          title: Removed
          type: array
          items:
            type: string
    TaskGet:
      title: TaskGet
      required:
        - task_id
        - task_name
        - status_href
        - result_href
        - abort_href
      type: object
      properties:
        task_id:
          title: Task Id
          type: string
        task_name:
          title: Task Name
          type: string
        status_href:
          title: Status Href
          type: string
        result_href:
          title: Result Href
          type: string
        abort_href:
          title: Abort Href
          type: string
    TaskProgress:
      title: TaskProgress
      type: object
      properties:
        message:
          title: Message
          type: string
          default: ''
        percent:
          title: Percent
          maximum: 1
          minimum: 0
          type: number
          default: 0
      description: |-
        Helps the user to keep track of the progress. Progress is expected to be
        defined as a float bound between 0.0 and 1.0
    TaskStatus:
      title: TaskStatus
      required:
        - task_progress
        - done
        - started
      type: object
      properties:
        task_progress:
          $ref: '#/components/schemas/TaskProgress'
        done:
          title: Done
          type: boolean
        started:
          title: Started
          type: string
          format: date-time
    UploadedPart:
      title: UploadedPart
      required:
        - number
        - e_tag
      type: object
      properties:
        number:
          title: Number
          exclusiveMinimum: true
          type: integer
          minimum: 0
        e_tag:
          title: E Tag
          type: string
tags:
  - name: datasets
  - name: files
  - name: health
  - name: locations
  - name: tasks
  - name: simcore-s3
