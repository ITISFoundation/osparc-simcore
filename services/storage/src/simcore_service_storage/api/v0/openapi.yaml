openapi: 3.1.0
info:
  title: simcore-service-storage
  description: Service to manage data storage in simcore
  version: 0.5.0
servers:
- url: ''
  description: webserver
- url: http://{host}:{port}
  description: development server
  variables:
    host:
      default: localhost
    port:
      default: '8001'
paths:
  /v0/locations:
    get:
      tags:
      - locations
      summary: List Storage Locations
      operationId: list_storage_locations
      parameters:
      - name: user_id
        in: query
        required: true
        schema:
          type: integer
          exclusiveMinimum: true
          title: User Id
          minimum: 0
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileLocation'
                title: Response List Storage Locations
  /v0/locations/{location_id}:sync:
    post:
      tags:
      - locations
      summary: Synchronise Meta Data Table
      operationId: synchronise_meta_data_table
      parameters:
      - name: location_id
        in: path
        required: true
        schema:
          type: integer
          title: Location Id
      - name: dry_run
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Dry Run
      - name: fire_and_forget
        in: query
        required: false
        schema:
          type: boolean
          default: false
          title: Fire And Forget
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    FileLocation:
      properties:
        name:
          type: string
          title: Name
        id:
          type: integer
          title: Id
      additionalProperties: false
      type: object
      required:
      - name
      - id
      title: FileLocation
