openapi: 3.0.0
info:
  description: API definition for simcore-service-storage service
  version: 0.3.0
  title: simcore-service-storage API
  contact:
    name: IT'IS Foundation
    email: support@simcore.io
  license:
    name: MIT
    url: 'https://github.com/ITISFoundation/osparc-simcore/blob/master/LICENSE'
servers:
  - description: API server
    url: /v0
  - description: Development server
    url: 'http://{host}:{port}/{basePath}'
    variables:
      host:
        default: localhost
      port:
        default: '8080'
      basePath:
        enum:
          - v0
        default: v0
tags:
  - name: maintenance
  - name: location
  - name: dataset
  - name: file
  - name: tasks
paths:
  /:
    get:
      summary: Service health-check endpoint
      description: Some general information on the API and state of the service behind
      tags:
        - maintenance
      operationId: health_check
      responses:
        '200':
          description: Service information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  /status:
    get:
      summary: checks status of self and connected services
      operationId: get_status
      tags:
        - maintenance
      responses:
        '200':
          description: returns app status check
  /locations:
    get:
      summary: Lists available storage locations
      operationId: get_storage_locations
      tags:
        - location
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: List of available storage locations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileLocationArrayEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/locations/{location_id}:sync':
    post:
      summary: Manually triggers the synchronisation of the file meta data table in the database
      operationId: synchronise_meta_data_table
      tags:
        - location
      parameters:
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: dry_run
          in: query
          required: false
          schema:
            type: boolean
            default: true
        - name: fire_and_forget
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: 'An object containing added, changed and removed paths'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TableSynchronisationEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/locations/{location_id}/datasets':
    get:
      summary: Lists all dataset's metadata
      operationId: get_datasets_metadata
      tags:
        - dataset
      parameters:
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: list of dataset meta-datas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatasetMetaDataArrayEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/locations/{location_id}/files/metadata':
    get:
      summary: Lists all file's metadata
      operationId: get_files_metadata
      tags:
        - file
      parameters:
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
        - name: uuid_filter
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: list of file meta-datas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetaDataArrayEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/locations/{location_id}/datasets/{dataset_id}/metadata':
    get:
      summary: Get dataset metadata
      operationId: get_files_metadata_dataset
      tags:
        - dataset
      parameters:
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: dataset_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: list of file meta-datas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetaDataArrayEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/locations/{location_id}/files/{file_id}/metadata':
    get:
      summary: Get file metadata
      operationId: get_file_metadata
      tags:
        - file
      parameters:
        - name: file_id
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns file metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetaEnvelope'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/locations/{location_id}/files/{file_id}':
    get:
      summary: Gets download link for file at location
      operationId: download_file
      tags:
        - file
      parameters:
        - name: file_id
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
        - name: link_type
          in: query
          required: false
          schema:
            type: string
            default: presigned
            enum:
              - presigned
              - s3
      responses:
        '200':
          description: Returns presigned link
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PresignedLinkEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    put:
      summary: Returns upload object
      operationId: upload_file
      tags:
        - file
      parameters:
        - name: file_id
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
        - name: link_type
          in: query
          required: false
          schema:
            type: string
            default: presigned
            enum:
              - presigned
              - s3
        - name: file_size
          in: query
          required: false
          description: 'will be required once all legacy services are gone or updated. if null returns the PresignedLinkEnveloped, else returns FileUploadEnveloped'
          schema:
            type: integer
            format: int64
            minimum: 0
      responses:
        '200':
          description: Creates and returns file upload object
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PresignedLinkEnveloped'
                  - $ref: '#/components/schemas/FileUploadEnveloped'
          links:
            CompleteUpload:
              operationId: complete_upload_file
              parameters:
                path.location_id: $request.path.location_id
                path.file_id: $request.path.file_id
                query.user_id: $request.query.user_id
            AbortUpload:
              operationId: abort_upload_file
              parameters:
                path.location_id: $request.path.location_id
                path.file_id: $request.path.file_id
                query.user_id: $request.query.user_id
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    delete:
      summary: Deletes file
      operationId: delete_file
      tags:
        - file
      parameters:
        - name: file_id
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: everything is OK
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/locations/{location_id}/files/{file_id}:abort':
    post:
      summary: Asks the server to abort the upload and revert to the last valid version if any
      operationId: abort_upload_file
      tags:
        - file
      parameters:
        - name: file_id
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Abort OK
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/locations/{location_id}/files/{file_id}:complete':
    post:
      summary: Asks the server to complete the upload
      operationId: complete_upload_file
      tags:
        - file
      parameters:
        - name: file_id
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - parts
              properties:
                parts:
                  type: array
                  items:
                    type: object
                    required:
                      - number
                      - e_tag
                    properties:
                      number:
                        type: integer
                        minimum: 1
                      e_tag:
                        type: string
      responses:
        '202':
          description: Completion of upload is accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadCompleteEnveloped'
          links:
            CompleteUploadStatus:
              operationId: is_completed_upload_file
              parameters:
                path.location_id: $request.path.location_id
                path.file_id: $request.path.file_id
                path.future_id: $response.body.data.links.state
                query.user_id: $request.query.user_id
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/locations/{location_id}/files/{file_id}:complete/futures/{future_id}':
    post:
      summary: Check for upload completion
      operationId: is_completed_upload_file
      tags:
        - file
      parameters:
        - name: future_id
          in: path
          required: true
          schema:
            type: string
        - name: file_id
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: returns state of upload completion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadCompleteFutureEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/simcore-s3:access':
    post:
      summary: Returns the temporary access credentials for the user storage space
      operationId: get_or_create_temporary_s3_access
      tags:
        - file
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: the S3 access credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3AccessCredentialsEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/simcore-s3/files/metadata:search':
    post:
      summary: Returns metadata for all files matching a pattern
      operationId: search_files_starting_with
      tags:
        - file
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
        - name: startswith
          description: matches starting string of the file_id
          in: query
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: list of matching files found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetaDataArrayEnveloped'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  /simcore-s3/folders:
    post:
      summary: Deep copies of all data from source to destination project in s3
      operationId: copy_folders_from_project
      tags:
        - file
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                source:
                  $ref: '#/components/schemas/Project'
                destination:
                  $ref: '#/components/schemas/Project'
                nodes_map:
                  type: object
                  description: maps source and destination node uuids
                  additionalProperties:
                    type: string
      responses:
        '201':
          description: Data from destination project copied and returns project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/simcore-s3/folders/{folder_id}':
    delete:
      summary: Deletes all objects within a node_id or within a project_id if node_id is omitted
      operationId: delete_folders_of_project
      tags:
        - file
      parameters:
        - name: folder_id
          in: path
          required: true
          schema:
            type: string
        - name: node_id
          in: query
          required: false
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '204':
          description: folder has been successfully deleted
  '/files/{file_id}:soft-copy':
    post:
      summary: Copy as soft link
      operationId: copy_as_soft_link
      tags:
        - file
      parameters:
        - name: file_id
          in: path
          required: true
          schema:
            type: string
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - link_id
              properties:
                link_id:
                  type: string
      responses:
        '200':
          description: Returns link metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMetaEnvelope'
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  /tasks:
    get:
      operationId: list_tasks
      tags:
        - tasks
      responses:
        '200':
          description: Returns the list of active tasks (running and/or done)
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      properties:
                        task_id:
                          type: string
                        status_href:
                          type: string
                        result_href:
                          type: string
                      required:
                        - task_id
                        - status_href
                        - result_href
                    error:
                      nullable: true
                      default: null
  '/tasks/{task_id}':
    parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: get_task_status
      tags:
        - tasks
      responses:
        '200':
          description: Returns the task status
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - task_progress
                      - done
                      - started
                    properties:
                      task_progress:
                        type: number
                        minimum: 0
                        maximum: 1
                      done:
                        type: boolean
                      started:
                        type: string
                        pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
                        example: '2018-07-01T11:13:43Z'
                  error:
                    nullable: true
                    default: null
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
    delete:
      operationId: cancel_and_delete_task
      description: Aborts and remove the task
      tags:
        - tasks
      responses:
        '204':
          description: Task was successfully aborted
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
  '/tasks/{task_id}/result':
    parameters:
      - name: task_id
        in: path
        required: true
        schema:
          type: string
    get:
      operationId: get_task_result
      tags:
        - tasks
      responses:
        2XX:
          description: Retrieve the task result and returns directly its HTTP code
        default:
          $ref: '#/components/responses/DefaultErrorResponse'
components:
  schemas:
    HealthCheckEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/HealthCheck'
        error:
          nullable: true
          default: null
    HealthCheck:
      type: object
      properties:
        name:
          type: string
        status:
          type: string
        api_version:
          type: string
        version:
          type: string
      example:
        name: simcore-director-service
        status: SERVICE_RUNNING
        api_version: 0.1.0-dev+NJuzzD9S
        version: 0.1.0-dev+N127Mfv9H
    ErrorEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          nullable: true
          default: null
        error:
          $ref: '#/components/schemas/Error'
    Error:
      type: object
      properties:
        logs:
          description: log messages
          type: array
          items:
            $ref: '#/components/schemas/LogMessage'
        errors:
          description: errors metadata
          type: array
          items:
            $ref: '#/components/schemas/ErrorItem'
        status:
          description: HTTP error code
          type: integer
      example:
        BadRequestError:
          logs:
            - message: Requested information is incomplete or malformed
              level: ERROR
            - message: Invalid email and password
              level: ERROR
              logger: USER
          errors:
            - code: InvalidEmail
              message: Email is malformed
              field: email
            - code: UnsavePassword
              message: Password is not secure
              field: pasword
          status: 400
    ErrorItem:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Typically the name of the exception that produced it otherwise some known error code
        message:
          type: string
          description: Error message specific to this item
        resource:
          type: string
          description: API resource affected by this error
        field:
          type: string
          description: Specific field within the resource
    LogMessageEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/LogMessage'
        error:
          nullable: true
          default: null
    LogMessage:
      type: object
      properties:
        level:
          description: log level
          type: string
          default: INFO
          enum:
            - DEBUG
            - WARNING
            - INFO
            - ERROR
        message:
          description: 'log message. If logger is USER, then it MUST be human readable'
          type: string
        logger:
          description: name of the logger receiving this message
          type: string
      required:
        - message
      example:
        message: 'Hi there, Mr user'
        level: INFO
        logger: user-logger
    FakeEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/Fake'
        error:
          nullable: true
          default: null
    Fake:
      type: object
      required:
        - path_value
        - query_value
        - body_value
      properties:
        path_value:
          type: string
        query_value:
          type: string
        body_value:
          type: object
          additionalProperties: true
      example:
        path_value: foo
        query_value: bar
        body_value:
          key1: value1
          key2: value2
    TableSynchronisationEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/TableSynchronisation'
        error:
          nullable: true
          default: null
    TableSynchronisation:
      type: object
      required:
        - removed
      properties:
        dry_run:
          type: boolean
        fire_and_forget:
          type: boolean
        removed:
          type: array
          items:
            type: string
    FileLocationArrayEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/FileLocationArray'
        error:
          nullable: true
          default: null
    FileLocationArray:
      type: array
      items:
        $ref: '#/components/schemas/FileLocation'
    FileLocationEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/FileLocation'
        error:
          nullable: true
          default: null
    FileLocation:
      type: object
      properties:
        name:
          type: string
        id:
          type: integer
      example:
        filename: simcore.s3
        id: 0
    DatasetMetaDataArrayEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/DatasetMetaDataArray'
        error:
          nullable: true
          default: null
    DatasetMetaEnvelope:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/DatasetMetaData'
        error:
          nullable: true
          default: null
    DatasetMetaData:
      type: object
      properties:
        dataset_id:
          type: string
        display_name:
          type: string
      example:
        dataset_uuid: 'N:id-aaaa'
        display_name: simcore-testing
    DatasetMetaDataArray:
      type: array
      items:
        $ref: '#/components/schemas/DatasetMetaData'
    FileMetaEnvelope:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/FileMetaData'
        error:
          nullable: true
          default: null
    FileMetaData:
      type: object
      properties:
        file_uuid:
          type: string
        location_id:
          type: string
        project_name:
          type: string
        node_name:
          type: string
        file_name:
          type: string
        file_id:
          type: string
        created_at:
          type: string
        last_modified:
          type: string
        file_size:
          type: integer
        entity_tag:
          type: string
    FileMetaDataArrayEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/FileMetaDataArray'
        error:
          nullable: true
          default: null
    FileMetaDataArray:
      type: array
      items:
        $ref: '#/components/schemas/FileMetaData'
    PresignedLinkEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/PresignedLink'
        error:
          nullable: true
          default: null
    PresignedLink:
      type: object
      required:
        - link
      properties:
        link:
          type: string
      example:
        link: example_link
    FileUploadEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/FileUploadSchema'
        error:
          nullable: true
          default: null
    FileUploadSchema:
      type: object
      required:
        - chunk_size
        - urls
        - links
      properties:
        chunk_size:
          type: integer
          format: int64
          minimum: 0
        urls:
          type: array
          items:
            type: string
        links:
          type: object
          required:
            - abort_upload
            - complete_upload
          properties:
            abort_upload:
              type: string
            complete_upload:
              type: string
    FileUploadCompleteEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/FileUploadComplete'
        error:
          nullable: true
          default: null
    FileUploadComplete:
      type: object
      required:
        - links
      properties:
        links:
          type: object
          required:
            - state
          properties:
            state:
              type: string
    FileUploadCompleteFutureEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/FileUploadCompleteFuture'
        error:
          nullable: true
          default: null
    FileUploadCompleteFuture:
      type: object
      required:
        - state
      properties:
        state:
          type: string
          enum:
            - ok
            - nok
        e_tag:
          type: string
          nullable: true
    S3AccessCredentialsEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: '#/components/schemas/S3AccessCredentials'
        error:
          nullable: true
          default: null
    S3AccessCredentials:
      type: object
      required:
        - access
        - secret
        - token
        - endpoint
      properties:
        access:
          type: string
        secret:
          type: string
        token:
          type: string
        endpoint:
          type: string
    Project:
      additionalProperties: false
      properties:
        accessRights:
          additionalProperties: true
          description: object containing the GroupID as key and read/write/execution permissions as value
          title: Accessrights
          type: object
          x-patternProperties:
            ^\S+$:
              additionalProperties: false
              properties:
                delete:
                  description: gives deletion rights
                  title: Delete
                  type: boolean
                read:
                  description: gives read access
                  title: Read
                  type: boolean
                write:
                  description: gives write access
                  title: Write
                  type: boolean
              required:
                - read
                - write
                - delete
              title: AccessRights
              type: object
        classifiers:
          description: Contains the reference to the project classifiers
          example: 'some:id:to:a:classifier'
          items:
            type: string
          title: Classifiers
          type: array
        creationDate:
          description: project creation date
          example: '2018-07-01T11:13:43Z'
          pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
          title: Creationdate
          type: string
        description:
          description: longer one-line description about the project
          example: Dabbling in temporal transitions ...
          title: Description
          type: string
        dev:
          description: object used for development purposes only
          title: Dev
          type: object
        lastChangeDate:
          description: last save date
          example: '2018-07-01T11:13:43Z'
          pattern: '\d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z'
          title: Lastchangedate
          type: string
        name:
          description: project name
          example: Temporal Distortion Simulator
          title: Name
          type: string
        prjOwner:
          description: user email
          format: email
          title: Prjowner
          type: string
        quality:
          default: {}
          description: stores the study quality assessment
          title: Quality
          type: object
        state:
          anyOf:
            - nullable: true
            - additionalProperties: false
              properties:
                locked:
                  allOf:
                    - additionalProperties: false
                      example:
                        status: CLOSED
                        value: false
                      properties:
                        owner:
                          allOf:
                            - additionalProperties: false
                              properties:
                                first_name:
                                  description: Owner first name
                                  example: John
                                  title: First Name
                                  type: string
                                last_name:
                                  description: Owner last name
                                  example: Smith
                                  title: Last Name
                                  type: string
                                user_id:
                                  description: Owner's identifier when registered in the user's database table
                                  example: 2
                                  title: User Id
                                  type: integer
                              required:
                                - user_id
                                - first_name
                                - last_name
                              title: Owner
                              type: object
                          description: 'If locked, the user that owns the lock'
                          title: Owner
                        status:
                          allOf:
                            - description: An enumeration.
                              enum:
                                - CLOSED
                                - CLOSING
                                - CLONING
                                - EXPORTING
                                - OPENING
                                - OPENED
                              title: ProjectStatus
                              type: string
                          description: The status of the project
                        value:
                          description: True if the project is locked
                          title: Value
                          type: boolean
                      required:
                        - value
                        - status
                      title: ProjectLocked
                      type: object
                  description: The project lock state
                  title: Locked
                state:
                  allOf:
                    - additionalProperties: false
                      properties:
                        value:
                          allOf:
                            - description: |-
                                State of execution of a project's computational workflow

                                SEE StateType for task state
                              enum:
                                - UNKNOWN
                                - PUBLISHED
                                - NOT_STARTED
                                - PENDING
                                - STARTED
                                - RETRY
                                - SUCCESS
                                - FAILED
                                - ABORTED
                              title: RunningState
                              type: string
                          description: The running state of the project
                          example: STARTED
                      required:
                        - value
                      title: ProjectRunningState
                      type: object
                  description: The project running state
                  title: State
              required:
                - locked
                - state
              title: ProjectState
              type: object
        tags:
          default: []
          items:
            type: integer
          title: Tags
          type: array
        thumbnail:
          description: url of the project thumbnail
          example: 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
          format: uri
          maxLength: 2083
          minLength: 0
          title: Thumbnail
          type: string
        ui:
          properties:
            annotations:
              additionalProperties: true
              title: Annotations
              type: object
              x-patternProperties:
                '^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$':
                  additionalProperties: false
                  example:
                    - attributes:
                        height: 26
                        width: 117
                        x: 415
                        'y': 100
                      color: '#FF0000'
                      type: rect
                    - attributes:
                        text: Hey!
                        x: 415
                        'y': 100
                      color: '#0000FF'
                      type: text
                  properties:
                    attributes:
                      description: svg attributes
                      title: Attributes
                      type: object
                    color:
                      format: color
                      title: Color
                      type: string
                    type:
                      enum:
                        - rect
                        - text
                      title: Type
                      type: string
                  required:
                    - type
                    - color
                    - attributes
                  title: Annotation
                  type: object
            currentNodeId:
              format: uuid
              title: Currentnodeid
              type: string
            slideshow:
              additionalProperties: true
              title: Slideshow
              type: object
              x-patternProperties:
                '^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$':
                  properties:
                    instructions:
                      title: Instructions
                      type: string
                    position:
                      title: Position
                      type: integer
                  required:
                    - position
                  title: Slideshow
                  type: object
            workbench:
              additionalProperties: true
              title: Workbench
              type: object
              x-patternProperties:
                '^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$':
                  additionalProperties: false
                  properties:
                    marker:
                      additionalProperties: false
                      properties:
                        color:
                          format: color
                          title: Color
                          type: string
                      required:
                        - color
                      title: Marker
                      type: object
                    position:
                      allOf:
                        - additionalProperties: false
                          properties:
                            x:
                              description: The x position
                              example:
                                - '12'
                              title: X
                              type: integer
                            'y':
                              description: The y position
                              example:
                                - '15'
                              title: 'Y'
                              type: integer
                          required:
                            - x
                            - 'y'
                          title: Position
                          type: object
                      description: The node position in the workbench
                      title: Position
                  required:
                    - position
                  title: WorkbenchUI
                  type: object
          title: StudyUI
          type: object
        uuid:
          description: project unique identifier
          example: 07640335-a91f-468c-ab69-a374fa82078d
          format: uuid
          title: Uuid
          type: string
        workbench:
          additionalProperties: true
          description: Project's pipeline
          title: Workbench
          type: object
          x-patternProperties:
            '^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$':
              additionalProperties: false
              properties:
                bootOptions:
                  description: 'Some services provide alternative parameters to be injected at boot time. The user selection should be stored here, and it will overwrite the services''s defaults.'
                  patternProperties:
                    '[a-zA-Z][a-azA-Z0-9_]*':
                      type: string
                  title: Bootoptions
                  type: object
                inputAccess:
                  description: map with key - access level pairs
                  patternProperties:
                    '^[-_a-zA-Z0-9]+$':
                      description: An enumeration.
                      enum:
                        - ReadAndWrite
                        - Invisible
                        - ReadOnly
                      title: AccessEnum
                      type: string
                  type: object
                inputNodes:
                  description: node IDs of where the node is connected to
                  items:
                    format: uuid
                    type: string
                  title: Inputnodes
                  type: array
                inputs:
                  description: values of input properties
                  patternProperties:
                    '^[-_a-zA-Z0-9]+$':
                      anyOf:
                        - type: boolean
                        - type: integer
                        - type: number
                        - format: json-string
                          type: string
                        - type: string
                        - additionalProperties: false
                          description: I/O port type to reference to an output port of another node in the same project
                          example:
                            - nodeUuid: da5068e0-8a8d-4fb9-9516-56e5ddaef15b
                              output: out_2
                          properties:
                            nodeUuid:
                              description: The node to get the port output from
                              format: uuid
                              title: Nodeuuid
                              type: string
                            output:
                              description: The port key in the node given by nodeUuid
                              pattern: '^[-_a-zA-Z0-9]+$'
                              title: Output
                              type: string
                          required:
                            - nodeUuid
                            - output
                          title: PortLink
                          type: object
                        - additionalProperties: false
                          description: I/O port type to hold a link to a file in simcore S3 storage
                          example:
                            - eTag: 859fda0cb82fc4acb4686510a172d9a9-1
                              label: input.txt
                              path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                              store: 0
                            - eTag: f7e4c7076761a42a871e978c8691c676
                              path: 50339632-ee1d-11ec-a0c2-02420a0194e4/23b1522f-225f-5a4c-9158-c4c19a70d4a8/output.h5
                              store: '0'
                            - path: api/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                              store: 0
                            - path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/d4442ca4-23fd-5b6b-ba6d-0b75f711c109/y_1D.txt
                              store: 0
                          properties:
                            dataset:
                              deprecated: true
                              title: Dataset
                              type: string
                            eTag:
                              description: Entity tag that uniquely represents the file. The method to generate the tag is not specified (black box).
                              title: Etag
                              type: string
                            label:
                              description: The real file name
                              title: Label
                              type: string
                            path:
                              anyOf:
                                - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                                  type: string
                                - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                                  type: string
                              description: The path to the file in the storage provider domain
                              title: Path
                            store:
                              description: 'The store identifier: 0 for simcore S3, 1 for datcore'
                              title: Store
                              type: integer
                          required:
                            - store
                            - path
                          title: SimCoreFileLink
                          type: object
                        - additionalProperties: false
                          description: I/O port type to hold a link to a file in DATCORE storage
                          example:
                            - dataset: 'N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4'
                              label: initial_WTstates
                              path: 'N:package:32df09ba-e8d6-46da-bd54-f696157de6ce'
                              store: 1
                            - dataset: 'N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4'
                              label: initial_WTstates
                              path: 'N:package:32df09ba-e8d6-46da-bd54-f696157de6ce'
                              store: 1
                          properties:
                            dataset:
                              description: Unique identifier to access the dataset on datcore (REQUIRED for datcore)
                              title: Dataset
                              type: string
                            eTag:
                              description: Entity tag that uniquely represents the file. The method to generate the tag is not specified (black box).
                              title: Etag
                              type: string
                            label:
                              description: The real file name
                              title: Label
                              type: string
                            path:
                              anyOf:
                                - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                                  type: string
                                - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                                  type: string
                              description: The path to the file in the storage provider domain
                              title: Path
                            store:
                              description: 'The store identifier: 0 for simcore S3, 1 for datcore'
                              title: Store
                              type: integer
                          required:
                            - store
                            - path
                            - label
                            - dataset
                          title: DatCoreFileLink
                          type: object
                        - additionalProperties: false
                          description: 'I/O port type to hold a generic download link to a file (e.g. S3 pre-signed link, etc)'
                          example:
                            - downloadLink: 'https://fakeimg.pl/250x100/'
                          properties:
                            downloadLink:
                              format: uri
                              maxLength: 65536
                              minLength: 1
                              title: Downloadlink
                              type: string
                            label:
                              title: Label
                              type: string
                          required:
                            - downloadLink
                          title: DownloadLink
                          type: object
                        - items: {}
                          type: array
                        - type: object
                  title: Inputs
                  type: object
                inputsUnits:
                  description: Overrides default unit (if any) defined in the service for each port
                  patternProperties:
                    '^[-_a-zA-Z0-9]+$':
                      type: string
                  title: Inputsunits
                  type: object
                key:
                  description: distinctive name for the node based on the docker registry path
                  example:
                    - simcore/services/comp/itis/sleeper
                    - simcore/services/dynamic/3dviewer
                    - simcore/services/frontend/file-picker
                  pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
                  title: Key
                  type: string
                label:
                  description: The short name of the node
                  example:
                    - JupyterLab
                  title: Label
                  type: string
                outputNode:
                  deprecated: true
                  title: Outputnode
                  type: boolean
                outputNodes:
                  description: Used in group-nodes. Node IDs of those connected to the output
                  items:
                    format: uuid
                    type: string
                  title: Outputnodes
                  type: array
                outputs:
                  description: values of output properties
                  patternProperties:
                    '^[-_a-zA-Z0-9]+$':
                      anyOf:
                        - type: boolean
                        - type: integer
                        - type: number
                        - format: json-string
                          type: string
                        - type: string
                        - additionalProperties: false
                          description: I/O port type to hold a link to a file in simcore S3 storage
                          example:
                            - eTag: 859fda0cb82fc4acb4686510a172d9a9-1
                              label: input.txt
                              path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                              store: 0
                            - eTag: f7e4c7076761a42a871e978c8691c676
                              path: 50339632-ee1d-11ec-a0c2-02420a0194e4/23b1522f-225f-5a4c-9158-c4c19a70d4a8/output.h5
                              store: '0'
                            - path: api/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                              store: 0
                            - path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/d4442ca4-23fd-5b6b-ba6d-0b75f711c109/y_1D.txt
                              store: 0
                          properties:
                            dataset:
                              deprecated: true
                              title: Dataset
                              type: string
                            eTag:
                              description: Entity tag that uniquely represents the file. The method to generate the tag is not specified (black box).
                              title: Etag
                              type: string
                            label:
                              description: The real file name
                              title: Label
                              type: string
                            path:
                              anyOf:
                                - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                                  type: string
                                - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                                  type: string
                              description: The path to the file in the storage provider domain
                              title: Path
                            store:
                              description: 'The store identifier: 0 for simcore S3, 1 for datcore'
                              title: Store
                              type: integer
                          required:
                            - store
                            - path
                          title: SimCoreFileLink
                          type: object
                        - additionalProperties: false
                          description: I/O port type to hold a link to a file in DATCORE storage
                          example:
                            - dataset: 'N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4'
                              label: initial_WTstates
                              path: 'N:package:32df09ba-e8d6-46da-bd54-f696157de6ce'
                              store: 1
                            - dataset: 'N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4'
                              label: initial_WTstates
                              path: 'N:package:32df09ba-e8d6-46da-bd54-f696157de6ce'
                              store: 1
                          properties:
                            dataset:
                              description: Unique identifier to access the dataset on datcore (REQUIRED for datcore)
                              title: Dataset
                              type: string
                            eTag:
                              description: Entity tag that uniquely represents the file. The method to generate the tag is not specified (black box).
                              title: Etag
                              type: string
                            label:
                              description: The real file name
                              title: Label
                              type: string
                            path:
                              anyOf:
                                - pattern: '^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$'
                                  type: string
                                - pattern: '^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$'
                                  type: string
                              description: The path to the file in the storage provider domain
                              title: Path
                            store:
                              description: 'The store identifier: 0 for simcore S3, 1 for datcore'
                              title: Store
                              type: integer
                          required:
                            - store
                            - path
                            - label
                            - dataset
                          title: DatCoreFileLink
                          type: object
                        - additionalProperties: false
                          description: 'I/O port type to hold a generic download link to a file (e.g. S3 pre-signed link, etc)'
                          example:
                            - downloadLink: 'https://fakeimg.pl/250x100/'
                          properties:
                            downloadLink:
                              format: uri
                              maxLength: 65536
                              minLength: 1
                              title: Downloadlink
                              type: string
                            label:
                              title: Label
                              type: string
                          required:
                            - downloadLink
                          title: DownloadLink
                          type: object
                        - items: {}
                          type: array
                        - type: object
                  title: Outputs
                  type: object
                parent:
                  anyOf:
                    - type: 'null'
                    - description: Parent's (group-nodes') node ID s. Used to group
                      format: uuid
                      title: Parent
                      type: string
                position:
                  allOf:
                    - additionalProperties: false
                      properties:
                        x:
                          description: The x position
                          example:
                            - '12'
                          title: X
                          type: integer
                        'y':
                          description: The y position
                          example:
                            - '15'
                          title: 'Y'
                          type: integer
                      required:
                        - x
                        - 'y'
                      title: Position
                      type: object
                  deprecated: true
                  description: Use projects_ui.WorkbenchUI.position instead
                  title: Position
                progress:
                  description: the node progress value
                  maximum: 100
                  minimum: 0
                  title: Progress
                  type: number
                runHash:
                  anyOf:
                    - type: 'null'
                    - description: the hex digest of the resolved inputs +outputs hash at the time when the last outputs were generated
                      title: Runhash
                      type: string
                state:
                  allOf:
                    - additionalProperties: false
                      example:
                        - currentStatus: NOT_STARTED
                          dependencies: []
                          modified: true
                        - currentStatus: ABORTED
                          dependencies:
                            - 42838344-03de-4ce2-8d93-589a5dcdfd05
                          modified: true
                        - currentStatus: SUCCESS
                          dependencies: []
                          modified: false
                      properties:
                        currentStatus:
                          allOf:
                            - description: |-
                                State of execution of a project's computational workflow

                                SEE StateType for task state
                              enum:
                                - UNKNOWN
                                - PUBLISHED
                                - NOT_STARTED
                                - PENDING
                                - STARTED
                                - RETRY
                                - SUCCESS
                                - FAILED
                                - ABORTED
                              title: RunningState
                              type: string
                          default: NOT_STARTED
                          description: the node's current state
                        dependencies:
                          description: contains the node inputs dependencies if they need to be computed first
                          items:
                            format: uuid
                            type: string
                          title: Dependencies
                          type: array
                          uniqueItems: true
                        modified:
                          default: true
                          description: true if the node's outputs need to be re-computed
                          title: Modified
                          type: boolean
                      title: NodeState
                      type: object
                  description: The node's state object
                  title: State
                thumbnail:
                  description: url of the latest screenshot of the node
                  example:
                    - 'https://placeimg.com/171/96/tech/grayscale/?0.jpg'
                  format: uri
                  maxLength: 2083
                  minLength: 0
                  title: Thumbnail
                  type: string
                version:
                  description: semantic version number of the node
                  example:
                    - 1.0.0
                    - 0.0.1
                  pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                  title: Version
                  type: string
              required:
                - key
                - version
                - label
              title: Node
              type: object
      required:
        - uuid
        - name
        - description
        - thumbnail
        - creationDate
        - lastChangeDate
        - workbench
        - prjOwner
        - accessRights
      title: osparc-simcore project
      type: object
  responses:
    DefaultErrorResponse:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorEnveloped'
