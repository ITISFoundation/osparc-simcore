# USAGE:  docker-compose -f docker-compose.yml -f docker-compose.devel.yml ...
version: '3.6'
services:
  client:
    build:
      target: development
    volumes:
      - './client:/home/scu/client'
  server:
    build:
      target: development
    volumes: 
      - ./server/source:/home/node/source
      - ./client/source-output:/home/node/source-output
      - ../../packages:/home/node/packages
      - ../../services:/home/node/services
      - ../../scripts/dy_services_helpers:/home/node/scripts/dy_services_helpers
      - ./server/docker:/home/node/docker
      - ./server/devel:/home/node/devel
      - ./test-data:/home/node/test-data
    environment: 
      - STORAGE_ENDPOINT=${STORAGE_ENDPOINT}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - POSTGRES_ENDPOINT=${POSTGRES_ENDPOINT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - TEST_DATA_PATH=/home/node/test-data
      - SIMCORE_NODE_BASEPATH=${SIMCORE_NODE_BASEPATH}
    depends_on:
        - client
        - storage
        - postgres
        - minio
  #--------------------------------------------------------------------
  apihub:
    image: services_apihub:latest
    ports:
      - 8043:8043
  storage:
    image: services_storage:latest
    ports:
      - 11111:8080
    environment:
      - POSTGRES_ENDPOINT=${POSTGRES_ENDPOINT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - S3_ENDPOINT=${S3_ENDPOINT}
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - RUN_DOCKER_ENGINE_ROOT=1
      - BF_API_SECRET=none
      - BF_API_KEY=none
      - APIHUB_HOST=${APIHUB_HOST}
      - APIHUB_PORT=${APIHUB_PORT}
    restart: always
    depends_on: 
      - postgres
      - apihub
  #--------------------------------------------------------------------
  postgres:
    image: postgres:10
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
  #--------------------------------------------------------------------
  adminer:
    image: adminer
    ports:
      - 18080:8080
    depends_on:
      - postgres
  #--------------------------------------------------------------------
  minio:
    image: minio/minio
    environment:
      - MINIO_ACCESS_KEY=${S3_ACCESS_KEY}
      - MINIO_SECRET_KEY=${S3_SECRET_KEY}
    ports:
      - "9001:9000"
    command: server /data      