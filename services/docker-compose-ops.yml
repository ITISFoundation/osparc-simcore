# Minimal docker-compose configuration to deploy a stack that contains a selection
# of the services deployed with ITISFoundation/osparc-ops
#
# These configurations avoid having to deploy the entire
# ITISFoundation/osparc-ops to operate osparc-simcore stack during development
#
# By default, the **ops** stack is automatically deployed in all the make up-* targets but
# can be disabled passing the 'ops_disabled' flag
#
# $ make ops_disabled=1 up-devel
# $ make ops_disabled=1 up-prod
# $ make ops_disabled=1 up-vesioned
# $ make ops_disabled=1 up-latest
#
# Nonetheless, notice that minio is a service used from simcore stack. Therefore, disabling ops stack
# is meaningful ONLY when simcore stack is intended to run with the the actual stacks from osparc-ops
#
#  NOTE: this stack cannot be called tools because it collides with default network created in services/static-webserver/client/tools/docker-compose.yml
#  IMPORTANT: This stack IS NOT used in the deployed version
version: "3.8"

services:
  adminer:
    image: adminer:4.8.0
    init: true
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
      - ADMINER_DESIGN=nette
      - ADMINER_PLUGINS=json-column
    ports:
      - "18080:8080"
    networks:
      - simcore_default

  portainer:
    image: portainer/portainer-ce
    init: true
    ports:
      - "9000:9000"
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  minio:
    image: minio/minio:RELEASE.2020-05-16T01-33-21Z
    init: true
    environment:
      - MINIO_ACCESS_KEY=${S3_ACCESS_KEY:?access_key_required}
      - MINIO_SECRET_KEY=${S3_SECRET_KEY:?secret_key_required}
    ports:
      - "9001:9000"
    command: server /data
    volumes:
      - minio_data:/data
    networks:
      - simcore_default
      - interactive_services_subnet
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "--fail",
          "http://localhost:9000/minio/health/live"
        ]
      interval: 5s
      timeout: 20s
      retries: 5

  filestash:
    image: machines/filestash:3a01b70
    ports:
      - "9002:8334"
    volumes:
      - ${TMP_PATH_TO_FILESTASH_CONFIG}:/app/data/state/config/config.json
    networks:
      - simcore_default

  onlyoffice:
    image: onlyoffice/documentserver:7.0.0.132
    networks:
      - simcore_default

  redis-commander:
    image: rediscommander/redis-commander:latest
    init: true
    environment:
      - REDIS_HOSTS=resources:${REDIS_HOST}:${REDIS_PORT}:0,locks:${REDIS_HOST}:${REDIS_PORT}:1,validation_codes:${REDIS_HOST}:${REDIS_PORT}:2,scheduled_maintenance:${REDIS_HOST}:${REDIS_PORT}:3,user_notifications:${REDIS_HOST}:${REDIS_PORT}:4
      # If you add/remove a db, do not forget to update the --databases entry in the docker-compose.yml
    ports:
      - "18081:8081"
    networks:
      - simcore_default

volumes:
  minio_data: {}
  portainer_data: {}

networks:
  simcore_default:
    name: ${SWARM_STACK_NAME:-simcore}_default
    external: true
  interactive_services_subnet:
    name: ${SWARM_STACK_NAME:-simcore}_interactive_services_subnet
    external: true
