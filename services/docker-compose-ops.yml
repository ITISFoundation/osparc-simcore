# Minimal docker-compose configuration to deploy a stack that contains a selection
# of the services deployed with ITISFoundation/osparc-ops
#
# These configurations avoid having to deploy the entire
# ITISFoundation/osparc-ops to operate osparc-simcore stack during development
#
# By default, the **ops** stack is automatically deployed in all the make up-* targets but
# can be disabled passing the 'ops_disabled' flag
#
# $ make ops_disabled=1 up-devel
# $ make ops_disabled=1 up-prod
# $ make ops_disabled=1 up-vesioned
# $ make ops_disabled=1 up-latest
#
# Nonetheless, notice that minio is a service used from simcore stack. Therefore, disabling ops stack
# is meaningful ONLY when simcore stack is intended to run with the the actual stacks from osparc-ops
#
#  NOTE: this stack cannot be called tools because it collides with default network created in services/static-webserver/client/tools/docker-compose.yml
#  IMPORTANT: This stack IS NOT used in the deployed version

services:
  adminer:
    image: adminer:4.8.1
    init: true
    environment:
      ADMINER_DEFAULT_SERVER : postgres
      ADMINER_DESIGN : nette
      ADMINER_PLUGINS : json-column
    ports:
      - "18080:8080"
    networks:
      - simcore_default
  jaeger:
    image: jaegertracing/all-in-one:1.47
    networks:
      - simcore_default
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # Jaeger HTTP Thrift
      - "14250:14250"  # Jaeger gRPC
      - "43017:4317" # opentelemetry GRPC default port
      - "43018:4318" # opentelemetry HTTP default port
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
  portainer:
    image: portainer/portainer-ce
    init: true
    ports:
      - "9000:9000"
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  minio:
    image: minio/minio:RELEASE.2023-12-02T10-51-33Z
    init: true
    environment:
      MINIO_ROOT_USER : ${S3_ACCESS_KEY:?access_key_required}
      MINIO_ROOT_PASSWORD : ${S3_SECRET_KEY:?secret_key_required}
      MINIO_VOLUMES : /data
    ports:
      - "9001:9000"
      - "9090:9090"
    command: server --console-address ":9090"
    volumes:
      - minio_data:/data
    networks:
      - simcore_default
      - interactive_services_subnet
    healthcheck:
      test:
        [
          "CMD",
          "mc",
          "ready",
          "local"
        ]
      interval: 5s
      timeout: 10s
      retries: 5

  redis-commander:
    image: rediscommander/redis-commander:latest
    init: true
    environment:
      - >-
        REDIS_HOSTS=
        resources:${REDIS_HOST}:${REDIS_PORT}:0:${REDIS_PASSWORD},
        locks:${REDIS_HOST}:${REDIS_PORT}:1:${REDIS_PASSWORD},
        validation_codes:${REDIS_HOST}:${REDIS_PORT}:2:${REDIS_PASSWORD},
        scheduled_maintenance:${REDIS_HOST}:${REDIS_PORT}:3:${REDIS_PASSWORD},
        user_notifications:${REDIS_HOST}:${REDIS_PORT}:4:${REDIS_PASSWORD},
        announcements:${REDIS_HOST}:${REDIS_PORT}:5:${REDIS_PASSWORD},
        distributed_identifiers:${REDIS_HOST}:${REDIS_PORT}:6:${REDIS_PASSWORD},
        deferred_tasks:${REDIS_HOST}:${REDIS_PORT}:7:${REDIS_PASSWORD}
      # If you add/remove a db, do not forget to update the --databases entry in the docker-compose.yml
    ports:
      - "18081:8081"
    networks:
      - simcore_default
  opentelemetry-collector:
    image: otel/opentelemetry-collector-contrib:0.105.0
    volumes:
      - ./opentelemetry-collector-config.yaml:/etc/otel/config.yaml
    hostname: "{{.Node.Hostname}}-{{.Task.Slot}}"
    command:
      - "--config=/etc/otel/config.yaml"
    ports:
      - "4318:4318"  # OTLP HTTP receiver
    networks:
      - simcore_default
    environment:
      TRACING_OPENTELEMETRY_COLLECTOR_BATCH_SIZE: ${TRACING_OPENTELEMETRY_COLLECTOR_BATCH_SIZE}
      TRACING_OPENTELEMETRY_COLLECTOR_SAMPLING_PERCENTAGE: ${TRACING_OPENTELEMETRY_COLLECTOR_SAMPLING_PERCENTAGE}
      TRACING_OPENTELEMETRY_COLLECTOR_EXPORTER_ENDPOINT: ${TRACING_OPENTELEMETRY_COLLECTOR_EXPORTER_ENDPOINT}
volumes:
  minio_data:
    name: ops_minio_data
  portainer_data:
    name: ops_portainer_data

networks:
  simcore_default:
    name: ${SWARM_STACK_NAME}_default
    external: true
  interactive_services_subnet:
    name: ${SWARM_STACK_NAME}_interactive_services_subnet
    external: true
