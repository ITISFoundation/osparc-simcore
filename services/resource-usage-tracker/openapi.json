{
  "openapi": "3.0.2",
  "info": {
    "title": "simcore-service-resource-usage-tracker web API",
    "description": " Service that collects and stores computational resources usage used in osparc-simcore",
    "version": "1.0.0"
  },
  "paths": {
    "/": {
      "get": {
        "summary": "Healthcheck",
        "operationId": "healthcheck__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/meta": {
      "get": {
        "tags": [
          "meta"
        ],
        "summary": "Get Service Metadata",
        "operationId": "get_service_metadata_v1_meta_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/_Meta"
                }
              }
            }
          }
        }
      }
    },
    "/v1/usage/services": {
      "get": {
        "tags": [
          "resource-usage-tracker"
        ],
        "summary": "List Usage Services",
        "description": "Returns a list of tracked containers for a given user and product",
        "operationId": "list_usage_services",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "maximum": 50,
              "minimum": 1,
              "type": "integer",
              "default": 20
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Offset",
              "minimum": 0,
              "type": "integer",
              "default": 0
            },
            "name": "offset",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "User Id",
              "exclusiveMinimum": true,
              "type": "integer",
              "minimum": 0
            },
            "name": "user_id",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Product Name",
              "type": "string"
            },
            "name": "product_name",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Wallet Id",
              "exclusiveMinimum": true,
              "type": "integer",
              "minimum": 0
            },
            "name": "wallet_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Access All Wallet Usage",
              "type": "boolean"
            },
            "name": "access_all_wallet_usage",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LimitOffsetPage_ServiceRunGet_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "LimitOffsetPage_ServiceRunGet_": {
        "title": "LimitOffsetPage[ServiceRunGet]",
        "required": [
          "items",
          "total",
          "links"
        ],
        "type": "object",
        "properties": {
          "items": {
            "title": "Items",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ServiceRunGet"
            }
          },
          "total": {
            "title": "Total",
            "minimum": 0,
            "type": "integer"
          },
          "limit": {
            "title": "Limit",
            "minimum": 1,
            "type": "integer"
          },
          "offset": {
            "title": "Offset",
            "minimum": 0,
            "type": "integer"
          },
          "links": {
            "$ref": "#/components/schemas/Links"
          }
        }
      },
      "Links": {
        "title": "Links",
        "type": "object",
        "properties": {
          "first": {
            "title": "First",
            "type": "string",
            "example": "/api/v1/users?limit=1&offset1"
          },
          "last": {
            "title": "Last",
            "type": "string",
            "example": "/api/v1/users?limit=1&offset1"
          },
          "self": {
            "title": "Self",
            "type": "string",
            "example": "/api/v1/users?limit=1&offset1"
          },
          "next": {
            "title": "Next",
            "type": "string",
            "example": "/api/v1/users?limit=1&offset1"
          },
          "prev": {
            "title": "Prev",
            "type": "string",
            "example": "/api/v1/users?limit=1&offset1"
          }
        }
      },
      "ServiceRunGet": {
        "title": "ServiceRunGet",
        "required": [
          "service_run_id",
          "user_id",
          "project_id",
          "project_name",
          "node_id",
          "node_name",
          "service_key",
          "service_version",
          "service_type",
          "service_resources",
          "started_at",
          "service_run_status"
        ],
        "type": "object",
        "properties": {
          "service_run_id": {
            "title": "Service Run Id",
            "type": "string"
          },
          "wallet_id": {
            "title": "Wallet Id",
            "exclusiveMinimum": true,
            "type": "integer",
            "minimum": 0
          },
          "wallet_name": {
            "title": "Wallet Name",
            "type": "string"
          },
          "user_id": {
            "title": "User Id",
            "exclusiveMinimum": true,
            "type": "integer",
            "minimum": 0
          },
          "project_id": {
            "title": "Project Id",
            "type": "string",
            "format": "uuid"
          },
          "project_name": {
            "title": "Project Name",
            "type": "string"
          },
          "node_id": {
            "title": "Node Id",
            "type": "string",
            "format": "uuid"
          },
          "node_name": {
            "title": "Node Name",
            "type": "string"
          },
          "service_key": {
            "title": "Service Key",
            "pattern": "^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$",
            "type": "string"
          },
          "service_version": {
            "title": "Service Version",
            "pattern": "^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){2}(-(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*)(\\.(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*))*)?(\\+[-\\da-zA-Z]+(\\.[-\\da-zA-Z-]+)*)?$",
            "type": "string"
          },
          "service_type": {
            "title": "Service Type",
            "type": "string"
          },
          "service_resources": {
            "title": "Service Resources",
            "type": "object"
          },
          "started_at": {
            "title": "Started At",
            "type": "string",
            "format": "date-time"
          },
          "stopped_at": {
            "title": "Stopped At",
            "type": "string",
            "format": "date-time"
          },
          "service_run_status": {
            "$ref": "#/components/schemas/ServiceRunStatus"
          }
        }
      },
      "ServiceRunStatus": {
        "title": "ServiceRunStatus",
        "enum": [
          "RUNNING",
          "SUCCESS",
          "ERROR"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "_Meta": {
        "title": "_Meta",
        "required": [
          "name",
          "version",
          "docs_url"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          },
          "version": {
            "title": "Version",
            "type": "string"
          },
          "docs_url": {
            "title": "Docs Url",
            "maxLength": 2083,
            "minLength": 1,
            "type": "string",
            "format": "uri"
          }
        }
      }
    }
  }
}
