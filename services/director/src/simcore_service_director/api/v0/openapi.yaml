openapi: 3.0.0
info:
  description: This is the oSparc's director API
  version: 0.1.0
  title: Director API
  contact:
    name: IT'IS Foundation
    email: support@simcore.com
  license:
    name: MIT
    url: 'https://github.com/ITISFoundation/osparc-simcore/blob/master/LICENSE'
servers:
  - description: Development server
    url: 'http://{host}:{port}/{version}'
    variables:
      host:
        default: localhost
      port:
        default: '8080'
      version:
        default: v0
        enum:
          - v0
  - description: Production server
    url: 'http://director:{port}/{version}'
    variables:
      port:
        default: '8080'
      version:
        default: v0
        enum:
          - v0
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
  - name: users
    description: Operations available to regular users
paths:
  /:
    get:
      tags:
        - users
      summary: Service health-check endpoint
      description: Some general information on the API and state of the service behind
      operationId: root_get
      responses:
        '200':
          description: Service information
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: director service
                      status:
                        type: string
                        example: SERVICE_RUNNING
                      api_version:
                        type: string
                        example: 1.0.0-dev
                      version:
                        type: string
                        example: 1dfcfdc
                  error:
                    nullable: true
                    default: null
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
  /services:
    get:
      tags:
        - users
      summary: Lists available services in the oSparc platform
      description: Lists available services in the oSparc platform
      operationId: services_get
      parameters:
        - in: query
          name: service_type
          description: |
            The service type:
              * computational - a computational service
              * interactive - an interactive service
          required: false
          schema:
            type: string
            enum:
              - computational
              - interactive
            example: computational
      responses:
        '200':
          description: 'Success, returns the list of available services'
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      title: simcore node
                      description: Description of a simcore node 'class' with input and output
                      type: object
                      additionalProperties: false
                      required:
                        - key
                        - version
                        - type
                        - name
                        - description
                        - authors
                        - contact
                        - inputs
                        - outputs
                      properties:
                        key:
                          type: string
                          description: distinctive name for the node based on the docker registry path
                          pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
                          example: simcore/services/comp/itis/sleeper
                        integration-version:
                          type: string
                          description: integration version number
                          pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                          example: 1.0.0
                        version:
                          type: string
                          description: service version number
                          pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                          example: 1.0.0
                        type:
                          type: string
                          description: service type
                          enum:
                            - frontend
                            - computational
                            - dynamic
                          example: computational
                        name:
                          type: string
                          description: 'short, human readable name for the node'
                          example: Fast Counter
                        thumbnail:
                          type: string
                          description: url to the thumbnail
                          example: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                        badges:
                          type: array
                          items:
                            type: object
                            required:
                              - name
                              - image
                              - url
                            additionalProperties: false
                            properties:
                              name:
                                type: string
                                description: Name of the subject
                                example: travis-ci
                              image:
                                type: string
                                description: Url to the shield
                                example: 'https://travis-ci.org/ITISFoundation/osparc-simcore.svg?branch=master'
                              url:
                                type: string
                                description: Link to status
                                example: 'https://travis-ci.org/ITISFoundation/osparc-simcore ''State of CI: build, test and pushing images'''
                        description:
                          type: string
                          description: human readable description of the purpose of the node
                          example: Our best node type
                        authors:
                          type: array
                          minItems: 1
                          items:
                            type: object
                            required:
                              - name
                              - email
                            additionalProperties: false
                            properties:
                              name:
                                type: string
                                description: Name of the author
                                example: Sun Bak
                              email:
                                description: Email address
                                type: string
                                format: email
                                example: sun@sense.eight
                              affiliation:
                                description: Affiliation of the author
                                type: string
                                example: Sense8
                        contact:
                          type: string
                          format: email
                          description: email to correspond to the authors about the node
                          example: lab@net.flix
                        inputs:
                          type: object
                          description: definition of the inputs of this node
                          x-patternProperties:
                            '^[-_a-zA-Z0-9]+$':
                              type: object
                              description: all the input configurable for this service
                              additionalProperties: false
                              required:
                                - displayOrder
                                - label
                                - description
                                - type
                              properties:
                                displayOrder:
                                  type: number
                                  description: use this to numerically sort the properties for display
                                  example:
                                    - 1
                                    - -0.2
                                label:
                                  type: string
                                  description: short name for the property
                                  example:
                                    - Age
                                description:
                                  type: string
                                  description: description of the property
                                  example:
                                    - Age in seconds since 1970
                                type:
                                  type: string
                                  pattern: '^(number|integer|boolean|string|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$'
                                  description: data type expected on this input glob matching for data type is allowed
                                  example:
                                    - number
                                    - boolean
                                    - 'data:*/*'
                                    - 'data:text/*'
                                    - 'data:[image/jpeg,image/png]'
                                    - 'data:application/json'
                                    - 'data:application/json;schema=https://my-schema/not/really/schema.json'
                                    - 'data:application/vnd.ms-excel'
                                    - 'data:text/plain'
                                    - 'data:application/hdf5'
                                    - 'data:application/edu.ucdavis@ceclancy.xyz'
                                fileToKeyMap:
                                  description: Place the data associated with the named keys in files
                                  type: object
                                  patternProperties:
                                    .+:
                                      type: string
                                      pattern: '^[-_a-zA-Z0-9]+$'
                                  example:
                                    - dir/input1.txt: key_1
                                      dir33/input2.txt: key2
                                defaultValue:
                                  description: initial value for this input
                                  type:
                                    - string
                                    - number
                                    - integer
                                    - boolean
                                  example:
                                    - Dog
                                    - true
                                unit:
                                  title: Unit
                                  description: 'Units of this input value, if a physical quantity'
                                  type: string
                                widget:
                                  description: custom widget to use instead of the default one determined from the data-type
                                  anyOf:
                                    - type: object
                                      additionalProperties: false
                                      required:
                                        - type
                                      properties:
                                        type:
                                          description: type of the property
                                          type: string
                                          enum:
                                            - TextArea
                                        minHeight:
                                          description: minimum Height of the textarea
                                          type: integer
                                          minimum: 1
                                    - type: object
                                      additionalProperties: false
                                      required:
                                        - type
                                        - structure
                                      properties:
                                        type:
                                          description: type of the property
                                          type: string
                                          enum:
                                            - SelectBox
                                        structure:
                                          type: array
                                          minItems: 1
                                          items:
                                            type: object
                                            additionalProperties: false
                                            required:
                                              - key
                                              - label
                                            properties:
                                              key:
                                                type:
                                                  - string
                                                  - boolean
                                                  - number
                                              label:
                                                type: string
                                            example:
                                              - - key: rat
                                                  label: The Rat
                                                - key: dog
                                                  label: Bello the Dog
                          additionalProperties: true
                        outputs:
                          type: object
                          description: definition of the outputs of this node
                          x-patternProperties:
                            '^[-_a-zA-Z0-9]+$':
                              type: object
                              description: all the output produced by this node
                              additionalProperties: false
                              required:
                                - displayOrder
                                - label
                                - description
                                - type
                              properties:
                                displayOrder:
                                  type: number
                                  description: use this to numerically sort the properties for display
                                  example:
                                    - 1
                                    - -0.2
                                label:
                                  type: string
                                  description: short name for the property
                                  example:
                                    - Age
                                description:
                                  type: string
                                  description: description of the property
                                  example:
                                    - Age in seconds since 1970
                                type:
                                  type: string
                                  pattern: '^(number|integer|boolean|string|data:[^/\s,]+/[^/\s,]+)$'
                                  description: data type expected on this output
                                  example:
                                    - number
                                    - integer
                                    - boolean
                                    - string
                                    - 'data:application/json'
                                    - 'data:application/vnd.ms-excel '
                                    - 'data:text/plain'
                                    - 'data:application/hdf5'
                                fileToKeyMap:
                                  description: Place the data stored in the named files and store it in the locations pointed to by the respective output key.
                                  type: object
                                  patternProperties:
                                    .+:
                                      type: string
                                      pattern: '^[-_a-zA-Z0-9]+$'
                                  example:
                                    - dir/input1.txt: key_1
                                      dir33/input2.txt: key2
                                unit:
                                  title: Unit
                                  description: 'Units of the output value, if a physical quantity'
                                  type: string
                          additionalProperties: true
                  error:
                    nullable: true
                    default: null
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
  '/services/{service_key}/{service_version}':
    get:
      tags:
        - users
      summary: Returns details of the selected service if available in the oSparc platform
      description: Returns details of the selected service if available in the oSparc platform
      operationId: services_by_key_version_get
      parameters:
        - in: path
          name: service_key
          description: The key (url) of the service
          required: true
          schema:
            type: string
            description: distinctive name for the node based on the docker registry path
            pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
            example:
              - simcore/services/comp/itis/sleeper
              - simcore/services/dynamic/3dviewer
        - in: path
          name: service_version
          description: The tag/version of the service
          required: true
          schema:
            type: string
            description: semantic version number
            pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
            example:
              - 1.0.0
              - 0.0.1
      responses:
        '200':
          description: 'Success, returns the details of the service'
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      title: simcore node
                      description: Description of a simcore node 'class' with input and output
                      type: object
                      additionalProperties: false
                      required:
                        - key
                        - version
                        - type
                        - name
                        - description
                        - authors
                        - contact
                        - inputs
                        - outputs
                      properties:
                        key:
                          type: string
                          description: distinctive name for the node based on the docker registry path
                          pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
                          example: simcore/services/comp/itis/sleeper
                        integration-version:
                          type: string
                          description: integration version number
                          pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                          example: 1.0.0
                        version:
                          type: string
                          description: service version number
                          pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                          example: 1.0.0
                        type:
                          type: string
                          description: service type
                          enum:
                            - frontend
                            - computational
                            - dynamic
                          example: computational
                        name:
                          type: string
                          description: 'short, human readable name for the node'
                          example: Fast Counter
                        thumbnail:
                          type: string
                          description: url to the thumbnail
                          example: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                        badges:
                          type: array
                          items:
                            type: object
                            required:
                              - name
                              - image
                              - url
                            additionalProperties: false
                            properties:
                              name:
                                type: string
                                description: Name of the subject
                                example: travis-ci
                              image:
                                type: string
                                description: Url to the shield
                                example: 'https://travis-ci.org/ITISFoundation/osparc-simcore.svg?branch=master'
                              url:
                                type: string
                                description: Link to status
                                example: 'https://travis-ci.org/ITISFoundation/osparc-simcore ''State of CI: build, test and pushing images'''
                        description:
                          type: string
                          description: human readable description of the purpose of the node
                          example: Our best node type
                        authors:
                          type: array
                          minItems: 1
                          items:
                            type: object
                            required:
                              - name
                              - email
                            additionalProperties: false
                            properties:
                              name:
                                type: string
                                description: Name of the author
                                example: Sun Bak
                              email:
                                description: Email address
                                type: string
                                format: email
                                example: sun@sense.eight
                              affiliation:
                                description: Affiliation of the author
                                type: string
                                example: Sense8
                        contact:
                          type: string
                          format: email
                          description: email to correspond to the authors about the node
                          example: lab@net.flix
                        inputs:
                          type: object
                          description: definition of the inputs of this node
                          x-patternProperties:
                            '^[-_a-zA-Z0-9]+$':
                              type: object
                              description: all the input configurable for this service
                              additionalProperties: false
                              required:
                                - displayOrder
                                - label
                                - description
                                - type
                              properties:
                                displayOrder:
                                  type: number
                                  description: use this to numerically sort the properties for display
                                  example:
                                    - 1
                                    - -0.2
                                label:
                                  type: string
                                  description: short name for the property
                                  example:
                                    - Age
                                description:
                                  type: string
                                  description: description of the property
                                  example:
                                    - Age in seconds since 1970
                                type:
                                  type: string
                                  pattern: '^(number|integer|boolean|string|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$'
                                  description: data type expected on this input glob matching for data type is allowed
                                  example:
                                    - number
                                    - boolean
                                    - 'data:*/*'
                                    - 'data:text/*'
                                    - 'data:[image/jpeg,image/png]'
                                    - 'data:application/json'
                                    - 'data:application/json;schema=https://my-schema/not/really/schema.json'
                                    - 'data:application/vnd.ms-excel'
                                    - 'data:text/plain'
                                    - 'data:application/hdf5'
                                    - 'data:application/edu.ucdavis@ceclancy.xyz'
                                fileToKeyMap:
                                  description: Place the data associated with the named keys in files
                                  type: object
                                  patternProperties:
                                    .+:
                                      type: string
                                      pattern: '^[-_a-zA-Z0-9]+$'
                                  example:
                                    - dir/input1.txt: key_1
                                      dir33/input2.txt: key2
                                defaultValue:
                                  description: initial value for this input
                                  type:
                                    - string
                                    - number
                                    - integer
                                    - boolean
                                  example:
                                    - Dog
                                    - true
                                unit:
                                  title: Unit
                                  description: 'Units of this input value, if a physical quantity'
                                  type: string
                                widget:
                                  description: custom widget to use instead of the default one determined from the data-type
                                  anyOf:
                                    - type: object
                                      additionalProperties: false
                                      required:
                                        - type
                                      properties:
                                        type:
                                          description: type of the property
                                          type: string
                                          enum:
                                            - TextArea
                                        minHeight:
                                          description: minimum Height of the textarea
                                          type: integer
                                          minimum: 1
                                    - type: object
                                      additionalProperties: false
                                      required:
                                        - type
                                        - structure
                                      properties:
                                        type:
                                          description: type of the property
                                          type: string
                                          enum:
                                            - SelectBox
                                        structure:
                                          type: array
                                          minItems: 1
                                          items:
                                            type: object
                                            additionalProperties: false
                                            required:
                                              - key
                                              - label
                                            properties:
                                              key:
                                                type:
                                                  - string
                                                  - boolean
                                                  - number
                                              label:
                                                type: string
                                            example:
                                              - - key: rat
                                                  label: The Rat
                                                - key: dog
                                                  label: Bello the Dog
                          additionalProperties: true
                        outputs:
                          type: object
                          description: definition of the outputs of this node
                          x-patternProperties:
                            '^[-_a-zA-Z0-9]+$':
                              type: object
                              description: all the output produced by this node
                              additionalProperties: false
                              required:
                                - displayOrder
                                - label
                                - description
                                - type
                              properties:
                                displayOrder:
                                  type: number
                                  description: use this to numerically sort the properties for display
                                  example:
                                    - 1
                                    - -0.2
                                label:
                                  type: string
                                  description: short name for the property
                                  example:
                                    - Age
                                description:
                                  type: string
                                  description: description of the property
                                  example:
                                    - Age in seconds since 1970
                                type:
                                  type: string
                                  pattern: '^(number|integer|boolean|string|data:[^/\s,]+/[^/\s,]+)$'
                                  description: data type expected on this output
                                  example:
                                    - number
                                    - integer
                                    - boolean
                                    - string
                                    - 'data:application/json'
                                    - 'data:application/vnd.ms-excel '
                                    - 'data:text/plain'
                                    - 'data:application/hdf5'
                                fileToKeyMap:
                                  description: Place the data stored in the named files and store it in the locations pointed to by the respective output key.
                                  type: object
                                  patternProperties:
                                    .+:
                                      type: string
                                      pattern: '^[-_a-zA-Z0-9]+$'
                                  example:
                                    - dir/input1.txt: key_1
                                      dir33/input2.txt: key2
                                unit:
                                  title: Unit
                                  description: 'Units of the output value, if a physical quantity'
                                  type: string
                          additionalProperties: true
                  error:
                    nullable: true
                    default: null
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        '404':
          description: Service not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
  '/service_extras/{service_key}/{service_version}':
    get:
      tags:
        - users
      summary: Returns the service's details which should be hidden from the user defined as extras.
      description: Currently returns the node_requirements an array of resoruces needed for scheduling.
      operationId: service_extras_by_key_version_get
      parameters:
        - in: path
          name: service_key
          description: The key (url) of the service
          required: true
          schema:
            type: string
            description: distinctive name for the node based on the docker registry path
            pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
            example:
              - simcore/services/comp/itis/sleeper
              - simcore/services/dynamic/3dviewer
        - in: path
          name: service_version
          description: The tag/version of the service
          required: true
          schema:
            type: string
            description: semantic version number
            pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
            example:
              - 1.0.0
              - 0.0.1
      responses:
        '200':
          description: 'Success, returns an object containing details hidden from the user'
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - node_requirements
                    properties:
                      node_requirements:
                        type: array
                        items:
                          type: string
                          enum:
                            - CPU
                            - GPU
                      service_build_details:
                        type: object
                        properties:
                          build_date:
                            type: string
                          vcs_ref:
                            type: string
                          vcs_url:
                            type: string
                  error:
                    nullable: true
                    default: null
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        '404':
          description: Service not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
  /running_interactive_services:
    get:
      tags:
        - users
      summary: Returns a list of interactive services
      operationId: running_interactive_services_list_get
      parameters:
        - in: query
          name: user_id
          required: false
          schema:
            type: string
        - in: query
          name: project_id
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns the running services instances
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - published_port
                        - service_uuid
                        - service_key
                        - service_version
                        - service_host
                        - service_port
                        - service_state
                        - user_id
                      properties:
                        published_port:
                          description: The ports where the service provides its interface
                          type: integer
                          format: int32
                          minimum: 1
                          example: 30000
                        entry_point:
                          description: The entry point where the service provides its interface if specified
                          type: string
                          example: /the/entry/point/is/here
                        service_uuid:
                          description: The UUID attached to this service
                          type: string
                          example: 123e4567-e89b-12d3-a456-426655440000
                        service_key:
                          type: string
                          description: distinctive name for the node based on the docker registry path
                          pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
                          example:
                            - simcore/services/comp/itis/sleeper
                            - simcore/services/dynamic/3dviewer
                        service_version:
                          type: string
                          description: semantic version number
                          pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                          example:
                            - 1.0.0
                            - 0.0.1
                        service_host:
                          description: service host name within the network
                          type: string
                          example: jupyter_E1O2E-LAH
                        service_port:
                          description: port to access the service within the network
                          type: integer
                          minimum: 1
                          example: 8081
                        service_basepath:
                          description: different base path where current service is mounted otherwise defaults to root
                          type: string
                          example: /x/E1O2E-LAH
                          default: ''
                        service_state:
                          description: |
                            the service state * 'pending' - The service is waiting for resources to start * 'pulling' - The service is being pulled from the registry * 'starting' - The service is starting * 'running' - The service is running * 'complete' - The service completed * 'failed' - The service failed to start
                          type: string
                          enum:
                            - pending
                            - pulling
                            - starting
                            - running
                            - complete
                            - failed
                        service_message:
                          description: the service message
                          type: string
                          example: no suitable node (insufficient resources on 1 node)
                        user_id:
                          description: the user that started the service
                          type: string
                          example: '123'
                  error:
                    nullable: true
                    default: null
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
    post:
      tags:
        - users
      summary: Starts an interactive service in the oSparc platform
      operationId: running_interactive_services_post
      parameters:
        - in: query
          name: user_id
          description: The ID of the user that starts the service
          required: true
          schema:
            type: string
            example: asdfgj233
        - in: query
          name: project_id
          description: The ID of the project in which the service starts
          required: true
          schema:
            type: string
            example: asdfgj233
        - in: query
          name: service_key
          description: The key (url) of the service
          required: true
          schema:
            type: string
            description: distinctive name for the node based on the docker registry path
            pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
            example:
              - simcore/services/comp/itis/sleeper
              - simcore/services/dynamic/3dviewer
        - in: query
          name: service_tag
          description: The tag/version of the service
          required: false
          schema:
            type: string
            description: semantic version number
            pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
            example:
              - 1.0.0
              - 0.0.1
        - in: query
          name: service_uuid
          description: The uuid to assign the service with
          required: true
          schema:
            type: string
            example: 123e4567-e89b-12d3-a456-426655440000
        - in: query
          name: service_basepath
          description: predefined basepath for the backend service otherwise uses root
          required: false
          schema:
            type: string
            example: /x/EycCXbU0H/
            default: ''
      responses:
        '201':
          description: Succesfully created the service in the oSparc platform. Returns the location where the service runs.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - published_port
                      - service_uuid
                      - service_key
                      - service_version
                      - service_host
                      - service_port
                      - service_state
                      - user_id
                    properties:
                      published_port:
                        description: The ports where the service provides its interface
                        type: integer
                        format: int32
                        minimum: 1
                        example: 30000
                      entry_point:
                        description: The entry point where the service provides its interface if specified
                        type: string
                        example: /the/entry/point/is/here
                      service_uuid:
                        description: The UUID attached to this service
                        type: string
                        example: 123e4567-e89b-12d3-a456-426655440000
                      service_key:
                        type: string
                        description: distinctive name for the node based on the docker registry path
                        pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
                        example:
                          - simcore/services/comp/itis/sleeper
                          - simcore/services/dynamic/3dviewer
                      service_version:
                        type: string
                        description: semantic version number
                        pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                        example:
                          - 1.0.0
                          - 0.0.1
                      service_host:
                        description: service host name within the network
                        type: string
                        example: jupyter_E1O2E-LAH
                      service_port:
                        description: port to access the service within the network
                        type: integer
                        minimum: 1
                        example: 8081
                      service_basepath:
                        description: different base path where current service is mounted otherwise defaults to root
                        type: string
                        example: /x/E1O2E-LAH
                        default: ''
                      service_state:
                        description: |
                          the service state * 'pending' - The service is waiting for resources to start * 'pulling' - The service is being pulled from the registry * 'starting' - The service is starting * 'running' - The service is running * 'complete' - The service completed * 'failed' - The service failed to start
                        type: string
                        enum:
                          - pending
                          - pulling
                          - starting
                          - running
                          - complete
                          - failed
                      service_message:
                        description: the service message
                        type: string
                        example: no suitable node (insufficient resources on 1 node)
                      user_id:
                        description: the user that started the service
                        type: string
                        example: '123'
                  error:
                    nullable: true
                    default: null
        '400':
          description: 'Malformed function call, missing field'
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        '404':
          description: Service not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        '409':
          description: A service with the same uuid already exists
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
  '/running_interactive_services/{service_uuid}':
    get:
      tags:
        - users
      summary: Succesfully returns if a service with the defined uuid is up and running
      description: Succesfully returns if a service with the defined uuid is up and running
      operationId: running_interactive_services_get
      parameters:
        - in: path
          name: service_uuid
          description: The uuid of the service
          required: true
          schema:
            type: string
            example: 123e4567-e89b-12d3-a456-426655440000
      responses:
        '200':
          description: OK service exists and runs. Returns service location.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - published_port
                      - service_uuid
                      - service_key
                      - service_version
                      - service_host
                      - service_port
                      - service_state
                      - user_id
                    properties:
                      published_port:
                        description: The ports where the service provides its interface
                        type: integer
                        format: int32
                        minimum: 1
                        example: 30000
                      entry_point:
                        description: The entry point where the service provides its interface if specified
                        type: string
                        example: /the/entry/point/is/here
                      service_uuid:
                        description: The UUID attached to this service
                        type: string
                        example: 123e4567-e89b-12d3-a456-426655440000
                      service_key:
                        type: string
                        description: distinctive name for the node based on the docker registry path
                        pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
                        example:
                          - simcore/services/comp/itis/sleeper
                          - simcore/services/dynamic/3dviewer
                      service_version:
                        type: string
                        description: semantic version number
                        pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                        example:
                          - 1.0.0
                          - 0.0.1
                      service_host:
                        description: service host name within the network
                        type: string
                        example: jupyter_E1O2E-LAH
                      service_port:
                        description: port to access the service within the network
                        type: integer
                        minimum: 1
                        example: 8081
                      service_basepath:
                        description: different base path where current service is mounted otherwise defaults to root
                        type: string
                        example: /x/E1O2E-LAH
                        default: ''
                      service_state:
                        description: |
                          the service state * 'pending' - The service is waiting for resources to start * 'pulling' - The service is being pulled from the registry * 'starting' - The service is starting * 'running' - The service is running * 'complete' - The service completed * 'failed' - The service failed to start
                        type: string
                        enum:
                          - pending
                          - pulling
                          - starting
                          - running
                          - complete
                          - failed
                      service_message:
                        description: the service message
                        type: string
                        example: no suitable node (insufficient resources on 1 node)
                      user_id:
                        description: the user that started the service
                        type: string
                        example: '123'
                  error:
                    nullable: true
                    default: null
        '400':
          description: 'Malformed function call, missing field'
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        '404':
          description: Service not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
    delete:
      tags:
        - users
      summary: Stops and removes an interactive service from the oSparc platform
      description: Stops and removes an interactive service from the oSparc platform
      operationId: running_interactive_services_delete
      parameters:
        - in: path
          name: service_uuid
          description: The uuid of the service
          required: true
          schema:
            type: string
            example: 123e4567-e89b-12d3-a456-426655440000
        - in: query
          name: save_state
          description: Save the state prior to removing the service
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '204':
          description: Succesfully stopped and removed the service from the oSparc platform
        '400':
          description: 'Malformed function call, missing field'
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        '404':
          description: Service not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
components:
  parameters:
    UserId:
      in: query
      name: user_id
      description: The ID of the user that starts the service
      required: true
      schema:
        type: string
        example: asdfgj233
    ProjectId:
      in: query
      name: project_id
      description: The ID of the project in which the service starts
      required: true
      schema:
        type: string
        example: asdfgj233
    AssignmentUuid:
      in: query
      name: service_uuid
      description: The uuid to assign the service with
      required: true
      schema:
        type: string
        example: 123e4567-e89b-12d3-a456-426655440000
    ServiceKeyPath:
      in: path
      name: service_key
      description: The key (url) of the service
      required: true
      schema:
        type: string
        description: distinctive name for the node based on the docker registry path
        pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
        example:
          - simcore/services/comp/itis/sleeper
          - simcore/services/dynamic/3dviewer
    ServiceKey:
      in: query
      name: service_key
      description: The key (url) of the service
      required: true
      schema:
        type: string
        description: distinctive name for the node based on the docker registry path
        pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
        example:
          - simcore/services/comp/itis/sleeper
          - simcore/services/dynamic/3dviewer
    ServiceType:
      in: query
      name: service_type
      description: |
        The service type:
          * computational - a computational service
          * interactive - an interactive service
      required: false
      schema:
        type: string
        enum:
          - computational
          - interactive
        example: computational
    ServiceBasePath:
      in: query
      name: service_basepath
      description: predefined basepath for the backend service otherwise uses root
      required: false
      schema:
        type: string
        example: /x/EycCXbU0H/
        default: ''
    ServiceUuid:
      in: path
      name: service_uuid
      description: The uuid of the service
      required: true
      schema:
        type: string
        example: 123e4567-e89b-12d3-a456-426655440000
    ServiceVersionPath:
      in: path
      name: service_version
      description: The tag/version of the service
      required: true
      schema:
        type: string
        description: semantic version number
        pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
        example:
          - 1.0.0
          - 0.0.1
    ServiceVersion:
      in: query
      name: service_tag
      description: The tag/version of the service
      required: false
      schema:
        type: string
        description: semantic version number
        pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
        example:
          - 1.0.0
          - 0.0.1
    SaveState:
      in: query
      name: save_state
      description: Save the state prior to removing the service
      required: false
      schema:
        type: boolean
        default: true
  schemas:
    ErrorEnveloped:
      type: object
      required:
        - error
      properties:
        data:
          nullable: true
          default: null
        error:
          type: object
          required:
            - status
            - message
          properties:
            message:
              description: Error message
              type: string
              example: Unexpected error
            errors:
              type: array
              items:
                properties:
                  code:
                    type: string
                    description: Server Exception
                    example: ServiceUUIDNotFoundError
            status:
              description: Error code
              type: integer
              example: 404
    RunningServiceEnveloped:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - published_port
            - service_uuid
            - service_key
            - service_version
            - service_host
            - service_port
            - service_state
            - user_id
          properties:
            published_port:
              description: The ports where the service provides its interface
              type: integer
              format: int32
              minimum: 1
              example: 30000
            entry_point:
              description: The entry point where the service provides its interface if specified
              type: string
              example: /the/entry/point/is/here
            service_uuid:
              description: The UUID attached to this service
              type: string
              example: 123e4567-e89b-12d3-a456-426655440000
            service_key:
              type: string
              description: distinctive name for the node based on the docker registry path
              pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
              example:
                - simcore/services/comp/itis/sleeper
                - simcore/services/dynamic/3dviewer
            service_version:
              type: string
              description: semantic version number
              pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
              example:
                - 1.0.0
                - 0.0.1
            service_host:
              description: service host name within the network
              type: string
              example: jupyter_E1O2E-LAH
            service_port:
              description: port to access the service within the network
              type: integer
              minimum: 1
              example: 8081
            service_basepath:
              description: different base path where current service is mounted otherwise defaults to root
              type: string
              example: /x/E1O2E-LAH
              default: ''
            service_state:
              description: |
                the service state * 'pending' - The service is waiting for resources to start * 'pulling' - The service is being pulled from the registry * 'starting' - The service is starting * 'running' - The service is running * 'complete' - The service completed * 'failed' - The service failed to start
              type: string
              enum:
                - pending
                - pulling
                - starting
                - running
                - complete
                - failed
            service_message:
              description: the service message
              type: string
              example: no suitable node (insufficient resources on 1 node)
            user_id:
              description: the user that started the service
              type: string
              example: '123'
        error:
          nullable: true
          default: null
    RunningServicesEnveloped:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            type: object
            required:
              - published_port
              - service_uuid
              - service_key
              - service_version
              - service_host
              - service_port
              - service_state
              - user_id
            properties:
              published_port:
                description: The ports where the service provides its interface
                type: integer
                format: int32
                minimum: 1
                example: 30000
              entry_point:
                description: The entry point where the service provides its interface if specified
                type: string
                example: /the/entry/point/is/here
              service_uuid:
                description: The UUID attached to this service
                type: string
                example: 123e4567-e89b-12d3-a456-426655440000
              service_key:
                type: string
                description: distinctive name for the node based on the docker registry path
                pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
                example:
                  - simcore/services/comp/itis/sleeper
                  - simcore/services/dynamic/3dviewer
              service_version:
                type: string
                description: semantic version number
                pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                example:
                  - 1.0.0
                  - 0.0.1
              service_host:
                description: service host name within the network
                type: string
                example: jupyter_E1O2E-LAH
              service_port:
                description: port to access the service within the network
                type: integer
                minimum: 1
                example: 8081
              service_basepath:
                description: different base path where current service is mounted otherwise defaults to root
                type: string
                example: /x/E1O2E-LAH
                default: ''
              service_state:
                description: |
                  the service state * 'pending' - The service is waiting for resources to start * 'pulling' - The service is being pulled from the registry * 'starting' - The service is starting * 'running' - The service is running * 'complete' - The service completed * 'failed' - The service failed to start
                type: string
                enum:
                  - pending
                  - pulling
                  - starting
                  - running
                  - complete
                  - failed
              service_message:
                description: the service message
                type: string
                example: no suitable node (insufficient resources on 1 node)
              user_id:
                description: the user that started the service
                type: string
                example: '123'
        error:
          nullable: true
          default: null
    ServicesEnveloped:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            title: simcore node
            description: Description of a simcore node 'class' with input and output
            type: object
            additionalProperties: false
            required:
              - key
              - version
              - type
              - name
              - description
              - authors
              - contact
              - inputs
              - outputs
            properties:
              key:
                type: string
                description: distinctive name for the node based on the docker registry path
                pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
                example: simcore/services/comp/itis/sleeper
              integration-version:
                type: string
                description: integration version number
                pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                example: 1.0.0
              version:
                type: string
                description: service version number
                pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                example: 1.0.0
              type:
                type: string
                description: service type
                enum:
                  - frontend
                  - computational
                  - dynamic
                example: computational
              name:
                type: string
                description: 'short, human readable name for the node'
                example: Fast Counter
              thumbnail:
                type: string
                description: url to the thumbnail
                example: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
              badges:
                type: array
                items:
                  type: object
                  required:
                    - name
                    - image
                    - url
                  additionalProperties: false
                  properties:
                    name:
                      type: string
                      description: Name of the subject
                      example: travis-ci
                    image:
                      type: string
                      description: Url to the shield
                      example: 'https://travis-ci.org/ITISFoundation/osparc-simcore.svg?branch=master'
                    url:
                      type: string
                      description: Link to status
                      example: 'https://travis-ci.org/ITISFoundation/osparc-simcore ''State of CI: build, test and pushing images'''
              description:
                type: string
                description: human readable description of the purpose of the node
                example: Our best node type
              authors:
                type: array
                minItems: 1
                items:
                  type: object
                  required:
                    - name
                    - email
                  additionalProperties: false
                  properties:
                    name:
                      type: string
                      description: Name of the author
                      example: Sun Bak
                    email:
                      description: Email address
                      type: string
                      format: email
                      example: sun@sense.eight
                    affiliation:
                      description: Affiliation of the author
                      type: string
                      example: Sense8
              contact:
                type: string
                format: email
                description: email to correspond to the authors about the node
                example: lab@net.flix
              inputs:
                type: object
                description: definition of the inputs of this node
                x-patternProperties:
                  '^[-_a-zA-Z0-9]+$':
                    type: object
                    description: all the input configurable for this service
                    additionalProperties: false
                    required:
                      - displayOrder
                      - label
                      - description
                      - type
                    properties:
                      displayOrder:
                        type: number
                        description: use this to numerically sort the properties for display
                        example:
                          - 1
                          - -0.2
                      label:
                        type: string
                        description: short name for the property
                        example:
                          - Age
                      description:
                        type: string
                        description: description of the property
                        example:
                          - Age in seconds since 1970
                      type:
                        type: string
                        pattern: '^(number|integer|boolean|string|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$'
                        description: data type expected on this input glob matching for data type is allowed
                        example:
                          - number
                          - boolean
                          - 'data:*/*'
                          - 'data:text/*'
                          - 'data:[image/jpeg,image/png]'
                          - 'data:application/json'
                          - 'data:application/json;schema=https://my-schema/not/really/schema.json'
                          - 'data:application/vnd.ms-excel'
                          - 'data:text/plain'
                          - 'data:application/hdf5'
                          - 'data:application/edu.ucdavis@ceclancy.xyz'
                      fileToKeyMap:
                        description: Place the data associated with the named keys in files
                        type: object
                        patternProperties:
                          .+:
                            type: string
                            pattern: '^[-_a-zA-Z0-9]+$'
                        example:
                          - dir/input1.txt: key_1
                            dir33/input2.txt: key2
                      defaultValue:
                        description: initial value for this input
                        type:
                          - string
                          - number
                          - integer
                          - boolean
                        example:
                          - Dog
                          - true
                      unit:
                        title: Unit
                        description: 'Units of this input value, if a physical quantity'
                        type: string
                      widget:
                        description: custom widget to use instead of the default one determined from the data-type
                        anyOf:
                          - type: object
                            additionalProperties: false
                            required:
                              - type
                            properties:
                              type:
                                description: type of the property
                                type: string
                                enum:
                                  - TextArea
                              minHeight:
                                description: minimum Height of the textarea
                                type: integer
                                minimum: 1
                          - type: object
                            additionalProperties: false
                            required:
                              - type
                              - structure
                            properties:
                              type:
                                description: type of the property
                                type: string
                                enum:
                                  - SelectBox
                              structure:
                                type: array
                                minItems: 1
                                items:
                                  type: object
                                  additionalProperties: false
                                  required:
                                    - key
                                    - label
                                  properties:
                                    key:
                                      type:
                                        - string
                                        - boolean
                                        - number
                                    label:
                                      type: string
                                  example:
                                    - - key: rat
                                        label: The Rat
                                      - key: dog
                                        label: Bello the Dog
                additionalProperties: true
              outputs:
                type: object
                description: definition of the outputs of this node
                x-patternProperties:
                  '^[-_a-zA-Z0-9]+$':
                    type: object
                    description: all the output produced by this node
                    additionalProperties: false
                    required:
                      - displayOrder
                      - label
                      - description
                      - type
                    properties:
                      displayOrder:
                        type: number
                        description: use this to numerically sort the properties for display
                        example:
                          - 1
                          - -0.2
                      label:
                        type: string
                        description: short name for the property
                        example:
                          - Age
                      description:
                        type: string
                        description: description of the property
                        example:
                          - Age in seconds since 1970
                      type:
                        type: string
                        pattern: '^(number|integer|boolean|string|data:[^/\s,]+/[^/\s,]+)$'
                        description: data type expected on this output
                        example:
                          - number
                          - integer
                          - boolean
                          - string
                          - 'data:application/json'
                          - 'data:application/vnd.ms-excel '
                          - 'data:text/plain'
                          - 'data:application/hdf5'
                      fileToKeyMap:
                        description: Place the data stored in the named files and store it in the locations pointed to by the respective output key.
                        type: object
                        patternProperties:
                          .+:
                            type: string
                            pattern: '^[-_a-zA-Z0-9]+$'
                        example:
                          - dir/input1.txt: key_1
                            dir33/input2.txt: key2
                      unit:
                        title: Unit
                        description: 'Units of the output value, if a physical quantity'
                        type: string
                additionalProperties: true
        error:
          nullable: true
          default: null
    ServiceExtrasEnveloped:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - node_requirements
          properties:
            node_requirements:
              type: array
              items:
                type: string
                enum:
                  - CPU
                  - GPU
            service_build_details:
              type: object
              properties:
                build_date:
                  type: string
                vcs_ref:
                  type: string
                vcs_url:
                  type: string
        error:
          nullable: true
          default: null
    HealthCheckEnveloped:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          properties:
            name:
              type: string
              example: director service
            status:
              type: string
              example: SERVICE_RUNNING
            api_version:
              type: string
              example: 1.0.0-dev
            version:
              type: string
              example: 1dfcfdc
        error:
          nullable: true
          default: null
