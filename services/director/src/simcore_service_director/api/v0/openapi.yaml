openapi: 3.0.0
info:
  description: This is the oSparc's director API
  version: 0.1.0
  title: Director API
  contact:
    name: IT'IS Foundation
    email: support@simcore.com
  license:
    name: MIT
    url: 'https://github.com/ITISFoundation/osparc-simcore/blob/master/LICENSE'
servers:
  - description: Development server
    url: 'http://{host}:{port}/{version}'
    variables:
      host:
        default: localhost
      port:
        default: '8080'
      version:
        default: v0
        enum:
          - v0
  - description: Production server
    url: 'http://director:{port}/{version}'
    variables:
      port:
        default: '8080'
      version:
        default: v0
        enum:
          - v0
tags:
  - name: admins
    description: Secured Admin-only calls
  - name: developers
    description: Operations available to regular developers
  - name: users
    description: Operations available to regular users
paths:
  /:
    get:
      tags:
        - users
      summary: Service health-check endpoint
      description: Some general information on the API and state of the service behind
      operationId: root_get
      responses:
        '200':
          description: Service information
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                        example: director service
                      status:
                        type: string
                        example: SERVICE_RUNNING
                      api_version:
                        type: string
                        example: 1.0.0-dev
                      version:
                        type: string
                        example: 1dfcfdc
                  error:
                    nullable: true
                    default: null
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
  /services:
    get:
      tags:
        - users
      summary: Lists available services in the oSparc platform
      description: Lists available services in the oSparc platform
      operationId: services_get
      parameters:
        - in: query
          name: service_type
          description: |
            The service type:
              * computational - a computational service
              * interactive - an interactive service
          required: false
          schema:
            type: string
            enum:
              - computational
              - interactive
            example: computational
      responses:
        '200':
          description: 'Success, returns the list of available services'
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      additionalProperties: false
                      description: |-
                        Static metadata for a service injected in the image labels

                        This is one to one with node-meta-v0.0.1.json
                      example:
                        authors:
                          - affiliation: Company
                            email: smith@company.com
                            name: John Smith
                          - affiliation: University
                            email: brown@uni.edu
                            name: Richard Brown
                        contact: smith@company.com
                        description: oSparc Python Runner
                        inputs:
                          input_1:
                            description: 'Any code, requirements or data file'
                            displayOrder: 1
                            label: Input data
                            type: 'data:*/*'
                        integration-version: 1.0.0
                        key: simcore/services/comp/osparc-python-runner
                        name: oSparc Python Runner
                        outputs:
                          output_1:
                            description: All data produced by the script is zipped as output_data.zip
                            displayOrder: 1
                            fileToKeyMap:
                              output_data.zip: output_1
                            label: Output data
                            type: 'data:*/*'
                        type: computational
                        version: 1.7.0
                      properties:
                        authors:
                          items:
                            additionalProperties: false
                            properties:
                              affiliation:
                                description: Affiliation of the author
                                example: Sense8
                                title: Affiliation
                                type: string
                              email:
                                description: Email address
                                example: sun@sense.eight
                                format: email
                                title: Email
                                type: string
                              name:
                                description: Name of the author
                                example: Jim Knopf
                                title: Name
                                type: string
                            required:
                              - name
                              - email
                            title: Author
                            type: object
                          minItems: 1
                          title: Authors
                          type: array
                        badges:
                          items:
                            additionalProperties: false
                            properties:
                              image:
                                description: Url to the badge
                                example: 'https://travis-ci.org/ITISFoundation/osparc-simcore.svg?branch=master'
                                format: uri
                                maxLength: 2083
                                minLength: 1
                                title: Image
                                type: string
                              name:
                                description: Name of the subject
                                example: travis-ci
                                title: Name
                                type: string
                              url:
                                description: Link to the status
                                example: 'https://travis-ci.org/ITISFoundation/osparc-simcore ''State of CI: build, test and pushing images'''
                                format: uri
                                maxLength: 2083
                                minLength: 1
                                title: Url
                                type: string
                            required:
                              - name
                              - image
                              - url
                            title: Badge
                            type: object
                          title: Badges
                          type: array
                        boot-options:
                          additionalProperties: true
                          description: Service defined boot options. These get injected in the service as env variables.
                          title: Boot-Options
                          type: object
                          x-patternProperties:
                            '[a-zA-Z][a-azA-Z0-9_]*':
                              example:
                                - default: '0'
                                  description: Start it in web page mode
                                  items:
                                    '0':
                                      description: Tooltip for non Voila boot mode
                                      label: Non Voila
                                    '1':
                                      description: Tooltip for Voila boot mode
                                      label: Voila
                                  label: Boot mode
                                - default: b
                                  description: Select a theme for the application
                                  items:
                                    a:
                                      description: Using white background
                                      label: Clear
                                    b:
                                      description: Using black and gray tones
                                      label: Dark
                                  label: Application theme
                              properties:
                                default:
                                  title: Default
                                  type: string
                                description:
                                  title: Description
                                  type: string
                                items:
                                  additionalProperties:
                                    example:
                                      - default: '0'
                                        description: Start it in web page mode
                                        items:
                                          '0':
                                            description: Tooltip for non Voila boot mode
                                            label: Non Voila
                                          '1':
                                            description: Tooltip for Voila boot mode
                                            label: Voila
                                        label: Boot mode
                                      - default: b
                                        description: Select a theme for the application
                                        items:
                                          a:
                                            description: Using white background
                                            label: Clear
                                          b:
                                            description: Using black and gray tones
                                            label: Dark
                                        label: Application theme
                                    properties:
                                      description:
                                        title: Description
                                        type: string
                                      label:
                                        title: Label
                                        type: string
                                    required:
                                      - label
                                      - description
                                    title: BootChoice
                                    type: object
                                  title: Items
                                  type: object
                                label:
                                  title: Label
                                  type: string
                              required:
                                - label
                                - description
                                - default
                                - items
                              title: BootOption
                              type: object
                        contact:
                          description: email to correspond to the authors about the node
                          example: lab@net.flix
                          format: email
                          title: Contact
                          type: string
                        description:
                          description: human readable description of the purpose of the node
                          example: Our best node type
                          title: Description
                          type: string
                        inputs:
                          additionalProperties: true
                          description: definition of the inputs of this node
                          title: Inputs
                          type: object
                          x-patternProperties:
                            '^[-_a-zA-Z0-9]+$':
                              additionalProperties: false
                              description: Metadata on a service input port
                              example:
                                - description: Files downloaded from service connected at the input
                                  displayOrder: 1
                                  label: Input files - file-wo-widget
                                  type: 'data:*/*'
                                - defaultValue: 0
                                  description: Time to wait before completion
                                  displayOrder: 2
                                  label: Sleep Time - v2
                                  type: number
                                  unit: second
                                  widget:
                                    details:
                                      minHeight: 3
                                    type: TextArea
                                - defaultValue: 0
                                  description: Time to wait before completion
                                  label: Sleep Time - latest
                                  type: number
                                  unit: second
                                  widget:
                                    details:
                                      minHeight: 3
                                    type: TextArea
                                - contentSchema:
                                    items:
                                      type: number
                                    title: 'list[number]'
                                    type: array
                                  description: Some array of numbers
                                  label: array_numbers
                                  type: ref_contentSchema
                                - contentSchema:
                                    properties:
                                      b:
                                        title: Bool
                                        type: boolean
                                      i:
                                        default: 3
                                        title: Int
                                        type: integer
                                      s:
                                        title: Str
                                        type: string
                                    required:
                                      - b
                                      - s
                                    title: an object named A
                                    type: object
                                  description: Some object
                                  label: my_object
                                  type: ref_contentSchema
                              properties:
                                contentSchema:
                                  description: jsonschema of this input/output. Required when type='ref_contentSchema'
                                  title: Contentschema
                                  type: object
                                defaultValue:
                                  anyOf:
                                    - type: boolean
                                    - type: integer
                                    - type: number
                                    - type: string
                                  example:
                                    - Dog
                                    - true
                                  title: Defaultvalue
                                description:
                                  description: description of the property
                                  example: Age in seconds since 1970
                                  title: Description
                                  type: string
                                displayOrder:
                                  deprecated: true
                                  description: 'DEPRECATED: new display order is taken from the item position. This will be removed.'
                                  title: Displayorder
                                  type: number
                                fileToKeyMap:
                                  description: Place the data associated with the named keys in files
                                  example:
                                    - dir/input1.txt: key_1
                                      dir33/input2.txt: key2
                                  patternProperties:
                                    .+:
                                      pattern: '^[-_a-zA-Z0-9]+$'
                                      type: string
                                  title: Filetokeymap
                                  type: object
                                label:
                                  description: short name for the property
                                  example: Age
                                  title: Label
                                  type: string
                                type:
                                  description: data type expected on this input glob matching for data type is allowed
                                  example:
                                    - number
                                    - boolean
                                    - 'data:*/*'
                                    - 'data:text/*'
                                    - 'data:[image/jpeg,image/png]'
                                    - 'data:application/json'
                                    - 'data:application/json;schema=https://my-schema/not/really/schema.json'
                                    - 'data:application/vnd.ms-excel'
                                    - 'data:text/plain'
                                    - 'data:application/hdf5'
                                    - 'data:application/edu.ucdavis@ceclancy.xyz'
                                  pattern: '^(number|integer|boolean|string|ref_contentSchema|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$'
                                  title: Type
                                  type: string
                                unit:
                                  description: 'Units, when it refers to a physical quantity'
                                  title: Unit
                                  type: string
                                widget:
                                  allOf:
                                    - additionalProperties: false
                                      properties:
                                        details:
                                          anyOf:
                                            - additionalProperties: false
                                              properties:
                                                minHeight:
                                                  description: minimum Height of the textarea
                                                  title: Minheight
                                                  type: integer
                                              required:
                                                - minHeight
                                              title: TextArea
                                              type: object
                                            - additionalProperties: false
                                              properties:
                                                structure:
                                                  items:
                                                    additionalProperties: false
                                                    properties:
                                                      key:
                                                        anyOf:
                                                          - type: string
                                                          - type: boolean
                                                          - type: number
                                                        title: Key
                                                      label:
                                                        title: Label
                                                        type: string
                                                    required:
                                                      - key
                                                      - label
                                                    title: Structure
                                                    type: object
                                                  minItems: 1
                                                  title: Structure
                                                  type: array
                                              required:
                                                - structure
                                              title: SelectBox
                                              type: object
                                          title: Details
                                        type:
                                          allOf:
                                            - description: An enumeration.
                                              enum:
                                                - TextArea
                                                - SelectBox
                                              title: WidgetType
                                              type: string
                                          description: type of the property
                                      required:
                                        - type
                                        - details
                                      title: Widget
                                      type: object
                                  description: custom widget to use instead of the default one determined from the data-type
                                  title: Widget
                              required:
                                - label
                                - description
                                - type
                              title: ServiceInput
                              type: object
                        integration-version:
                          description: integration version number
                          example: 1.0.0
                          pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                          title: Integration-Version
                          type: string
                        key:
                          description: distinctive name for the node based on the docker registry path
                          example: simcore/services/comp/itis/sleeper
                          pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
                          title: Key
                          type: string
                        name:
                          description: 'short, human readable name for the node'
                          example: Fast Counter
                          title: Name
                          type: string
                        outputs:
                          additionalProperties: true
                          description: definition of the outputs of this node
                          title: Outputs
                          type: object
                          x-patternProperties:
                            '^[-_a-zA-Z0-9]+$':
                              additionalProperties: false
                              description: Base class for service input/outputs
                              example:
                                - description: Time the service waited before completion
                                  displayOrder: 2
                                  label: Time Slept
                                  type: number
                                - description: Time the service waited before completion
                                  displayOrder: 2
                                  label: Time Slept - units
                                  type: number
                                  unit: second
                                - description: Time the service waited before completion
                                  label: Time Slept - w/o displayorder
                                  type: number
                                  unit: second
                                - description: Output file uploaded from the outputs folder
                                  displayOrder: 4
                                  label: Output file 1
                                  type: 'data:*/*'
                              properties:
                                contentSchema:
                                  description: jsonschema of this input/output. Required when type='ref_contentSchema'
                                  title: Contentschema
                                  type: object
                                description:
                                  description: description of the property
                                  example: Age in seconds since 1970
                                  title: Description
                                  type: string
                                displayOrder:
                                  deprecated: true
                                  description: 'DEPRECATED: new display order is taken from the item position. This will be removed.'
                                  title: Displayorder
                                  type: number
                                fileToKeyMap:
                                  description: Place the data associated with the named keys in files
                                  example:
                                    - dir/input1.txt: key_1
                                      dir33/input2.txt: key2
                                  patternProperties:
                                    .+:
                                      pattern: '^[-_a-zA-Z0-9]+$'
                                      type: string
                                  title: Filetokeymap
                                  type: object
                                label:
                                  description: short name for the property
                                  example: Age
                                  title: Label
                                  type: string
                                type:
                                  description: data type expected on this input glob matching for data type is allowed
                                  example:
                                    - number
                                    - boolean
                                    - 'data:*/*'
                                    - 'data:text/*'
                                    - 'data:[image/jpeg,image/png]'
                                    - 'data:application/json'
                                    - 'data:application/json;schema=https://my-schema/not/really/schema.json'
                                    - 'data:application/vnd.ms-excel'
                                    - 'data:text/plain'
                                    - 'data:application/hdf5'
                                    - 'data:application/edu.ucdavis@ceclancy.xyz'
                                  pattern: '^(number|integer|boolean|string|ref_contentSchema|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$'
                                  title: Type
                                  type: string
                                unit:
                                  description: 'Units, when it refers to a physical quantity'
                                  title: Unit
                                  type: string
                                widget:
                                  allOf:
                                    - additionalProperties: false
                                      properties:
                                        details:
                                          anyOf:
                                            - additionalProperties: false
                                              properties:
                                                minHeight:
                                                  description: minimum Height of the textarea
                                                  title: Minheight
                                                  type: integer
                                              required:
                                                - minHeight
                                              title: TextArea
                                              type: object
                                            - additionalProperties: false
                                              properties:
                                                structure:
                                                  items:
                                                    additionalProperties: false
                                                    properties:
                                                      key:
                                                        anyOf:
                                                          - type: string
                                                          - type: boolean
                                                          - type: number
                                                        title: Key
                                                      label:
                                                        title: Label
                                                        type: string
                                                    required:
                                                      - key
                                                      - label
                                                    title: Structure
                                                    type: object
                                                  minItems: 1
                                                  title: Structure
                                                  type: array
                                              required:
                                                - structure
                                              title: SelectBox
                                              type: object
                                          title: Details
                                        type:
                                          allOf:
                                            - description: An enumeration.
                                              enum:
                                                - TextArea
                                                - SelectBox
                                              title: WidgetType
                                              type: string
                                          description: type of the property
                                      required:
                                        - type
                                        - details
                                      title: Widget
                                      type: object
                                  deprecated: true
                                  description: custom widget to use instead of the default one determined from the data-type
                                  title: Widget
                              required:
                                - label
                                - description
                                - type
                              title: ServiceOutput
                              type: object
                        thumbnail:
                          description: url to the thumbnail
                          example: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                          format: uri
                          maxLength: 2083
                          minLength: 1
                          title: Thumbnail
                          type: string
                        type:
                          allOf:
                            - description: An enumeration.
                              enum:
                                - computational
                                - dynamic
                                - frontend
                                - backend
                              title: ServiceType
                              type: string
                          description: service type
                          example: computational
                        version:
                          description: service version number
                          example: 1.0.0
                          pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                          title: Version
                          type: string
                      required:
                        - name
                        - description
                        - key
                        - version
                        - type
                        - authors
                        - contact
                        - inputs
                        - outputs
                      title: ServiceDockerData
                      type: object
                  error:
                    nullable: true
                    default: null
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
  '/services/{service_key}/{service_version}':
    get:
      tags:
        - users
      summary: Returns details of the selected service if available in the oSparc platform
      description: Returns details of the selected service if available in the oSparc platform
      operationId: services_by_key_version_get
      parameters:
        - in: path
          name: service_key
          description: The key (url) of the service
          required: true
          schema:
            type: string
            description: distinctive name for the node based on the docker registry path
            pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
            example:
              - simcore/services/comp/itis/sleeper
              - simcore/services/dynamic/3dviewer
        - in: path
          name: service_version
          description: The tag/version of the service
          required: true
          schema:
            type: string
            description: semantic version number
            pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
            example:
              - 1.0.0
              - 0.0.1
      responses:
        '200':
          description: 'Success, returns the details of the service'
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      additionalProperties: false
                      description: |-
                        Static metadata for a service injected in the image labels

                        This is one to one with node-meta-v0.0.1.json
                      example:
                        authors:
                          - affiliation: Company
                            email: smith@company.com
                            name: John Smith
                          - affiliation: University
                            email: brown@uni.edu
                            name: Richard Brown
                        contact: smith@company.com
                        description: oSparc Python Runner
                        inputs:
                          input_1:
                            description: 'Any code, requirements or data file'
                            displayOrder: 1
                            label: Input data
                            type: 'data:*/*'
                        integration-version: 1.0.0
                        key: simcore/services/comp/osparc-python-runner
                        name: oSparc Python Runner
                        outputs:
                          output_1:
                            description: All data produced by the script is zipped as output_data.zip
                            displayOrder: 1
                            fileToKeyMap:
                              output_data.zip: output_1
                            label: Output data
                            type: 'data:*/*'
                        type: computational
                        version: 1.7.0
                      properties:
                        authors:
                          items:
                            additionalProperties: false
                            properties:
                              affiliation:
                                description: Affiliation of the author
                                example: Sense8
                                title: Affiliation
                                type: string
                              email:
                                description: Email address
                                example: sun@sense.eight
                                format: email
                                title: Email
                                type: string
                              name:
                                description: Name of the author
                                example: Jim Knopf
                                title: Name
                                type: string
                            required:
                              - name
                              - email
                            title: Author
                            type: object
                          minItems: 1
                          title: Authors
                          type: array
                        badges:
                          items:
                            additionalProperties: false
                            properties:
                              image:
                                description: Url to the badge
                                example: 'https://travis-ci.org/ITISFoundation/osparc-simcore.svg?branch=master'
                                format: uri
                                maxLength: 2083
                                minLength: 1
                                title: Image
                                type: string
                              name:
                                description: Name of the subject
                                example: travis-ci
                                title: Name
                                type: string
                              url:
                                description: Link to the status
                                example: 'https://travis-ci.org/ITISFoundation/osparc-simcore ''State of CI: build, test and pushing images'''
                                format: uri
                                maxLength: 2083
                                minLength: 1
                                title: Url
                                type: string
                            required:
                              - name
                              - image
                              - url
                            title: Badge
                            type: object
                          title: Badges
                          type: array
                        boot-options:
                          additionalProperties: true
                          description: Service defined boot options. These get injected in the service as env variables.
                          title: Boot-Options
                          type: object
                          x-patternProperties:
                            '[a-zA-Z][a-azA-Z0-9_]*':
                              example:
                                - default: '0'
                                  description: Start it in web page mode
                                  items:
                                    '0':
                                      description: Tooltip for non Voila boot mode
                                      label: Non Voila
                                    '1':
                                      description: Tooltip for Voila boot mode
                                      label: Voila
                                  label: Boot mode
                                - default: b
                                  description: Select a theme for the application
                                  items:
                                    a:
                                      description: Using white background
                                      label: Clear
                                    b:
                                      description: Using black and gray tones
                                      label: Dark
                                  label: Application theme
                              properties:
                                default:
                                  title: Default
                                  type: string
                                description:
                                  title: Description
                                  type: string
                                items:
                                  additionalProperties:
                                    example:
                                      - default: '0'
                                        description: Start it in web page mode
                                        items:
                                          '0':
                                            description: Tooltip for non Voila boot mode
                                            label: Non Voila
                                          '1':
                                            description: Tooltip for Voila boot mode
                                            label: Voila
                                        label: Boot mode
                                      - default: b
                                        description: Select a theme for the application
                                        items:
                                          a:
                                            description: Using white background
                                            label: Clear
                                          b:
                                            description: Using black and gray tones
                                            label: Dark
                                        label: Application theme
                                    properties:
                                      description:
                                        title: Description
                                        type: string
                                      label:
                                        title: Label
                                        type: string
                                    required:
                                      - label
                                      - description
                                    title: BootChoice
                                    type: object
                                  title: Items
                                  type: object
                                label:
                                  title: Label
                                  type: string
                              required:
                                - label
                                - description
                                - default
                                - items
                              title: BootOption
                              type: object
                        contact:
                          description: email to correspond to the authors about the node
                          example: lab@net.flix
                          format: email
                          title: Contact
                          type: string
                        description:
                          description: human readable description of the purpose of the node
                          example: Our best node type
                          title: Description
                          type: string
                        inputs:
                          additionalProperties: true
                          description: definition of the inputs of this node
                          title: Inputs
                          type: object
                          x-patternProperties:
                            '^[-_a-zA-Z0-9]+$':
                              additionalProperties: false
                              description: Metadata on a service input port
                              example:
                                - description: Files downloaded from service connected at the input
                                  displayOrder: 1
                                  label: Input files - file-wo-widget
                                  type: 'data:*/*'
                                - defaultValue: 0
                                  description: Time to wait before completion
                                  displayOrder: 2
                                  label: Sleep Time - v2
                                  type: number
                                  unit: second
                                  widget:
                                    details:
                                      minHeight: 3
                                    type: TextArea
                                - defaultValue: 0
                                  description: Time to wait before completion
                                  label: Sleep Time - latest
                                  type: number
                                  unit: second
                                  widget:
                                    details:
                                      minHeight: 3
                                    type: TextArea
                                - contentSchema:
                                    items:
                                      type: number
                                    title: 'list[number]'
                                    type: array
                                  description: Some array of numbers
                                  label: array_numbers
                                  type: ref_contentSchema
                                - contentSchema:
                                    properties:
                                      b:
                                        title: Bool
                                        type: boolean
                                      i:
                                        default: 3
                                        title: Int
                                        type: integer
                                      s:
                                        title: Str
                                        type: string
                                    required:
                                      - b
                                      - s
                                    title: an object named A
                                    type: object
                                  description: Some object
                                  label: my_object
                                  type: ref_contentSchema
                              properties:
                                contentSchema:
                                  description: jsonschema of this input/output. Required when type='ref_contentSchema'
                                  title: Contentschema
                                  type: object
                                defaultValue:
                                  anyOf:
                                    - type: boolean
                                    - type: integer
                                    - type: number
                                    - type: string
                                  example:
                                    - Dog
                                    - true
                                  title: Defaultvalue
                                description:
                                  description: description of the property
                                  example: Age in seconds since 1970
                                  title: Description
                                  type: string
                                displayOrder:
                                  deprecated: true
                                  description: 'DEPRECATED: new display order is taken from the item position. This will be removed.'
                                  title: Displayorder
                                  type: number
                                fileToKeyMap:
                                  description: Place the data associated with the named keys in files
                                  example:
                                    - dir/input1.txt: key_1
                                      dir33/input2.txt: key2
                                  patternProperties:
                                    .+:
                                      pattern: '^[-_a-zA-Z0-9]+$'
                                      type: string
                                  title: Filetokeymap
                                  type: object
                                label:
                                  description: short name for the property
                                  example: Age
                                  title: Label
                                  type: string
                                type:
                                  description: data type expected on this input glob matching for data type is allowed
                                  example:
                                    - number
                                    - boolean
                                    - 'data:*/*'
                                    - 'data:text/*'
                                    - 'data:[image/jpeg,image/png]'
                                    - 'data:application/json'
                                    - 'data:application/json;schema=https://my-schema/not/really/schema.json'
                                    - 'data:application/vnd.ms-excel'
                                    - 'data:text/plain'
                                    - 'data:application/hdf5'
                                    - 'data:application/edu.ucdavis@ceclancy.xyz'
                                  pattern: '^(number|integer|boolean|string|ref_contentSchema|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$'
                                  title: Type
                                  type: string
                                unit:
                                  description: 'Units, when it refers to a physical quantity'
                                  title: Unit
                                  type: string
                                widget:
                                  allOf:
                                    - additionalProperties: false
                                      properties:
                                        details:
                                          anyOf:
                                            - additionalProperties: false
                                              properties:
                                                minHeight:
                                                  description: minimum Height of the textarea
                                                  title: Minheight
                                                  type: integer
                                              required:
                                                - minHeight
                                              title: TextArea
                                              type: object
                                            - additionalProperties: false
                                              properties:
                                                structure:
                                                  items:
                                                    additionalProperties: false
                                                    properties:
                                                      key:
                                                        anyOf:
                                                          - type: string
                                                          - type: boolean
                                                          - type: number
                                                        title: Key
                                                      label:
                                                        title: Label
                                                        type: string
                                                    required:
                                                      - key
                                                      - label
                                                    title: Structure
                                                    type: object
                                                  minItems: 1
                                                  title: Structure
                                                  type: array
                                              required:
                                                - structure
                                              title: SelectBox
                                              type: object
                                          title: Details
                                        type:
                                          allOf:
                                            - description: An enumeration.
                                              enum:
                                                - TextArea
                                                - SelectBox
                                              title: WidgetType
                                              type: string
                                          description: type of the property
                                      required:
                                        - type
                                        - details
                                      title: Widget
                                      type: object
                                  description: custom widget to use instead of the default one determined from the data-type
                                  title: Widget
                              required:
                                - label
                                - description
                                - type
                              title: ServiceInput
                              type: object
                        integration-version:
                          description: integration version number
                          example: 1.0.0
                          pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                          title: Integration-Version
                          type: string
                        key:
                          description: distinctive name for the node based on the docker registry path
                          example: simcore/services/comp/itis/sleeper
                          pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
                          title: Key
                          type: string
                        name:
                          description: 'short, human readable name for the node'
                          example: Fast Counter
                          title: Name
                          type: string
                        outputs:
                          additionalProperties: true
                          description: definition of the outputs of this node
                          title: Outputs
                          type: object
                          x-patternProperties:
                            '^[-_a-zA-Z0-9]+$':
                              additionalProperties: false
                              description: Base class for service input/outputs
                              example:
                                - description: Time the service waited before completion
                                  displayOrder: 2
                                  label: Time Slept
                                  type: number
                                - description: Time the service waited before completion
                                  displayOrder: 2
                                  label: Time Slept - units
                                  type: number
                                  unit: second
                                - description: Time the service waited before completion
                                  label: Time Slept - w/o displayorder
                                  type: number
                                  unit: second
                                - description: Output file uploaded from the outputs folder
                                  displayOrder: 4
                                  label: Output file 1
                                  type: 'data:*/*'
                              properties:
                                contentSchema:
                                  description: jsonschema of this input/output. Required when type='ref_contentSchema'
                                  title: Contentschema
                                  type: object
                                description:
                                  description: description of the property
                                  example: Age in seconds since 1970
                                  title: Description
                                  type: string
                                displayOrder:
                                  deprecated: true
                                  description: 'DEPRECATED: new display order is taken from the item position. This will be removed.'
                                  title: Displayorder
                                  type: number
                                fileToKeyMap:
                                  description: Place the data associated with the named keys in files
                                  example:
                                    - dir/input1.txt: key_1
                                      dir33/input2.txt: key2
                                  patternProperties:
                                    .+:
                                      pattern: '^[-_a-zA-Z0-9]+$'
                                      type: string
                                  title: Filetokeymap
                                  type: object
                                label:
                                  description: short name for the property
                                  example: Age
                                  title: Label
                                  type: string
                                type:
                                  description: data type expected on this input glob matching for data type is allowed
                                  example:
                                    - number
                                    - boolean
                                    - 'data:*/*'
                                    - 'data:text/*'
                                    - 'data:[image/jpeg,image/png]'
                                    - 'data:application/json'
                                    - 'data:application/json;schema=https://my-schema/not/really/schema.json'
                                    - 'data:application/vnd.ms-excel'
                                    - 'data:text/plain'
                                    - 'data:application/hdf5'
                                    - 'data:application/edu.ucdavis@ceclancy.xyz'
                                  pattern: '^(number|integer|boolean|string|ref_contentSchema|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$'
                                  title: Type
                                  type: string
                                unit:
                                  description: 'Units, when it refers to a physical quantity'
                                  title: Unit
                                  type: string
                                widget:
                                  allOf:
                                    - additionalProperties: false
                                      properties:
                                        details:
                                          anyOf:
                                            - additionalProperties: false
                                              properties:
                                                minHeight:
                                                  description: minimum Height of the textarea
                                                  title: Minheight
                                                  type: integer
                                              required:
                                                - minHeight
                                              title: TextArea
                                              type: object
                                            - additionalProperties: false
                                              properties:
                                                structure:
                                                  items:
                                                    additionalProperties: false
                                                    properties:
                                                      key:
                                                        anyOf:
                                                          - type: string
                                                          - type: boolean
                                                          - type: number
                                                        title: Key
                                                      label:
                                                        title: Label
                                                        type: string
                                                    required:
                                                      - key
                                                      - label
                                                    title: Structure
                                                    type: object
                                                  minItems: 1
                                                  title: Structure
                                                  type: array
                                              required:
                                                - structure
                                              title: SelectBox
                                              type: object
                                          title: Details
                                        type:
                                          allOf:
                                            - description: An enumeration.
                                              enum:
                                                - TextArea
                                                - SelectBox
                                              title: WidgetType
                                              type: string
                                          description: type of the property
                                      required:
                                        - type
                                        - details
                                      title: Widget
                                      type: object
                                  deprecated: true
                                  description: custom widget to use instead of the default one determined from the data-type
                                  title: Widget
                              required:
                                - label
                                - description
                                - type
                              title: ServiceOutput
                              type: object
                        thumbnail:
                          description: url to the thumbnail
                          example: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                          format: uri
                          maxLength: 2083
                          minLength: 1
                          title: Thumbnail
                          type: string
                        type:
                          allOf:
                            - description: An enumeration.
                              enum:
                                - computational
                                - dynamic
                                - frontend
                                - backend
                              title: ServiceType
                              type: string
                          description: service type
                          example: computational
                        version:
                          description: service version number
                          example: 1.0.0
                          pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                          title: Version
                          type: string
                      required:
                        - name
                        - description
                        - key
                        - version
                        - type
                        - authors
                        - contact
                        - inputs
                        - outputs
                      title: ServiceDockerData
                      type: object
                  error:
                    nullable: true
                    default: null
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        '404':
          description: Service not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
  '/services/{service_key}/{service_version}/labels':
    get:
      tags:
        - users
      summary: Returns the list of tags attached to a service
      operationId: get_service_labels
      parameters:
        - in: path
          name: service_key
          description: The key (url) of the service
          required: true
          schema:
            type: string
            description: distinctive name for the node based on the docker registry path
            pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
            example:
              - simcore/services/comp/itis/sleeper
              - simcore/services/dynamic/3dviewer
        - in: path
          name: service_version
          description: The tag/version of the service
          required: true
          schema:
            type: string
            description: semantic version number
            pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
            example:
              - 1.0.0
              - 0.0.1
      responses:
        '200':
          description: 'Success, returns the details of the service'
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        '404':
          description: Service not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
  '/service_extras/{service_key}/{service_version}':
    get:
      tags:
        - users
      summary: Returns the service's details which should be hidden from the user defined as extras.
      description: Currently returns the node_requirements an array of resoruces needed for scheduling.
      operationId: service_extras_by_key_version_get
      parameters:
        - in: path
          name: service_key
          description: The key (url) of the service
          required: true
          schema:
            type: string
            description: distinctive name for the node based on the docker registry path
            pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
            example:
              - simcore/services/comp/itis/sleeper
              - simcore/services/dynamic/3dviewer
        - in: path
          name: service_version
          description: The tag/version of the service
          required: true
          schema:
            type: string
            description: semantic version number
            pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
            example:
              - 1.0.0
              - 0.0.1
      responses:
        '200':
          description: 'Success, returns an object containing details hidden from the user'
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - node_requirements
                    properties:
                      node_requirements:
                        type: object
                        required:
                          - CPU
                          - RAM
                        properties:
                          CPU:
                            type: number
                            default: 1
                            minimum: 1
                          GPU:
                            type: integer
                            minimum: 0
                          RAM:
                            type: integer
                            format: int64
                            minimum: 1024
                          MPI:
                            type: integer
                            maximum: 1
                      service_build_details:
                        type: object
                        properties:
                          build_date:
                            type: string
                          vcs_ref:
                            type: string
                          vcs_url:
                            type: string
                      container_spec:
                        type: object
                        properties:
                          command:
                            type: array
                            items:
                              type: string
                  error:
                    nullable: true
                    default: null
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        '404':
          description: Service not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
  /running_interactive_services:
    get:
      tags:
        - users
      summary: Returns a list of interactive services
      operationId: running_interactive_services_list_get
      parameters:
        - in: query
          name: user_id
          required: false
          schema:
            type: string
        - in: query
          name: project_id
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns the running services instances
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - published_port
                        - service_uuid
                        - service_key
                        - service_version
                        - service_host
                        - service_port
                        - service_state
                        - user_id
                      properties:
                        published_port:
                          description: The ports where the service provides its interface
                          type: integer
                          format: int32
                          minimum: 1
                          example: 30000
                        entry_point:
                          description: The entry point where the service provides its interface if specified
                          type: string
                          example: /the/entry/point/is/here
                        service_uuid:
                          description: The UUID attached to this service
                          type: string
                          example: 123e4567-e89b-12d3-a456-426655440000
                        service_key:
                          type: string
                          description: distinctive name for the node based on the docker registry path
                          pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
                          example:
                            - simcore/services/comp/itis/sleeper
                            - simcore/services/dynamic/3dviewer
                        service_version:
                          type: string
                          description: semantic version number
                          pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                          example:
                            - 1.0.0
                            - 0.0.1
                        service_host:
                          description: service host name within the network
                          type: string
                          example: jupyter_E1O2E-LAH
                        service_port:
                          description: port to access the service within the network
                          type: integer
                          minimum: 1
                          example: 8081
                        service_basepath:
                          description: different base path where current service is mounted otherwise defaults to root
                          type: string
                          example: /x/E1O2E-LAH
                          default: ''
                        service_state:
                          description: |
                            the service state * 'pending' - The service is waiting for resources to start * 'pulling' - The service is being pulled from the registry * 'starting' - The service is starting * 'running' - The service is running * 'complete' - The service completed * 'failed' - The service failed to start
                          type: string
                          enum:
                            - pending
                            - pulling
                            - starting
                            - running
                            - complete
                            - failed
                        service_message:
                          description: the service message
                          type: string
                          example: no suitable node (insufficient resources on 1 node)
                        user_id:
                          description: the user that started the service
                          type: string
                          example: '123'
                  error:
                    nullable: true
                    default: null
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
    post:
      tags:
        - users
      summary: Starts an interactive service in the oSparc platform
      operationId: running_interactive_services_post
      parameters:
        - in: query
          name: user_id
          description: The ID of the user that starts the service
          required: true
          schema:
            type: string
            example: asdfgj233
        - in: query
          name: project_id
          description: The ID of the project in which the service starts
          required: true
          schema:
            type: string
            example: asdfgj233
        - in: query
          name: service_key
          description: The key (url) of the service
          required: true
          schema:
            type: string
            description: distinctive name for the node based on the docker registry path
            pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
            example:
              - simcore/services/comp/itis/sleeper
              - simcore/services/dynamic/3dviewer
        - in: query
          name: service_tag
          description: The tag/version of the service
          required: false
          schema:
            type: string
            description: semantic version number
            pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
            example:
              - 1.0.0
              - 0.0.1
        - in: query
          name: service_uuid
          description: The uuid to assign the service with
          required: true
          schema:
            type: string
            example: 123e4567-e89b-12d3-a456-426655440000
        - in: query
          name: service_basepath
          description: predefined basepath for the backend service otherwise uses root
          required: false
          schema:
            type: string
            example: /x/EycCXbU0H/
            default: ''
      responses:
        '201':
          description: Succesfully created the service in the oSparc platform. Returns the location where the service runs.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - published_port
                      - service_uuid
                      - service_key
                      - service_version
                      - service_host
                      - service_port
                      - service_state
                      - user_id
                    properties:
                      published_port:
                        description: The ports where the service provides its interface
                        type: integer
                        format: int32
                        minimum: 1
                        example: 30000
                      entry_point:
                        description: The entry point where the service provides its interface if specified
                        type: string
                        example: /the/entry/point/is/here
                      service_uuid:
                        description: The UUID attached to this service
                        type: string
                        example: 123e4567-e89b-12d3-a456-426655440000
                      service_key:
                        type: string
                        description: distinctive name for the node based on the docker registry path
                        pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
                        example:
                          - simcore/services/comp/itis/sleeper
                          - simcore/services/dynamic/3dviewer
                      service_version:
                        type: string
                        description: semantic version number
                        pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                        example:
                          - 1.0.0
                          - 0.0.1
                      service_host:
                        description: service host name within the network
                        type: string
                        example: jupyter_E1O2E-LAH
                      service_port:
                        description: port to access the service within the network
                        type: integer
                        minimum: 1
                        example: 8081
                      service_basepath:
                        description: different base path where current service is mounted otherwise defaults to root
                        type: string
                        example: /x/E1O2E-LAH
                        default: ''
                      service_state:
                        description: |
                          the service state * 'pending' - The service is waiting for resources to start * 'pulling' - The service is being pulled from the registry * 'starting' - The service is starting * 'running' - The service is running * 'complete' - The service completed * 'failed' - The service failed to start
                        type: string
                        enum:
                          - pending
                          - pulling
                          - starting
                          - running
                          - complete
                          - failed
                      service_message:
                        description: the service message
                        type: string
                        example: no suitable node (insufficient resources on 1 node)
                      user_id:
                        description: the user that started the service
                        type: string
                        example: '123'
                  error:
                    nullable: true
                    default: null
        '400':
          description: 'Malformed function call, missing field'
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        '404':
          description: Service not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        '409':
          description: A service with the same uuid already exists
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
  '/running_interactive_services/{service_uuid}':
    get:
      tags:
        - users
      summary: Succesfully returns if a service with the defined uuid is up and running
      description: Succesfully returns if a service with the defined uuid is up and running
      operationId: running_interactive_services_get
      parameters:
        - in: path
          name: service_uuid
          description: The uuid of the service
          required: true
          schema:
            type: string
            example: 123e4567-e89b-12d3-a456-426655440000
      responses:
        '200':
          description: OK service exists and runs. Returns service location.
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: object
                    required:
                      - published_port
                      - service_uuid
                      - service_key
                      - service_version
                      - service_host
                      - service_port
                      - service_state
                      - user_id
                    properties:
                      published_port:
                        description: The ports where the service provides its interface
                        type: integer
                        format: int32
                        minimum: 1
                        example: 30000
                      entry_point:
                        description: The entry point where the service provides its interface if specified
                        type: string
                        example: /the/entry/point/is/here
                      service_uuid:
                        description: The UUID attached to this service
                        type: string
                        example: 123e4567-e89b-12d3-a456-426655440000
                      service_key:
                        type: string
                        description: distinctive name for the node based on the docker registry path
                        pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
                        example:
                          - simcore/services/comp/itis/sleeper
                          - simcore/services/dynamic/3dviewer
                      service_version:
                        type: string
                        description: semantic version number
                        pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                        example:
                          - 1.0.0
                          - 0.0.1
                      service_host:
                        description: service host name within the network
                        type: string
                        example: jupyter_E1O2E-LAH
                      service_port:
                        description: port to access the service within the network
                        type: integer
                        minimum: 1
                        example: 8081
                      service_basepath:
                        description: different base path where current service is mounted otherwise defaults to root
                        type: string
                        example: /x/E1O2E-LAH
                        default: ''
                      service_state:
                        description: |
                          the service state * 'pending' - The service is waiting for resources to start * 'pulling' - The service is being pulled from the registry * 'starting' - The service is starting * 'running' - The service is running * 'complete' - The service completed * 'failed' - The service failed to start
                        type: string
                        enum:
                          - pending
                          - pulling
                          - starting
                          - running
                          - complete
                          - failed
                      service_message:
                        description: the service message
                        type: string
                        example: no suitable node (insufficient resources on 1 node)
                      user_id:
                        description: the user that started the service
                        type: string
                        example: '123'
                  error:
                    nullable: true
                    default: null
        '400':
          description: 'Malformed function call, missing field'
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        '404':
          description: Service not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
    delete:
      tags:
        - users
      summary: Stops and removes an interactive service from the oSparc platform
      description: Stops and removes an interactive service from the oSparc platform
      operationId: running_interactive_services_delete
      parameters:
        - in: path
          name: service_uuid
          description: The uuid of the service
          required: true
          schema:
            type: string
            example: 123e4567-e89b-12d3-a456-426655440000
        - in: query
          name: save_state
          description: Save the state prior to removing the service
          required: false
          schema:
            type: boolean
            default: true
      responses:
        '204':
          description: Succesfully stopped and removed the service from the oSparc platform
        '400':
          description: 'Malformed function call, missing field'
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        '404':
          description: Service not found
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  data:
                    nullable: true
                    default: null
                  error:
                    type: object
                    required:
                      - status
                      - message
                    properties:
                      message:
                        description: Error message
                        type: string
                        example: Unexpected error
                      errors:
                        type: array
                        items:
                          properties:
                            code:
                              type: string
                              description: Server Exception
                              example: ServiceUUIDNotFoundError
                      status:
                        description: Error code
                        type: integer
                        example: 404
components:
  parameters:
    UserId:
      in: query
      name: user_id
      description: The ID of the user that starts the service
      required: true
      schema:
        type: string
        example: asdfgj233
    ProjectId:
      in: query
      name: project_id
      description: The ID of the project in which the service starts
      required: true
      schema:
        type: string
        example: asdfgj233
    AssignmentUuid:
      in: query
      name: service_uuid
      description: The uuid to assign the service with
      required: true
      schema:
        type: string
        example: 123e4567-e89b-12d3-a456-426655440000
    ServiceKeyPath:
      in: path
      name: service_key
      description: The key (url) of the service
      required: true
      schema:
        type: string
        description: distinctive name for the node based on the docker registry path
        pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
        example:
          - simcore/services/comp/itis/sleeper
          - simcore/services/dynamic/3dviewer
    ServiceKey:
      in: query
      name: service_key
      description: The key (url) of the service
      required: true
      schema:
        type: string
        description: distinctive name for the node based on the docker registry path
        pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
        example:
          - simcore/services/comp/itis/sleeper
          - simcore/services/dynamic/3dviewer
    ServiceType:
      in: query
      name: service_type
      description: |
        The service type:
          * computational - a computational service
          * interactive - an interactive service
      required: false
      schema:
        type: string
        enum:
          - computational
          - interactive
        example: computational
    ServiceBasePath:
      in: query
      name: service_basepath
      description: predefined basepath for the backend service otherwise uses root
      required: false
      schema:
        type: string
        example: /x/EycCXbU0H/
        default: ''
    ServiceUuid:
      in: path
      name: service_uuid
      description: The uuid of the service
      required: true
      schema:
        type: string
        example: 123e4567-e89b-12d3-a456-426655440000
    ServiceVersionPath:
      in: path
      name: service_version
      description: The tag/version of the service
      required: true
      schema:
        type: string
        description: semantic version number
        pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
        example:
          - 1.0.0
          - 0.0.1
    ServiceVersion:
      in: query
      name: service_tag
      description: The tag/version of the service
      required: false
      schema:
        type: string
        description: semantic version number
        pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
        example:
          - 1.0.0
          - 0.0.1
    SaveState:
      in: query
      name: save_state
      description: Save the state prior to removing the service
      required: false
      schema:
        type: boolean
        default: true
  schemas:
    ErrorEnveloped:
      type: object
      required:
        - error
      properties:
        data:
          nullable: true
          default: null
        error:
          type: object
          required:
            - status
            - message
          properties:
            message:
              description: Error message
              type: string
              example: Unexpected error
            errors:
              type: array
              items:
                properties:
                  code:
                    type: string
                    description: Server Exception
                    example: ServiceUUIDNotFoundError
            status:
              description: Error code
              type: integer
              example: 404
    RunningServiceEnveloped:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - published_port
            - service_uuid
            - service_key
            - service_version
            - service_host
            - service_port
            - service_state
            - user_id
          properties:
            published_port:
              description: The ports where the service provides its interface
              type: integer
              format: int32
              minimum: 1
              example: 30000
            entry_point:
              description: The entry point where the service provides its interface if specified
              type: string
              example: /the/entry/point/is/here
            service_uuid:
              description: The UUID attached to this service
              type: string
              example: 123e4567-e89b-12d3-a456-426655440000
            service_key:
              type: string
              description: distinctive name for the node based on the docker registry path
              pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
              example:
                - simcore/services/comp/itis/sleeper
                - simcore/services/dynamic/3dviewer
            service_version:
              type: string
              description: semantic version number
              pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
              example:
                - 1.0.0
                - 0.0.1
            service_host:
              description: service host name within the network
              type: string
              example: jupyter_E1O2E-LAH
            service_port:
              description: port to access the service within the network
              type: integer
              minimum: 1
              example: 8081
            service_basepath:
              description: different base path where current service is mounted otherwise defaults to root
              type: string
              example: /x/E1O2E-LAH
              default: ''
            service_state:
              description: |
                the service state * 'pending' - The service is waiting for resources to start * 'pulling' - The service is being pulled from the registry * 'starting' - The service is starting * 'running' - The service is running * 'complete' - The service completed * 'failed' - The service failed to start
              type: string
              enum:
                - pending
                - pulling
                - starting
                - running
                - complete
                - failed
            service_message:
              description: the service message
              type: string
              example: no suitable node (insufficient resources on 1 node)
            user_id:
              description: the user that started the service
              type: string
              example: '123'
        error:
          nullable: true
          default: null
    RunningServicesEnveloped:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            type: object
            required:
              - published_port
              - service_uuid
              - service_key
              - service_version
              - service_host
              - service_port
              - service_state
              - user_id
            properties:
              published_port:
                description: The ports where the service provides its interface
                type: integer
                format: int32
                minimum: 1
                example: 30000
              entry_point:
                description: The entry point where the service provides its interface if specified
                type: string
                example: /the/entry/point/is/here
              service_uuid:
                description: The UUID attached to this service
                type: string
                example: 123e4567-e89b-12d3-a456-426655440000
              service_key:
                type: string
                description: distinctive name for the node based on the docker registry path
                pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
                example:
                  - simcore/services/comp/itis/sleeper
                  - simcore/services/dynamic/3dviewer
              service_version:
                type: string
                description: semantic version number
                pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                example:
                  - 1.0.0
                  - 0.0.1
              service_host:
                description: service host name within the network
                type: string
                example: jupyter_E1O2E-LAH
              service_port:
                description: port to access the service within the network
                type: integer
                minimum: 1
                example: 8081
              service_basepath:
                description: different base path where current service is mounted otherwise defaults to root
                type: string
                example: /x/E1O2E-LAH
                default: ''
              service_state:
                description: |
                  the service state * 'pending' - The service is waiting for resources to start * 'pulling' - The service is being pulled from the registry * 'starting' - The service is starting * 'running' - The service is running * 'complete' - The service completed * 'failed' - The service failed to start
                type: string
                enum:
                  - pending
                  - pulling
                  - starting
                  - running
                  - complete
                  - failed
              service_message:
                description: the service message
                type: string
                example: no suitable node (insufficient resources on 1 node)
              user_id:
                description: the user that started the service
                type: string
                example: '123'
        error:
          nullable: true
          default: null
    ServicesEnveloped:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            additionalProperties: false
            description: |-
              Static metadata for a service injected in the image labels

              This is one to one with node-meta-v0.0.1.json
            example:
              authors:
                - affiliation: Company
                  email: smith@company.com
                  name: John Smith
                - affiliation: University
                  email: brown@uni.edu
                  name: Richard Brown
              contact: smith@company.com
              description: oSparc Python Runner
              inputs:
                input_1:
                  description: 'Any code, requirements or data file'
                  displayOrder: 1
                  label: Input data
                  type: 'data:*/*'
              integration-version: 1.0.0
              key: simcore/services/comp/osparc-python-runner
              name: oSparc Python Runner
              outputs:
                output_1:
                  description: All data produced by the script is zipped as output_data.zip
                  displayOrder: 1
                  fileToKeyMap:
                    output_data.zip: output_1
                  label: Output data
                  type: 'data:*/*'
              type: computational
              version: 1.7.0
            properties:
              authors:
                items:
                  additionalProperties: false
                  properties:
                    affiliation:
                      description: Affiliation of the author
                      example: Sense8
                      title: Affiliation
                      type: string
                    email:
                      description: Email address
                      example: sun@sense.eight
                      format: email
                      title: Email
                      type: string
                    name:
                      description: Name of the author
                      example: Jim Knopf
                      title: Name
                      type: string
                  required:
                    - name
                    - email
                  title: Author
                  type: object
                minItems: 1
                title: Authors
                type: array
              badges:
                items:
                  additionalProperties: false
                  properties:
                    image:
                      description: Url to the badge
                      example: 'https://travis-ci.org/ITISFoundation/osparc-simcore.svg?branch=master'
                      format: uri
                      maxLength: 2083
                      minLength: 1
                      title: Image
                      type: string
                    name:
                      description: Name of the subject
                      example: travis-ci
                      title: Name
                      type: string
                    url:
                      description: Link to the status
                      example: 'https://travis-ci.org/ITISFoundation/osparc-simcore ''State of CI: build, test and pushing images'''
                      format: uri
                      maxLength: 2083
                      minLength: 1
                      title: Url
                      type: string
                  required:
                    - name
                    - image
                    - url
                  title: Badge
                  type: object
                title: Badges
                type: array
              boot-options:
                additionalProperties: true
                description: Service defined boot options. These get injected in the service as env variables.
                title: Boot-Options
                type: object
                x-patternProperties:
                  '[a-zA-Z][a-azA-Z0-9_]*':
                    example:
                      - default: '0'
                        description: Start it in web page mode
                        items:
                          '0':
                            description: Tooltip for non Voila boot mode
                            label: Non Voila
                          '1':
                            description: Tooltip for Voila boot mode
                            label: Voila
                        label: Boot mode
                      - default: b
                        description: Select a theme for the application
                        items:
                          a:
                            description: Using white background
                            label: Clear
                          b:
                            description: Using black and gray tones
                            label: Dark
                        label: Application theme
                    properties:
                      default:
                        title: Default
                        type: string
                      description:
                        title: Description
                        type: string
                      items:
                        additionalProperties:
                          example:
                            - default: '0'
                              description: Start it in web page mode
                              items:
                                '0':
                                  description: Tooltip for non Voila boot mode
                                  label: Non Voila
                                '1':
                                  description: Tooltip for Voila boot mode
                                  label: Voila
                              label: Boot mode
                            - default: b
                              description: Select a theme for the application
                              items:
                                a:
                                  description: Using white background
                                  label: Clear
                                b:
                                  description: Using black and gray tones
                                  label: Dark
                              label: Application theme
                          properties:
                            description:
                              title: Description
                              type: string
                            label:
                              title: Label
                              type: string
                          required:
                            - label
                            - description
                          title: BootChoice
                          type: object
                        title: Items
                        type: object
                      label:
                        title: Label
                        type: string
                    required:
                      - label
                      - description
                      - default
                      - items
                    title: BootOption
                    type: object
              contact:
                description: email to correspond to the authors about the node
                example: lab@net.flix
                format: email
                title: Contact
                type: string
              description:
                description: human readable description of the purpose of the node
                example: Our best node type
                title: Description
                type: string
              inputs:
                additionalProperties: true
                description: definition of the inputs of this node
                title: Inputs
                type: object
                x-patternProperties:
                  '^[-_a-zA-Z0-9]+$':
                    additionalProperties: false
                    description: Metadata on a service input port
                    example:
                      - description: Files downloaded from service connected at the input
                        displayOrder: 1
                        label: Input files - file-wo-widget
                        type: 'data:*/*'
                      - defaultValue: 0
                        description: Time to wait before completion
                        displayOrder: 2
                        label: Sleep Time - v2
                        type: number
                        unit: second
                        widget:
                          details:
                            minHeight: 3
                          type: TextArea
                      - defaultValue: 0
                        description: Time to wait before completion
                        label: Sleep Time - latest
                        type: number
                        unit: second
                        widget:
                          details:
                            minHeight: 3
                          type: TextArea
                      - contentSchema:
                          items:
                            type: number
                          title: 'list[number]'
                          type: array
                        description: Some array of numbers
                        label: array_numbers
                        type: ref_contentSchema
                      - contentSchema:
                          properties:
                            b:
                              title: Bool
                              type: boolean
                            i:
                              default: 3
                              title: Int
                              type: integer
                            s:
                              title: Str
                              type: string
                          required:
                            - b
                            - s
                          title: an object named A
                          type: object
                        description: Some object
                        label: my_object
                        type: ref_contentSchema
                    properties:
                      contentSchema:
                        description: jsonschema of this input/output. Required when type='ref_contentSchema'
                        title: Contentschema
                        type: object
                      defaultValue:
                        anyOf:
                          - type: boolean
                          - type: integer
                          - type: number
                          - type: string
                        example:
                          - Dog
                          - true
                        title: Defaultvalue
                      description:
                        description: description of the property
                        example: Age in seconds since 1970
                        title: Description
                        type: string
                      displayOrder:
                        deprecated: true
                        description: 'DEPRECATED: new display order is taken from the item position. This will be removed.'
                        title: Displayorder
                        type: number
                      fileToKeyMap:
                        description: Place the data associated with the named keys in files
                        example:
                          - dir/input1.txt: key_1
                            dir33/input2.txt: key2
                        patternProperties:
                          .+:
                            pattern: '^[-_a-zA-Z0-9]+$'
                            type: string
                        title: Filetokeymap
                        type: object
                      label:
                        description: short name for the property
                        example: Age
                        title: Label
                        type: string
                      type:
                        description: data type expected on this input glob matching for data type is allowed
                        example:
                          - number
                          - boolean
                          - 'data:*/*'
                          - 'data:text/*'
                          - 'data:[image/jpeg,image/png]'
                          - 'data:application/json'
                          - 'data:application/json;schema=https://my-schema/not/really/schema.json'
                          - 'data:application/vnd.ms-excel'
                          - 'data:text/plain'
                          - 'data:application/hdf5'
                          - 'data:application/edu.ucdavis@ceclancy.xyz'
                        pattern: '^(number|integer|boolean|string|ref_contentSchema|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$'
                        title: Type
                        type: string
                      unit:
                        description: 'Units, when it refers to a physical quantity'
                        title: Unit
                        type: string
                      widget:
                        allOf:
                          - additionalProperties: false
                            properties:
                              details:
                                anyOf:
                                  - additionalProperties: false
                                    properties:
                                      minHeight:
                                        description: minimum Height of the textarea
                                        title: Minheight
                                        type: integer
                                    required:
                                      - minHeight
                                    title: TextArea
                                    type: object
                                  - additionalProperties: false
                                    properties:
                                      structure:
                                        items:
                                          additionalProperties: false
                                          properties:
                                            key:
                                              anyOf:
                                                - type: string
                                                - type: boolean
                                                - type: number
                                              title: Key
                                            label:
                                              title: Label
                                              type: string
                                          required:
                                            - key
                                            - label
                                          title: Structure
                                          type: object
                                        minItems: 1
                                        title: Structure
                                        type: array
                                    required:
                                      - structure
                                    title: SelectBox
                                    type: object
                                title: Details
                              type:
                                allOf:
                                  - description: An enumeration.
                                    enum:
                                      - TextArea
                                      - SelectBox
                                    title: WidgetType
                                    type: string
                                description: type of the property
                            required:
                              - type
                              - details
                            title: Widget
                            type: object
                        description: custom widget to use instead of the default one determined from the data-type
                        title: Widget
                    required:
                      - label
                      - description
                      - type
                    title: ServiceInput
                    type: object
              integration-version:
                description: integration version number
                example: 1.0.0
                pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                title: Integration-Version
                type: string
              key:
                description: distinctive name for the node based on the docker registry path
                example: simcore/services/comp/itis/sleeper
                pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
                title: Key
                type: string
              name:
                description: 'short, human readable name for the node'
                example: Fast Counter
                title: Name
                type: string
              outputs:
                additionalProperties: true
                description: definition of the outputs of this node
                title: Outputs
                type: object
                x-patternProperties:
                  '^[-_a-zA-Z0-9]+$':
                    additionalProperties: false
                    description: Base class for service input/outputs
                    example:
                      - description: Time the service waited before completion
                        displayOrder: 2
                        label: Time Slept
                        type: number
                      - description: Time the service waited before completion
                        displayOrder: 2
                        label: Time Slept - units
                        type: number
                        unit: second
                      - description: Time the service waited before completion
                        label: Time Slept - w/o displayorder
                        type: number
                        unit: second
                      - description: Output file uploaded from the outputs folder
                        displayOrder: 4
                        label: Output file 1
                        type: 'data:*/*'
                    properties:
                      contentSchema:
                        description: jsonschema of this input/output. Required when type='ref_contentSchema'
                        title: Contentschema
                        type: object
                      description:
                        description: description of the property
                        example: Age in seconds since 1970
                        title: Description
                        type: string
                      displayOrder:
                        deprecated: true
                        description: 'DEPRECATED: new display order is taken from the item position. This will be removed.'
                        title: Displayorder
                        type: number
                      fileToKeyMap:
                        description: Place the data associated with the named keys in files
                        example:
                          - dir/input1.txt: key_1
                            dir33/input2.txt: key2
                        patternProperties:
                          .+:
                            pattern: '^[-_a-zA-Z0-9]+$'
                            type: string
                        title: Filetokeymap
                        type: object
                      label:
                        description: short name for the property
                        example: Age
                        title: Label
                        type: string
                      type:
                        description: data type expected on this input glob matching for data type is allowed
                        example:
                          - number
                          - boolean
                          - 'data:*/*'
                          - 'data:text/*'
                          - 'data:[image/jpeg,image/png]'
                          - 'data:application/json'
                          - 'data:application/json;schema=https://my-schema/not/really/schema.json'
                          - 'data:application/vnd.ms-excel'
                          - 'data:text/plain'
                          - 'data:application/hdf5'
                          - 'data:application/edu.ucdavis@ceclancy.xyz'
                        pattern: '^(number|integer|boolean|string|ref_contentSchema|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$'
                        title: Type
                        type: string
                      unit:
                        description: 'Units, when it refers to a physical quantity'
                        title: Unit
                        type: string
                      widget:
                        allOf:
                          - additionalProperties: false
                            properties:
                              details:
                                anyOf:
                                  - additionalProperties: false
                                    properties:
                                      minHeight:
                                        description: minimum Height of the textarea
                                        title: Minheight
                                        type: integer
                                    required:
                                      - minHeight
                                    title: TextArea
                                    type: object
                                  - additionalProperties: false
                                    properties:
                                      structure:
                                        items:
                                          additionalProperties: false
                                          properties:
                                            key:
                                              anyOf:
                                                - type: string
                                                - type: boolean
                                                - type: number
                                              title: Key
                                            label:
                                              title: Label
                                              type: string
                                          required:
                                            - key
                                            - label
                                          title: Structure
                                          type: object
                                        minItems: 1
                                        title: Structure
                                        type: array
                                    required:
                                      - structure
                                    title: SelectBox
                                    type: object
                                title: Details
                              type:
                                allOf:
                                  - description: An enumeration.
                                    enum:
                                      - TextArea
                                      - SelectBox
                                    title: WidgetType
                                    type: string
                                description: type of the property
                            required:
                              - type
                              - details
                            title: Widget
                            type: object
                        deprecated: true
                        description: custom widget to use instead of the default one determined from the data-type
                        title: Widget
                    required:
                      - label
                      - description
                      - type
                    title: ServiceOutput
                    type: object
              thumbnail:
                description: url to the thumbnail
                example: 'https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png'
                format: uri
                maxLength: 2083
                minLength: 1
                title: Thumbnail
                type: string
              type:
                allOf:
                  - description: An enumeration.
                    enum:
                      - computational
                      - dynamic
                      - frontend
                      - backend
                    title: ServiceType
                    type: string
                description: service type
                example: computational
              version:
                description: service version number
                example: 1.0.0
                pattern: '^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$'
                title: Version
                type: string
            required:
              - name
              - description
              - key
              - version
              - type
              - authors
              - contact
              - inputs
              - outputs
            title: ServiceDockerData
            type: object
        error:
          nullable: true
          default: null
    ServiceExtrasEnveloped:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - node_requirements
          properties:
            node_requirements:
              type: object
              required:
                - CPU
                - RAM
              properties:
                CPU:
                  type: number
                  default: 1
                  minimum: 1
                GPU:
                  type: integer
                  minimum: 0
                RAM:
                  type: integer
                  format: int64
                  minimum: 1024
                MPI:
                  type: integer
                  maximum: 1
            service_build_details:
              type: object
              properties:
                build_date:
                  type: string
                vcs_ref:
                  type: string
                vcs_url:
                  type: string
            container_spec:
              type: object
              properties:
                command:
                  type: array
                  items:
                    type: string
        error:
          nullable: true
          default: null
    HealthCheckEnveloped:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          properties:
            name:
              type: string
              example: director service
            status:
              type: string
              example: SERVICE_RUNNING
            api_version:
              type: string
              example: 1.0.0-dev
            version:
              type: string
              example: 1dfcfdc
        error:
          nullable: true
          default: null
