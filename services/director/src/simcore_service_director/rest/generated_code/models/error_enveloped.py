# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from .base_model_ import Model
from .error import Error  # noqa: F401,E501
from .. import util


class ErrorEnveloped(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error: Error=None):  # noqa: E501
        """ErrorEnveloped - a model defined in OpenAPI

        :param error: The error of this ErrorEnveloped.  # noqa: E501
        :type error: Error
        """
        self.openapi_types = {
            'error': Error
        }

        self.attribute_map = {
            'error': 'error'
        }

        self._error = error

    @classmethod
    def from_dict(cls, dikt) -> 'ErrorEnveloped':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ErrorEnveloped of this ErrorEnveloped.  # noqa: E501
        :rtype: ErrorEnveloped
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self) -> Error:
        """Gets the error of this ErrorEnveloped.


        :return: The error of this ErrorEnveloped.
        :rtype: Error
        """
        return self._error

    @error.setter
    def error(self, error: Error):
        """Sets the error of this ErrorEnveloped.


        :param error: The error of this ErrorEnveloped.
        :type error: Error
        """

        self._error = error
