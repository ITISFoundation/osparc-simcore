#!/bin/bash
#
#  This task in the system-testing aims to test some guarantees expected from
#  the deployment of osparc-simcore in a cluster (swarm).
#  It follows some of the points enumerated in the https://12factor.net/  methodology.
#

# http://redsymbol.net/articles/unofficial-bash-strict-mode/
set -euo pipefail
IFS=$'\n\t'

# in case it's a Pull request, the env are never available, default to itisfoundation to get a maybe not too old version for caching
export DOCKER_IMAGE_TAG=$(exec ci/travis/helpers/build_docker_image_tag)

before_install() {
    bash ci/travis/helpers/install_docker_compose
    bash ci/helpers/show_system_versions
}

install() {
    bash ci/helpers/ensure_python_pip
    pip3 install -r tests/swarm-deploy/requirements.txt
    make pull-version || ((make pull-cache || true) && make build tag-version)
}

before_script() {
    pip list -v
    make info-images
}

script() {
    pytest -v tests/swarm-deploy
}

after_success() {
    make leave
}

after_failure() {
    docker images
    make down
}

# Check if the function exists (bash specific)
if declare -f "$1" > /dev/null
then
  # call arguments verbatim
  "$@"
else
  # Show a helpful error
  echo "'$1' is not a known function name" >&2
  exit 1
fi
