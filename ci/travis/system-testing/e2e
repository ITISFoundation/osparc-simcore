#!/bin/bash
# http://redsymbol.net/articles/unofficial-bash-strict-mode/
# https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md#running-puppeteer-on-travis-ci
set -euo pipefail
IFS=$'\n\t'

# in case it's a Pull request, the env are never available, default to itisfoundation to get a maybe not too old version for caching
export DOCKER_IMAGE_TAG=$(exec ci/travis/helpers/build_docker_image_tag)

before_install() {
    # bash ci/travis/helpers/update_docker
    bash ci/travis/helpers/install_docker_compose
    bash ci/helpers/show_system_versions

    # Enable user namespace cloning
    sysctl kernel.unprivileged_userns_clone=1

    # Launch XVFB
    export DISPLAY=:99.0
    sh -e /etc/init.d/xvfb start
}

install() {
    echo "nothing to do here..."
}

before_script() {
    make pull-version || ((make pull-cache || true) && make build tag-version)
    make info-images
    # configure simcore for testing with a private registry
    bash tests/e2e/setup_env_insecure_registry

    # start simcore
    make up-version

    # create a python venv and activate
    # python3 -m venv .venv
    # source .venv/bin/activate
    bash ci/helpers/ensure_python_pip
    pushd tests/e2e;
    make install
    make wait-for-services
    # prepare registry
    make transfer-images-to-registry
    popd
}

script() {
    pushd tests/e2e; make test; popd
}

after_success() {
    # ToDo: call coveralls
    make down
}

after_failure() {
    docker images
    make down
}

# Check if the function exists (bash specific)
if declare -f "$1" > /dev/null
then
  # call arguments verbatim
  "$@"
else
  # Show a helpful error
  echo "'$1' is not a known function name" >&2
  exit 1
fi
