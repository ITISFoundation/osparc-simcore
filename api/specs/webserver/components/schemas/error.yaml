ErrorEnveloped:
# - notice that data is defaulted to null
#
  type: object
  required:
    - error
  properties:
    data:
      nullable: true
      default: null
    error:
      $ref: "#/ErrorType"



ErrorType:
#  - Normally transmitted as a response from server to client
#  - can exchage log messages between server and client. Possible applications:
#     - e.g. client side can render a widget to display messages logged to 'user'
#  - contains meta-information to allow client programatically understand the error. Possible applications:
#     - e.g. metadata can serialize an exception in server that can be reproduced in client side
#
  type: object
  nullable: true
  properties:
    logs:
      description: log messages
      type: array
      items:
        $ref: './log_message.yaml#/LogMessageType'
    errors:
      description: errors metadata
      type: array
      items:
         $ref: '#/ErrorItemType'
    status:
      description: HTTP error code
      type: integer
  example:
    BadRequestError:
      logs:
        - message: 'Requested information is incomplete or malformed'
          level: ERROR
        - message: 'Invalid email and password'
          level: ERROR
          logger: USER
      errors:
        - code: "InvalidEmail"
          message: "Email is malformed"
          field: email
        - code: "UnsavePassword"
          message: "Password is not secure"
          field: pasword
      status: 400


ErrorItemType:
  type: object
  required:
    - code
    - message
  properties:
    code:
      type: string
      description: Typically the name of the exception that produced it otherwise some known error code
    message:
      type: string
      description: Error message specific to this item
    resource:
      type: string
      description: API resource affected by this error
    field:
      type: string
      description: Specific field within the resource
