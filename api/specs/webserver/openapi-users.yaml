paths:
  /me:
    get:
      tags:
      - user
      summary: Get User Profile
      operationId: get_my_profile
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProfileGet_'
    put:
      tags:
      - user
      summary: Update My Profile
      operationId: update_my_profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdate'
        required: true
      responses:
        '204':
          description: Successful Response
  /me/tokens:
    get:
      tags:
      - user
      summary: List Tokens
      operationId: list_tokens
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.users.schemas.Token__'
    post:
      tags:
      - user
      summary: Create Token
      operationId: create_token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Token_'
  /me/tokens/{service}:
    get:
      tags:
      - user
      summary: Get Token
      operationId: get_token
      parameters:
      - required: true
        schema:
          title: Service
          type: string
        name: service
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Token_'
    delete:
      tags:
      - user
      summary: Delete Token
      operationId: delete_token
      parameters:
      - required: true
        schema:
          title: Service
          type: string
        name: service
        in: path
      responses:
        '204':
          description: Successful Response
  /me/notifications:
    get:
      tags:
      - user
      summary: List User Notifications
      operationId: list_user_notifications
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.users._notifications.UserNotification__'
    post:
      tags:
      - user
      summary: Create User Notification
      operationId: create_user_notification
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotificationCreate'
        required: true
      responses:
        '204':
          description: Successful Response
  /me/notifications/{notification_id}:
    patch:
      tags:
      - user
      summary: Mark Notification As Read
      operationId: mark_notification_as_read
      parameters:
      - required: true
        schema:
          title: Notification Id
          type: string
        name: notification_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserNotificationPatch'
        required: true
      responses:
        '204':
          description: Successful Response
  /me/permissions:
    get:
      tags:
      - user
      summary: List User Permissions
      operationId: list_user_permissions
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.users.schemas.PermissionGet__'
components:
  schemas:
    AllUsersGroups:
      title: AllUsersGroups
      type: object
      properties:
        me:
          $ref: '#/components/schemas/UsersGroup'
        organizations:
          title: Organizations
          type: array
          items:
            $ref: '#/components/schemas/UsersGroup'
        all:
          $ref: '#/components/schemas/UsersGroup'
        product:
          $ref: '#/components/schemas/UsersGroup'
      example:
        me:
          gid: '27'
          label: A user
          description: A very special user
          accessRights:
            read: true
            write: true
            delete: true
        organizations:
        - gid: '15'
          label: ITIS Foundation
          description: The Foundation for Research on Information Technologies in
            Society
          accessRights:
            read: true
            write: false
            delete: false
        - gid: '16'
          label: Blue Fundation
          description: Some foundation
          accessRights:
            read: true
            write: false
            delete: false
        all:
          gid: '0'
          label: All
          description: Open to all users
          accessRights:
            read: true
            write: false
            delete: false
    Envelope_ProfileGet_:
      title: Envelope[ProfileGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProfileGet'
        error:
          title: Error
    Envelope_Token_:
      title: Envelope[Token]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Token'
        error:
          title: Error
    Envelope_list_simcore_service_webserver.users._notifications.UserNotification__:
      title: Envelope[list[simcore_service_webserver.users._notifications.UserNotification]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/UserNotification'
        error:
          title: Error
    Envelope_list_simcore_service_webserver.users.schemas.PermissionGet__:
      title: Envelope[list[simcore_service_webserver.users.schemas.PermissionGet]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/PermissionGet'
        error:
          title: Error
    Envelope_list_simcore_service_webserver.users.schemas.Token__:
      title: Envelope[list[simcore_service_webserver.users.schemas.Token]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/Token'
        error:
          title: Error
    GroupAccessRights:
      title: GroupAccessRights
      required:
      - read
      - write
      - delete
      type: object
      properties:
        read:
          title: Read
          type: boolean
        write:
          title: Write
          type: boolean
        delete:
          title: Delete
          type: boolean
      description: defines acesss rights for the user
    NotificationCategory:
      title: NotificationCategory
      enum:
      - NEW_ORGANIZATION
      - STUDY_SHARED
      - TEMPLATE_SHARED
      - ANNOTATION_NOTE
      type: string
      description: An enumeration.
    PermissionGet:
      title: PermissionGet
      required:
      - name
      - allowed
      type: object
      properties:
        name:
          title: Name
          type: string
        allowed:
          title: Allowed
          type: boolean
    ProfileGet:
      title: ProfileGet
      required:
      - id
      - login
      - role
      type: object
      properties:
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        id:
          title: Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        login:
          title: Login
          type: string
          format: email
        role:
          title: Role
          enum:
          - Anonymous
          - Guest
          - User
          - Tester
          - Admin
          type: string
        groups:
          $ref: '#/components/schemas/AllUsersGroups'
        gravatar_id:
          title: Gravatar Id
          type: string
        expirationDate:
          title: Expirationdate
          type: string
          description: If user has a trial account, it sets the expiration date, otherwise
            None
          format: date
    ProfileUpdate:
      title: ProfileUpdate
      type: object
      properties:
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
      example:
        first_name: Pedro
        last_name: Crespo
    Token:
      title: Token
      required:
      - service
      - token_key
      type: object
      properties:
        service:
          title: Service
          type: string
          description: uniquely identifies the service where this token is used
        token_key:
          title: Token Key
          type: string
          description: basic token key
          format: uuid
        token_secret:
          title: Token Secret
          type: string
          format: uuid
      description: Tokens used to access third-party services connected to osparc
        (e.g. pennsieve, scicrunch, etc)
      example:
        service: github-api-v1
        token_key: 5f21abf5-c596-47b7-bfd1-c0e436ef1107
    TokenCreate:
      title: TokenCreate
      required:
      - service
      - token_key
      type: object
      properties:
        service:
          title: Service
          type: string
          description: uniquely identifies the service where this token is used
        token_key:
          title: Token Key
          type: string
          description: basic token key
          format: uuid
        token_secret:
          title: Token Secret
          type: string
          format: uuid
      description: Tokens used to access third-party services connected to osparc
        (e.g. pennsieve, scicrunch, etc)
      example:
        service: github-api-v1
        token_key: 5f21abf5-c596-47b7-bfd1-c0e436ef1107
    UserNotification:
      title: UserNotification
      required:
      - user_id
      - category
      - actionable_path
      - title
      - text
      - date
      - id
      - read
      type: object
      properties:
        user_id:
          title: User Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        category:
          $ref: '#/components/schemas/NotificationCategory'
        actionable_path:
          title: Actionable Path
          type: string
        title:
          title: Title
          type: string
        text:
          title: Text
          type: string
        date:
          title: Date
          type: string
          format: date-time
        id:
          title: Id
          type: string
        read:
          title: Read
          type: boolean
    UserNotificationCreate:
      title: UserNotificationCreate
      required:
      - user_id
      - category
      - actionable_path
      - title
      - text
      - date
      type: object
      properties:
        user_id:
          title: User Id
          exclusiveMinimum: true
          type: integer
          minimum: 0
        category:
          $ref: '#/components/schemas/NotificationCategory'
        actionable_path:
          title: Actionable Path
          type: string
        title:
          title: Title
          type: string
        text:
          title: Text
          type: string
        date:
          title: Date
          type: string
          format: date-time
    UserNotificationPatch:
      title: UserNotificationPatch
      required:
      - read
      type: object
      properties:
        read:
          title: Read
          type: boolean
    UsersGroup:
      title: UsersGroup
      required:
      - gid
      - label
      - description
      - accessRights
      type: object
      properties:
        gid:
          title: Gid
          type: integer
          description: the group ID
        label:
          title: Label
          type: string
          description: the group name
        description:
          title: Description
          type: string
          description: the group description
        thumbnail:
          title: Thumbnail
          maxLength: 65536
          minLength: 1
          type: string
          description: url to the group thumbnail
          format: uri
        accessRights:
          $ref: '#/components/schemas/GroupAccessRights'
        inclusionRules:
          title: Inclusionrules
          type: object
          additionalProperties:
            type: string
          description: Maps user's column and regular expression
