paths:
  /resource-usage/containers:
    get:
      tags:
      - usage
      summary: Retrieve containers that were running for a user and product taken
        from context.
      operationId: list_resource_usage_containers
      parameters:
      - required: false
        schema:
          type: integer
          title: Limit
          default: 20
        name: limit
        in: query
      - required: false
        schema:
          type: integer
          minimum: 0
          title: Offset
          default: 0
        name: offset
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_models_library.api_schemas_webserver.resource_usage.ContainerGet__'
components:
  schemas:
    ContainerGet:
      properties:
        project_uuid:
          type: string
          format: uuid
          title: Project Uuid
        project_name:
          type: string
          title: Project Name
        node_uuid:
          type: string
          format: uuid
          title: Node Uuid
        node_label:
          type: string
          title: Node Label
        service_key:
          type: string
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          title: Service Key
        service_version:
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          title: Service Version
        start_time:
          type: string
          format: date-time
          title: Start Time
        duration:
          type: number
          title: Duration
        processors:
          type: number
          title: Processors
        core_hours:
          type: number
          title: Core Hours
        status:
          $ref: '#/components/schemas/ContainerStatus'
      type: object
      required:
      - project_uuid
      - node_uuid
      - service_key
      - service_version
      - start_time
      - duration
      - processors
      - core_hours
      - status
      title: ContainerGet
    ContainerStatus:
      type: string
      enum:
      - running
      - finished
      title: ContainerStatus
      description: An enumeration.
    Envelope_list_models_library.api_schemas_webserver.resource_usage.ContainerGet__:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ContainerGet'
          type: array
          title: Data
        error:
          title: Error
      type: object
      title: Envelope[list[models_library.api_schemas_webserver.resource_usage.ContainerGet]]
