paths:
  /projects:
    get:
      tags:
        - project
      summary: List all projects
      operationId: list_projects
      parameters:
        - name: type
          in: query
          schema:
            type: string
            default: "all"
            enum: [template, user, all]
          description: if true only templates otherwise only users
        - name: state
          in: query
          schema:
            type: string
            default: "active"
            enum: [active]
          description: if set only active projects are returned. if type=template this parameter is ignored.
        - name: start
          in: query
          schema:
            type: integer
            minItems: 0
          description: index to the first item to return
        - name: count
          in: query
          schema:
            type: integer
            minItems: 1
          description: maximum number of items to return
      responses:
        "200":
          description: list of projects
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectArrayEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    post:
      tags:
        - project
      summary: Create new project
      operationId: create_projects
      parameters:
        - name: from_template
          in: query
          schema:
            type: string
          description: "Option to create a project from existing template: from_template={template_uuid}"
        - name: as_template
          in: query
          schema:
            type: string
          description: "Option to create a template from existing project: as_template={study_uuid}"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectIn"
      responses:
        "201":
          description: project created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
  /projects/active:
    get:
      tags:
        - project
      summary: Gets active project
      operationId: get_active_project
      responses:
        "200":
          description: returns active project
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /projects/{project_id}:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - project
      summary: Gets given project
      operationId: get_project
      responses:
        "200":
          description: got detailed project
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    put:
      tags:
        - project
      summary: Enclosed entity replaces given project
      operationId: replace_project
      parameters:
        - name: run
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProjectIn"
      responses:
        "200":
          description: got detailed project
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    delete:
      tags:
        - project
      summary: Delete given project
      operationId: delete_project
      responses:
        "204":
          description: project has been successfully deleted

  /projects/{project_id}/open:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - project
      summary: Open a given project
      operationId: open_project
      requestBody:
        description: browser tab identifier
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientSessionId"
      responses:
        "200":
          description: project successfuly opened
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /projects/{project_id}/state:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - project
      summary: returns the state of a project
      operationId: state_project
      responses:
        "200":
          description: returns the project current state
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectStateEnveloped"

        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /projects/{project_id}/xport:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - exporter
      summary: creates an archive of the project and downloads it
      operationId: export_project
      responses:
        "200":
          description: creates an archive from a project file
          content:
            application/zip:
              schema:
                type: string
                format: binary
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /projects/{project_id}/duplicate:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - exporter
      summary: duplicates an existing project
      operationId: duplicate_project
      responses:
        "200":
          description: project was duplicated correctly
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /projects/import:
    post:
      tags:
        - exporter
      summary: Create new project from an archive
      operationId: import_project
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  format: binary
      responses:
        "200":
          description: creates a new project from an archive
          content:
            application/json:
              schema:
                type: object
                properties:
                  uuid:
                    type: string
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /projects/{project_id}/close:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - project
      summary: Closes a given project
      operationId: close_project
      requestBody:
        description: browser tab identifier
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientSessionId"
      responses:
        "204":
          description: project succesfuly closed

        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /projects/{project_id}/nodes:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - project
      summary: Create a new node
      operationId: create_node
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service_uuid:
                  type: string
                  description: the uuid to assign to the service
                service_key:
                  type: string
                  pattern: '^(simcore)/(services)/(comp|dynamic)(/[^\s/]+)+$'
                  description: The key (url) of the service
                service_version:
                  type: string
                  pattern: >-
                    ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
                  description: The tag/version of the service
              required:
                - service_key
                - service_version
            example:
              service_key: simcore/services/dynamic/3d-viewer
              service_version: "1.4.0"

      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: "./openapi-projects.yaml#/components/schemas/NodeEnveloped"
        default:
          $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"

  /projects/{project_id}/nodes/{node_id}:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
      - name: node_id
        in: path
        required: true
        schema:
          type: string

    get:
      tags:
        - project
      description: Gets node status
      operationId: get_node
      responses:
        "200":
          description: OK service exists and runs. Returns node details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunningServiceEnveloped"

        default:
          $ref: "#/components/responses/DefaultErrorResponse"

    delete:
      tags:
        - project
      description: Stops and removes a node from the project
      operationId: delete_node
      responses:
        "204":
          description: node has been successfully deleted from project
        default:
          $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"

  /projects/{study_uuid}/tags/{tag_id}:
    parameters:
      - name: tag_id
        in: path
        required: true
        schema:
          type: integer
      - name: study_uuid
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - project
      summary: Links an existing label with an existing study
      operationId: add_tag
      responses:
        "200":
          description: The tag has been successfully linked to the study
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    delete:
      tags:
        - project
      summary: Removes an existing link between a label and a study
      operationId: remove_tag
      responses:
        "200":
          description: The tag has been successfully removed from the study
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

components:
  schemas:
    ClientSessionId:
      type: string
      example: 5ac57685-c40f-448f-8711-70be1936fd63

    Node:
      type: object
      required:
        - node_id
      properties:
        node_id:
          type: string
          description: The UUID attached to this node
          example: 123e4567-e89b-12d3-a456-426655440000

    NodeEnveloped:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "./openapi-projects.yaml#/components/schemas/Node"
        error:
          nullable: true
          default: null

    ProjectIn:
      $ref: "../common/schemas/project.yaml#/components/schemas/ProjectIn"

    ProjectEnveloped:
      $ref: "../common/schemas/project.yaml#/components/schemas/ProjectEnveloped"

    ProjectArrayEnveloped:
      $ref: "../common/schemas/project.yaml#/components/schemas/ProjectArrayEnveloped"

    ProjectStateEnveloped:
      $ref: "../common/schemas/project.yaml#/components/schemas/ProjectStateEnveloped"

    RunningServiceEnveloped:
      $ref: "../common/schemas/running_service.yaml#/components/schemas/RunningServiceEnveloped"

  responses:
    DefaultErrorResponse:
      $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"
