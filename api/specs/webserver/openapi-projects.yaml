paths:
  /projects/{project_id}/open:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
      - name: disable_service_auto_start
        in: query
        required: false
        schema:
          type: boolean
          default: false
    post:
      tags:
        - project
      summary: Open a given project
      operationId: open_project
      requestBody:
        description: browser tab identifier
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientSessionId"
      responses:
        "200":
          description: project successfuly opened
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /projects/{project_id}/state:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - project
      summary: returns the state of a project
      operationId: get_project_state
      responses:
        "200":
          description: returns the project current state
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectStateEnveloped"

        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /projects/{project_id}/xport:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - exporter
      summary: creates an archive of the project and downloads it
      operationId: export_project
      responses:
        "200":
          description: creates an archive from a project file
          content:
            application/zip:
              schema:
                type: string
                format: binary
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /projects/{project_id}/close:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - project
      summary: Closes a given project
      operationId: close_project
      requestBody:
        description: browser tab identifier
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientSessionId"
      responses:
        "204":
          description: project succesfuly closed

        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /projects/{project_id}/nodes:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
    post:
      tags:
        - project
      summary: Create a new node
      operationId: create_node
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service_id:
                  type: string
                  description: the uuid to assign to the service
                service_key:
                  type: string
                  pattern: '^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$'
                  description: The key (url) of the service
                service_version:
                  type: string
                  pattern: >-
                    ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
                  description: The tag/version of the service
              required:
                - service_key
                - service_version
            example:
              service_key: simcore/services/dynamic/3d-viewer
              service_version: "1.4.0"

      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: "./openapi-projects.yaml#/components/schemas/NodeEnveloped"
        default:
          $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"

  /projects/{project_id}/nodes/{node_id}:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
      - name: node_id
        in: path
        required: true
        schema:
          type: string

    get:
      tags:
        - project
      description: Gets node status
      operationId: get_node
      responses:
        "200":
          description: OK service exists and runs. Returns node details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RunningServiceEnveloped"

        default:
          $ref: "#/components/responses/DefaultErrorResponse"

    delete:
      tags:
        - project
      description: Stops and removes a node from the project
      operationId: delete_node
      responses:
        "204":
          description: node has been successfully deleted from project
        default:
          $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"

  /projects/{project_id}/nodes/{node_id}/retrieve:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
      - name: node_id
        in: path
        required: true
        schema:
          type: string

    post:
      tags:
        - project
      description: Triggers service retrieve
      operationId: retrieve_node
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                port_keys:
                  description: list of por keys to be retrieved
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Returns the amount of transferred bytes when pulling data via nodeports
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: response payload
                    properties:
                      size_bytes:
                        type: integer
                        description: amount of transferred bytes

        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /projects/{project_id}/nodes/{node_id}/start:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
      - name: node_id
        in: path
        required: true
        schema:
          type: string

    post:
      tags:
        - project
      description: Starts a project dynamic service
      operationId: start_node
      responses:
        "204":
          description: started service (needs to be long running though)

        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /projects/{project_id}/nodes/{node_id}/stop:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
      - name: node_id
        in: path
        required: true
        schema:
          type: string

    post:
      tags:
        - project
      description: Stops a project node
      operationId: stop_node
      responses:
        "204":
          description: stopped service

        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /projects/{project_id}/nodes/{node_id}/restart:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
      - name: node_id
        in: path
        required: true
        schema:
          type: string

    post:
      tags:
        - project
      description: Restarts containers started by the dynamic-sidecar
      operationId: restart_node

      responses:
        "204":
          description: Restarts containers started by the dynamic-sidecar

        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /projects/{project_id}/nodes/{node_id}/resources:
    parameters:
      - name: project_id
        in: path
        required: true
        schema:
          type: string
      - name: node_id
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - project
      description: Returns the node resources
      operationId: get_node_resources
      responses:
        "200":
          description: Returns the node resources.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodeResourcesEnveloped"

        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    put:
      tags:
        - project
      description: Replaces the node resources
      operationId: replace_node_resources
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NodeResources"
      responses:
        "200":
          description: Returns the udpated node resources.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NodeResourcesEnveloped"

        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /projects/{project_uuid}/tags/{tag_id}:
    parameters:
      - name: tag_id
        in: path
        required: true
        schema:
          type: integer
      - name: project_uuid
        in: path
        required: true
        schema:
          type: string
    put:
      tags:
        - project
      summary: Links an existing label with an existing study
      operationId: add_tag
      responses:
        "200":
          description: The tag has been successfully linked to the study
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    delete:
      tags:
        - project
      summary: Removes an existing link between a label and a study
      operationId: remove_tag
      responses:
        "200":
          description: The tag has been successfully removed from the study
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProjectEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

components:
  schemas:
    ClientSessionId:
      type: string
      example: 5ac57685-c40f-448f-8711-70be1936fd63

    Node:
      type: object
      required:
        - node_id
      properties:
        node_id:
          type: string
          description: The UUID attached to this node
          example: 123e4567-e89b-12d3-a456-426655440000

    NodeEnveloped:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "./openapi-projects.yaml#/components/schemas/Node"
        error:
          nullable: true
          default: null

    ProjectIn:
      $ref: "../common/schemas/project.yaml#/components/schemas/ProjectIn"

    ProjectEnveloped:
      $ref: "../common/schemas/project.yaml#/components/schemas/ProjectEnveloped"

    ProjectArrayEnveloped:
      $ref: "../common/schemas/project.yaml#/components/schemas/ProjectArrayEnveloped"

    ProjectStateEnveloped:
      $ref: "../common/schemas/project.yaml#/components/schemas/ProjectStateEnveloped"

    RunningServiceEnveloped:
      $ref: "../common/schemas/running_service.yaml#/components/schemas/RunningServiceEnveloped"

    NodeResources:
      $ref: "./components/schemas/node_resources.yaml#/components/schemas/NodeResources"

    NodeResourcesEnveloped:
      $ref: "./components/schemas/node_resources.yaml#/components/schemas/NodeResourcesEnveloped"

    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: "#/components/schemas/ValidationError"

    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            type: string
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string

  responses:
    DefaultErrorResponse:
      $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"
