paths:
  /email:test:
    post:
      tags:
      - admin
      summary: Test Email
      operationId: test_email
      parameters:
      - required: false
        schema:
          title: X-Simcore-Products-Name
          type: string
        name: x-simcore-products-name
        in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestEmail'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TestEmail_'
components:
  schemas:
    Envelope_TestEmail_:
      title: Envelope[TestEmail]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TestEmail'
        error:
          title: Error
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    TestEmail:
      title: TestEmail
      required:
      - to
      type: object
      properties:
        from_:
          title: 'From '
          type: string
          description: Email sender
          format: email
        to:
          title: To
          type: string
          description: Email destination
          format: email
        template_name:
          title: Template Name
          enum:
          - change_email_email.jinja2
          - new_2fa_code.jinja2
          - registration_email.jinja2
          - reset_password_email_failed.jinja2
          - reset_password_email.jinja2
          - service_submission.jinja2
          type: string
          default: registration_email.jinja2
        template_context:
          title: Template Context
          type: object
          default: {}
    ValidationError:
      title: ValidationError
      required:
      - loc
      - msg
      - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
            - type: string
            - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
