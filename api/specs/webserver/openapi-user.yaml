paths:
  /me:
    get:
      operationId: get_my_profile
      tags:
        - user
      responses:
        "200":
          description: current user profile
          content:
            application/json:
              schema:
                $ref: "./components/schemas/me.yaml#/ProfileEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    put:
      operationId: update_my_profile
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./components/schemas/me.yaml#/ProfileInput"
      responses:
        "204":
          description: updated profile
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /me/groups:
    get:
      summary: List my groups
      operationId: list_groups
      tags:
        - user
      responses:
        "200":
          description: list of the groups I belonged to
          content:
            application/json:
              schema:
                $ref: "./components/schemas/me.yaml#/UsersGroupsEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    post:
      summary: Create a new group
      operationId: create_group
      tags:
        - user
      requestBody:
        required: true
        description: the group to create
        content:
          application/json:
            schema:
              $ref: "./components/schemas/me.yaml#/UsersGroup"
      responses:
        "201":
          description: group created
          content:
            application/json:
              schema:
                $ref: "./components/schemas/me.yaml#/UsersGroupEnveloped"

        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /me/groups/{gid}:
    parameters:
      - name: gid
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - user
      summary: Gets one group details
      operationId: get_group
      responses:
        "200":
          description: got group
          content:
            application/json:
              schema:
                $ref: "./components/schemas/me.yaml#/UsersGroupEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    patch:
      summary: Update one group
      operationId: update_group
      tags:
        - user
      requestBody:
        required: true
        description: the group to update
        content:
          application/json:
            schema:
              $ref: "./components/schemas/me.yaml#/UsersGroup"
      responses:
        "200":
          description: the modified group
          content:
            application/json:
              schema:
                $ref: "./components/schemas/me.yaml#/UsersGroupEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    delete:
      tags:
        - user
      summary: Deletes one group
      operationId: delete_group
      responses:
        "204":
          description: group has been successfully deleted
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /me/groups/{gid}/users:
    parameters:
      - name: gid
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - user
      summary: Gets list of users in group
      operationId: get_group_users
      responses:
        "200":
          description: got list of users
          content:
            application/json:
              schema:
                $ref: "./components/schemas/me.yaml#/UsersArrayEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    post:
      tags:
        - user
      summary: Adds a user in the group
      operationId: add_group_user
      requestBody:
        required: true
        description: the user to add
        content:
          application/json:
            schema:
              type: object
              required:
                - uid
              properties:
                uid:
                  type: string
      responses:
        "204":
          description: user successfully added
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /me/groups/{gid}/users/{uid}:
    parameters:
      - name: gid
        in: path
        required: true
        schema:
          type: string
      - name: uid
        in: path
        required: true
        schema:
          type: string
    get:
      tags:
        - user
      summary: Gets specific user in group
      operationId: get_group_user
      responses:
        "200":
          description: got user
          content:
            application/json:
              schema:
                $ref: "./components/schemas/me.yaml#/UserEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    patch:
      tags:
        - user
      summary: Modify specific user in group
      operationId: update_group_user
      responses:
        "200":
          description: modified user
          content:
            application/json:
              schema:
                $ref: "./components/schemas/me.yaml#/UserEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    delete:
      tags:
        - user
      summary: Delete specific user in group
      operationId: delete_group_user
      responses:
        "204":
          description: successfully removed user
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /me/tokens:
    get:
      summary: List tokens
      operationId: list_tokens
      tags:
        - user
      responses:
        "200":
          description: list of tokens
          content:
            application/json:
              schema:
                $ref: "./components/schemas/me.yaml#/TokensArrayEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    post:
      summary: Create tokens
      operationId: create_tokens
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              # FIXME: this body should NOT be enveloped!
              $ref: "./components/schemas/me.yaml#/TokenEnveloped"
      responses:
        "201":
          description: token created
          content:
            application/json:
              schema:
                $ref: "./components/schemas/me.yaml#/TokenEnveloped"

        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /me/tokens/{service}:
    parameters:
      - name: service
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Gets specific token
      operationId: get_token
      tags:
        - user
      responses:
        "200":
          description: got detailed token
          content:
            application/json:
              schema:
                $ref: "./components/schemas/me.yaml#/TokenEnveloped"
    put:
      summary: Updates token
      operationId: update_token
      tags:
        - user
      responses:
        "204":
          description: token has been successfully updated
    delete:
      summary: Delete token
      operationId: delete_token
      tags:
        - user
      responses:
        "204":
          description: token has been successfully deleted

components:
  responses:
    DefaultErrorResponse:
      $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"
