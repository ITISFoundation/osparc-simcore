paths:
  /me:
    get:
      operationId: get_my_profile
      tags:
        - user
      responses:
        "200":
          description: current user profile
          content:
            application/json:
              schema:
                $ref: "./components/schemas/me.yaml#/ProfileEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    put:
      operationId: update_my_profile
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./components/schemas/me.yaml#/ProfileUpdate"
      responses:
        "204":
          description: updated profile
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /me/tokens:
    get:
      summary: List tokens
      operationId: list_tokens
      tags:
        - user
      responses:
        "200":
          description: list of tokens
          content:
            application/json:
              schema:
                $ref: "./components/schemas/me.yaml#/TokensArrayEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    post:
      summary: Create tokens
      operationId: create_tokens
      tags:
        - user
      requestBody:
        content:
          application/json:
            schema:
              # FIXME: this body should NOT be enveloped!
              $ref: "./components/schemas/me.yaml#/TokenEnveloped"
      responses:
        "201":
          description: token created
          content:
            application/json:
              schema:
                $ref: "./components/schemas/me.yaml#/TokenEnveloped"

        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /me/tokens/{service}:
    parameters:
      - name: service
        in: path
        required: true
        schema:
          type: string
    get:
      summary: Gets specific token
      operationId: get_token
      tags:
        - user
      responses:
        "200":
          description: got detailed token
          content:
            application/json:
              schema:
                $ref: "./components/schemas/me.yaml#/TokenEnveloped"
    put:
      summary: Updates token
      operationId: update_token
      tags:
        - user
      responses:
        "204":
          description: token has been successfully updated
    delete:
      summary: Delete token
      operationId: delete_token
      tags:
        - user
      responses:
        "204":
          description: token has been successfully deleted

  /me/notifications:
    get:
      tags:
        - user
      summary: List of Notifications for the specific user
      operationId: get_user_notifications
      responses:
        "200":
          description: List of Notifications
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationsOutListEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"
    post:
      tags:
        - user
      summary: Submit a new Notification
      operationId: post_user_notification
      requestBody:
        required: true
        description: the new notification
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationIn"
      responses:
        "204":
          description: Notification registered
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /me/notifications/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
    patch:
      tags:
        - user
      summary: Update a Notification
      operationId: update_user_notification
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationUpdate"
      responses:
        "204":
          description: All good
        default:
          $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"

components:
  schemas:
    NotificationIn:
      type: object
      required:
        - user_id
        - category
        - actionable_path
        - title
        - text
        - date
      properties:
        user_id:
          type: string
          description: >-
            the user that will receive the notification
          example: "123"
        category:
          type: string
          enum:
            - NEW_ORGANIZATION
            - STUDY_SHARED
            - TEMPLATE_SHARED
            - ANNOTATION_NOTE
          description: >-
            notification type, the frontend will use this to decorate the notification
          example: new_organization
        actionable_path:
          type: string
          description: >-
            the frontend will use this information to trigger an action when the user click on it
          example: organization/123
        title:
          type: string
          description: >-
            the notification title to show in the frontend
          example: New Organization
        text:
          type: string
          description: >-
            the notification text to show in the frontend
          example: You are now part of Dummy Organization!
        date:
          type: string
          format: date-time
          description: >-
            when it was created

    NotificationOut:
      # extend NotificationIn
      allOf:
        - $ref: "#/components/schemas/NotificationIn"
        - type: "object"
        - required:
            - id
            - read
          properties:
            id:
              type: string
              description: >-
                notification id
              example: "123"
            read:
              type: boolean
              description: >-
                wether the notification has been read

    NotificationsOutListEnveloped:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/NotificationOut"
        error:
          nullable: true
          default: null

    NotificationUpdate:
      type: object
      required:
        - read
      properties:
        read:
          type: boolean
          description: >-
            notification has been read

  responses:
    DefaultErrorResponse:
      $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"
