paths:
  /projects:
    get:
      tags:
      - project
      summary: List Projects
      operationId: list_projects
      parameters:
      - description: maximum number of items to return (pagination)
        required: false
        schema:
          title: Limit
          exclusiveMaximum: true
          minimum: 1
          type: integer
          description: maximum number of items to return (pagination)
          default: 20
          maximum: 50
        name: limit
        in: query
      - description: index to the first item to return (pagination)
        required: false
        schema:
          title: Offset
          minimum: 0
          type: integer
          description: index to the first item to return (pagination)
          default: 0
        name: offset
        in: query
      - required: false
        schema:
          $ref: '#/components/schemas/ProjectTypeAPI'
        name: type
        in: query
      - description: includes projects marked as hidden in the listing
        required: false
        schema:
          title: Show Hidden
          type: boolean
          description: includes projects marked as hidden in the listing
          default: false
        name: show_hidden
        in: query
      - description: Comma separated list of fields for ordering. The default sorting
          order is ascending. To specify descending order for a field, users append
          a 'desc' suffix
        required: false
        schema:
          title: Order By
          type: string
          description: Comma separated list of fields for ordering. The default sorting
            order is ascending. To specify descending order for a field, users append
            a 'desc' suffix
        example: foo desc, bar
        name: order_by
        in: query
      - description: Filters to process on the projects list, encoded as JSON
        required: false
        schema:
          title: Filters
          type: string
          description: Filters to process on the projects list, encoded as JSON
        example: '{"tags": [1, 5], "classifiers": ["foo", "bar"]}'
        name: filters
        in: query
      - description: Multi column full text search
        required: false
        schema:
          title: Search
          maxLength: 25
          type: string
          description: Multi column full text search
        example: My project
        name: search
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ProjectListItem_'
    post:
      tags:
      - project
      summary: Creates a new project or copies an existing one
      operationId: create_project
      parameters:
      - description: 'Option to create a project from existing template or study:
          from_study={study_uuid}'
        required: false
        schema:
          title: From Study
          type: string
          description: 'Option to create a project from existing template or study:
            from_study={study_uuid}'
          format: uuid
        name: from_study
        in: query
      - description: 'Option to create a template from existing project: as_template=true'
        required: false
        schema:
          title: As Template
          type: boolean
          description: 'Option to create a template from existing project: as_template=true'
          default: false
        name: as_template
        in: query
      - description: Option to copy data when creating from an existing template or
          as a template, defaults to True
        required: false
        schema:
          title: Copy Data
          type: boolean
          description: Option to copy data when creating from an existing template
            or as a template, defaults to True
          default: true
        name: copy_data
        in: query
      - description: Enables/disables hidden flag. Hidden projects are by default
          unlisted
        required: false
        schema:
          title: Hidden
          type: boolean
          description: Enables/disables hidden flag. Hidden projects are by default
            unlisted
          default: false
        name: hidden
        in: query
      requestBody:
        content:
          application/json:
            schema:
              title: Create
              anyOf:
              - $ref: '#/components/schemas/ProjectCreateNew'
              - $ref: '#/components/schemas/ProjectCopyOverride'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskGet_'
  /projects/active:
    get:
      tags:
      - project
      summary: Get Active Project
      operationId: get_active_project
      parameters:
      - required: true
        schema:
          title: Client Session Id
          type: string
        name: client_session_id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
  /projects/{project_id}:
    get:
      tags:
      - project
      summary: Get Project
      operationId: get_project
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
    put:
      tags:
      - project
      summary: Replace Project
      description: Replaces (i.e. full update) a project resource
      operationId: replace_project
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectReplace'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
    delete:
      tags:
      - project
      summary: Delete Project
      operationId: delete_project
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      responses:
        '204':
          description: Successful Response
    patch:
      tags:
      - project
      summary: Update Project
      description: Partial update of a project resource
      operationId: update_project
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
components:
  schemas:
    AccessEnum:
      title: AccessEnum
      enum:
      - ReadAndWrite
      - Invisible
      - ReadOnly
      type: string
      description: An enumeration.
    AccessRights:
      title: AccessRights
      required:
      - read
      - write
      - delete
      type: object
      properties:
        read:
          title: Read
          type: boolean
          description: gives read access
        write:
          title: Write
          type: boolean
          description: gives write access
        delete:
          title: Delete
          type: boolean
          description: gives deletion rights
      additionalProperties: false
    Annotation:
      title: Annotation
      required:
      - type
      - color
      - attributes
      type: object
      properties:
        type:
          title: Type
          enum:
          - note
          - rect
          - text
          type: string
        color:
          title: Color
          type: string
          format: color
        attributes:
          title: Attributes
          type: object
          description: svg attributes
      additionalProperties: false
    DatCoreFileLink:
      title: DatCoreFileLink
      required:
      - store
      - path
      - label
      - dataset
      type: object
      properties:
        store:
          title: Store
          type: integer
          description: 'The store identifier: 0 for simcore S3, 1 for datcore'
        path:
          title: Path
          anyOf:
          - pattern: ^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$
            type: string
          - pattern: ^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$
            type: string
          description: The path to the file in the storage provider domain
        label:
          title: Label
          type: string
          description: The real file name
        eTag:
          title: Etag
          type: string
          description: Entity tag that uniquely represents the file. The method to
            generate the tag is not specified (black box).
        dataset:
          title: Dataset
          type: string
          description: Unique identifier to access the dataset on datcore (REQUIRED
            for datcore)
      additionalProperties: false
      description: I/O port type to hold a link to a file in DATCORE storage
    DownloadLink:
      title: DownloadLink
      required:
      - downloadLink
      type: object
      properties:
        downloadLink:
          title: Downloadlink
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        label:
          title: Label
          type: string
          description: Display name
      additionalProperties: false
      description: I/O port type to hold a generic download link to a file (e.g. S3
        pre-signed link, etc)
    EmptyModel:
      title: EmptyModel
      type: object
      properties: {}
      additionalProperties: false
    Envelope_ProjectGet_:
      title: Envelope[ProjectGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectGet'
        error:
          title: Error
    Envelope_TaskGet_:
      title: Envelope[TaskGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskGet'
        error:
          title: Error
    Marker:
      title: Marker
      required:
      - color
      type: object
      properties:
        color:
          title: Color
          type: string
          format: color
      additionalProperties: false
    Node:
      title: Node
      required:
      - key
      - version
      - label
      type: object
      properties:
        key:
          title: Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
          description: distinctive name for the node based on the docker registry
            path
        version:
          title: Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
          description: semantic version number of the node
        label:
          title: Label
          type: string
          description: The short name of the node
        progress:
          title: Progress
          maximum: 100.0
          minimum: 0.0
          type: number
          description: the node progress value (deprecated in DB, still used for API
            only)
          deprecated: true
        thumbnail:
          title: Thumbnail
          maxLength: 2083
          minLength: 0
          type: string
          description: url of the latest screenshot of the node
          format: uri
        runHash:
          anyOf:
          - type: 'null'
          - title: Runhash
            type: string
            description: the hex digest of the resolved inputs +outputs hash at the
              time when the last outputs were generated
        inputs:
          title: Inputs
          type: object
          description: values of input properties
        inputsUnits:
          title: Inputsunits
          type: object
          description: Overrides default unit (if any) defined in the service for
            each port
        inputAccess:
          type: object
          description: map with key - access level pairs
        inputNodes:
          title: Inputnodes
          type: array
          items:
            type: string
            format: uuid
          description: node IDs of where the node is connected to
        outputs:
          title: Outputs
          type: object
          description: values of output properties
        outputNode:
          title: Outputnode
          type: boolean
          deprecated: true
        outputNodes:
          title: Outputnodes
          type: array
          items:
            type: string
            format: uuid
          description: Used in group-nodes. Node IDs of those connected to the output
        parent:
          anyOf:
          - type: 'null'
          - title: Parent
            type: string
            description: Parent's (group-nodes') node ID s. Used to group
            format: uuid
        position:
          title: Position
          allOf:
          - $ref: '#/components/schemas/Position'
          description: Use projects_ui.WorkbenchUI.position instead
          deprecated: true
        state:
          title: State
          allOf:
          - $ref: '#/components/schemas/NodeState'
          description: The node's state object
        bootOptions:
          title: Bootoptions
          type: object
          description: Some services provide alternative parameters to be injected
            at boot time. The user selection should be stored here, and it will overwrite
            the services's defaults.
      additionalProperties: false
    NodeState:
      title: NodeState
      type: object
      properties:
        modified:
          title: Modified
          type: boolean
          description: true if the node's outputs need to be re-computed
          default: true
        dependencies:
          title: Dependencies
          uniqueItems: true
          type: array
          items:
            type: string
            format: uuid
          description: contains the node inputs dependencies if they need to be computed
            first
        currentStatus:
          allOf:
          - $ref: '#/components/schemas/RunningState'
          description: the node's current state
          default: NOT_STARTED
        progress:
          title: Progress
          maximum: 1.0
          minimum: 0.0
          type: number
          description: current progress of the task if available (None if not started
            or not a computational task)
          default: 0
      additionalProperties: false
    Owner:
      title: Owner
      required:
      - user_id
      - first_name
      - last_name
      type: object
      properties:
        user_id:
          title: User Id
          type: integer
          description: Owner's identifier when registered in the user's database table
        first_name:
          title: First Name
          type: string
          description: Owner first name
        last_name:
          title: Last Name
          type: string
          description: Owner last name
      additionalProperties: false
    PageLinks:
      title: PageLinks
      required:
      - self
      - first
      - last
      type: object
      properties:
        self:
          title: Self
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        first:
          title: First
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        prev:
          title: Prev
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        next:
          title: Next
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        last:
          title: Last
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
      additionalProperties: false
    PageMetaInfoLimitOffset:
      title: PageMetaInfoLimitOffset
      required:
      - total
      - count
      type: object
      properties:
        limit:
          title: Limit
          exclusiveMinimum: true
          type: integer
          default: 20
          minimum: 0
        total:
          title: Total
          minimum: 0
          type: integer
        offset:
          title: Offset
          minimum: 0
          type: integer
          default: 0
        count:
          title: Count
          minimum: 0
          type: integer
      additionalProperties: false
    Page_ProjectListItem_:
      title: Page[ProjectListItem]
      required:
      - _meta
      - _links
      - data
      type: object
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/ProjectListItem'
      additionalProperties: false
      description: Paginated response model of ItemTs
    PortLink:
      title: PortLink
      required:
      - nodeUuid
      - output
      type: object
      properties:
        nodeUuid:
          title: Nodeuuid
          type: string
          description: The node to get the port output from
          format: uuid
        output:
          title: Output
          pattern: ^[-_a-zA-Z0-9]+$
          type: string
          description: The port key in the node given by nodeUuid
      additionalProperties: false
      description: I/O port type to reference to an output port of another node in
        the same project
    Position:
      title: Position
      required:
      - x
      - y
      type: object
      properties:
        x:
          title: X
          type: integer
          description: The x position
          example:
          - '12'
        y:
          title: Y
          type: integer
          description: The y position
          example:
          - '15'
      additionalProperties: false
    ProjectCopyOverride:
      title: ProjectCopyOverride
      required:
      - name
      - prjOwner
      type: object
      properties:
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        thumbnail:
          title: Thumbnail
          maxLength: 2083
          minLength: 0
          type: string
          format: uri
        prjOwner:
          title: Prjowner
          type: string
          format: email
    ProjectCreateNew:
      title: ProjectCreateNew
      required:
      - name
      - workbench
      - accessRights
      type: object
      properties:
        uuid:
          title: Uuid
          type: string
          format: uuid
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        thumbnail:
          title: Thumbnail
          maxLength: 2083
          minLength: 0
          type: string
          format: uri
        workbench:
          title: Workbench
          type: object
        accessRights:
          title: Accessrights
          type: object
        tags:
          title: Tags
          type: array
          items:
            type: integer
        classifiers:
          title: Classifiers
          type: array
          items:
            type: string
        ui:
          $ref: '#/components/schemas/StudyUI'
    ProjectGet:
      title: ProjectGet
      required:
      - uuid
      - name
      - description
      - thumbnail
      - creationDate
      - lastChangeDate
      - workbench
      - prjOwner
      - accessRights
      - tags
      type: object
      properties:
        uuid:
          title: Uuid
          type: string
          format: uuid
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        thumbnail:
          title: Thumbnail
          anyOf:
          - maxLength: 2083
            minLength: 0
            type: string
            format: uri
          - enum:
            - ''
            type: string
        creationDate:
          title: Creationdate
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          type: string
        lastChangeDate:
          title: Lastchangedate
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          type: string
        workbench:
          title: Workbench
          type: object
        prjOwner:
          title: Prjowner
          type: string
          format: email
        accessRights:
          title: Accessrights
          type: object
        tags:
          title: Tags
          type: array
          items:
            type: integer
        classifiers:
          title: Classifiers
          type: array
          items:
            type: string
          default: []
        state:
          $ref: '#/components/schemas/ProjectState'
        ui:
          title: Ui
          anyOf:
          - $ref: '#/components/schemas/EmptyModel'
          - $ref: '#/components/schemas/StudyUI'
        quality:
          title: Quality
          type: object
          default: {}
        dev:
          title: Dev
          type: object
        permalink:
          $ref: '#/components/schemas/ProjectPermalink'
    ProjectListItem:
      title: ProjectListItem
      required:
      - uuid
      - name
      - description
      - thumbnail
      - creationDate
      - lastChangeDate
      - workbench
      - prjOwner
      - accessRights
      - tags
      type: object
      properties:
        uuid:
          title: Uuid
          type: string
          format: uuid
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        thumbnail:
          title: Thumbnail
          anyOf:
          - maxLength: 2083
            minLength: 0
            type: string
            format: uri
          - enum:
            - ''
            type: string
        creationDate:
          title: Creationdate
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          type: string
        lastChangeDate:
          title: Lastchangedate
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          type: string
        workbench:
          title: Workbench
          type: object
        prjOwner:
          title: Prjowner
          type: string
          format: email
        accessRights:
          title: Accessrights
          type: object
        tags:
          title: Tags
          type: array
          items:
            type: integer
        classifiers:
          title: Classifiers
          type: array
          items:
            type: string
          default: []
        state:
          $ref: '#/components/schemas/ProjectState'
        ui:
          title: Ui
          anyOf:
          - $ref: '#/components/schemas/EmptyModel'
          - $ref: '#/components/schemas/StudyUI'
        quality:
          title: Quality
          type: object
          default: {}
        dev:
          title: Dev
          type: object
        permalink:
          $ref: '#/components/schemas/ProjectPermalink'
    ProjectLocked:
      title: ProjectLocked
      required:
      - value
      - status
      type: object
      properties:
        value:
          title: Value
          type: boolean
          description: True if the project is locked
        owner:
          title: Owner
          allOf:
          - $ref: '#/components/schemas/Owner'
          description: If locked, the user that owns the lock
        status:
          allOf:
          - $ref: '#/components/schemas/ProjectStatus'
          description: The status of the project
      additionalProperties: false
    ProjectPermalink:
      title: ProjectPermalink
      required:
      - url
      - is_public
      type: object
      properties:
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
        is_public:
          title: Is Public
          type: boolean
    ProjectReplace:
      title: ProjectReplace
      required:
      - uuid
      - name
      - description
      - creationDate
      - lastChangeDate
      - workbench
      - accessRights
      type: object
      properties:
        uuid:
          title: Uuid
          type: string
          format: uuid
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        thumbnail:
          title: Thumbnail
          maxLength: 2083
          minLength: 0
          type: string
          format: uri
        creationDate:
          title: Creationdate
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          type: string
        lastChangeDate:
          title: Lastchangedate
          pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
          type: string
        workbench:
          title: Workbench
          type: object
        accessRights:
          title: Accessrights
          type: object
        tags:
          title: Tags
          type: array
          items:
            type: integer
          default: []
        classifiers:
          title: Classifiers
          type: array
          items:
            type: string
        ui:
          $ref: '#/components/schemas/StudyUI'
        quality:
          title: Quality
          type: object
    ProjectRunningState:
      title: ProjectRunningState
      required:
      - value
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/RunningState'
          description: The running state of the project
      additionalProperties: false
    ProjectState:
      title: ProjectState
      required:
      - locked
      - state
      type: object
      properties:
        locked:
          title: Locked
          allOf:
          - $ref: '#/components/schemas/ProjectLocked'
          description: The project lock state
        state:
          title: State
          allOf:
          - $ref: '#/components/schemas/ProjectRunningState'
          description: The project running state
      additionalProperties: false
    ProjectStatus:
      title: ProjectStatus
      enum:
      - CLOSED
      - CLOSING
      - CLONING
      - EXPORTING
      - OPENING
      - OPENED
      type: string
      description: An enumeration.
    ProjectTypeAPI:
      title: ProjectTypeAPI
      enum:
      - all
      - template
      - user
      type: string
      description: An enumeration.
    ProjectUpdate:
      title: ProjectUpdate
      type: object
      properties:
        permalink:
          title: Permalink
          type: object
        ui:
          $ref: '#/components/schemas/StudyUI'
    RunningState:
      title: RunningState
      enum:
      - UNKNOWN
      - PUBLISHED
      - NOT_STARTED
      - PENDING
      - STARTED
      - RETRY
      - SUCCESS
      - FAILED
      - ABORTED
      type: string
      description: 'State of execution of a project''s computational workflow


        SEE StateType for task state'
    SimCoreFileLink:
      title: SimCoreFileLink
      required:
      - store
      - path
      type: object
      properties:
        store:
          title: Store
          type: integer
          description: 'The store identifier: 0 for simcore S3, 1 for datcore'
        path:
          title: Path
          anyOf:
          - pattern: ^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$
            type: string
          - pattern: ^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$
            type: string
          description: The path to the file in the storage provider domain
        label:
          title: Label
          type: string
          description: The real file name
        eTag:
          title: Etag
          type: string
          description: Entity tag that uniquely represents the file. The method to
            generate the tag is not specified (black box).
        dataset:
          title: Dataset
          type: string
          deprecated: true
      additionalProperties: false
      description: I/O port type to hold a link to a file in simcore S3 storage
    Slideshow:
      title: Slideshow
      required:
      - position
      type: object
      properties:
        position:
          title: Position
          type: integer
        instructions:
          title: Instructions
          type: string
    StudyUI:
      title: StudyUI
      type: object
      properties:
        workbench:
          title: Workbench
          type: object
        slideshow:
          title: Slideshow
          type: object
        currentNodeId:
          title: Currentnodeid
          type: string
          format: uuid
        annotations:
          title: Annotations
          type: object
    TaskGet:
      title: TaskGet
      required:
      - task_id
      - task_name
      - status_href
      - result_href
      - abort_href
      type: object
      properties:
        task_id:
          title: Task Id
          type: string
        task_name:
          title: Task Name
          type: string
        status_href:
          title: Status Href
          type: string
        result_href:
          title: Result Href
          type: string
        abort_href:
          title: Abort Href
          type: string
    WorkbenchUI:
      title: WorkbenchUI
      required:
      - position
      type: object
      properties:
        position:
          title: Position
          allOf:
          - $ref: '#/components/schemas/Position'
          description: The node position in the workbench
        marker:
          $ref: '#/components/schemas/Marker'
      additionalProperties: false
