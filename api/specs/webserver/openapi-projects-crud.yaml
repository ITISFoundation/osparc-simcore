paths:
  /projects:
    get:
      tags:
      - project
      summary: List Projects
      operationId: list_projects
      parameters:
      - description: maximum number of items to return (pagination)
        required: false
        schema:
          title: Limit
          exclusiveMaximum: true
          minimum: 1.0
          type: integer
          description: maximum number of items to return (pagination)
          default: 20
          maximum: 50
        name: limit
        in: query
      - description: index to the first item to return (pagination)
        required: false
        schema:
          title: Offset
          minimum: 0.0
          type: integer
          description: index to the first item to return (pagination)
          default: 0
        name: offset
        in: query
      - required: false
        schema:
          allOf:
          - $ref: '#/components/schemas/ProjectTypeAPI'
          default: all
        name: type
        in: query
      - description: includes projects marked as hidden in the listing
        required: false
        schema:
          title: Show Hidden
          type: boolean
          description: includes projects marked as hidden in the listing
          default: false
        name: show_hidden
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_ProjectListItem_'
    post:
      tags:
      - project
      summary: Create Project
      operationId: create_project
      parameters:
      - description: 'Option to create a project from existing template or study:
          from_study={study_uuid}'
        required: false
        schema:
          title: From Study
          type: string
          description: 'Option to create a project from existing template or study:
            from_study={study_uuid}'
          format: uuid
        name: from_study
        in: query
      - description: 'Option to create a template from existing project: as_template=true'
        required: false
        schema:
          title: As Template
          type: boolean
          description: 'Option to create a template from existing project: as_template=true'
          default: false
        name: as_template
        in: query
      - description: Option to copy data when creating from an existing template or
          as a template, defaults to True
        required: false
        schema:
          title: Copy Data
          type: boolean
          description: Option to copy data when creating from an existing template
            or as a template, defaults to True
          default: true
        name: copy_data
        in: query
      - description: Enables/disables hidden flag. Hidden projects are by default
          unlisted
        required: false
        schema:
          title: Hidden
          type: boolean
          description: Enables/disables hidden flag. Hidden projects are by default
            unlisted
          default: false
        name: hidden
        in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreate'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_TaskGet_'
  /projects/active:
    get:
      tags:
      - project
      summary: Get Active Project
      operationId: get_active_project
      parameters:
      - required: true
        schema:
          title: Client Session Id
          type: string
        name: client_session_id
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
  /projects/{project_id}:
    get:
      tags:
      - project
      summary: Get Project
      operationId: get_project
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
    put:
      tags:
      - project
      summary: Replace Project
      description: Replaces (i.e. full update) a project resource
      operationId: replace_project
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectReplace'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
    delete:
      tags:
      - project
      summary: Delete Project
      operationId: delete_project
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      responses:
        '204':
          description: Successful Response
    patch:
      tags:
      - project
      summary: Update Project
      description: Partial update of a project resource
      operationId: update_project
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_ProjectGet_'
components:
  schemas:
    Envelope_ProjectGet_:
      title: Envelope[ProjectGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ProjectGet'
        error:
          title: Error
    Envelope_TaskGet_:
      title: Envelope[TaskGet]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/TaskGet'
        error:
          title: Error
    PageLinks:
      title: PageLinks
      required:
      - self
      - first
      - last
      type: object
      properties:
        self:
          title: Self
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        first:
          title: First
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        prev:
          title: Prev
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        next:
          title: Next
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
        last:
          title: Last
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
      additionalProperties: false
    PageMetaInfoLimitOffset:
      title: PageMetaInfoLimitOffset
      required:
      - total
      - count
      type: object
      properties:
        limit:
          title: Limit
          exclusiveMinimum: true
          type: integer
          default: 20
          minimum: 0
        total:
          title: Total
          minimum: 0.0
          type: integer
        offset:
          title: Offset
          minimum: 0.0
          type: integer
          default: 0
        count:
          title: Count
          minimum: 0.0
          type: integer
      additionalProperties: false
    Page_ProjectListItem_:
      title: Page[ProjectListItem]
      required:
      - _meta
      - _links
      - data
      type: object
      properties:
        _meta:
          $ref: '#/components/schemas/PageMetaInfoLimitOffset'
        _links:
          $ref: '#/components/schemas/PageLinks'
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/ProjectListItem'
      additionalProperties: false
      description: Paginated response model of ItemTs
    ProjectCreate:
      title: ProjectCreate
      type: object
      properties: {}
    ProjectGet:
      title: ProjectGet
      type: object
      properties: {}
    ProjectListItem:
      title: ProjectListItem
      type: object
      properties: {}
    ProjectReplace:
      title: ProjectReplace
      type: object
      properties: {}
    ProjectTypeAPI:
      title: ProjectTypeAPI
      enum:
      - all
      - template
      - user
      type: string
      description: An enumeration.
    ProjectUpdate:
      title: ProjectUpdate
      type: object
      properties: {}
    TaskGet:
      title: TaskGet
      required:
      - task_id
      - task_name
      - status_href
      - result_href
      - abort_href
      type: object
      properties:
        task_id:
          title: Task Id
          type: string
        task_name:
          title: Task Name
          type: string
        status_href:
          title: Status Href
          type: string
        result_href:
          title: Result Href
          type: string
        abort_href:
          title: Abort Href
          type: string
