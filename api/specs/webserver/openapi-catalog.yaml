paths:
  /catalog/dags:
    get:
      tags:
        - catalog
      operationId: list_catalog_dags
      responses:
        "200":
          description: List of catalog dags
        "422":
          description: Validation Error
        default:
          $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"
    post:
      tags:
        - catalog
      summary: Creates a new dag in catalog
      operationId: create_catalog_dag
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        "201":
          description: The dag was successfully created
        "422":
          description: Validation Error
        default:
          $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"
  /catalog/dags/{dag_id}:
    parameters:
      - in: path
        name: dag_id
        required: true
        schema:
          title: Dag Id
          type: integer
    put:
      tags:
        - catalog
      summary: Replaces a dag in catalog
      operationId: replace_catalog_dag
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        "200":
          description: The dag was replaced in catalog
        "422":
          description: Validation Error
        default:
          $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"
    delete:
      tags:
        - catalog
      summary: Deletes an existing dag
      operationId: delete_catalog_dag
      responses:
        "204":
          description: Successfully deleted
        "422":
          description: Validation Error

  catalog_services:
    get:
      tags:
        - catalog
      summary: List Services
      operationId: list_services_handler
      responses:
        "200":
          description: Returns list of services from the catalog
        default:
          $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"
  catalog_services_service_key_service_version:
    parameters:
      - in: path
        name: service_key
        required: true
        schema:
          title: Service key
          type: string
          pattern: ^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$
      - in: path
        name: service_version
        required: true
        schema:
          title: Service version
          type: string
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
    get:
      tags:
        - catalog
      summary: Get Service
      operationId: get_service_handler
      responses:
        "200":
          description: Returns service
        default:
          $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"
    patch:
      tags:
        - catalog
      summary: Update Service
      operationId: update_service_handler
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        "200":
          description: Returns modified service
        default:
          $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"

  catalog_services_service_key_service_version_inputs:
    get:
      tags:
        - catalog
      operationId: list_service_inputs_handler
      parameters:
        - in: path
          name: service_key
          required: true
          schema:
            pattern: ^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$
            title: Service Key
            type: string
        - in: path
          name: service_version
          required: true
          schema:
            pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
            title: Service Version
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceInputApiOut"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: List Service Inputs
  catalog_services_service_key_service_version_inputs_input_key:
    get:
      tags:
        - catalog
      operationId: get_service_input_handler
      parameters:
        - in: path
          name: service_key
          required: true
          schema:
            pattern: ^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$
            title: Service Key
            type: string
        - in: path
          name: service_version
          required: true
          schema:
            pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
            title: Service Version
            type: string
        - in: path
          name: input_key
          required: true
          schema:
            pattern: ^[-_a-zA-Z0-9]+$
            title: Input Key
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceInputApiOut"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Get Service Input
  catalog_services_service_key_service_version_inputs_match:
    get:
      tags:
        - catalog
      description: "Filters inputs of this service that match a given service output. Returns compatible input ports of the service, provided an output port of a connected node."
      operationId: get_compatible_inputs_given_source_output_handler
      parameters:
        - in: path
          name: service_key
          required: true
          schema:
            pattern: ^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$
            title: Service Key
            type: string
        - in: path
          name: service_version
          required: true
          schema:
            pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
            title: Service Version
            type: string
        - in: query
          name: fromService
          required: true
          schema:
            pattern: ^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$
            title: Fromservice
            type: string
        - in: query
          name: fromVersion
          required: true
          schema:
            pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
            title: Fromversion
            type: string
        - in: query
          name: fromOutput
          required: true
          schema:
            pattern: ^[-_a-zA-Z0-9]+$
            title: Fromoutput
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  pattern: ^[-_a-zA-Z0-9]+$
                  type: string
                title:
                  Response Get Compatible Inputs Given Source Output Catalog
                  Services  Service Key   Service Version  Inputs Match Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Get Compatible Inputs Given Source Output
  catalog_services_service_key_service_version_outputs:
    get:
      tags:
        - catalog
      operationId: list_service_outputs_handler
      parameters:
        - in: path
          name: service_key
          required: true
          schema:
            pattern: ^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$
            title: Service Key
            type: string
        - in: path
          name: service_version
          required: true
          schema:
            pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
            title: Service Version
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/ServiceOutputApiOut"
                title:
                  Response List Service Outputs Catalog Services  Service Key   Service
                  Version  Outputs Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: List Service Outputs
  catalog_services_service_key_service_version_outputs_output_key:
    get:
      tags:
        - catalog
      operationId: get_service_output_handler
      parameters:
        - in: path
          name: service_key
          required: true
          schema:
            pattern: ^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$
            title: Service Key
            type: string
        - in: path
          name: service_version
          required: true
          schema:
            pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
            title: Service Version
            type: string
        - in: path
          name: output_key
          required: true
          schema:
            pattern: ^[-_a-zA-Z0-9]+$
            title: Output Key
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceOutputApiOut"
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Get Service Output
  catalog_services_service_key_service_version_outputs_match:
    get:
      tags:
        - catalog
      description: "Filters outputs of this service that match a given service input. Returns compatible output port of a connected node for a given input"
      operationId: get_compatible_outputs_given_target_input_handler
      parameters:
        - in: path
          name: service_key
          required: true
          schema:
            pattern: ^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$
            title: Service Key
            type: string
        - in: path
          name: service_version
          required: true
          schema:
            pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
            title: Service Version
            type: string
        - in: query
          name: toService
          required: true
          schema:
            pattern: ^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$
            title: Toservice
            type: string
        - in: query
          name: toVersion
          required: true
          schema:
            pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
            title: Toversion
            type: string
        - in: query
          name: toInput
          required: true
          schema:
            pattern: ^[-_a-zA-Z0-9]+$
            title: Toinput
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  pattern: ^[-_a-zA-Z0-9]+$
                  type: string
                title:
                  Response Get Compatible Outputs Given Target Input Catalog
                  Services  Service Key   Service Version  Outputs Match Get
                type: array
          description: Successful Response
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation Error
      summary: Get Compatible Outputs Given Target Input

components:
  parameters:
    ServiceType:
      in: query
      name: service_type
      description: |
        The service type:
          * computational - a computational service
          * interactive - an interactive service
      required: false
      schema:
        type: string
        enum:
          - computational
          - interactive
        example: computational
  schemas:
    ServicesEnveloped:
      $ref: "../common/schemas/services.yaml#/components/schemas/ServicesEnveloped"
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: "#/components/schemas/ValidationError"
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    SelectBox:
      additionalProperties: false
      properties:
        structure:
          items:
            $ref: "#/components/schemas/Structure"
          minItems: 1
          title: Structure
          type: array
      required:
        - structure
      title: SelectBox
      type: object
    ServiceInputApiOut:
      additionalProperties: false
      description: Metadata on a service input port
      example:
        defaultValue: 0
        description: Time to wait before completion
        displayOrder: 2
        keyId: input_2
        label: Sleep Time
        type: number
        unit: second
        unitLong: seconds
        unitShort: sec
        widget:
          details:
            minHeight: 1
          type: TextArea
      properties:
        defaultValue:
          anyOf:
            - type: boolean
            - type: integer
            - type: number
            - type: string
          title: Defaultvalue
        description:
          description: description of the property
          example: Age in seconds since 1970
          title: Description
          type: string
        displayOrder:
          description: use this to numerically sort the properties for display
          title: Displayorder
          type: number
        fileToKeyMap:
          description: Place the data associated with the named keys in files
          title: Filetokeymap
          type: object
        keyId:
          description: Unique name identifier for this input
          pattern: ^[-_a-zA-Z0-9]+$
          title: Keyid
          type: string
        label:
          description: short name for the property
          example: Age
          title: Label
          type: string
        type:
          description:
            data type expected on this input glob matching for data type
            is allowed
          pattern: ^(number|integer|boolean|string|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$
          title: Type
          type: string
        unit:
          description: Units, when it refers to a physical quantity
          title: Unit
          type: string
        unitLong:
          description: Long name of the unit, if available
          title: Unitlong
          type: string
        unitShort:
          description: Short name for the unit, if available
          title: Unitshort
          type: string
        widget:
          allOf:
            - $ref: "#/components/schemas/Widget"
          description:
            custom widget to use instead of the default one determined
            from the data-type
          title: Widget
      required:
        - displayOrder
        - label
        - description
        - type
        - keyId
      title: ServiceInputApiOut
      type: object
    ServiceOutputApiOut:
      additionalProperties: false
      description: Metadata on a service input or output port
      example:
        defaultValue: 0
        description: Time to wait before completion
        displayOrder: 2
        keyId: input_2
        label: Sleep Time
        type: number
        unit: second
        unitLong: seconds
        unitShort: sec
        widget:
          details:
            minHeight: 1
          type: TextArea
      properties:
        defaultValue:
          anyOf:
            - type: boolean
            - type: integer
            - type: number
            - type: string
          title: Defaultvalue
        description:
          description: description of the property
          example: Age in seconds since 1970
          title: Description
          type: string
        displayOrder:
          description: use this to numerically sort the properties for display
          title: Displayorder
          type: number
        fileToKeyMap:
          description: Place the data associated with the named keys in files
          title: Filetokeymap
          type: object
        keyId:
          description: Unique name identifier for this input
          pattern: ^[-_a-zA-Z0-9]+$
          title: Keyid
          type: string
        label:
          description: short name for the property
          example: Age
          title: Label
          type: string
        type:
          description:
            data type expected on this input glob matching for data type
            is allowed
          pattern: ^(number|integer|boolean|string|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$
          title: Type
          type: string
        unit:
          description: Units, when it refers to a physical quantity
          title: Unit
          type: string
        unitLong:
          description: Long name of the unit, if available
          title: Unitlong
          type: string
        unitShort:
          description: Short name for the unit, if available
          title: Unitshort
          type: string
        widget:
          allOf:
            - $ref: "#/components/schemas/Widget"
          deprecated: true
          description:
            custom widget to use instead of the default one determined
            from the data-type
          title: Widget
      required:
        - displayOrder
        - label
        - description
        - type
        - keyId
      title: ServiceOutputApiOut
      type: object
    Structure:
      additionalProperties: false
      properties:
        key:
          anyOf:
            - type: string
            - type: boolean
            - type: number
          title: Key
        label:
          title: Label
          type: string
      required:
        - key
        - label
      title: Structure
      type: object
    TextArea:
      additionalProperties: false
      properties:
        minHeight:
          description: minimum Height of the textarea
          x-exclusiveMinimum: 0.0
          title: Minheight
          type: integer
      required:
        - minHeight
      title: TextArea
      type: object
    ValidationError:
      properties:
        loc:
          items:
            type: string
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
        - loc
        - msg
        - type
      title: ValidationError
      type: object
    Widget:
      additionalProperties: false
      properties:
        details:
          anyOf:
            - $ref: "#/components/schemas/TextArea"
            - $ref: "#/components/schemas/SelectBox"
          title: Details
        type:
          allOf:
            - $ref: "#/components/schemas/WidgetType"
          description: type of the property
      required:
        - type
        - details
      title: Widget
      type: object
    WidgetType:
      description: An enumeration.
      enum:
        - TextArea
        - SelectBox
      title: WidgetType
      type: string
