paths:
  /catalog/dags:
    get:
      tags:
        - catalog
      operationId: list_catalog_dags
      responses:
        "200":
          description: List of catalog dags
        "422":
          description: Validation Error
        default:
          $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"
    post:
      tags:
        - catalog
      summary: Creates a new dag in catalog
      operationId: create_catalog_dag
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        "201":
          description: The dag was successfully created
        "422":
          description: Validation Error
        default:
          $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"
  /catalog/dags/{dag_id}:
    parameters:
      - in: path
        name: dag_id
        required: true
        schema:
          title: Dag Id
          type: integer
    put:
      tags:
        - catalog
      summary: Replaces a dag in catalog
      operationId: replace_catalog_dag
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        "200":
          description: The dag was replaced in catalog
        "422":
          description: Validation Error
        default:
          $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"
    delete:
      tags:
        - catalog
      summary: Deletes an existing dag
      operationId: delete_catalog_dag
      responses:
        "204":
          description: Successfully deleted
        "422":
          description: Validation Error

  /catalog/services:
    get:
      tags:
        - catalog
      summary: List Services
      operationId: list_catalog_services
      responses:
        "200":
          description: Returns list of services from the catalog
        default:
          $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"
  /catalog/services/{service_key}/{service_version}:
    parameters:
      - in: path
        name: service_key
        required: true
        schema:
          title: Service key
          type: string
          pattern: ^(simcore)/(services)/(comp|dynamic)(/[^\\s/]+)+$
      - in: path
        name: service_version
        required: true
        schema:
          title: Service version
          type: string
          pattern: ^(0|[1-9]\\d*)(\\.(0|[1-9]\\d*)){2}(-(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*)(\\.(0|[1-9]\\d*|\\d*[-a-zA-Z][-\\da-zA-Z]*))*)?(\\+[-\\da-zA-Z]+(\\.[-\\da-zA-Z-]+)*)?$
    get:
      tags:
        - catalog
      summary: Get Service
      operationId: get_catalog_service
      responses:
        "200":
          description: Returns service
        default:
          $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"
    patch:
      tags:
        - catalog
      summary: Update Service
      operationId: update_catalog_service
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true
      responses:
        "200":
          description: Returns modified service
        default:
          $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"

components:
  parameters:
    ServiceType:
      in: query
      name: service_type
      description: |
        The service type:
          * computational - a computational service
          * interactive - an interactive service
      required: false
      schema:
        type: string
        enum:
          - computational
          - interactive
        example: computational
  schemas:
    ServicesEnveloped:
      $ref: "../common/schemas/services.yaml#/components/schemas/ServicesEnveloped"
