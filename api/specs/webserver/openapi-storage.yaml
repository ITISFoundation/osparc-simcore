paths:
  /storage/locations:
    get:
      summary: Get available storage locations
      tags:
        - storage
      operationId: get_storage_locations
      responses:
        "200":
          description: "List of availabe storage locations"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileLocationArray"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /storage/locations/{location_id}:sync:
    post:
      summary: Manually triggers the synchronisation of the file meta data table in the database
      tags:
        - storage
      operationId: synchronise_meta_data_table
      parameters:
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: dry_run
          in: query
          required: false
          schema:
            type: boolean
            default: true
        - name: fire_and_forget
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        "200":
          description: An object containing added, changed and removed paths
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TableSynchronisationEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /storage/locations/{location_id}/datasets:
    get:
      summary: Get datasets metadata
      tags:
        - storage
      operationId: get_datasets_metadata
      parameters:
        - name: location_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "list of dataset meta-datas"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatasetMetaDataArray"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /storage/locations/{location_id}/files/metadata:
    get:
      summary: Get list of file meta data
      tags:
        - storage
      operationId: get_files_metadata
      parameters:
        - name: location_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "list of file meta-datas"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileMetaDataArray"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /storage/locations/{location_id}/datasets/{dataset_id}/metadata:
    get:
      summary: Get Files Metadata
      tags:
        - storage
      operationId: get_files_metadata_dataset
      parameters:
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: dataset_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "list of file meta-datas"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileMetaDataArray"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /storage/locations/{location_id}/files/{file_id}:
    get:
      summary: Returns download link for requested file
      tags:
        - storage
      operationId: download_file
      parameters:
        - name: file_id
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/PresignedLink_200"
    put:
      summary: Returns upload link
      tags:
        - storage
      operationId: upload_file
      parameters:
        - name: file_id
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
        - name: file_size
          in: query
          required: false
          schema:
            type: integer
            format: int64
            minimum: 0
      responses:
        "200":
          description: Return upload object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileUploadEnveloped"
          links:
            CompleteUpload:
              operationId: complete_upload_file
              parameters:
                path.location_id: "$request.path.location_id"
                path.file_id: "$request.path.file_id"
                query.user_id: "$request.query.user_id"
            AbortUpload:
              operationId: abort_upload_file
              parameters:
                path.location_id: "$request.path.location_id"
                path.file_id: "$request.path.file_id"
                query.user_id: "$request.query.user_id"
    delete:
      summary: Deletes File
      tags:
        - storage
      operationId: delete_file
      parameters:
        - name: file_id
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: ""

  /storage/locations/{location_id}/files/{file_id}:abort:
    post:
      summary: Asks the server to abort the upload and revert to the last valid version if any
      operationId: abort_upload_file
      parameters:
        - name: file_id
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Abort OK
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /storage/locations/{location_id}/files/{file_id}:complete:
    post:
      summary: Asks the server to complete the upload
      operationId: complete_upload_file
      parameters:
        - name: file_id
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - parts
              properties:
                parts:
                  type: array
                  items:
                    type: object
                    required:
                      - number
                      - e_tag
                    properties:
                      number:
                        type: integer
                        minimum: 1
                      e_tag:
                        type: string
      responses:
        "202":
          description: Completion of upload is accepted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileUploadCompleteEnveloped"
          links:
            CompleteUploadStatus:
              operationId: is_completed_upload_file
              parameters:
                path.location_id: "$request.path.location_id"
                path.file_id: "$request.path.file_id"
                path.future_id: "$response.body.data.links.state"
                query.user_id: "$request.query.user_id"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /storage/locations/{location_id}/files/{file_id}:complete/futures/{future_id}:
    post:
      summary: Check for upload completion
      operationId: is_completed_upload_file
      parameters:
        - name: future_id
          in: path
          required: true
          schema:
            type: string
        - name: file_id
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: returns state of upload completion
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileUploadCompleteFutureEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /storage/locations/{location_id}/files/{file_id}/metadata:
    get:
      summary: Get File Metadata
      tags:
        - storage
      operationId: get_file_metadata
      parameters:
        - name: file_id
          in: path
          required: true
          schema:
            type: string
        - name: location_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          $ref: "#/components/responses/FileMetaData_200"

components:
  requestBodies:
    FileMetaDataBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/FileMetaData"

  responses:
    FileMetaData_200:
      description: "Returns file metadata"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/FileMetaData"

    PresignedLink_200:
      description: "Returns presigned link"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PresignedLink"

    DefaultErrorResponse:
      $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"

  schemas:
    FileLocationEnveloped:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/FileLocation"
        error:
          nullable: true
          default: null

    FileLocation:
      type: object
      properties:
        name:
          type: string
        id:
          type: number
      example:
        filename: "simcore.s3"
        id: 0

    FileLocationArray:
      type: array
      items:
        $ref: "#/components/schemas/FileLocation"

    TableSynchronisationEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: "#/components/schemas/TableSynchronisation"
        error:
          nullable: true
          default: null

    TableSynchronisation:
      type: object
      required:
        - removed
      properties:
        dry_run:
          type: boolean
        fire_and_forget:
          type: boolean
        removed:
          type: array
          items:
            type: string

    FileUploadEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: "#/components/schemas/FileUploadSchema"
        error:
          nullable: true
          default: null

    FileUploadSchema:
      type: object
      required:
        - chunk_size
        - urls
        - links
      properties:
        chunk_size:
          type: integer
          format: int64
          minimum: 0
        urls:
          type: array
          items:
            type: string
        links:
          type: object
          required:
            - abort_upload
            - complete_upload
          properties:
            abort_upload:
              type: string
            complete_upload:
              type: string

    FileUploadCompleteEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: "#/components/schemas/FileUploadComplete"
        error:
          nullable: true
          default: null

    FileUploadComplete:
      type: object
      required:
        - links
      properties:
        links:
          type: object
          required:
            - state
          properties:
            state:
              type: string

    FileUploadCompleteFutureEnveloped:
      type: object
      required:
        - data
        - error
      properties:
        data:
          $ref: "#/components/schemas/FileUploadCompleteFuture"
        error:
          nullable: true
          default: null

    FileUploadCompleteFuture:
      type: object
      required:
        - state
      properties:
        state:
          type: string
          enum:
            - ok
            - nok
        e_tag:
          type: string
          nullable: true

    DatasetMetaEnvelope:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/DatasetMetaData"
        error:
          nullable: true
          default: null

    DatasetMetaData:
      type: object
      properties:
        dataset_id:
          type: string
        display_name:
          type: string
      example:
        dataset_uuid: "N:id-aaaa"
        display_name: "simcore-testing"

    DatasetMetaDataArray:
      type: array
      items:
        $ref: "#/components/schemas/DatasetMetaData"

    FileMetaEnvelope:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/FileMetaData"
        error:
          nullable: true
          default: null

    # TODO: Rename with suffix *Type
    FileMetaData:
      type: object
      properties:
        file_uuid:
          type: string
        location_id:
          type: string
        project_name:
          type: string
        node_name:
          type: string
        file_name:
          type: string
        file_id:
          type: string
        created_at:
          type: string
        last_modified:
          type: string
        file_size:
          type: integer
        entity_tag:
          type: string
      example:
        file_uuid: "simcore-testing/105/1000/3"
        location_id: "0"
        project_name: "futurology"
        node_name: "alpha"
        file_name: "example.txt"
        file_id: "N:package:e263da07-2d89-45a6-8b0f-61061b913873"
        created_at: "2019-06-19T12:29:03.308611Z"
        last_modified: "2019-06-19T12:29:03.78852Z"
        file_size: 73
        entity_tag: a87ff679a2f3e71d9181a67b7542122c

    FileMetaDataArray:
      type: array
      items:
        $ref: "#/components/schemas/FileMetaData"

    PresignedLinkEnveloped:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/PresignedLink"
        error:
          nullable: true
          default: null

    PresignedLink:
      type: object
      properties:
        link:
          type: string
      example:
        link: "example_link"
