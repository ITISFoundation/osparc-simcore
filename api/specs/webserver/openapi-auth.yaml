paths:
  /auth/register:
    post:
      operationId: auth_register
      tags:
        - authentication
      requestBody:
        description: user registration
        content:
          application/json:
            schema:
              $ref: "./components/schemas/registration.yaml#/RegistrationType"
        required: true
      responses:
        "200":
          description: User has been succesfully registered.
          content:
            application/json:
              schema:
                $ref: "./components/schemas/log_message.yaml#/LogMessageEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /auth/login:
    post:
      summary: user logs in
      tags:
        - authentication
      operationId: auth_login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./components/schemas/auth.yaml#/LoginForm"
      responses:
        "200":
          description: Succesfully logged in
          content:
            application/json:
              schema:
                $ref: "./components/schemas/log_message.yaml#/LogMessageEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /auth/logout:
    post:
      tags:
        - authentication
      operationId: auth_logout
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogoutRequest"
      responses:
        "200":
          description: Succesfully logged out
          content:
            application/json:
              schema:
                $ref: "./components/schemas/log_message.yaml#/LogMessageEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /auth/reset-password:
    post:
      summary: "a non logged-in user requests a password reset"
      tags:
        - authentication
      operationId: auth_reset_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./components/schemas/auth.yaml#/ResetPasswordRequest"
      responses:
        "200":
          description: confirmation email sent to user
          content:
            application/json:
              schema:
                $ref: "./components/schemas/log_message.yaml#/LogMessageEnveloped"
        "503":
          description: failed to send confirmation email
          content:
            application/json:
              schema:
                $ref: "./components/schemas/error.yaml#/ErrorEnveloped"

  /auth/reset-password/{code}:
    post:
      tags:
        - authentication
      summary: changes password using a token code without being logged in
      operationId: auth_reset_password_allowed
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
            #format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./components/schemas/auth.yaml#/ResetPasswordForm"
      responses:
        "200":
          description: password was successfully changed
          content:
            application/json:
              schema:
                $ref: "./components/schemas/log_message.yaml#/LogMessageEnveloped"
        "401":
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                $ref: "./components/schemas/error.yaml#/ErrorEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /auth/change-email:
    post:
      summary: logged in user changes email
      tags:
        - authentication
      operationId: auth_change_email
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./components/schemas/auth.yaml#/ChangeEmailForm"
      responses:
        "200":
          description: confirmation sent to new email to complete operation
          content:
            application/json:
              schema:
                $ref: "./components/schemas/log_message.yaml#/LogMessageEnveloped"
        "401":
          description: "unauthorized user. Login required"
          content:
            application/json:
              schema:
                $ref: "./components/schemas/error.yaml#/ErrorEnveloped"
        "503":
          description: unable to send confirmation email
          content:
            application/json:
              schema:
                $ref: "./components/schemas/error.yaml#/ErrorEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /auth/change-password:
    post:
      summary: logged in user changes password
      tags:
        - authentication
      operationId: auth_change_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./components/schemas/auth.yaml#/ChangePasswordForm"
      responses:
        "200":
          description: password was successfully changed
          content:
            application/json:
              schema:
                $ref: "./components/schemas/log_message.yaml#/LogMessageEnveloped"
        "401":
          description: "unauthorized user. Login required"
          content:
            application/json:
              schema:
                $ref: "./components/schemas/error.yaml#/ErrorEnveloped"
        "409":
          description: "mismatch between new and confirmation passwords"
          content:
            application/json:
              schema:
                $ref: "./components/schemas/error.yaml#/ErrorEnveloped"
        "422":
          description: current password is invalid
          content:
            application/json:
              schema:
                $ref: "./components/schemas/error.yaml#/ErrorEnveloped"
        default:
          $ref: "#/components/responses/DefaultErrorResponse"

  /auth/confirmation/{code}:
    get:
      summary: email link sent to user to confirm an action
      tags:
        - authentication
      operationId: auth_confirmation
      parameters:
        - name: code
          in: path
          required: true
          schema:
            type: string
            #format: uuid
      responses:
        "3XX":
          description: redirection to specific ui application page

  /auth/api-keys:
    get:
      summary: lists display names of API keys by this user
      tags:
        - authentication
      operationId: list_api_keys
      responses:
        "200":
          description: returns the display names of API keys
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        "401":
          description: requires login to  list keys
        "403":
          description: not enough permissions to list keys

    post:
      summary: creates API keys to access public API
      tags:
        - authentication
      operationId: create_api_key
      requestBody:
        description: user registration
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiKeyName"
      responses:
        "200":
          description: Authorization granted returning API key
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiKeyGranted"
        "400":
          description: key name requested is invalid
        "401":
          description: requires login to  create a key
        "403":
          description: not enough permissions to create a key

    delete:
      summary: deletes API key by name
      tags:
        - authentication
      operationId: delete_api_key
      requestBody:
        description: deletes given api key by name
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApiKeyName"
      responses:
        "204":
          description: api key successfully deleted
        "401":
          description: requires login to  delete a key
        "403":
          description: not enough permissions to delete a key

components:
  responses:
    DefaultErrorResponse:
      $ref: "./openapi.yaml#/components/responses/DefaultErrorResponse"
  schemas:
    LogoutRequest:
      type: object
      properties:
        client_session_id:
          type: string
          example: 5ac57685-c40f-448f-8711-70be1936fd63
    ApiKeyName:
      type: object
      properties:
        display_name:
          type: string
    ApiKeyGranted:
      type: object
      properties:
        display_name:
          type: string
        api_key:
          type: string
        api_secret:
          type: string
