paths:
  /auth/register:
    post:
      tags:
      - authentication
      summary: Register
      description: User registration
      operationId: auth_register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
  /auth/verify-phone-number:
    post:
      tags:
      - authentication
      summary: Register Phone
      description: user tries to verify phone number for 2 Factor Authentication when
        registering
      operationId: auth_verify_2fa_phone
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterPhoneBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
  /auth/validate-code-register:
    post:
      tags:
      - authentication
      summary: Phone Confirmation
      description: user enters 2 Factor Authentication code when registering
      operationId: auth_validate_2fa_register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhoneConfirmationBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
  /auth/login:
    post:
      tags:
      - authentication
      summary: Login
      description: user logs in
      operationId: auth_login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginBody'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_LoginNextPage_'
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /auth/validate-code-login:
    post:
      tags:
      - authentication
      summary: Login 2Fa
      description: user enters 2 Factor Authentication code when login in
      operationId: auth_login_2fa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginTwoFactorAuthBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /auth/two_factor:resend:
    post:
      tags:
      - authentication
      summary: Resend 2Fa Code
      description: Resends 2FA either via email or sms
      operationId: resend_2fa_code
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Resend2faBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /auth/logout:
    post:
      tags:
      - authentication
      summary: Logout
      description: user logout
      operationId: auth_logout
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogoutBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
  /auth/reset-password:
    post:
      tags:
      - authentication
      summary: Reset Password
      description: a non logged-in user requests a password reset
      operationId: auth_reset_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '503':
          description: Service Unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /auth/reset-password/{code}:
    post:
      tags:
      - authentication
      summary: Reset Password Allowed
      description: changes password using a token code without being logged in
      operationId: auth_reset_password_allowed
      parameters:
      - required: true
        schema:
          title: Code
          type: string
        name: code
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordConfirmation'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '401':
          description: unauthorized reset due to invalid token code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /auth/change-email:
    post:
      tags:
      - authentication
      summary: Change Email
      description: logged in user changes email
      operationId: auth_change_email
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeEmailBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '401':
          description: unauthorized user. Login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
        '503':
          description: unable to send confirmation email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /auth/change-password:
    post:
      tags:
      - authentication
      summary: Change Password
      description: logged in user changes password
      operationId: auth_change_password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePasswordBody'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        '401':
          description: unauthorized user. Login required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
        '409':
          description: mismatch between new and confirmation passwords
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Error_'
  /auth/confirmation/{code}:
    get:
      tags:
      - authentication
      summary: Email Confirmation
      description: email link sent to user to confirm an action
      operationId: auth_confirmation
      parameters:
      - required: true
        schema:
          title: Code
          type: string
        name: code
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_Log_'
        3XX:
          description: redirection to specific ui application page
  /auth/api-keys:
    get:
      tags:
      - authentication
      summary: List Api Keys
      description: lists display names of API keys by this user
      operationId: list_api_keys
      parameters:
      - required: true
        schema:
          title: Code
          type: string
        name: code
        in: query
      responses:
        '200':
          description: returns the display names of API keys
          content:
            application/json:
              schema:
                title: Response 200 List Api Keys
                type: array
                items:
                  type: string
        '400':
          description: key name requested is invalid
        '401':
          description: requires login to  list keys
        '403':
          description: not enough permissions to list keys
    post:
      tags:
      - authentication
      summary: Create Api Key
      description: creates API keys to access public API
      operationId: create_api_key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyCreate'
        required: true
      responses:
        '200':
          description: Authorization granted returning API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyGet'
        '400':
          description: key name requested is invalid
        '401':
          description: requires login to  list keys
        '403':
          description: not enough permissions to list keys
    delete:
      tags:
      - authentication
      summary: Delete Api Key
      description: deletes API key by name
      operationId: delete_api_key
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyCreate'
        required: true
      responses:
        '204':
          description: api key successfully deleted
        '401':
          description: requires login to  delete a key
        '403':
          description: not enough permissions to delete a key
components:
  schemas:
    ApiKeyCreate:
      title: ApiKeyCreate
      required:
      - display_name
      type: object
      properties:
        display_name:
          title: Display Name
          minLength: 3
          type: string
        expiration:
          title: Expiration
          type: number
          description: Time delta from creation time to expiration. If None, then
            it does not expire.
          format: time-delta
    ApiKeyGet:
      title: ApiKeyGet
      required:
      - display_name
      - api_key
      - api_secret
      type: object
      properties:
        display_name:
          title: Display Name
          minLength: 3
          type: string
        api_key:
          title: Api Key
          type: string
        api_secret:
          title: Api Secret
          type: string
    ChangeEmailBody:
      title: ChangeEmailBody
      required:
      - email
      type: object
      properties:
        email:
          title: Email
          type: string
          format: email
      additionalProperties: false
    ChangePasswordBody:
      title: ChangePasswordBody
      required:
      - current
      - new
      - confirm
      type: object
      properties:
        current:
          title: Current
          type: string
          format: password
          writeOnly: true
        new:
          title: New
          type: string
          format: password
          writeOnly: true
        confirm:
          title: Confirm
          type: string
          format: password
          writeOnly: true
      additionalProperties: false
    CodePageParams:
      title: CodePageParams
      required:
      - message
      type: object
      properties:
        message:
          title: Message
          type: string
        retry_2fa_after:
          title: Retry 2Fa After
          exclusiveMinimum: true
          type: integer
          minimum: 0
        next_url:
          title: Next Url
          type: string
    Envelope_Error_:
      title: Envelope[Error]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Error'
        error:
          title: Error
    Envelope_Log_:
      title: Envelope[Log]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Log'
        error:
          title: Error
    Envelope_LoginNextPage_:
      title: Envelope[LoginNextPage]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/LoginNextPage'
        error:
          title: Error
    Error:
      title: Error
      type: object
      properties:
        logs:
          title: Logs
          type: array
          items:
            $ref: '#/components/schemas/Log'
          description: log messages
        errors:
          title: Errors
          type: array
          items:
            $ref: '#/components/schemas/ErrorItem'
          description: errors metadata
        status:
          title: Status
          type: integer
          description: HTTP error code
    ErrorItem:
      title: ErrorItem
      required:
      - code
      - message
      type: object
      properties:
        code:
          title: Code
          type: string
          description: Typically the name of the exception that produced it otherwise
            some known error code
        message:
          title: Message
          type: string
          description: Error message specific to this item
        resource:
          title: Resource
          type: string
          description: API resource affected by this error
        field:
          title: Field
          type: string
          description: Specific field within the resource
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    Log:
      title: Log
      required:
      - message
      type: object
      properties:
        level:
          allOf:
          - $ref: '#/components/schemas/LogLevel'
          description: log level
          default: INFO
        message:
          title: Message
          type: string
          description: log message. If logger is USER, then it MUST be human readable
        logger:
          title: Logger
          type: string
          description: name of the logger receiving this message
      example:
        message: Hi there, Mr user
        level: INFO
        logger: user-logger
    LogLevel:
      title: LogLevel
      enum:
      - DEBUG
      - INFO
      - WARNING
      - ERROR
      type: string
      description: An enumeration.
    LoginBody:
      title: LoginBody
      required:
      - email
      - password
      type: object
      properties:
        email:
          title: Email
          type: string
          format: email
        password:
          title: Password
          type: string
          format: password
          writeOnly: true
      additionalProperties: false
    LoginNextPage:
      title: LoginNextPage
      required:
      - name
      - code
      - reason
      type: object
      properties:
        name:
          title: Name
          type: string
          description: Code name to the front-end page
        parameters:
          $ref: '#/components/schemas/CodePageParams'
        code:
          title: Code
          type: string
          deprecated: true
        reason:
          title: Reason
          type: string
          deprecated: true
      description: 'This is the body of a 2XX response to pass the front-end

        what kind of page shall be display next and some information about it


        An analogous structure is used in the redirects (see create_redirect_response)
        but

        using a path+query in the fragment of the URL'
    LoginTwoFactorAuthBody:
      title: LoginTwoFactorAuthBody
      required:
      - email
      - code
      type: object
      properties:
        email:
          title: Email
          type: string
          format: email
        code:
          title: Code
          type: string
          format: password
          writeOnly: true
      additionalProperties: false
    LogoutBody:
      title: LogoutBody
      type: object
      properties:
        client_session_id:
          title: Client Session Id
          type: string
          example: 5ac57685-c40f-448f-8711-70be1936fd63
      additionalProperties: false
    PhoneConfirmationBody:
      title: PhoneConfirmationBody
      required:
      - email
      - phone
      - code
      type: object
      properties:
        email:
          title: Email
          type: string
          format: email
        phone:
          title: Phone
          type: string
          description: Phone number E.164, needed on the deployments with 2FA
        code:
          title: Code
          type: string
          format: password
          writeOnly: true
      additionalProperties: false
    RegisterBody:
      title: RegisterBody
      required:
      - email
      - password
      type: object
      properties:
        email:
          title: Email
          type: string
          format: email
        password:
          title: Password
          type: string
          format: password
          writeOnly: true
        confirm:
          title: Confirm
          type: string
          description: Password confirmation
          format: password
          writeOnly: true
        invitation:
          title: Invitation
          type: string
          description: Invitation code
      additionalProperties: false
    RegisterPhoneBody:
      title: RegisterPhoneBody
      required:
      - email
      - phone
      type: object
      properties:
        email:
          title: Email
          type: string
          format: email
        phone:
          title: Phone
          type: string
          description: Phone number E.164, needed on the deployments with 2FA
      additionalProperties: false
    Resend2faBody:
      title: Resend2faBody
      required:
      - email
      type: object
      properties:
        email:
          title: Email
          type: string
          description: User email (identifier)
          format: email
        via:
          title: Via
          enum:
          - SMS
          - Email
          type: string
          default: SMS
      additionalProperties: false
    ResetPasswordBody:
      title: ResetPasswordBody
      required:
      - email
      type: object
      properties:
        email:
          title: Email
          type: string
      additionalProperties: false
    ResetPasswordConfirmation:
      title: ResetPasswordConfirmation
      required:
      - password
      - confirm
      type: object
      properties:
        password:
          title: Password
          type: string
          format: password
          writeOnly: true
        confirm:
          title: Confirm
          type: string
          format: password
          writeOnly: true
      additionalProperties: false
    ValidationError:
      title: ValidationError
      required:
      - loc
      - msg
      - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
            - type: string
            - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
