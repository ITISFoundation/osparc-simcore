paths:
  /projects/{project_id}/nodes/-/services:access:
    get:
      tags:
      - project
      summary: Check whether provided group has access to the project services
      operationId: get_project_services_access_for_gid
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      - required: true
        schema:
          title: For Gid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        name: for_gid
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope__ProjectGroupAccess_'
  /projects/{project_id}/nodes/-/preview:
    get:
      tags:
      - project
      summary: Lists all previews in the node's project
      operationId: list_project_nodes_previews
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope_list_simcore_service_webserver.projects._handlers_project_nodes._ProjectNodePreview__'
  /projects/{project_id}/nodes/{node_id}/preview:
    get:
      tags:
      - project
      summary: Gets a give node's preview
      operationId: get_project_node_preview
      parameters:
      - required: true
        schema:
          title: Project Id
          type: string
          format: uuid
        name: project_id
        in: path
      - required: true
        schema:
          title: Node Id
          type: string
          format: uuid
        name: node_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envelope__ProjectNodePreview_'
        '404':
          description: Node has no preview
components:
  schemas:
    Envelope__ProjectGroupAccess_:
      title: Envelope[_ProjectGroupAccess]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/_ProjectGroupAccess'
        error:
          title: Error
    Envelope__ProjectNodePreview_:
      title: Envelope[_ProjectNodePreview]
      type: object
      properties:
        data:
          $ref: '#/components/schemas/_ProjectNodePreview'
        error:
          title: Error
    Envelope_list_simcore_service_webserver.projects._handlers_project_nodes._ProjectNodePreview__:
      title: Envelope[list[simcore_service_webserver.projects._handlers_project_nodes._ProjectNodePreview]]
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/_ProjectNodePreview'
        error:
          title: Error
    ServiceKeyVersion:
      title: ServiceKeyVersion
      required:
      - key
      - version
      type: object
      properties:
        key:
          title: Key
          pattern: ^simcore/services/((comp|dynamic|frontend))/([a-z0-9][a-z0-9_.-]*/)*([a-z0-9-_]+[a-z0-9])$
          type: string
          description: distinctive name for the node based on the docker registry
            path
        version:
          title: Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
          description: service version number
      description: This pair uniquely identifies a services
    _NodeScreenshot:
      title: _NodeScreenshot
      required:
      - thumbnail_url
      - file_url
      type: object
      properties:
        thumbnail_url:
          title: Thumbnail Url
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
        file_url:
          title: File Url
          maxLength: 2083
          minLength: 1
          type: string
          format: uri
        mimetype:
          title: Mimetype
          type: string
          description: File's media type. SEE https://www.iana.org/assignments/media-types/media-types.xhtml
          example: image/jpeg
    _ProjectGroupAccess:
      title: _ProjectGroupAccess
      required:
      - gid
      - accessible
      type: object
      properties:
        gid:
          title: Gid
          exclusiveMinimum: true
          type: integer
          minimum: 0
        accessible:
          title: Accessible
          type: boolean
        inaccessible_services:
          title: Inaccessible Services
          type: array
          items:
            $ref: '#/components/schemas/ServiceKeyVersion'
    _ProjectNodePreview:
      title: _ProjectNodePreview
      required:
      - project_id
      - node_id
      type: object
      properties:
        project_id:
          title: Project Id
          type: string
          format: uuid
        node_id:
          title: Node Id
          type: string
          format: uuid
        screenshots:
          title: Screenshots
          type: array
          items:
            $ref: '#/components/schemas/_NodeScreenshot'
