openapi: 3.0.2
info:
  title: api-server
  version: 0.3.0
servers:
- url: http://{host}:{port}
  description: up-devel
  variables:
    host:
      default: 127.0.0.1
    port:
      default: '3006'
paths:
  /v0/meta:
    get:
      tags:
      - meta
      summary: Get Service Metadata
      operationId: get_service_metadata_v0_meta_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meta'
  /v0/me:
    get:
      tags:
      - users
      summary: Get My Profile
      operationId: get_my_profile_v0_me_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
    put:
      tags:
      - users
      summary: Update My Profile
      operationId: update_my_profile_v0_me_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v0/files/files:
    get:
      tags:
      - files
      summary: List Files
      operationId: list_files_v0_files_files_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List Files V0 Files Files Get
                type: array
                items:
                  $ref: '#/components/schemas/File'
  /v0/files/content:
    put:
      tags:
      - files
      summary: Upload File
      operationId: upload_file_v0_files_content_put
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
  /v0/files/{file_id}:
    get:
      tags:
      - files
      summary: Get File
      operationId: get_file_v0_files__file_id__get
      parameters:
      - required: true
        schema:
          title: File Id
          type: string
          format: uuid
        name: file_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
        '404':
          description: File not found
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v0/files/{file_id}/content:
    get:
      tags:
      - files
      summary: Download File
      operationId: download_file_v0_files__file_id__content_get
      parameters:
      - required: true
        schema:
          title: File Id
          type: string
          format: uuid
        name: file_id
        in: path
      responses:
        '307':
          description: Successful Response
        '404':
          description: File not found
        '200':
          description: Returns a arbitrary binary data
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
            text/plain:
              schema:
                type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v0/solvers/{solver_key}/releases/{version}/jobs:
    get:
      tags:
      - solvers
      summary: List Jobs
      operationId: list_jobs_v0_solvers__solver_key__releases__version__jobs_get
      parameters:
      - required: true
        schema:
          title: Solver Key
          pattern: ^(simcore)/(services)/comp(/[\w/-]+)+$
          type: string
        name: solver_key
        in: path
      - required: true
        schema:
          title: Version
          type: string
        name: version
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response List Jobs V0 Solvers  Solver Key  Releases  Version  Jobs
                  Get
                type: array
                items:
                  $ref: '#/components/schemas/Job'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
      - solvers
      summary: Create Job
      operationId: create_job_v0_solvers__solver_key__releases__version__jobs_post
      parameters:
      - required: true
        schema:
          title: Solver Key
          pattern: ^(simcore)/(services)/comp(/[\w/-]+)+$
          type: string
        name: solver_key
        in: path
      - required: true
        schema:
          title: Version
          type: string
        name: version
        in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobInputs'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v0/solvers/{solver_key}/releases/{version}/jobs/{job_id}:
    get:
      tags:
      - solvers
      summary: Get Job
      description: Gets job of a given solver
      operationId: get_job_v0_solvers__solver_key__releases__version__jobs__job_id__get
      parameters:
      - required: true
        schema:
          title: Solver Key
          pattern: ^(simcore)/(services)/comp(/[\w/-]+)+$
          type: string
        name: solver_key
        in: path
      - required: true
        schema:
          title: Version
          type: string
        name: version
        in: path
      - required: true
        schema:
          title: Job Id
          type: string
          format: uuid
        name: job_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v0/solvers/{solver_key}/releases/{version}/jobs/{job_id}:start:
    post:
      tags:
      - solvers
      summary: Start Job
      operationId: start_job_v0_solvers__solver_key__releases__version__jobs__job_id__start_post
      parameters:
      - required: true
        schema:
          title: Solver Key
          pattern: ^(simcore)/(services)/comp(/[\w/-]+)+$
          type: string
        name: solver_key
        in: path
      - required: true
        schema:
          title: Version
          type: string
        name: version
        in: path
      - required: true
        schema:
          title: Job Id
          type: string
          format: uuid
        name: job_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v0/solvers/{solver_key}/releases/{version}/jobs/{job_id}:stop:
    post:
      tags:
      - solvers
      summary: Stop Job
      operationId: stop_job_v0_solvers__solver_key__releases__version__jobs__job_id__stop_post
      parameters:
      - required: true
        schema:
          title: Solver Key
          pattern: ^(simcore)/(services)/comp(/[\w/-]+)+$
          type: string
        name: solver_key
        in: path
      - required: true
        schema:
          title: Version
          type: string
        name: version
        in: path
      - required: true
        schema:
          title: Job Id
          type: string
          format: uuid
        name: job_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v0/solvers/{solver_key}/releases/{version}/jobs/{job_id}:inspect:
    post:
      tags:
      - solvers
      summary: Inspect Job
      operationId: inspect_job_v0_solvers__solver_key__releases__version__jobs__job_id__inspect_post
      parameters:
      - required: true
        schema:
          title: Solver Key
          pattern: ^(simcore)/(services)/comp(/[\w/-]+)+$
          type: string
        name: solver_key
        in: path
      - required: true
        schema:
          title: Version
          type: string
        name: version
        in: path
      - required: true
        schema:
          title: Job Id
          type: string
          format: uuid
        name: job_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatus'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v0/solvers/{solver_key}/releases/{version}/jobs/{job_id}/outputs:
    get:
      tags:
      - solvers
      summary: Get Job Outputs
      operationId: get_job_outputs_v0_solvers__solver_key__releases__version__jobs__job_id__outputs_get
      parameters:
      - required: true
        schema:
          title: Solver Key
          pattern: ^(simcore)/(services)/comp(/[\w/-]+)+$
          type: string
        name: solver_key
        in: path
      - required: true
        schema:
          title: Version
          type: string
        name: version
        in: path
      - required: true
        schema:
          title: Job Id
          type: string
          format: uuid
        name: job_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobOutputs'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    File:
      title: File
      required:
      - id
      - filename
      type: object
      properties:
        id:
          title: Id
          type: string
          description: Resource identifier
          format: uuid
        filename:
          title: Filename
          type: string
          description: Name of the file with extension
        content_type:
          title: Content Type
          type: string
          description: Guess of type content [EXPERIMENTAL]
        checksum:
          title: Checksum
          type: string
          description: MD5 hash of the file's content [EXPERIMENTAL]
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    Job:
      title: Job
      type: object
      properties: {}
    JobInputs:
      title: JobInputs
      type: object
      properties: {}
    JobOutputs:
      title: JobOutputs
      type: object
      properties: {}
    JobStatus:
      title: JobStatus
      type: object
      properties: {}
    Meta:
      title: Meta
      required:
      - name
      - version
      type: object
      properties:
        name:
          title: Name
          type: string
        version:
          title: Version
          type: string
        released:
          title: Released
          type: object
          additionalProperties:
            type: string
          description: Maps every route's path tag with a released version
        docs_url:
          title: Docs Url
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
          default: https://docs.osparc.io
        docs_dev_url:
          title: Docs Dev Url
          maxLength: 65536
          minLength: 1
          type: string
          format: uri
          default: https://api.osparc.io/dev/docs
      example:
        name: simcore_service_foo
        version: 2.4.45
        released:
          v1: 1.3.4
          v2: 2.4.45
        doc_url: https://api.osparc.io/doc
        doc_dev_url: https://api.osparc.io/dev/doc
    Profile:
      title: Profile
      type: object
      properties: {}
    ProfileUpdate:
      title: ProfileUpdate
      type: object
      properties: {}
    ValidationError:
      title: ValidationError
      required:
      - loc
      - msg
      - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            type: string
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
