paths:
  ? ''
  : get:
      summary: Get Project Inputs
      description: New in version *0.10*
      operationId: get_project_inputs_get
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDockerData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    Author:
      title: Author
      required:
      - name
      - email
      type: object
      properties:
        name:
          title: Name
          type: string
          description: Name of the author
          example: Jim Knopf
        email:
          title: Email
          type: string
          description: Email address
          format: email
        affiliation:
          title: Affiliation
          type: string
          description: Affiliation of the author
      additionalProperties: false
    Badge:
      title: Badge
      required:
      - name
      - image
      - url
      type: object
      properties:
        name:
          title: Name
          type: string
          description: Name of the subject
        image:
          title: Image
          maxLength: 2083
          minLength: 1
          type: string
          description: Url to the badge
          format: uri
        url:
          title: Url
          maxLength: 2083
          minLength: 1
          type: string
          description: Link to the status
          format: uri
      additionalProperties: false
    BootChoice:
      title: BootChoice
      required:
      - label
      - description
      type: object
      properties:
        label:
          title: Label
          type: string
        description:
          title: Description
          type: string
    BootOption:
      title: BootOption
      required:
      - label
      - description
      - default
      - items
      type: object
      properties:
        label:
          title: Label
          type: string
        description:
          title: Description
          type: string
        default:
          title: Default
          type: string
        items:
          title: Items
          type: object
          additionalProperties:
            $ref: '#/components/schemas/BootChoice'
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    SelectBox:
      title: SelectBox
      required:
      - structure
      type: object
      properties:
        structure:
          title: Structure
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Structure'
      additionalProperties: false
    ServiceDockerData:
      title: ServiceDockerData
      required:
      - name
      - description
      - key
      - version
      - type
      - authors
      - contact
      - inputs
      - outputs
      type: object
      properties:
        name:
          title: Name
          type: string
          description: short, human readable name for the node
          example: Fast Counter
        thumbnail:
          title: Thumbnail
          maxLength: 2083
          minLength: 1
          type: string
          description: url to the thumbnail
          format: uri
        description:
          title: Description
          type: string
          description: human readable description of the purpose of the node
        key:
          title: Key
          pattern: ^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$
          type: string
          description: distinctive name for the node based on the docker registry
            path
        version:
          title: Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
          description: service version number
        integration-version:
          title: Integration-Version
          pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          type: string
          description: integration version number
        type:
          allOf:
          - $ref: '#/components/schemas/ServiceType'
          description: service type
        badges:
          title: Badges
          type: array
          items:
            $ref: '#/components/schemas/Badge'
        authors:
          title: Authors
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/Author'
        contact:
          title: Contact
          type: string
          description: email to correspond to the authors about the node
          format: email
        inputs:
          title: Inputs
          type: object
          description: definition of the inputs of this node
        outputs:
          title: Outputs
          type: object
          description: definition of the outputs of this node
        boot-options:
          title: Boot-Options
          type: object
          description: Service defined boot options. These get injected in the service
            as env variables.
      additionalProperties: false
      description: 'Static metadata for a service injected in the image labels


        This is one to one with node-meta-v0.0.1.json'
    ServiceInput:
      title: ServiceInput
      required:
      - label
      - description
      - type
      type: object
      properties:
        displayOrder:
          title: Displayorder
          type: number
          description: 'DEPRECATED: new display order is taken from the item position.
            This will be removed.'
          deprecated: true
        label:
          title: Label
          type: string
          description: short name for the property
          example: Age
        description:
          title: Description
          type: string
          description: description of the property
          example: Age in seconds since 1970
        type:
          title: Type
          pattern: ^(number|integer|boolean|string|ref_contentSchema|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$
          type: string
          description: data type expected on this input glob matching for data type
            is allowed
        contentSchema:
          title: Contentschema
          type: object
          description: jsonschema of this input/output. Required when type='ref_contentSchema'
        fileToKeyMap:
          title: Filetokeymap
          type: object
          description: Place the data associated with the named keys in files
        unit:
          title: Unit
          type: string
          description: Units, when it refers to a physical quantity
        defaultValue:
          title: Defaultvalue
          anyOf:
          - type: boolean
          - type: integer
          - type: number
          - type: string
        widget:
          title: Widget
          allOf:
          - $ref: '#/components/schemas/Widget'
          description: custom widget to use instead of the default one determined
            from the data-type
      additionalProperties: false
      description: Metadata on a service input port
    ServiceOutput:
      title: ServiceOutput
      required:
      - label
      - description
      - type
      type: object
      properties:
        displayOrder:
          title: Displayorder
          type: number
          description: 'DEPRECATED: new display order is taken from the item position.
            This will be removed.'
          deprecated: true
        label:
          title: Label
          type: string
          description: short name for the property
          example: Age
        description:
          title: Description
          type: string
          description: description of the property
          example: Age in seconds since 1970
        type:
          title: Type
          pattern: ^(number|integer|boolean|string|ref_contentSchema|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$
          type: string
          description: data type expected on this input glob matching for data type
            is allowed
        contentSchema:
          title: Contentschema
          type: object
          description: jsonschema of this input/output. Required when type='ref_contentSchema'
        fileToKeyMap:
          title: Filetokeymap
          type: object
          description: Place the data associated with the named keys in files
        unit:
          title: Unit
          type: string
          description: Units, when it refers to a physical quantity
        widget:
          title: Widget
          allOf:
          - $ref: '#/components/schemas/Widget'
          description: custom widget to use instead of the default one determined
            from the data-type
          deprecated: true
      additionalProperties: false
      description: Base class for service input/outputs
    ServiceType:
      title: ServiceType
      enum:
      - computational
      - dynamic
      - frontend
      - backend
      type: string
      description: An enumeration.
    Structure:
      title: Structure
      required:
      - key
      - label
      type: object
      properties:
        key:
          title: Key
          anyOf:
          - type: string
          - type: boolean
          - type: number
        label:
          title: Label
          type: string
      additionalProperties: false
    TextArea:
      title: TextArea
      required:
      - minHeight
      type: object
      properties:
        minHeight:
          title: Minheight
          type: integer
          description: minimum Height of the textarea
      additionalProperties: false
    ValidationError:
      title: ValidationError
      required:
      - loc
      - msg
      - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            anyOf:
            - type: string
            - type: integer
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
    Widget:
      title: Widget
      required:
      - type
      - details
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/WidgetType'
          description: type of the property
        details:
          title: Details
          anyOf:
          - $ref: '#/components/schemas/TextArea'
          - $ref: '#/components/schemas/SelectBox'
      additionalProperties: false
    WidgetType:
      title: WidgetType
      enum:
      - TextArea
      - SelectBox
      type: string
      description: An enumeration.
