additionalProperties: false
properties:
  accessRights:
    additionalProperties: true
    description: object containing the GroupID as key and read/write/execution permissions
      as value
    title: Accessrights
    type: object
    x-patternProperties:
      ^\S+$:
        additionalProperties: false
        properties:
          delete:
            description: gives deletion rights
            title: Delete
            type: boolean
          read:
            description: gives read access
            title: Read
            type: boolean
          write:
            description: gives write access
            title: Write
            type: boolean
        required:
        - read
        - write
        - delete
        title: AccessRights
        type: object
  classifiers:
    description: Contains the reference to the project classifiers
    example: some:id:to:a:classifier
    items:
      type: string
    title: Classifiers
    type: array
  creationDate:
    description: project creation date
    example: '2018-07-01T11:13:43Z'
    pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
    title: Creationdate
    type: string
  description:
    description: longer one-line description about the project
    example: Dabbling in temporal transitions ...
    title: Description
    type: string
  dev:
    description: object used for development purposes only
    title: Dev
    type: object
  lastChangeDate:
    description: last save date
    example: '2018-07-01T11:13:43Z'
    pattern: \d{4}-(12|11|10|0?[1-9])-(31|30|[0-2]?\d)T(2[0-3]|1\d|0?[0-9])(:(\d|[0-5]\d)){2}(\.\d{3})?Z
    title: Lastchangedate
    type: string
  name:
    description: project name
    example: Temporal Distortion Simulator
    title: Name
    type: string
  prjOwner:
    description: user email
    format: email
    title: Prjowner
    type: string
  quality:
    default: {}
    description: stores the study quality assessment
    title: Quality
    type: object
  state:
    anyOf:
    - nullable: true
    - additionalProperties: false
      properties:
        locked:
          allOf:
          - additionalProperties: false
            example:
              status: CLOSED
              value: false
            properties:
              owner:
                allOf:
                - additionalProperties: false
                  properties:
                    first_name:
                      description: Owner first name
                      example: John
                      title: First Name
                      type: string
                    last_name:
                      description: Owner last name
                      example: Smith
                      title: Last Name
                      type: string
                    user_id:
                      description: Owner's identifier when registered in the user's
                        database table
                      example: 2
                      title: User Id
                      type: integer
                  required:
                  - user_id
                  - first_name
                  - last_name
                  title: Owner
                  type: object
                description: If locked, the user that owns the lock
                title: Owner
              status:
                allOf:
                - description: An enumeration.
                  enum:
                  - CLOSED
                  - CLOSING
                  - CLONING
                  - EXPORTING
                  - OPENING
                  - OPENED
                  title: ProjectStatus
                  type: string
                description: The status of the project
              value:
                description: True if the project is locked
                title: Value
                type: boolean
            required:
            - value
            - status
            title: ProjectLocked
            type: object
          description: The project lock state
          title: Locked
        state:
          allOf:
          - additionalProperties: false
            properties:
              value:
                allOf:
                - description: 'State of execution of a project''s computational workflow


                    SEE StateType for task state'
                  enum:
                  - UNKNOWN
                  - PUBLISHED
                  - NOT_STARTED
                  - PENDING
                  - STARTED
                  - RETRY
                  - SUCCESS
                  - FAILED
                  - ABORTED
                  title: RunningState
                  type: string
                description: The running state of the project
                example: STARTED
            required:
            - value
            title: ProjectRunningState
            type: object
          description: The project running state
          title: State
      required:
      - locked
      - state
      title: ProjectState
      type: object
  tags:
    default: []
    items:
      type: integer
    title: Tags
    type: array
  thumbnail:
    description: url of the project thumbnail
    example: https://placeimg.com/171/96/tech/grayscale/?0.jpg
    format: uri
    maxLength: 2083
    minLength: 0
    title: Thumbnail
    type: string
  ui:
    properties:
      annotations:
        additionalProperties: true
        title: Annotations
        type: object
        x-patternProperties:
          ^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$:
            additionalProperties: false
            example:
            - attributes:
                height: 26
                width: 117
                x: 415
                y: 100
              color: '#FF0000'
              type: rect
            - attributes:
                text: Hey!
                x: 415
                y: 100
              color: '#0000FF'
              type: text
            properties:
              attributes:
                description: svg attributes
                title: Attributes
                type: object
              color:
                format: color
                title: Color
                type: string
              type:
                enum:
                - rect
                - text
                title: Type
                type: string
            required:
            - type
            - color
            - attributes
            title: Annotation
            type: object
      currentNodeId:
        format: uuid
        title: Currentnodeid
        type: string
      slideshow:
        additionalProperties: true
        title: Slideshow
        type: object
        x-patternProperties:
          ^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$:
            properties:
              instructions:
                title: Instructions
                type: string
              position:
                title: Position
                type: integer
            required:
            - position
            title: Slideshow
            type: object
      workbench:
        additionalProperties: true
        title: Workbench
        type: object
        x-patternProperties:
          ^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$:
            additionalProperties: false
            properties:
              marker:
                additionalProperties: false
                properties:
                  color:
                    format: color
                    title: Color
                    type: string
                required:
                - color
                title: Marker
                type: object
              position:
                allOf:
                - additionalProperties: false
                  properties:
                    x:
                      description: The x position
                      example:
                      - '12'
                      title: X
                      type: integer
                    y:
                      description: The y position
                      example:
                      - '15'
                      title: Y
                      type: integer
                  required:
                  - x
                  - y
                  title: Position
                  type: object
                description: The node position in the workbench
                title: Position
            required:
            - position
            title: WorkbenchUI
            type: object
    title: StudyUI
    type: object
  uuid:
    description: project unique identifier
    example: 07640335-a91f-468c-ab69-a374fa82078d
    format: uuid
    title: Uuid
    type: string
  workbench:
    additionalProperties: true
    description: Project's pipeline
    title: Workbench
    type: object
    x-patternProperties:
      ^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$:
        additionalProperties: false
        properties:
          bootOptions:
            description: Some services provide alternative parameters to be injected
              at boot time. The user selection should be stored here, and it will
              overwrite the services's defaults.
            patternProperties:
              '[a-zA-Z][a-azA-Z0-9_]*':
                type: string
            title: Bootoptions
            type: object
          inputAccess:
            description: map with key - access level pairs
            patternProperties:
              ^[-_a-zA-Z0-9]+$:
                description: An enumeration.
                enum:
                - ReadAndWrite
                - Invisible
                - ReadOnly
                title: AccessEnum
                type: string
            type: object
          inputNodes:
            description: node IDs of where the node is connected to
            items:
              format: uuid
              type: string
            title: Inputnodes
            type: array
          inputs:
            description: values of input properties
            patternProperties:
              ^[-_a-zA-Z0-9]+$:
                anyOf:
                - type: boolean
                - type: integer
                - type: number
                - format: json-string
                  type: string
                - type: string
                - additionalProperties: false
                  description: I/O port type to reference to an output port of another
                    node in the same project
                  example:
                  - nodeUuid: da5068e0-8a8d-4fb9-9516-56e5ddaef15b
                    output: out_2
                  properties:
                    nodeUuid:
                      description: The node to get the port output from
                      format: uuid
                      title: Nodeuuid
                      type: string
                    output:
                      description: The port key in the node given by nodeUuid
                      pattern: ^[-_a-zA-Z0-9]+$
                      title: Output
                      type: string
                  required:
                  - nodeUuid
                  - output
                  title: PortLink
                  type: object
                - additionalProperties: false
                  description: I/O port type to hold a link to a file in simcore S3
                    storage
                  example:
                  - eTag: 859fda0cb82fc4acb4686510a172d9a9-1
                    label: input.txt
                    path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                    store: 0
                  - eTag: f7e4c7076761a42a871e978c8691c676
                    path: 50339632-ee1d-11ec-a0c2-02420a0194e4/23b1522f-225f-5a4c-9158-c4c19a70d4a8/output.h5
                    store: '0'
                  - path: api/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                    store: 0
                  - path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/d4442ca4-23fd-5b6b-ba6d-0b75f711c109/y_1D.txt
                    store: 0
                  properties:
                    dataset:
                      deprecated: true
                      title: Dataset
                      type: string
                    eTag:
                      description: Entity tag that uniquely represents the file. The
                        method to generate the tag is not specified (black box).
                      title: Etag
                      type: string
                    label:
                      description: The real file name
                      title: Label
                      type: string
                    path:
                      anyOf:
                      - pattern: ^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$
                        type: string
                      - pattern: ^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$
                        type: string
                      description: The path to the file in the storage provider domain
                      title: Path
                    store:
                      description: 'The store identifier: 0 for simcore S3, 1 for
                        datcore'
                      title: Store
                      type: integer
                  required:
                  - store
                  - path
                  title: SimCoreFileLink
                  type: object
                - additionalProperties: false
                  description: I/O port type to hold a link to a file in DATCORE storage
                  example:
                  - dataset: N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4
                    label: initial_WTstates
                    path: N:package:32df09ba-e8d6-46da-bd54-f696157de6ce
                    store: 1
                  - dataset: N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4
                    label: initial_WTstates
                    path: N:package:32df09ba-e8d6-46da-bd54-f696157de6ce
                    store: 1
                  properties:
                    dataset:
                      description: Unique identifier to access the dataset on datcore
                        (REQUIRED for datcore)
                      title: Dataset
                      type: string
                    eTag:
                      description: Entity tag that uniquely represents the file. The
                        method to generate the tag is not specified (black box).
                      title: Etag
                      type: string
                    label:
                      description: The real file name
                      title: Label
                      type: string
                    path:
                      anyOf:
                      - pattern: ^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$
                        type: string
                      - pattern: ^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$
                        type: string
                      description: The path to the file in the storage provider domain
                      title: Path
                    store:
                      description: 'The store identifier: 0 for simcore S3, 1 for
                        datcore'
                      title: Store
                      type: integer
                  required:
                  - store
                  - path
                  - label
                  - dataset
                  title: DatCoreFileLink
                  type: object
                - additionalProperties: false
                  description: I/O port type to hold a generic download link to a
                    file (e.g. S3 pre-signed link, etc)
                  example:
                  - downloadLink: https://fakeimg.pl/250x100/
                  properties:
                    downloadLink:
                      format: uri
                      maxLength: 65536
                      minLength: 1
                      title: Downloadlink
                      type: string
                    label:
                      title: Label
                      type: string
                  required:
                  - downloadLink
                  title: DownloadLink
                  type: object
                - items: {}
                  type: array
                - type: object
            title: Inputs
            type: object
          inputsUnits:
            description: Overrides default unit (if any) defined in the service for
              each port
            patternProperties:
              ^[-_a-zA-Z0-9]+$:
                type: string
            title: Inputsunits
            type: object
          key:
            description: distinctive name for the node based on the docker registry
              path
            example:
            - simcore/services/comp/itis/sleeper
            - simcore/services/dynamic/3dviewer
            - simcore/services/frontend/file-picker
            pattern: ^(simcore)/(services)/(comp|dynamic|frontend)(/[\w/-]+)+$
            title: Key
            type: string
          label:
            description: The short name of the node
            example:
            - JupyterLab
            title: Label
            type: string
          outputNode:
            deprecated: true
            title: Outputnode
            type: boolean
          outputNodes:
            description: Used in group-nodes. Node IDs of those connected to the output
            items:
              format: uuid
              type: string
            title: Outputnodes
            type: array
          outputs:
            description: values of output properties
            patternProperties:
              ^[-_a-zA-Z0-9]+$:
                anyOf:
                - type: boolean
                - type: integer
                - type: number
                - format: json-string
                  type: string
                - type: string
                - additionalProperties: false
                  description: I/O port type to hold a link to a file in simcore S3
                    storage
                  example:
                  - eTag: 859fda0cb82fc4acb4686510a172d9a9-1
                    label: input.txt
                    path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                    store: 0
                  - eTag: f7e4c7076761a42a871e978c8691c676
                    path: 50339632-ee1d-11ec-a0c2-02420a0194e4/23b1522f-225f-5a4c-9158-c4c19a70d4a8/output.h5
                    store: '0'
                  - path: api/0a3b2c56-dbcd-4871-b93b-d454b7883f9f/input.txt
                    store: 0
                  - path: 94453a6a-c8d4-52b3-a22d-ccbf81f8d636/d4442ca4-23fd-5b6b-ba6d-0b75f711c109/y_1D.txt
                    store: 0
                  properties:
                    dataset:
                      deprecated: true
                      title: Dataset
                      type: string
                    eTag:
                      description: Entity tag that uniquely represents the file. The
                        method to generate the tag is not specified (black box).
                      title: Etag
                      type: string
                    label:
                      description: The real file name
                      title: Label
                      type: string
                    path:
                      anyOf:
                      - pattern: ^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$
                        type: string
                      - pattern: ^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$
                        type: string
                      description: The path to the file in the storage provider domain
                      title: Path
                    store:
                      description: 'The store identifier: 0 for simcore S3, 1 for
                        datcore'
                      title: Store
                      type: integer
                  required:
                  - store
                  - path
                  title: SimCoreFileLink
                  type: object
                - additionalProperties: false
                  description: I/O port type to hold a link to a file in DATCORE storage
                  example:
                  - dataset: N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4
                    label: initial_WTstates
                    path: N:package:32df09ba-e8d6-46da-bd54-f696157de6ce
                    store: 1
                  - dataset: N:dataset:ea2325d8-46d7-4fbd-a644-30f6433070b4
                    label: initial_WTstates
                    path: N:package:32df09ba-e8d6-46da-bd54-f696157de6ce
                    store: 1
                  properties:
                    dataset:
                      description: Unique identifier to access the dataset on datcore
                        (REQUIRED for datcore)
                      title: Dataset
                      type: string
                    eTag:
                      description: Entity tag that uniquely represents the file. The
                        method to generate the tag is not specified (black box).
                      title: Etag
                      type: string
                    label:
                      description: The real file name
                      title: Label
                      type: string
                    path:
                      anyOf:
                      - pattern: ^(api|([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}))\/([0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12})\/(.+)$
                        type: string
                      - pattern: ^N:package:[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$
                        type: string
                      description: The path to the file in the storage provider domain
                      title: Path
                    store:
                      description: 'The store identifier: 0 for simcore S3, 1 for
                        datcore'
                      title: Store
                      type: integer
                  required:
                  - store
                  - path
                  - label
                  - dataset
                  title: DatCoreFileLink
                  type: object
                - additionalProperties: false
                  description: I/O port type to hold a generic download link to a
                    file (e.g. S3 pre-signed link, etc)
                  example:
                  - downloadLink: https://fakeimg.pl/250x100/
                  properties:
                    downloadLink:
                      format: uri
                      maxLength: 65536
                      minLength: 1
                      title: Downloadlink
                      type: string
                    label:
                      title: Label
                      type: string
                  required:
                  - downloadLink
                  title: DownloadLink
                  type: object
                - items: {}
                  type: array
                - type: object
            title: Outputs
            type: object
          parent:
            anyOf:
            - type: 'null'
            - description: Parent's (group-nodes') node ID s. Used to group
              format: uuid
              title: Parent
              type: string
          position:
            allOf:
            - additionalProperties: false
              properties:
                x:
                  description: The x position
                  example:
                  - '12'
                  title: X
                  type: integer
                y:
                  description: The y position
                  example:
                  - '15'
                  title: Y
                  type: integer
              required:
              - x
              - y
              title: Position
              type: object
            deprecated: true
            description: Use projects_ui.WorkbenchUI.position instead
            title: Position
          progress:
            description: the node progress value
            maximum: 100
            minimum: 0
            title: Progress
            type: number
          runHash:
            anyOf:
            - type: 'null'
            - description: the hex digest of the resolved inputs +outputs hash at
                the time when the last outputs were generated
              title: Runhash
              type: string
          state:
            allOf:
            - additionalProperties: false
              example:
              - currentStatus: NOT_STARTED
                dependencies: []
                modified: true
              - currentStatus: ABORTED
                dependencies:
                - 42838344-03de-4ce2-8d93-589a5dcdfd05
                modified: true
              - currentStatus: SUCCESS
                dependencies: []
                modified: false
              properties:
                currentStatus:
                  allOf:
                  - description: 'State of execution of a project''s computational
                      workflow


                      SEE StateType for task state'
                    enum:
                    - UNKNOWN
                    - PUBLISHED
                    - NOT_STARTED
                    - PENDING
                    - STARTED
                    - RETRY
                    - SUCCESS
                    - FAILED
                    - ABORTED
                    title: RunningState
                    type: string
                  default: NOT_STARTED
                  description: the node's current state
                dependencies:
                  description: contains the node inputs dependencies if they need
                    to be computed first
                  items:
                    format: uuid
                    type: string
                  title: Dependencies
                  type: array
                  uniqueItems: true
                modified:
                  default: true
                  description: true if the node's outputs need to be re-computed
                  title: Modified
                  type: boolean
              title: NodeState
              type: object
            description: The node's state object
            title: State
          thumbnail:
            description: url of the latest screenshot of the node
            example:
            - https://placeimg.com/171/96/tech/grayscale/?0.jpg
            format: uri
            maxLength: 2083
            minLength: 0
            title: Thumbnail
            type: string
          version:
            description: semantic version number of the node
            example:
            - 1.0.0
            - 0.0.1
            pattern: ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
            title: Version
            type: string
        required:
        - key
        - version
        - label
        title: Node
        type: object
required:
- uuid
- name
- description
- thumbnail
- creationDate
- lastChangeDate
- workbench
- prjOwner
- accessRights
title: osparc-simcore project
type: object
