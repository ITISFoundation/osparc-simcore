components:
  schemas:
    RunningServicesEnveloped:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/RunningServicesArray"
        error:
          nullable: true
          default: null

    RunningServicesArray:
      type: array
      items:
        $ref: "#/components/schemas/RunningServiceType"

    RunningServiceEnveloped:
      type: object
      required:
        - data
      properties:
        data:
          $ref: "#/components/schemas/RunningServiceType"
        error:
          nullable: true
          default: null

    RunningServiceType:
      type: object
      required:
        - published_port
        - service_uuid
        - service_key
        - service_version
        - service_host
        - service_port
        - service_state
        - user_id
      properties:
        published_port:
          description: The ports where the service provides its interface
          type: integer
          format: int32
          minimum: 1
          example: 30000
        entry_point:
          description: The entry point where the service provides its interface if specified
          type: string
          example: /the/entry/point/is/here
        service_uuid:
          description: The UUID attached to this service
          type: string
          # format: UUID
          example: 123e4567-e89b-12d3-a456-426655440000
        service_key:
          type: string
          description: distinctive name for the node based on the docker registry path
          pattern: '^(simcore)/(services)/(comp|dynamic)(/[\w/-]+)+$'
          example:
            - simcore/services/comp/itis/sleeper
            - simcore/services/dynamic/3dviewer
        service_version:
          type: string
          description: semantic version number
          pattern: >-
            ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
          example:
            - 1.0.0
            - 0.0.1
        service_host:
          description: service host name within the network
          type: string
          example: jupyter_E1O2E-LAH
        service_port:
          description: port to access the service within the network
          type: integer
          minimum: 1
          example: 8081
        service_basepath:
          description: different base path where current service is mounted otherwise defaults to root
          type: string
          example: "/x/E1O2E-LAH"
          default: ""
        service_state:
          description: >
            the service state
            * 'pending' - The service is waiting for resources to start
            * 'pulling' - The service is being pulled from the registry
            * 'starting' - The service is starting
            * 'running' - The service is running
            * 'complete' - The service completed
            * 'failed' - The service failed to start
          type: string
          enum:
            - pending
            - pulling
            - starting
            - running
            - complete
            - failed
        service_message:
          description: >-
            the service message
          type: string
          example: no suitable node (insufficient resources on 1 node)
        user_id:
          description: >-
            the user that started the service
          type: string
          example: "123"
