title: simcore node
description: Description of a simcore node 'class' with input and output
type: object
additionalProperties: false
required:
  - key
  - version
  - type
  - name
  - description
  - authors
  - contact
  - inputs
  - outputs
properties:
  key:
    type: string
    description: distinctive name for the node based on the docker registry path
    pattern: '^(simcore)/(services)/(comp|dynamic)(/[^\s/]+)+$'
    example: simcore/services/comp/itis/sleeper
  integration-version:
    type: string
    description: integration version number
    pattern: >-
      ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
    example: 1.0.0
  version:
    type: string
    description: service version number
    pattern: >-
      ^(0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*)(\.(0|[1-9]\d*|\d*[-a-zA-Z][-\da-zA-Z]*))*)?(\+[-\da-zA-Z]+(\.[-\da-zA-Z-]+)*)?$
    example: 1.0.0
  type:
    type: string
    description: service type
    enum:
      - frontend
      - computational
      - dynamic
    example: computational
  name:
    type: string
    description: 'short, human readable name for the node'
    example: Fast Counter
  thumbnail:
    type: string
    description: url to the thumbnail
    example: >-
      https://user-images.githubusercontent.com/32800795/61083844-ff48fb00-a42c-11e9-8e63-fa2d709c8baf.png
  badges:
    type: array
    items:
      type: object
      required:
        - name
        - image
        - url
      additionalProperties: false
      properties:
        name:
          type: string
          description: Name of the subject
          example: travis-ci
        image:
          type: string
          description: Url to the shield
          example: >-
            https://travis-ci.org/ITISFoundation/osparc-simcore.svg?branch=master
        url:
          type: string
          description: Link to status
          example: >-
            https://travis-ci.org/ITISFoundation/osparc-simcore 'State of CI:
            build, test and pushing images'
  description:
    type: string
    description: human readable description of the purpose of the node
    example: Our best node type
  authors:
    type: array
    minItems: 1
    items:
      type: object
      required:
        - name
        - email
      additionalProperties: false
      properties:
        name:
          type: string
          description: Name of the author
          example: Sun Bak
        email:
          description: Email address
          type: string
          format: email
          example: sun@sense.eight
        affiliation:
          description: Affiliation of the author
          type: string
          example: Sense8
  contact:
    type: string
    format: email
    description: email to correspond to the authors about the node
    example: lab@net.flix
  inputs:
    type: object
    description: definition of the inputs of this node
    x-patternProperties:
      '^[-_a-zA-Z0-9]+$':
        type: object
        description: all the input configurable for this service
        additionalProperties: false
        required:
          - displayOrder
          - label
          - description
          - type
        properties:
          displayOrder:
            type: number
            description: use this to numerically sort the properties for display
            example:
              - 1
              - -0.2
          label:
            type: string
            description: short name for the property
            example:
              - Age
          description:
            type: string
            description: description of the property
            example:
              - Age in seconds since 1970
          type:
            type: string
            pattern: >-
              ^(number|integer|boolean|string|data:([^/\s,]+/[^/\s,]+|\[[^/\s,]+/[^/\s,]+(,[^/\s]+/[^/,\s]+)*\]))$
            description: >-
              data type expected on this input glob matching for data type is
              allowed
            example:
              - number
              - boolean
              - 'data:*/*'
              - 'data:text/*'
              - 'data:[image/jpeg,image/png]'
              - 'data:application/json'
              - >-
                data:application/json;schema=https://my-schema/not/really/schema.json
              - 'data:application/vnd.ms-excel'
              - 'data:text/plain'
              - 'data:application/hdf5'
              - 'data:application/edu.ucdavis@ceclancy.xyz'
          fileToKeyMap:
            description: Place the data associated with the named keys in files
            type: object
            patternProperties:
              .+:
                type: string
                pattern: '^[-_a-zA-Z0-9]+$'
            example:
              - dir/input1.txt: key_1
                dir33/input2.txt: key2
          defaultValue:
            description: initial value for this input
            type:
              - string
              - number
              - integer
              - boolean
            example:
              - Dog
              - true
          widget:
            description: >-
              custom widget to use instead of the default one determined from
              the data-type
            anyOf:
              - type: object
                additionalProperties: false
                required:
                  - type
                properties:
                  type:
                    description: type of the property
                    type: string
                    enum:
                      - TextArea
                  minHeight:
                    description: minimum Height of the textarea
                    type: integer
                    minimum: 1
              - type: object
                additionalProperties: false
                required:
                  - type
                  - structure
                properties:
                  type:
                    description: type of the property
                    type: string
                    enum:
                      - SelectBox
                  structure:
                    type: array
                    minItems: 1
                    items:
                      type: object
                      additionalProperties: false
                      required:
                        - key
                        - label
                      properties:
                        key:
                          type:
                            - string
                            - boolean
                            - number
                        label:
                          type: string
                      example:
                        - - key: rat
                            label: The Rat
                          - key: dog
                            label: Bello the Dog
    additionalProperties: true
  outputs:
    type: object
    description: definition of the outputs of this node
    x-patternProperties:
      '^[-_a-zA-Z0-9]+$':
        type: object
        description: all the output produced by this node
        additionalProperties: false
        required:
          - displayOrder
          - label
          - description
          - type
        properties:
          displayOrder:
            type: number
            description: use this to numerically sort the properties for display
            example:
              - 1
              - -0.2
          label:
            type: string
            description: short name for the property
            example:
              - Age
          description:
            type: string
            description: description of the property
            example:
              - Age in seconds since 1970
          type:
            type: string
            pattern: '^(number|integer|boolean|string|data:[^/\s,]+/[^/\s,]+)$'
            description: data type expected on this output
            example:
              - number
              - integer
              - boolean
              - string
              - 'data:application/json'
              - 'data:application/vnd.ms-excel '
              - 'data:text/plain'
              - 'data:application/hdf5'
          fileToKeyMap:
            description: >-
              Place the data stored in the named files and store it in the
              locations pointed to by the respective output key.
            type: object
            patternProperties:
              .+:
                type: string
                pattern: '^[-_a-zA-Z0-9]+$'
            example:
              - dir/input1.txt: key_1
                dir33/input2.txt: key2
    additionalProperties: true
