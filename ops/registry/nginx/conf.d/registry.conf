# Redirect http to https
server {
 listen 80;
 server_name registry.simcore.io;

# Required for letsencrypt domain validation to work
 location /.well-known/ {
 root /var/www/registry.simcore.io/;
}
}

# upstream docker-registry {
#   server registry:5000;
# }
# 
# server {
#   listen 443;
#   server_name registry.simcore.io;
# 
#   # SSL
#   ssl on;
#   ssl_certificate /etc/nginx/ssl/live/registry.simcore.io/fullchain.pem;
#   ssl_certificate_key /etc/nginx/ssl/live/registry.simcore.io/privkey.pem;
#   ssl_trusted_certificate /etc/nginx/ssl/live/registry.simcore.io/fullchain.pem;
# 
# # Required for letsencrypt domain validation to work
#  location /.well-known/ {
#  root /var/www/registry.simcore.io/;
#  }
# 
#   # disable any limits to avoid HTTP 413 for large image uploads
#   client_max_body_size 0;
# 
#   # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
#   chunked_transfer_encoding on;
# 
#   location /v2/ {
#     # Do not allow connections from docker 1.5 and earlier
#     # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
#     if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
#       return 404;
#     }
# 
#     # To add basic authentication to v2 use auth_basic setting plus add_header
#     auth_basic "registry.localhost";
#     auth_basic_user_file /etc/nginx/conf.d/registry.password;
#     add_header 'Docker-Distribution-Api-Version' 'registry/2.0' always;
# 
#     proxy_pass                          http://docker-registry;
#     proxy_set_header  Host              $http_host;   # required for docker client's sake
#     proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
#     proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
#     proxy_set_header  X-Forwarded-Proto $scheme;
#     proxy_read_timeout                  900;
#   }
# }
