---
# file: ops/ansible/ancillary-minio.yml
# Setup Minio Roles
- hosts: docker-hosts
  roles:
    - dockerhost
    - minio

# Deploy minio stack
# Bring down and destroy any existing minio stack
- hosts: docker-swarm-managers[0]
  become: yes
  become_method: sudo
  tasks:
  - name: Check for existing minio stack
    shell: "docker stack ls | grep -e '^minio[[:space:]]\+.*$'"
    register: result
    changed_when: False
  - name: Remove existing minio stack
    command: "docker stack rm minio"
    when: result.stdout != ""
  - name: Check for existing docker secret minio_access_key
    shell: "docker secret ls | grep minio_access_key"
    register: result
    changed_when: False
  - name: Remove existing docker secret access_key
    command: "docker secret rm minio_access_key"
    when: result.stdout != ""
  - name: Check for existing docker secret minio_secret_key
    shell: "docker secret ls | grep minio_secret_key"
    register: result
    changed_when: False
  - name: Remove existing docker secret secret_key
    command: "docker secret rm minio_secret_key"
    when: result.stdout != ""

# Destroy and recreate any existing minio service data stores
- hosts: docker-hosts
  become: yes
  become_method: sudo
  tasks:
  - name: Create minio data stores
    file:
      path: "/data/minio/{{ item }}-export"
      state: absent
    with_sequence: "start=1 end=4 format=minio%02x"
  - name: Create minio data stores
    file:
      path: "/data/minio/{{ item }}-export"
      state: directory
      group: docker
      mode: 0775
    with_sequence: "start=1 end=4 format=minio%02x"

# Deploy Minio docker swarm stack
- hosts: docker-swarm-managers[0]
  become: yes
  become_method: sudo
  tasks:
  - name: Package pwgen is installed
    apt:
      pkg: pwgen
  - name: Generate new minio_access_key
    command: "pwgen -sB 20 1"
    register: minio_access_key
    changed_when: False
  - name: Generate new minio_secret_key
    command: "pwgen -sB 32 1"
    register: minio_secret_key
    changed_when: False
  - name: Create docker secret access_key
    shell: "echo {{ access_key.stdout }} | docker secret create access_key -"
    retries: 3
    delay: 20
    register: result
    until: result.rc == 0
  - name: Create docker secret secret_key
    shell: "echo {{ secret_key.stdout }} | docker secret create secret_key -"
    retries: 3
    delay: 20
    register: result
    until: result.rc == 0
  - name: Create directory for local docker-compose file
    file:
      path: "/tmp/osparc-simcore/ops/ansible/roles/minio/files"
      state: directory
      group: docker
      mode: 0775
  - name: example copying file with owner and permissions
    copy:
      src: "./roles/minio/files/docker-compose.yml"
      dest: "/tmp/osparc-simcore/ops/ansible/roles/minio/files/docker-compose.yml"
      owner: root
      group: docker
      mode: 0644
  - name: Deploy minio stack
    command: "docker stack deploy --compose-file=/tmp/osparc-simcore/ops/ansible/roles/minio/files/docker-compose.yml minio"
  - debug: 
      msg: "Minio Access Key: {{ access_key.stdout }}"
  - debug:
      msg: "Minio Secret Key: {{ secret_key.stdout }}"