version: "3.7"
services:
  pgbouncer:
    image: pgbouncer/pgbouncer:1.15.0
    init: true
    environment:
      - DATABASES_HOST=postgres
      - DATABASES_PORT=5432
      - DATABASES_USER=test
      - DATABASES_PASSWORD=test
      - DATABASES_DBNAME=test
      - PGBOUNCER_LISTEN_PORT=5432
      - PGBOUNCER_LISTEN_ADDE=*
      - PGBOUNCER_POOL_MODE=transaction
      - PGBOUNCER_ADMIN_USERS=${POSTGRES_USER}

    ports:
      - "6432:5432"
    depends_on:
      - postgres

  postgres:
    image: "postgres:10.11@sha256:2aef165ab4f30fbb109e88959271d8b57489790ea13a77d27c02d8adb8feb20f"
    init: true
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: test
      POSTGRES_HOST: 127.0.0.1
      POSTGRES_PORT: 5432
    # NOTE: DO NOT ADD PERSISTENCE!
    ports:
      - "5432:5432"
    # https://www.postgresql.org/docs/10/runtime-config-logging.html#GUC-LOG-STATEMENT
    command:
      [
        "postgres",
        "-c",
        "log_connections=true",
        "-c",
        "log_disconnections=true",
        "-c",
        "log_duration=true",
        "-c",
        "log_line_prefix=[%p] [%a] [%c] [%x] ",
        "-c",
        "tcp_keepalives_idle=600",
        "-c",
        "tcp_keepalives_interval=600",
        "-c",
        "tcp_keepalives_count=5",
      ]
    # NOTES: this is not yet compatible with portainer deployment but could work also for other containers
    # works with Docker 19.03 and not yet with Portainer 1.23.0 (see https://github.com/portainer/portainer/issues/3551)
    # in the meantime postgres allows to set a configuration through CLI.
    # sysctls:
    #   # NOTES: these values are needed here because docker swarm kills long running idle
    #   # connections by default after 15 minutes see https://github.com/moby/moby/issues/31208
    #   # info about these values are here https://tldp.org/HOWTO/TCP-Keepalive-HOWTO/usingkeepalive.html
    #   - net.ipv4.tcp_keepalive_intvl=600
    #   - net.ipv4.tcp_keepalive_probes=9
    #   - net.ipv4.tcp_keepalive_time=600
  adminer:
    image: adminer:4.8.0
    init: true
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
      - ADMINER_DESIGN=nette
      - ADMINER_PLUGINS=json-column
    ports:
      - 18080:8080
    depends_on:
      - pgbouncer
