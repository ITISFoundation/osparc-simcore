"""Add function tables

Revision ID: e9fe2737bd4d
Revises: 0d52976dc616
Create Date: 2025-05-15 07:32:24.859835+00:00

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "e9fe2737bd4d"
down_revision = "0d52976dc616"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "funcapi_function_job_collections",
        sa.Column("uuid", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("uuid", name="funcapi_function_job_collections_pk"),
    )
    op.create_index(
        op.f("ix_funcapi_function_job_collections_uuid"),
        "funcapi_function_job_collections",
        ["uuid"],
        unique=False,
    )
    op.create_table(
        "funcapi_functions",
        sa.Column("uuid", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("function_class", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("input_schema", sa.JSON(), nullable=True),
        sa.Column("output_schema", sa.JSON(), nullable=True),
        sa.Column("system_tags", sa.JSON(), nullable=True),
        sa.Column("user_tags", sa.JSON(), nullable=True),
        sa.Column("class_specific_data", sa.JSON(), nullable=True),
        sa.Column("default_inputs", sa.JSON(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("uuid", name="funcapi_functions_pk"),
    )
    op.create_index(
        op.f("ix_funcapi_functions_uuid"), "funcapi_functions", ["uuid"], unique=False
    )
    op.create_table(
        "funcapi_function_jobs",
        sa.Column("uuid", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("function_uuid", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("function_class", sa.String(), nullable=True),
        sa.Column("status", sa.String(), nullable=True),
        sa.Column("inputs", sa.JSON(), nullable=True),
        sa.Column("outputs", sa.JSON(), nullable=True),
        sa.Column("class_specific_data", sa.JSON(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["function_uuid"],
            ["funcapi_functions.uuid"],
            name="fk_function_jobs_to_function_uuid",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("uuid", name="funcapi_function_jobs_pk"),
    )
    op.create_index(
        op.f("ix_funcapi_function_jobs_function_uuid"),
        "funcapi_function_jobs",
        ["function_uuid"],
        unique=False,
    )
    op.create_index(
        op.f("ix_funcapi_function_jobs_uuid"),
        "funcapi_function_jobs",
        ["uuid"],
        unique=False,
    )
    op.create_table(
        "funcapi_function_job_collections_to_function_jobs",
        sa.Column(
            "function_job_collection_uuid",
            postgresql.UUID(as_uuid=True),
            nullable=False,
        ),
        sa.Column("function_job_uuid", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["function_job_collection_uuid"],
            ["funcapi_function_job_collections.uuid"],
            name="fk_func_job_coll_to_func_jobs_to_func_job_coll_uuid",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["function_job_uuid"],
            ["funcapi_function_jobs.uuid"],
            name="fk_func_job_coll_to_func_jobs_to_func_job_uuid",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "function_job_collection_uuid",
            "function_job_uuid",
            name="funcapi_function_job_collections_to_function_jobs_pk",
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("funcapi_function_job_collections_to_function_jobs")
    op.drop_index(
        op.f("ix_funcapi_function_jobs_uuid"), table_name="funcapi_function_jobs"
    )
    op.drop_index(
        op.f("ix_funcapi_function_jobs_function_uuid"),
        table_name="funcapi_function_jobs",
    )
    op.drop_table("funcapi_function_jobs")
    op.drop_index(op.f("ix_funcapi_functions_uuid"), table_name="funcapi_functions")
    op.drop_table("funcapi_functions")
    op.drop_index(
        op.f("ix_funcapi_function_job_collections_uuid"),
        table_name="funcapi_function_job_collections",
    )
    op.drop_table("funcapi_function_job_collections")
    # ### end Alembic commands ###
