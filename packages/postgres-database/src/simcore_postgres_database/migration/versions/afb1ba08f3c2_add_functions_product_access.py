"""Add functions product access

Revision ID: afb1ba08f3c2
Revises: 275642b33db0
Create Date: 2025-05-30 14:24:46.198755+00:00

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "afb1ba08f3c2"
down_revision = "275642b33db0"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "funcapi_function_job_collections_access_rights",
        sa.Column("product_name", sa.String(), nullable=True),
    )
    op.create_foreign_key(
        "fk_func_access_to_products_product_name",
        "funcapi_function_job_collections_access_rights",
        "products",
        ["product_name"],
        ["name"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.add_column(
        "funcapi_function_jobs_access_rights",
        sa.Column("product_name", sa.String(), nullable=True),
    )
    op.create_foreign_key(
        "fk_func_access_to_products_product_name",
        "funcapi_function_jobs_access_rights",
        "products",
        ["product_name"],
        ["name"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.add_column(
        "funcapi_functions_access_rights",
        sa.Column("product_name", sa.String(), nullable=True),
    )
    op.create_foreign_key(
        "fk_func_access_to_products_product_name",
        "funcapi_functions_access_rights",
        "products",
        ["product_name"],
        ["name"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )

    # Backfill existing rows with "osparc"
    op.execute(
        """
        UPDATE funcapi_function_job_collections_access_rights
        SET product_name = 'osparc'
        WHERE product_name IS NULL
        """
    )
    op.execute(
        """
        UPDATE funcapi_function_jobs_access_rights
        SET product_name = 'osparc'
        WHERE product_name IS NULL
        """
    )
    op.execute(
        """
        UPDATE funcapi_functions_access_rights
        SET product_name = 'osparc'
        WHERE product_name IS NULL
        """
    )

    # Alter columns to set nullable=False and default="osparc"
    op.alter_column(
        "funcapi_function_job_collections_access_rights",
        "product_name",
        existing_type=sa.String(),
        nullable=False,
        server_default="osparc",
    )
    op.alter_column(
        "funcapi_function_jobs_access_rights",
        "product_name",
        existing_type=sa.String(),
        nullable=False,
        server_default="osparc",
    )
    op.alter_column(
        "funcapi_functions_access_rights",
        "product_name",
        existing_type=sa.String(),
        nullable=False,
        server_default="osparc",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "fk_func_access_to_products_product_name",
        "funcapi_functions_access_rights",
        type_="foreignkey",
    )
    op.drop_column("funcapi_functions_access_rights", "product_name")
    op.drop_constraint(
        "fk_func_access_to_products_product_name",
        "funcapi_function_jobs_access_rights",
        type_="foreignkey",
    )
    op.drop_column("funcapi_function_jobs_access_rights", "product_name")
    op.drop_constraint(
        "fk_func_access_to_products_product_name",
        "funcapi_function_job_collections_access_rights",
        type_="foreignkey",
    )
    op.drop_column("funcapi_function_job_collections_access_rights", "product_name")
    # ### end Alembic commands ###
