"""new pre-registration columns

Revision ID: ba9c4816a31b
Revises: b39f2dc87ccd
Create Date: 2025-05-19 15:21:40.182354+00:00

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "ba9c4816a31b"
down_revision = "b39f2dc87ccd"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Create the enum type first before using it
    account_request_status = sa.Enum(
        "PENDING", "APPROVED", "REJECTED", name="accountrequeststatus"
    )
    account_request_status.create(op.get_bind(), checkfirst=True)

    op.add_column(
        "users_pre_registration_details",
        sa.Column(
            "id",
            sa.BigInteger(),
            sa.Identity(always=False, start=1, cycle=False),
            nullable=False,
        ),
    )
    op.add_column(
        "users_pre_registration_details",
        sa.Column(
            "account_request_status",
            account_request_status,  # Use the created enum type
            server_default="PENDING",  # Simply use the string value as default
            nullable=False,
        ),
    )
    op.add_column(
        "users_pre_registration_details",
        sa.Column(
            "account_request_reviewed_by",
            sa.Integer(),
            nullable=True,
        ),
    )
    op.add_column(
        "users_pre_registration_details",
        sa.Column(
            "account_request_reviewed_at",
            sa.DateTime(timezone=True),
            nullable=True,
        ),
    )
    op.add_column(
        "users_pre_registration_details",
        sa.Column("product_name", sa.String(), nullable=True),
    )
    op.drop_constraint(
        "users_pre_registration_details_pre_email_key",
        "users_pre_registration_details",
        type_="unique",
    )
    op.create_foreign_key(
        "fk_users_pre_registration_details_product_name",
        "users_pre_registration_details",
        "products",
        ["product_name"],
        ["name"],
        onupdate="CASCADE",
        ondelete="SET NULL",
    )
    # Add foreign key for account_request_reviewed_by
    op.create_foreign_key(
        "fk_users_pre_registration_reviewed_by_user_id",
        "users_pre_registration_details",
        "users",
        ["account_request_reviewed_by"],
        ["id"],
        onupdate="CASCADE",
        ondelete="SET NULL",
    )
    # Set primary key on id column
    op.create_primary_key(
        "users_pre_registration_details_pk",
        "users_pre_registration_details",
        ["id"],
    )
    # Add composite unique constraint on pre_email and product_name
    op.create_unique_constraint(
        "users_pre_registration_details_pre_email_product_name_key",
        "users_pre_registration_details",
        ["pre_email", "product_name"],
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop the composite unique constraint
    op.drop_constraint(
        "users_pre_registration_details_pre_email_product_name_key",
        "users_pre_registration_details",
        type_="unique",
    )
    op.drop_constraint(
        "users_pre_registration_details_pk",
        "users_pre_registration_details",
        type_="primary",
    )
    op.drop_constraint(
        "fk_users_pre_registration_reviewed_by_user_id",
        "users_pre_registration_details",
        type_="foreignkey",
    )
    op.drop_constraint(
        "fk_users_pre_registration_details_product_name",
        "users_pre_registration_details",
        type_="foreignkey",
    )
    op.create_unique_constraint(
        "users_pre_registration_details_pre_email_key",
        "users_pre_registration_details",
        ["pre_email"],
    )
    op.drop_column("users_pre_registration_details", "product_name")
    op.drop_column("users_pre_registration_details", "account_request_reviewed_at")
    op.drop_column("users_pre_registration_details", "account_request_reviewed_by")
    op.drop_column("users_pre_registration_details", "account_request_status")
    op.drop_column("users_pre_registration_details", "id")

    # Drop the enum type in downgrade
    sa.Enum(name="accountrequeststatus").drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
