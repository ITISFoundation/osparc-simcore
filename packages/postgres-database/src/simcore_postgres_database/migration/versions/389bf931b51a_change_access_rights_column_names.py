"""change access rights column names

Revision ID: 389bf931b51a
Revises: 83f9d2a470ef
Create Date: 2021-09-02 14:59:47.828546+00:00

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "389bf931b51a"
down_revision = "83f9d2a470ef"
branch_labels = None
depends_on = None

# ------------------------ TRIGGERS
new_cluster_trigger = sa.DDL(
    """
DROP TRIGGER IF EXISTS cluster_modification on clusters;
CREATE TRIGGER cluster_modification
AFTER INSERT ON clusters
    FOR EACH ROW
    EXECUTE PROCEDURE set_cluster_to_owner_group();
"""
)


# --------------------------- PROCEDURES
assign_cluster_access_rights_to_owner_group_procedure_new = sa.DDL(
    """
CREATE OR REPLACE FUNCTION set_cluster_to_owner_group() RETURNS TRIGGER AS $$
DECLARE
    group_id BIGINT;
BEGIN
    IF TG_OP = 'INSERT' THEN
        INSERT INTO "cluster_to_groups" ("gid", "cluster_id", "read", "write", "delete") VALUES (NEW.owner, NEW.id, TRUE, TRUE, TRUE);
    END IF;
    RETURN NULL;
END; $$ LANGUAGE 'plpgsql';
    """
)

assign_cluster_access_rights_to_owner_group_procedure_old = sa.DDL(
    """
CREATE OR REPLACE FUNCTION set_cluster_to_owner_group() RETURNS TRIGGER AS $$
DECLARE
    group_id BIGINT;
BEGIN
    IF TG_OP = 'INSERT' THEN
        INSERT INTO "cluster_to_groups" ("gid", "cluster_id", "read_access", "write_access", "delete_access") VALUES (NEW.owner, NEW.id, TRUE, TRUE, TRUE);
    END IF;
    RETURN NULL;
END; $$ LANGUAGE 'plpgsql';
    """
)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(sa.DDL("DROP TRIGGER IF EXISTS cluster_modification on clusters;"))
    op.execute(sa.DDL("DROP FUNCTION set_cluster_to_owner_group()"))
    op.alter_column("cluster_to_groups", "read_access", new_column_name="read")
    op.alter_column("cluster_to_groups", "write_access", new_column_name="write")
    op.alter_column("cluster_to_groups", "delete_access", new_column_name="delete")
    # ### end Alembic commands ###
    op.execute(assign_cluster_access_rights_to_owner_group_procedure_new)
    op.execute(new_cluster_trigger)


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(sa.DDL("DROP TRIGGER IF EXISTS cluster_modification on clusters;"))
    op.execute(sa.DDL("DROP FUNCTION set_cluster_to_owner_group()"))
    op.alter_column("cluster_to_groups", "read", new_column_name="read_access")
    op.alter_column("cluster_to_groups", "write", new_column_name="write_access")
    op.alter_column("cluster_to_groups", "delete", new_column_name="delete_access")
    # ### end Alembic commands ###
    op.execute(assign_cluster_access_rights_to_owner_group_procedure_old)
    op.execute(new_cluster_trigger)
