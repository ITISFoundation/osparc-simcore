"""modify licensed items/resources DB

Revision ID: ce4224e8b06e
Revises: 68777fdf9539
Create Date: 2025-02-11 12:24:47.669339+00:00

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "ce4224e8b06e"
down_revision = "68777fdf9539"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "licensed_item_to_resource",
        sa.Column("licensed_item_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column(
            "licensed_resource_id", postgresql.UUID(as_uuid=True), nullable=False
        ),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["licensed_item_id"],
            ["licensed_items.licensed_item_id"],
            name="fk_licensed_item_to_resource_licensed_item_id",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["licensed_resource_id"],
            ["licensed_resources.licensed_resource_id"],
            name="fk_licensed_item_to_resource_licensed_resource_id",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
    )
    op.add_column("licensed_items", sa.Column("key", sa.String(), nullable=False))
    op.add_column("licensed_items", sa.Column("version", sa.String(), nullable=False))
    op.alter_column(
        "licensed_items", "pricing_plan_id", existing_type=sa.BIGINT(), nullable=False
    )
    op.alter_column(
        "licensed_items", "product_name", existing_type=sa.VARCHAR(), nullable=False
    )
    op.drop_constraint(
        "uq_licensed_resource_name_type", "licensed_items", type_="unique"
    )
    op.create_unique_constraint(
        "uq_licensed_items_key_version", "licensed_items", ["key", "version"]
    )
    op.drop_column("licensed_items", "trashed")
    op.drop_column("licensed_items", "licensed_resource_data")
    op.drop_column("licensed_items", "licensed_resource_name")
    op.add_column(
        "resource_tracker_licensed_items_checkouts",
        sa.Column("key", sa.String(), nullable=False),
    )
    op.add_column(
        "resource_tracker_licensed_items_checkouts",
        sa.Column("version", sa.String(), nullable=False),
    )
    op.add_column(
        "resource_tracker_licensed_items_purchases",
        sa.Column("key", sa.String(), nullable=False),
    )
    op.add_column(
        "resource_tracker_licensed_items_purchases",
        sa.Column("version", sa.String(), nullable=False),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("resource_tracker_licensed_items_purchases", "version")
    op.drop_column("resource_tracker_licensed_items_purchases", "key")
    op.drop_column("resource_tracker_licensed_items_checkouts", "version")
    op.drop_column("resource_tracker_licensed_items_checkouts", "key")
    op.add_column(
        "licensed_items",
        sa.Column(
            "licensed_resource_name", sa.VARCHAR(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "licensed_items",
        sa.Column(
            "licensed_resource_data",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.add_column(
        "licensed_items",
        sa.Column(
            "trashed",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
            comment="The date and time when the licensed_item was marked as trashed. Null if the licensed_item has not been trashed [default].",
        ),
    )
    op.drop_constraint(
        "uq_licensed_items_key_version", "licensed_items", type_="unique"
    )
    op.create_unique_constraint(
        "uq_licensed_resource_name_type",
        "licensed_items",
        ["licensed_resource_name", "licensed_resource_type"],
    )
    op.alter_column(
        "licensed_items", "product_name", existing_type=sa.VARCHAR(), nullable=True
    )
    op.alter_column(
        "licensed_items", "pricing_plan_id", existing_type=sa.BIGINT(), nullable=True
    )
    op.drop_column("licensed_items", "version")
    op.drop_column("licensed_items", "key")
    op.drop_table("licensed_item_to_resource")
    # ### end Alembic commands ###
