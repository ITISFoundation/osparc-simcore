"""enhance projects_tags for RUT

Revision ID: 8e1f83486be7
Revises: 8bfe65a5e294
Create Date: 2024-11-15 09:12:57.789183+00:00

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "8e1f83486be7"
down_revision = "8bfe65a5e294"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "projects_tags", sa.Column("project_uuid_for_rut", sa.String(), nullable=True)
    )

    # Migrate
    op.execute(
        sa.DDL(
            """
                UPDATE projects_tags
                SET project_uuid_for_rut = projects.uuid
                FROM projects
                WHERE projects_tags.project_id = projects.id;
            """
        )
    )

    op.alter_column(
        "projects_tags",
        "project_uuid_for_rut",
        existing_type=sa.String(),
        nullable=False,
    )
    op.alter_column(
        "projects_tags", "project_id", existing_type=sa.BIGINT(), nullable=True
    )
    op.drop_constraint(
        "study_tags_study_id_tag_id_key", "projects_tags", type_="unique"
    )
    op.create_unique_constraint(
        "project_tags_project_uuid_unique",
        "projects_tags",
        ["project_uuid_for_rut", "tag_id"],
    )
    op.drop_constraint("study_tags_study_id_fkey", "projects_tags", type_="foreignkey")
    op.create_foreign_key(
        "project_tags_project_id_fkey",
        "projects_tags",
        "projects",
        ["project_id"],
        ["id"],
        onupdate="CASCADE",
        ondelete="SET NULL",
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "project_tags_project_id_fkey", "projects_tags", type_="foreignkey"
    )
    op.create_foreign_key(
        "study_tags_study_id_fkey",
        "projects_tags",
        "projects",
        ["project_id"],
        ["id"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    op.drop_constraint(
        "project_tags_project_uuid_unique", "projects_tags", type_="unique"
    )
    op.create_unique_constraint(
        "study_tags_study_id_tag_id_key", "projects_tags", ["project_id", "tag_id"]
    )
    op.alter_column(
        "projects_tags", "project_id", existing_type=sa.BIGINT(), nullable=False
    )
    op.drop_column("projects_tags", "project_uuid_for_rut")
    # ### end Alembic commands ###
