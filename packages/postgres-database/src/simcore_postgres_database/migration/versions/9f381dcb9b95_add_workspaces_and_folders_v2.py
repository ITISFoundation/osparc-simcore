"""add_workspaces_and_folders_v2

Revision ID: 9f381dcb9b95
Revises: 926c3eb2254e
Create Date: 2024-09-03 05:49:16.581965+00:00

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "9f381dcb9b95"
down_revision = "926c3eb2254e"
branch_labels = None
depends_on = None


# ------------------------ TRIGGERS
new_workspace_trigger = sa.DDL(
    """
DROP TRIGGER IF EXISTS workspace_modification on workspaces;
CREATE TRIGGER workspace_modification
AFTER INSERT ON workspaces
    FOR EACH ROW
    EXECUTE PROCEDURE set_workspace_to_owner_group();
"""
)


# --------------------------- PROCEDURES
assign_workspace_access_rights_to_owner_group_procedure = sa.DDL(
    """
CREATE OR REPLACE FUNCTION set_workspace_to_owner_group() RETURNS TRIGGER AS $$
DECLARE
    group_id BIGINT;
BEGIN
    IF TG_OP = 'INSERT' THEN
        INSERT INTO "workspaces_access_rights" ("gid", "workspace_id", "read", "write", "delete") VALUES (NEW.owner_primary_gid, NEW.workspace_id, TRUE, TRUE, TRUE);
    END IF;
    RETURN NULL;
END; $$ LANGUAGE 'plpgsql';
    """
)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "workspaces",
        sa.Column("workspace_id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("thumbnail", sa.String(), nullable=True),
        sa.Column("owner_primary_gid", sa.BigInteger(), nullable=False),
        sa.Column("product_name", sa.String(), nullable=False),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["owner_primary_gid"],
            ["groups.gid"],
            name="fk_workspaces_gid_groups",
            onupdate="CASCADE",
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("workspace_id"),
    )
    op.create_table(
        "folders_v2",
        sa.Column("folder_id", sa.BigInteger(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("parent_folder_id", sa.BigInteger(), nullable=True),
        sa.Column("product_name", sa.String(), nullable=False),
        sa.Column("user_id", sa.BigInteger(), nullable=True),
        sa.Column("workspace_id", sa.BigInteger(), nullable=True),
        sa.Column("created_by_gid", sa.BigInteger(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["created_by_gid"],
            ["groups.gid"],
            name="fk_new_folders_to_groups_gid",
            ondelete="SET NULL",
        ),
        sa.ForeignKeyConstraint(
            ["parent_folder_id"],
            ["folders_v2.folder_id"],
            name="fk_new_folders_to_folders_id",
        ),
        sa.ForeignKeyConstraint(
            ["product_name"],
            ["products.name"],
            name="fk_new_folders_to_products_name",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name="fk_folders_to_user_id",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["workspace_id"],
            ["workspaces.workspace_id"],
            name="fk_folders_to_workspace_id",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("folder_id"),
    )
    op.create_table(
        "workspaces_access_rights",
        sa.Column("workspace_id", sa.BigInteger(), nullable=True),
        sa.Column("gid", sa.BigInteger(), nullable=True),
        sa.Column(
            "read", sa.Boolean(), server_default=sa.text("false"), nullable=False
        ),
        sa.Column(
            "write", sa.Boolean(), server_default=sa.text("false"), nullable=False
        ),
        sa.Column(
            "delete", sa.Boolean(), server_default=sa.text("false"), nullable=False
        ),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["gid"],
            ["groups.gid"],
            name="fk_workspaces_access_rights_gid_groups",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["workspace_id"],
            ["workspaces.workspace_id"],
            name="fk_workspaces_access_rights_id_workspaces",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.UniqueConstraint("workspace_id", "gid"),
    )
    op.create_table(
        "projects_to_folders",
        sa.Column("project_uuid", sa.String(), nullable=True),
        sa.Column("folder_id", sa.BigInteger(), nullable=True),
        sa.Column("user_id", sa.BigInteger(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["folder_id"],
            ["folders_v2.folder_id"],
            name="fk_projects_to_folders_to_folders_id",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["project_uuid"],
            ["projects.uuid"],
            name="fk_projects_to_folders_to_projects_uuid",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name="fk_projects_to_folders_to_user_id",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.UniqueConstraint("project_uuid", "folder_id", "user_id"),
    )
    op.add_column("projects", sa.Column("workspace_id", sa.BigInteger(), nullable=True))
    op.create_foreign_key(
        "fk_projects_to_workspaces_id",
        "projects",
        "workspaces",
        ["workspace_id"],
        ["workspace_id"],
        onupdate="CASCADE",
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###
    op.execute(assign_workspace_access_rights_to_owner_group_procedure)
    op.execute(new_workspace_trigger)


def downgrade():
    op.execute(new_workspace_trigger)
    op.execute(assign_workspace_access_rights_to_owner_group_procedure)
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("fk_projects_to_workspaces_id", "projects", type_="foreignkey")
    op.drop_column("projects", "workspace_id")
    op.drop_table("projects_to_folders")
    op.drop_table("workspaces_access_rights")
    op.drop_table("folders_v2")
    op.drop_table("workspaces")
    # ### end Alembic commands ###
