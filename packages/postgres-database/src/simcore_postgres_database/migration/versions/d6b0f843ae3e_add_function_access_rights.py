"""Add function access rights

Revision ID: d6b0f843ae3e
Revises: 278daef7e99d
Create Date: 2025-05-28 10:50:43.486807+00:00

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "d6b0f843ae3e"
down_revision = "278daef7e99d"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "funcapi_function_job_collections_access_rights",
        sa.Column(
            "function_job_collection_uuid",
            postgresql.UUID(as_uuid=True),
            nullable=False,
        ),
        sa.Column("group_id", sa.BigInteger(), nullable=True),
        sa.Column("read", sa.Boolean(), nullable=True),
        sa.Column("write", sa.Boolean(), nullable=True),
        sa.Column("execute", sa.Boolean(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["function_job_collection_uuid"],
            ["funcapi_function_job_collections.uuid"],
            name="fk_func_access_to_func_job_colls_to_func_job_coll_uuid",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["groups.gid"],
            name="fk_func_access_to_groups_group_id",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "function_job_collection_uuid",
            "group_id",
            name="pk_func_access_to_func_job_colls_group",
        ),
    )
    op.create_table(
        "funcapi_functions_access_rights",
        sa.Column("function_uuid", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("group_id", sa.BigInteger(), nullable=False),
        sa.Column("read", sa.Boolean(), nullable=True),
        sa.Column("write", sa.Boolean(), nullable=True),
        sa.Column("execute", sa.Boolean(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["function_uuid"],
            ["funcapi_functions.uuid"],
            name="fk_func_access_to_func_to_func_uuid",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["groups.gid"],
            name="fk_func_access_to_groups_group_id",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "function_uuid", "group_id", name="pk_func_access_to_func_group"
        ),
    )
    op.create_table(
        "funcapi_function_jobs_access_rights",
        sa.Column("function_job_uuid", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("group_id", sa.BigInteger(), nullable=False),
        sa.Column("read", sa.Boolean(), nullable=True),
        sa.Column("write", sa.Boolean(), nullable=True),
        sa.Column("execute", sa.Boolean(), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["function_job_uuid"],
            ["funcapi_function_jobs.uuid"],
            name="fk_func_access_to_func_jobs_to_func_job_uuid",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["groups.gid"],
            name="fk_func_access_to_groups_group_id",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "function_job_uuid", "group_id", name="pk_func_access_to_func_jobs_group"
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("funcapi_function_jobs_access_rights")
    op.drop_table("funcapi_functions_access_rights")
    op.drop_table("funcapi_function_job_collections_access_rights")
    # ### end Alembic commands ###
