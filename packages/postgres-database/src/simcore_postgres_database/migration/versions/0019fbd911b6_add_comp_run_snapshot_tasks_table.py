"""add comp_run_snapshot_tasks table

Revision ID: 0019fbd911b6
Revises: 278daef7e99d
Create Date: 2025-05-28 08:51:35.563513+00:00

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "0019fbd911b6"
down_revision = "278daef7e99d"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "comp_run_snapshot_tasks",
        sa.Column("snapshot_task_id", sa.Integer(), nullable=False),
        sa.Column("run_id", sa.Integer(), nullable=False),
        sa.Column("project_id", sa.String(), nullable=True),
        sa.Column("node_id", sa.String(), nullable=True),
        sa.Column(
            "node_class",
            postgresql.ENUM(
                "COMPUTATIONAL",
                "INTERACTIVE",
                "FRONTEND",
                name="nodeclass",
                create_type=False,
            ),
            nullable=True,
        ),
        sa.Column("job_id", sa.String(), nullable=True),
        sa.Column("internal_id", sa.Integer(), nullable=True),
        sa.Column("schema", sa.JSON(), nullable=True),
        sa.Column("inputs", sa.JSON(), nullable=True),
        sa.Column("outputs", sa.JSON(), nullable=True),
        sa.Column("run_hash", sa.String(), nullable=True),
        sa.Column("image", sa.JSON(), nullable=True),
        sa.Column(
            "state",
            postgresql.ENUM(
                "NOT_STARTED",
                "PUBLISHED",
                "PENDING",
                "RUNNING",
                "SUCCESS",
                "FAILED",
                "ABORTED",
                name="statetype",
                create_type=False,
            ),
            server_default="NOT_STARTED",
            nullable=False,
        ),
        sa.Column("errors", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column("progress", sa.Numeric(precision=3, scale=2), nullable=True),
        sa.Column("start", sa.DateTime(timezone=True), nullable=True),
        sa.Column("end", sa.DateTime(timezone=True), nullable=True),
        sa.Column("last_heartbeat", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "created",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "pricing_info", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column(
            "hardware_info", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["run_id"],
            ["comp_runs.run_id"],
            name="fk_snapshot_tasks_to_comp_runs",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("snapshot_task_id"),
    )
    op.add_column(
        "comp_runs",
        sa.Column(
            "dag_adjacency_list", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("comp_runs", "dag_adjacency_list")
    op.drop_table("comp_run_snapshot_tasks")
    # ### end Alembic commands ###
