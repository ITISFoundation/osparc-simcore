services:
  dy-static-file-server:
    build:
      labels:
        io.simcore.authors: '{"authors": [{"name": "Mr X", "email": "bar@foo.com", "affiliation": "IT''IS Foundation"}]}'
        io.simcore.contact: '{"contact": "bar@foo.com"}'
        io.simcore.description: '{"description": "Legacy test dynamic service (starts using original director-v0). The /workdir/generated-data directory is populated if no content is present."}'
        io.simcore.inputs: '{"inputs": {}}'
        io.simcore.integration-version: '{"integration-version": "1.0.0"}'
        io.simcore.key: '{"key": "simcore/services/dynamic/dy-static-file-server"}'
        io.simcore.name: '{"name": "dy-static-file-server"}'
        io.simcore.outputs: '{"outputs": {}}'
        io.simcore.type: '{"type": "dynamic"}'
        io.simcore.version: '{"version": "2.0.2"}'
        org.label-schema.build-date: ${BUILD_DATE}
        org.label-schema.schema-version: '1.0'
        org.label-schema.vcs-ref: ${VCS_REF}
        org.label-schema.vcs-url: ${VCS_URL}
        simcore.service.settings: '[{"name": "resources", "type": "Resources", "value": {"mem_limit":17179869184, "cpu_limit": 1000000000}}, {"name": "ports", "type": "int", "value": 8080}, {"name": "constraints", "type": "string", "value": ["node.platform.os == linux"]}]'
  dy-static-file-server-dynamic-sidecar:
    build:
      labels:
        io.simcore.authors: '{"authors": [{"name": "Mr X", "email": "bar@foo.com", "affiliation": "IT''IS Foundation"}]}'
        io.simcore.contact: '{"contact": "bar@foo.com"}'
        io.simcore.description: '{"description": "Modern test dynamic service (with dynamic sidecar). Changes to the inputs will be forwarded to the outputs. The /workdir/generated-data directory is populated if no content is present."}'
        io.simcore.inputs: '{"inputs": {"string_input": {"displayOrder": 1, "label": "String input", "description": "Test input string with default value", "type": "string", "defaultValue": "lorem ipsum"}, "integer_input": {"displayOrder": 2, "label": "Integer input", "description": "Integer field with a default value", "type": "integer", "defaultValue": 100}, "boolean_input": {"displayOrder": 3, "label": "Boolean input", "description": "Boolean field with a default value", "type": "boolean", "defaultValue": false}, "number_input": {"displayOrder": 4, "label": "Number input", "description": "Number field with a default value", "type": "number", "defaultValue": 1.12}, "file_input": {"displayOrder": 5, "label": "File input", "description": "Empty file input", "type": "data:*/*", "fileToKeyMap": {"test_file": "file_input"}}}}'
        io.simcore.integration-version: '{"integration-version": "1.0.0"}'
        io.simcore.key: '{"key": "simcore/services/dynamic/dy-static-file-server-dynamic-sidecar"}'
        io.simcore.name: '{"name": "dy-static-file-server-dynamic-sidecar"}'
        io.simcore.outputs: '{"outputs": {"string_output": {"displayOrder": 1, "label": "String output", "description": "String value from input", "type": "string"}, "integer_output": {"displayOrder": 2, "label": "Integer output", "description": "Integer value from input", "type": "integer"}, "boolean_output": {"displayOrder": 3, "label": "Boolean output", "description": "Boolean value from input", "type": "boolean"}, "number_output": {"displayOrder": 4, "label": "Number output", "description": "Number value from input", "type": "number"}, "file_output": {"displayOrder": 5, "label": "File output", "description": "File from input", "type": "data:*/*", "fileToKeyMap": {"test_file": "file_output"}}}}'
        io.simcore.type: '{"type": "dynamic"}'
        io.simcore.version: '{"version": "2.0.2"}'
        org.label-schema.build-date: ${BUILD_DATE}
        org.label-schema.schema-version: '1.0'
        org.label-schema.vcs-ref: ${VCS_REF}
        org.label-schema.vcs-url: ${VCS_URL}
        simcore.service.paths-mapping: '{"outputs_path": "/www/outputs", "inputs_path": "/www/inputs", "state_paths": ["/workdir/generated-data"]}'
        simcore.service.settings: '[{"name": "resources", "type": "Resources", "value": {"mem_limit":17179869184, "cpu_limit": 1000000000}}, {"name": "ports", "type": "int", "value": 8080}, {"name": "constraints", "type": "string", "value": ["node.platform.os == linux"]}]'
  dy-static-file-server-dynamic-sidecar-compose-spec:
    build:
      labels:
        io.simcore.authors: '{"authors": [{"name": "Mr X", "email": "bar@foo.com", "affiliation": "IT''IS Foundation"}]}'
        io.simcore.contact: '{"contact": "bar@foo.com"}'
        io.simcore.description: '{"description": "Modern test dynamic service providing a docker-compose specification file (with dynamic sidecar and compose-spec). Changes to the inputs will be forwarded to the outputs. The /workdir/generated-data directory is populated if no content is present."}'
        io.simcore.inputs: '{"inputs": {"string_input": {"displayOrder": 1, "label": "String input", "description": "Test input string with default value", "type": "string", "defaultValue": "lorem ipsum"}, "integer_input": {"displayOrder": 2, "label": "Integer input", "description": "Integer field with a default value", "type": "integer", "defaultValue": 100}, "boolean_input": {"displayOrder": 3, "label": "Boolean input", "description": "Boolean field with a default value", "type": "boolean", "defaultValue": false}, "number_input": {"displayOrder": 4, "label": "Number input", "description": "Number field with a default value", "type": "number", "defaultValue": 1.12}, "file_input": {"displayOrder": 5, "label": "File input", "description": "Empty file input", "type": "data:*/*", "fileToKeyMap": {"test_file": "file_input"}}}}'
        io.simcore.integration-version: '{"integration-version": "1.0.0"}'
        io.simcore.key: '{"key": "simcore/services/dynamic/dy-static-file-server-dynamic-sidecar-compose-spec"}'
        io.simcore.name: '{"name": "dy-static-file-server-dynamic-sidecar-compose-spec"}'
        io.simcore.outputs: '{"outputs": {"string_output": {"displayOrder": 1, "label": "String output", "description": "String value from input", "type": "string"}, "integer_output": {"displayOrder": 2, "label": "Integer output", "description": "Integer value from input", "type": "integer"}, "boolean_output": {"displayOrder": 3, "label": "Boolean output", "description": "Boolean value from input", "type": "boolean"}, "number_output": {"displayOrder": 4, "label": "Number output", "description": "Number value from input", "type": "number"}, "file_output": {"displayOrder": 5, "label": "File output", "description": "File from input", "type": "data:*/*", "fileToKeyMap": {"test_file": "file_output"}}}}'
        io.simcore.type: '{"type": "dynamic"}'
        io.simcore.version: '{"version": "2.0.2"}'
        org.label-schema.build-date: ${BUILD_DATE}
        org.label-schema.schema-version: '1.0'
        org.label-schema.vcs-ref: ${VCS_REF}
        org.label-schema.vcs-url: ${VCS_URL}
        simcore.service.compose-spec: '{"services":{"dy-static-file-server-dynamic-sidecar-compose-spec":{"environment":["MOCK_VALUE=TheMockedValue"],"image":"$${SIMCORE_REGISTRY}/simcore/services/dynamic/dy-static-file-server-dynamic-sidecar-compose-spec:$${SERVICE_VERSION}","init":true},"some-side-service":{"command":"top","image":"busybox:latest","init":true}},"version":"3.7"}'
        simcore.service.container-http-entrypoint: dy-static-file-server-dynamic-sidecar-compose-spec
        simcore.service.paths-mapping: '{"outputs_path": "/www/outputs", "inputs_path": "/www/inputs", "state_paths": ["/workdir/generated-data"]}'
        simcore.service.restart-policy: on-inputs-downloaded
        simcore.service.settings: '[{"name": "resources", "type": "Resources", "value": {"mem_limit":17179869184, "cpu_limit": 1000000000}}, {"name": "ports", "type": "int", "value": 8080}, {"name": "constraints", "type": "string", "value": ["node.platform.os == linux"]}]'
  rocket:
    build:
      labels:
        io.simcore.authors: '{"authors": [{"name": "Mr X", "email": "bar@foo.com", "affiliation": "IT''IS Foundation"}]}'
        io.simcore.contact: '{"contact": "bar@foo.com"}'
        io.simcore.description: '{"description": "rocket zoom"}'
        io.simcore.inputs: '{"inputs": {"input_1": {"displayOrder": 1, "label": "Input files", "description": "Files downloaded from service connected at the input", "type": "data:*/*"}}}'
        io.simcore.integration-version: '{"integration-version": "2.0.0"}'
        io.simcore.key: '{"key": "simcore/services/dynamic/rocket"}'
        io.simcore.name: '{"name": "sim4life"}'
        io.simcore.outputs: '{"outputs": {"output_1": {"displayOrder": 1, "label": "Output files", "description": "Files available for service connected to the output", "type": "data:*/*"}}}'
        io.simcore.thumbnail: '{"thumbnail": "https://i.imgur.com/bRxlzhp.png"}'
        io.simcore.type: '{"type": "dynamic"}'
        io.simcore.version: '{"version": "2.0.87"}'
        maintainer: some mantainer label
        org.label-schema.build-date: ${BUILD_DATE}
        org.label-schema.schema-version: '1.0'
        org.label-schema.vcs-ref: ${VCS_REF}
        org.label-schema.vcs-url: ${VCS_URL}
        osparc-rocket.vcs-ref: ${VCS_REF}
        osparc-rocket.vcs-url: ${VCS_URL}
        simcore.service.compose-spec: '{"version": "2.3", "services": {"rt-web-dy": {"image": "${SIMCORE_REGISTRY}/simcore/services/dynamic/rocket:${SERVICE_VERSION}", "init": true, "storage_opt": {"size": "100M"}, "depends_on": ["rocket-core"]}, "rocket-core": {"image": "${SIMCORE_REGISTRY}/simcore/services/dynamic/rocket-core-dy:${SERVICE_VERSION}", "runtime": "nvidia", "init": true, "storage_opt": {"size": "5G"}, "environment": ["DISPLAY="], "volumes": ["/tmp/.X11-unix:/tmp/.X11-unix"], "cap_add": ["SYS_PTRACE"]}, "sym-server": {"image": "${SIMCORE_REGISTRY}/simcore/services/dynamic/sym-server-dy:${SERVICE_VERSION}", "init": true, "storage_opt": {"size": "100M"}}}}'
        simcore.service.container-http-entrypoint: rt-web-dy
        simcore.service.containers-allowed-outgoing-permit-list: '{"rocket-core": [{"hostname": "${rocket_LICENSE_SERVER}", "tcp_ports": [27000, 56625], "dns_resolver": {"address": "172.16.8.15", "port": 53}}]}'
        simcore.service.containers-allowed-outgoing-internet: '["sym-server"]'
        simcore.service.paths-mapping: '{"outputs_path": "/home/smu/work/outputs", "inputs_path": "/home/smu/work/inputs", "state_paths": ["/home/smu/work/workspace"]}'
        simcore.service.settings: '[{"name": "ports", "type": "int", "value": 80}, {"name": "Resources", "type": "Resources", "value": {"Limits": {"NanoCPUs": 1000000000}, "Reservations": {"NanoCPUs": 1000000000}}}, {"name": "env", "type": "string", "value": ["rocket_CORE_HOSTNAME=%%container_name.rocket-core%%"]}]'

version: '3.7'
