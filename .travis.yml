matrix:
  include:
    - language: node_js
      node_js:
        - "8"

      cache:
        directories:
          - .npm

      install:
        - npm install -g npm@latest
        - npm install --save-dev eslint
        - npm install --save-dev babel-eslint
        - npm install --save-dev eslint-config-qx
        - npm install --save-dev eslint-plugin-qx-rules
      before_script:
        - eslint --version
      script:
        - npm run linter

    - language: python

      python:
        - "3.6"
      sudo: required

      services:
        - docker

      cache: pip

      before_install:
        - python --version
        - uname -a
        - lsb_release -a
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get update
        - sudo apt-get -y install docker-ce
        - docker --version
        - sudo rm /usr/local/bin/docker-compose
        - curl -L https://github.com/docker/compose/releases/download/1.23.1/docker-compose-`uname -s`-`uname -m` > docker-compose
        - chmod +x docker-compose
        - sudo mv docker-compose /usr/local/bin
        - docker-compose --version
        # shutdown postgres because sometimes is is already up ???
        - sudo service postgresql stop
        # wait for postgresql to shutdown
        - while sudo lsof -Pi :5432 -sTCP:LISTEN -t; do sleep 1; done

      install:
        - pip install --upgrade pip wheel setuptools && pip3 --version
        - pip3 install pytest-travis-fold
        - pip3 install packages/s3wrapper[test]
        - pip3 install packages/simcore-sdk[test]
        - pushd services/director; pip3 install -r requirements/ci.txt; popd
        - pip3 install packages/director-sdk/python
        - pushd services/web/server; pip3 install -r requirements/ci.txt; popd
        - pushd services/storage; pip3 install -r requirements/dev.txt; popd
        - pip3 install -r api/tests/requirements.txt
        - pip3 install -r services/apihub/tests/requirements.txt

      before_script:
        - pylint --version
        - pip3 list

      script:
        - export DOCKER_GID=1042
        - docker-compose -f services/docker-compose.yml build storage apihub
        - make pylint
        - make test

      after_success:
      - coveralls

      notifications:
        email:
          on_success: never
          on_failure: always
